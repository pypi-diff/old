--- tmp/jmcomic-1.2.0.tar.gz
+++ tmp/jmcomic-1.3.0.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "/home/runner/work/JMComic-Crawler-Python/JMComic-Crawler-Python/dist/.tmp-8k3djz88/jmcomic-1.2.0.tar", last modified: Wed Apr  5 05:14:21 2023, max compression
│ +gzip compressed data, was "/home/runner/work/JMComic-Crawler-Python/JMComic-Crawler-Python/dist/.tmp-7quock3a/jmcomic-1.3.0.tar", last modified: Thu Apr  6 14:08:16 2023, max compression
│   --- jmcomic-1.2.0.tar
├── +++ jmcomic-1.3.0.tar
│ ├── file list
│ │ @@ -1,22 +1,22 @@
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-05 05:14:21.000000 jmcomic-1.2.0/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1064 2023-04-05 05:14:10.000000 jmcomic-1.2.0/LICENSE
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3712 2023-04-05 05:14:21.000000 jmcomic-1.2.0/PKG-INFO
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2867 2023-04-05 05:14:10.000000 jmcomic-1.2.0/README.md
│ │ --rw-r--r--   0 runner    (1001) docker     (123)       38 2023-04-05 05:14:21.000000 jmcomic-1.2.0/setup.cfg
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1510 2023-04-05 05:14:10.000000 jmcomic-1.2.0/setup.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/jmcomic/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      172 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6074 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/api.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5946 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/jm_client.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2774 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/jm_config.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9673 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/jm_entity.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    16836 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/jm_option.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8537 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/jm_service.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10096 2023-04-05 05:14:10.000000 jmcomic-1.2.0/src/jmcomic/jm_toolkit.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/jmcomic.egg-info/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3712 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/jmcomic.egg-info/PKG-INFO
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      395 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/jmcomic.egg-info/SOURCES.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)        1 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/jmcomic.egg-info/dependency_links.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)       32 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/jmcomic.egg-info/requires.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)        8 2023-04-05 05:14:21.000000 jmcomic-1.2.0/src/jmcomic.egg-info/top_level.txt
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 14:08:16.000000 jmcomic-1.3.0/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1064 2023-04-06 14:08:06.000000 jmcomic-1.3.0/LICENSE
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3712 2023-04-06 14:08:16.000000 jmcomic-1.3.0/PKG-INFO
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2867 2023-04-06 14:08:06.000000 jmcomic-1.3.0/README.md
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)       38 2023-04-06 14:08:16.000000 jmcomic-1.3.0/setup.cfg
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1510 2023-04-06 14:08:06.000000 jmcomic-1.3.0/setup.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/jmcomic/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      172 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5971 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/api.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6182 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/jm_client.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2774 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/jm_config.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9475 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/jm_entity.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    16396 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/jm_option.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8537 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/jm_service.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10135 2023-04-06 14:08:06.000000 jmcomic-1.3.0/src/jmcomic/jm_toolkit.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/jmcomic.egg-info/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3712 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/jmcomic.egg-info/PKG-INFO
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      395 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/jmcomic.egg-info/SOURCES.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)        1 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/jmcomic.egg-info/dependency_links.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)       32 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/jmcomic.egg-info/requires.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)        8 2023-04-06 14:08:16.000000 jmcomic-1.3.0/src/jmcomic.egg-info/top_level.txt
│ │   --- jmcomic-1.2.0/LICENSE
│ ├── +++ jmcomic-1.3.0/LICENSE
│ │┄ Files identical despite different names
│ │   --- jmcomic-1.2.0/PKG-INFO
│ ├── +++ jmcomic-1.3.0/PKG-INFO
│ │┄ Files 0% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: jmcomic
│ │ -Version: 1.2.0
│ │ +Version: 1.3.0
│ │  Summary: Python API For JMComic (禁漫天堂)
│ │  Home-page: https://github.com/hect0x7/JMComic-Crawler-Python
│ │  Author: hect0x7
│ │  Author-email: 93357912+hect0x7@users.noreply.github.com
│ │  Keywords: python,jmcomic,18comic,禁漫天堂,NSFW
│ │  Classifier: Development Status :: 4 - Beta
│ │  Classifier: Intended Audience :: Developers
│ │   --- jmcomic-1.2.0/README.md
│ ├── +++ jmcomic-1.3.0/README.md
│ │┄ Files identical despite different names
│ │   --- jmcomic-1.2.0/setup.py
│ ├── +++ jmcomic-1.3.0/setup.py
│ │┄ Files identical despite different names
│ │   --- jmcomic-1.2.0/src/jmcomic/api.py
│ ├── +++ jmcomic-1.3.0/src/jmcomic/api.py
│ │┄ Files 3% similar despite different names
│ │ @@ -19,15 +19,15 @@
│ │               f'获得album_detail成功，准备下载。'
│ │               f'本子作者是【{album_detail.author}】，一共有{len(album_detail)}集本子')
│ │  
│ │      def download_photo(index: int,
│ │                         photo_detail: JmPhotoDetail,
│ │                         debug_topic='download_album_photo',
│ │                         ):
│ │ -        jm_client.update(photo_detail)
│ │ +        jm_client.ensure_photo_can_use(photo_detail)
│ │  
│ │          jm_debug(debug_topic,
│ │                   f"下载第[{index + 1}]集: "
│ │                   f"图片数为[{len(photo_detail)}]，"
│ │                   f"标题为：({photo_detail.title}) "
│ │                   f"-- photo {photo_detail.photo_id}")
│ │  
│ │ @@ -86,20 +86,15 @@
│ │      @param option: 选项
│ │      """
│ │      option, jm_client = build_client(option)
│ │  
│ │      # 下载准备
│ │      use_cache = option.download_use_disk_cache
│ │      decode_image = option.download_image_then_decode
│ │ -
│ │ -    if photo_detail.from_album is None:
│ │ -        jm_client.fill_from_album(photo_detail)
│ │ -
│ │ -    if photo_detail.page_arr is None:
│ │ -        jm_client.update(photo_detail)
│ │ +    jm_client.ensure_photo_can_use(photo_detail)
│ │  
│ │      # 下载每个图片的函数
│ │      def download_image(index, img_detail, debug_topic='download_images_of_photo'):
│ │          img_save_path = option.decide_image_filepath(photo_detail, index)
│ │  
│ │          # 已下载过，缓存命中
│ │          if use_cache is True and file_exists(img_save_path):
│ │ @@ -110,14 +105,15 @@
│ │  
│ │          # 开始下载
│ │          jm_client.download_by_image_detail(
│ │              img_detail,
│ │              img_save_path,
│ │              decode_image=decode_image,
│ │          )
│ │ +
│ │          jm_debug(debug_topic, f'photo-{img_detail.aid}: '
│ │                                f'图片{img_detail.filename}下载完成：'
│ │                                f'[{img_detail.img_url}] → [{img_save_path}]')
│ │  
│ │      length = len(photo_detail)
│ │      # 根据图片数，决定下载策略
│ │      if length <= option.download_multi_thread_photo_len_limit:
│ │   --- jmcomic-1.2.0/src/jmcomic/jm_client.py
│ ├── +++ jmcomic-1.3.0/src/jmcomic/jm_client.py
│ │┄ Files 6% similar despite different names
│ │ @@ -74,36 +74,40 @@
│ │  
│ │          # 请求
│ │          resp = self.jm_get(f"/album/{album_id}")
│ │  
│ │          # 用 JmcomicText 解析 html，返回实体类
│ │          return JmcomicText.analyse_jm_album_html(resp.text)
│ │  
│ │ -    def get_photo_detail(self, jm_photo_id: str) -> JmPhotoDetail:
│ │ +    def get_photo_detail(self, photo_id: str, album=True) -> JmPhotoDetail:
│ │          # 参数校验
│ │ -        photo_id = JmcomicText.parse_to_photo_id(jm_photo_id)
│ │ +        photo_id = JmcomicText.parse_to_photo_id(photo_id)
│ │  
│ │          # 请求
│ │          resp = self.jm_get(f"/photo/{photo_id}")
│ │  
│ │          # 用 JmcomicText 解析 html，返回实体类
│ │ -        return JmcomicText.analyse_jm_photo_html(resp.text)
│ │ +        photo_detail = JmcomicText.analyse_jm_photo_html(resp.text)
│ │  
│ │ -    def fill_from_album(self, photo_detail: JmPhotoDetail) -> JmAlbumDetail:
│ │ -        """
│ │ -        获取 photo_detail 所在的 album。
│ │ -        并把 album_detail 赋值给 photo_detail.from_album
│ │ -        """
│ │ -        album_detail = self.get_album_detail(photo_detail.album_id)
│ │ -        photo_detail.from_album = album_detail
│ │ -        return album_detail
│ │ -
│ │ -    def update(self, photo_detail: JmPhotoDetail):
│ │ -        new = self.get_photo_detail(photo_detail.photo_id)
│ │ -        photo_detail.__dict__.update(new.__dict__)
│ │ +        # 一并获取该章节的所处本子
│ │ +        if album is True:
│ │ +            photo_detail.from_album = self.get_album_detail(photo_detail.album_id)
│ │ +
│ │ +        return photo_detail
│ │ +
│ │ +    def ensure_photo_can_use(self, photo_detail: JmPhotoDetail):
│ │ +        # 检查 from_album
│ │ +        if photo_detail.from_album is None:
│ │ +            photo_detail.from_album = self.get_album_detail(photo_detail.album_id)
│ │ +
│ │ +        # 检查 page_arr 和 data_original_domain
│ │ +        if photo_detail.page_arr is None or photo_detail.data_original_domain is None:
│ │ +            new = self.get_photo_detail(photo_detail.photo_id, False)
│ │ +            photo_detail.page_arr = new.page_arr
│ │ +            photo_detail.data_original_domain = new.data_original_domain
│ │  
│ │      # -- search --
│ │  
│ │      def search_album(self, search_query, main_tag=0) -> JmSearchPage:
│ │          params = {
│ │              'main_tag': main_tag,
│ │              'search_query': search_query,
│ │   --- jmcomic-1.2.0/src/jmcomic/jm_config.py
│ ├── +++ jmcomic-1.3.0/src/jmcomic/jm_config.py
│ │┄ Files identical despite different names
│ │   --- jmcomic-1.2.0/src/jmcomic/jm_entity.py
│ ├── +++ jmcomic-1.3.0/src/jmcomic/jm_entity.py
│ │┄ Files 6% similar despite different names
│ │ @@ -17,28 +17,24 @@
│ │      detail_save_base_dir = workspace()
│ │      detail_save_file_suffix = '.yml'
│ │  
│ │      def save_base_dir(self):
│ │          return self.detail_save_base_dir
│ │  
│ │      def save_file_name(self) -> str:
│ │ -        return f"【{self.get_id_prefix_of_filename()}{self.get_id()}】{self.get_title()}{self.detail_save_file_suffix}"
│ │ +        def jm_type():
│ │ +            # "JmAlbumDetail" -> "album"
│ │ +            cls_name = self.__class__.__name__
│ │ +            return cls_name[cls_name.index("m") + 1: cls_name.rfind("Detail")].lower()
│ │  
│ │ -    def get_id_prefix_of_filename(self):
│ │ -        # "JmAlbumDetail" -> "album"
│ │ -        cls_name = self.__class__.__name__
│ │ -        id_prefix = cls_name[cls_name.index("m") + 1: cls_name.rfind("Detail")]
│ │ -        return f'{id_prefix}-'
│ │ +        return '[{}]{}{}'.format(jm_type(), self.get_id(), self.detail_save_file_suffix)
│ │  
│ │      def get_id(self) -> str:
│ │          raise NotImplementedError
│ │  
│ │ -    def get_title(self) -> str:
│ │ -        raise NotImplementedError
│ │ -
│ │      def __len__(self):
│ │          raise NotImplementedError
│ │  
│ │      def __getitem__(self, item) -> Union['JmAlbumDetail', 'JmPhotoDetail']:
│ │          raise NotImplementedError
│ │  
│ │  
│ │ @@ -148,23 +144,22 @@
│ │          if self.is_single_album and self.sort == 2:
│ │              return 1
│ │  
│ │          return self.sort
│ │  
│ │      @property
│ │      def author(self) -> str:
│ │ -        # self._author 不为空字符串
│ │ -        if self._author is not None and self._author != '':
│ │ -            return self._author.strip()
│ │ -
│ │ -        # self._author 为空，先向上找
│ │ +        # 优先使用 from_album
│ │          if self.from_album is not None:
│ │              return self.from_album.author
│ │  
│ │ -        # 无向上元素，使用默认
│ │ +        if self._author is not None and self._author != '':
│ │ +            return self._author.strip()
│ │ +
│ │ +        # 使用默认
│ │          return JmModuleConfig.default_author
│ │  
│ │      def create_image_detail(self, index) -> JmImageDetail:
│ │          # 校验参数
│ │          length = len(self.page_arr)
│ │          if index >= length:
│ │              raise AssertionError(f'创建JmImageDetail失败，{index} >= {length}')
│ │ @@ -192,38 +187,37 @@
│ │  
│ │      def __getitem__(self, item) -> JmImageDetail:
│ │          return self.create_image_detail(item)
│ │  
│ │      def get_id(self):
│ │          return self.photo_id
│ │  
│ │ -    def get_title(self):
│ │ -        return self.title
│ │ -
│ │      def __len__(self):
│ │          return len(self.page_arr)
│ │  
│ │  
│ │  class JmAlbumDetail(WorkEntity):
│ │  
│ │      def __init__(self,
│ │                   album_id,
│ │                   scramble_id,
│ │                   title,
│ │                   episode_list,
│ │                   page_count,
│ │                   author_list,
│ │                   pub_date,
│ │ +                 update_date,
│ │                   ):
│ │          self.album_id: str = album_id
│ │          self.scramble_id: str = scramble_id
│ │          self.title: str = title
│ │          self.page_count = int(page_count)
│ │          self._author_list: List[str] = author_list
│ │ -        self.pub_date = pub_date
│ │ +        self.pub_date: str = pub_date  # 发布日期
│ │ +        self.update_date: str = update_date  # 更新日期
│ │  
│ │          # 有的 album 没有章节，则自成一章。
│ │          if len(episode_list) == 0:
│ │              # photo_id, photo_index_of_album, photo_title, photo_pub_date
│ │              episode_list = [(album_id, 0, title, pub_date)]
│ │  
│ │          self.episode_list: List[Tuple] = self.distinct_episode(episode_list)
│ │ @@ -259,17 +253,14 @@
│ │          if len(self._author_list) >= 1:
│ │              return self._author_list[0]
│ │          return JmModuleConfig.default_author
│ │  
│ │      def get_id(self):
│ │          return self.album_id
│ │  
│ │ -    def get_title(self):
│ │ -        return self.title
│ │ -
│ │      def __len__(self):
│ │          return len(self.episode_list)
│ │  
│ │      def __getitem__(self, item) -> JmPhotoDetail:
│ │          return self.create_photo_detail(item)[0]
│ │  
│ │      @staticmethod
│ │   --- jmcomic-1.2.0/src/jmcomic/jm_option.py
│ ├── +++ jmcomic-1.3.0/src/jmcomic/jm_option.py
│ │┄ Files 2% similar despite different names
│ │ @@ -1,21 +1,19 @@
│ │  from .jm_service import *
│ │  
│ │  
│ │  class JmOptionAdvice:
│ │  
│ │      def decide_image_save_dir(self,
│ │                                option: 'JmOption',
│ │ -                              album_detail: Optional[JmAlbumDetail],
│ │                                photo_detail: JmPhotoDetail,
│ │                                ) -> StrNone:
│ │          """
│ │          决定一个本子图片的下载文件夹
│ │          @param option: JmOption对象
│ │ -        @param album_detail: 本子集实体类
│ │          @param photo_detail: 本子章节实体类
│ │          @return: 下载文件夹，为空表示不处理
│ │          """
│ │          pass
│ │  
│ │      def decide_image_filepath(self,
│ │                                option: 'JmOption',
│ │ @@ -241,27 +239,24 @@
│ │          if disable_jm_module_debug:
│ │              disable_jm_debug()
│ │  
│ │      """
│ │      下面是决定图片保存路径的方法
│ │      """
│ │  
│ │ -    def decide_image_save_dir(self, album_detail, photo_detail) -> str:
│ │ -        if album_detail is None and photo_detail is None:
│ │ -            raise AssertionError('album和photo不能同时为None')
│ │ -
│ │ +    def decide_image_save_dir(self, photo_detail) -> str:
│ │          # 先检查advice的回调，如果回调支持，则优先使用回调
│ │          for advice in JmAdviceRegistry.get_advice(self):
│ │ -            save_dir = advice.decide_image_save_dir(self, album_detail, photo_detail)
│ │ +            save_dir = advice.decide_image_save_dir(self, photo_detail)
│ │              if save_dir is not None:
│ │                  return save_dir
│ │  
│ │          # 使用 self.dir_tree 决定 save_dir
│ │          save_dir = self.dir_tree.deside_image_save_dir(
│ │ -            album_detail or photo_detail.from_album,
│ │ +            photo_detail.from_album,
│ │              photo_detail
│ │          )
│ │  
│ │          mkdir_if_not_exists(save_dir)
│ │          return save_dir
│ │  
│ │      def decide_image_suffix(self, img_detail: JmImageDetail):
│ │ @@ -283,15 +278,15 @@
│ │          # 先检查advice的回调，如果回调支持，则优先使用回调
│ │          for advice in JmAdviceRegistry.get_advice(self):
│ │              filepath = advice.decide_image_filepath(self, photo_detail, index)
│ │              if filepath is not None:
│ │                  return filepath
│ │  
│ │          # 通过拼接生成绝对路径
│ │ -        save_dir = self.decide_image_save_dir(photo_detail.from_album, photo_detail)
│ │ +        save_dir = self.decide_image_save_dir(photo_detail)
│ │          image: JmImageDetail = photo_detail[index]
│ │          suffix = self.decide_image_suffix(image)
│ │          return save_dir + image.img_file_name + suffix
│ │  
│ │      """
│ │      下面是对Advice的支持
│ │      """
│ │ @@ -447,23 +442,21 @@
│ │      def build_save_path_provider(self,
│ │                                   use_all_default_save_path,
│ │                                   photo_id=None,
│ │                                   ) -> CdnRequest.SavePathProvider:
│ │  
│ │          if use_all_default_save_path is True:
│ │              # 不通过请求获取 photo 的信息，相当于使用【空本子】和【空集】
│ │ -            photo_detail, album_detail = None, None
│ │ +            photo_detail = None
│ │          else:
│ │              # 通过请求获得 photo 的本子信息
│ │ -            client = self.build_jm_client()
│ │ -            photo_detail = client.get_photo_detail(photo_id)
│ │ -            album_detail = client.fill_from_album(photo_detail)
│ │ +            photo_detail = self.build_jm_client().get_photo_detail(photo_id)
│ │  
│ │          def save_path_provider(url, _suffix: str, _index, _is_decode):
│ │ -            return '{0}{1}{2}'.format(self.decide_image_save_dir(album_detail, photo_detail),
│ │ +            return '{0}{1}{2}'.format(self.decide_image_save_dir(photo_detail),
│ │                                        of_file_name(url, trim_suffix=True),
│ │                                        self.download_convert_image_suffix or _suffix)
│ │  
│ │          return save_path_provider
│ │  
│ │  
│ │  def _register_yaml_constructor():
│ │   --- jmcomic-1.2.0/src/jmcomic/jm_service.py
│ ├── +++ jmcomic-1.3.0/src/jmcomic/jm_service.py
│ │┄ Files identical despite different names
│ │   --- jmcomic-1.2.0/src/jmcomic/jm_toolkit.py
│ ├── +++ jmcomic-1.3.0/src/jmcomic/jm_toolkit.py
│ │┄ Files 2% similar despite different names
│ │ @@ -20,15 +20,16 @@
│ │      pattern_html_album_album_id = compile('<span class="number">.*?：JM(\d+)</span>')
│ │      pattern_html_album_scramble_id = compile('var scramble_id = (\d+);')
│ │      pattern_html_album_title = compile('panel-heading[\s\S]*?<h1>(.*?)</h1>')
│ │      pattern_html_album_episode_list = compile('<a href=".*?" data-album="(\d+)">\n'
│ │                                                '<li.*>\n第(\d+)話\n(.*)\n'
│ │                                                '<[\s\S]*?>(\d+-\d+-\d+).*?')
│ │      pattern_html_album_page_count = compile('<span class="pagecount">.*?:(\d+)</span>')
│ │ -    pattern_html_album_pub_date = compile('itemprop="datePublished" content=".*?">更新日期 : (.*?)</span>')
│ │ +    pattern_html_album_pub_date = compile('>上架日期 : (.*?)</span>')
│ │ +    pattern_html_album_update_date = compile('>更新日期 : (.*?)</span>')
│ │  
│ │      # album 作者
│ │      pattern_html_album_author_list = [
│ │          compile('作者： <span itemprop="author" data-type="author">(\s*<a.*?>(.*?)</a>)*\s*</span>'),
│ │          compile("<a.*?>(.*?)</a>"),
│ │      ]
│ │   --- jmcomic-1.2.0/src/jmcomic.egg-info/PKG-INFO
│ ├── +++ jmcomic-1.3.0/src/jmcomic.egg-info/PKG-INFO
│ │┄ Files 0% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: jmcomic
│ │ -Version: 1.2.0
│ │ +Version: 1.3.0
│ │  Summary: Python API For JMComic (禁漫天堂)
│ │  Home-page: https://github.com/hect0x7/JMComic-Crawler-Python
│ │  Author: hect0x7
│ │  Author-email: 93357912+hect0x7@users.noreply.github.com
│ │  Keywords: python,jmcomic,18comic,禁漫天堂,NSFW
│ │  Classifier: Development Status :: 4 - Beta
│ │  Classifier: Intended Audience :: Developers
