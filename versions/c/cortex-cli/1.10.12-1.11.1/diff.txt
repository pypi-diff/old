--- tmp/cortex_cli-1.10.12.tar.gz
+++ tmp/cortex_cli-1.11.1.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "cortex_cli-1.10.12.tar", last modified: Wed Mar 22 21:01:34 2023, max compression
│ +gzip compressed data, was "cortex_cli-1.11.1.tar", last modified: Thu Apr  6 21:58:35 2023, max compression
│   --- cortex_cli-1.10.12.tar
├── +++ cortex_cli-1.11.1.tar
│ ├── file list
│ │ @@ -1,64 +1,64 @@
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      261 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/PKG-INFO
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     5262 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/README.md
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       23 2023-03-22 16:16:53.000000 cortex_cli-1.10.12/cortex_cli/__init__.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/cli/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 23:15:18.000000 cortex_cli-1.10.12/cortex_cli/cli/__init__.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/cli/api/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/cli/api/__init__.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     3990 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/cli/api/github_api.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      575 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/cli/api/http_api.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2789 2023-03-16 20:39:49.000000 cortex_cli-1.10.12/cortex_cli/cli/cli_api_base.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2792 2023-03-16 20:39:49.000000 cortex_cli-1.10.12/cortex_cli/cli/cli_api_base_config.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       90 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/cli/clients.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      821 2023-03-22 17:20:38.000000 cortex_cli-1.10.12/cortex_cli/cli/configure.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      971 2023-03-16 20:39:49.000000 cortex_cli-1.10.12/cortex_cli/cli/cortex_cli.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      994 2023-03-16 20:39:49.000000 cortex_cli-1.10.12/cortex_cli/cli/generic_get.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1005 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/cli/inferences.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)    22055 2023-03-22 17:28:27.000000 cortex_cli-1.10.12/cortex_cli/cli/models.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     3250 2023-03-16 20:39:49.000000 cortex_cli-1.10.12/cortex_cli/cli/pipelines.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/core/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/core/__init__.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     4024 2023-03-16 20:39:49.000000 cortex_cli-1.10.12/cortex_cli/core/cortex_data.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     3648 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/core/drift_checks.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)    10969 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/core/ethics_checks.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/core/mlflow/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/core/mlflow/__init__.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)    13976 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/core/mlflow/mlflow_cortex.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/core/models/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/core/models/__init__.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     7010 2023-03-21 15:45:49.000000 cortex_cli-1.10.12/cortex_cli/core/models/cortex_model.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/ml_model_template/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2399 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/.gitignore
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      972 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/README.md
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/__init__.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      318 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/cookiecutter.json
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       12 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/requirements.txt
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2330 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/.gitignore
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1602 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/README.md
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      145 2023-03-22 19:41:48.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/conda.yml
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      533 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/cortex.yml
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/data/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/data/.gitkeep
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/notebooks/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/notebooks/.gitkeep
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/__init__.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2377 2023-03-21 15:45:49.000000 cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/{{cookiecutter.__model_name}}.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli/tests/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/tests/__init__.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1801 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/tests/test_cortex_data.py
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1825 2023-03-09 15:57:05.000000 cortex_cli-1.10.12/cortex_cli/tests/test_ethics_checks.py
│ │ -drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/cortex_cli.egg-info/
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      261 2023-03-22 21:01:34.000000 cortex_cli-1.10.12/cortex_cli.egg-info/PKG-INFO
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1909 2023-03-22 21:01:34.000000 cortex_cli-1.10.12/cortex_cli.egg-info/SOURCES.txt
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        1 2023-03-22 21:01:34.000000 cortex_cli-1.10.12/cortex_cli.egg-info/dependency_links.txt
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       62 2023-03-22 21:01:34.000000 cortex_cli-1.10.12/cortex_cli.egg-info/entry_points.txt
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      110 2023-03-22 21:01:34.000000 cortex_cli-1.10.12/cortex_cli.egg-info/requires.txt
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       11 2023-03-22 21:01:34.000000 cortex_cli-1.10.12/cortex_cli.egg-info/top_level.txt
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       89 2023-03-01 03:50:43.000000 cortex_cli-1.10.12/pyproject.toml
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      207 2023-03-22 21:01:34.911293 cortex_cli-1.10.12/setup.cfg
│ │ --rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      842 2023-03-22 18:27:23.000000 cortex_cli-1.10.12/setup.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      260 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/PKG-INFO
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     5185 2023-04-06 19:56:17.000000 cortex_cli-1.11.1/README.md
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       22 2023-04-06 21:42:23.000000 cortex_cli-1.11.1/cortex_cli/__init__.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/cli/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 23:15:18.000000 cortex_cli-1.11.1/cortex_cli/cli/__init__.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/cli/api/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/cli/api/__init__.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     3990 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/cli/api/github_api.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      575 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/cli/api/http_api.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2789 2023-03-16 20:39:49.000000 cortex_cli-1.11.1/cortex_cli/cli/cli_api_base.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2792 2023-03-16 20:39:49.000000 cortex_cli-1.11.1/cortex_cli/cli/cli_api_base_config.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       90 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/cli/clients.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      821 2023-04-04 00:22:55.000000 cortex_cli-1.11.1/cortex_cli/cli/configure.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      971 2023-03-16 20:39:49.000000 cortex_cli-1.11.1/cortex_cli/cli/cortex_cli.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      994 2023-03-16 20:39:49.000000 cortex_cli-1.11.1/cortex_cli/cli/generic_get.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1005 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/cli/inferences.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)    22292 2023-04-06 21:58:30.000000 cortex_cli-1.11.1/cortex_cli/cli/models.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     3248 2023-04-06 21:20:24.000000 cortex_cli-1.11.1/cortex_cli/cli/pipelines.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/core/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/core/__init__.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     4024 2023-03-16 20:39:49.000000 cortex_cli-1.11.1/cortex_cli/core/cortex_data.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     3648 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/core/drift_checks.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)    10969 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/core/ethics_checks.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/core/mlflow/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/core/mlflow/__init__.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)    13976 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/core/mlflow/mlflow_cortex.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/core/models/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/core/models/__init__.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     7010 2023-03-21 15:45:49.000000 cortex_cli-1.11.1/cortex_cli/core/models/cortex_model.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/ml_model_template/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2399 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/.gitignore
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      972 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/README.md
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/__init__.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      346 2023-04-06 21:44:35.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/cookiecutter.json
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       12 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/requirements.txt
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2330 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/.gitignore
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1602 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/README.md
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      164 2023-04-06 21:45:02.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/conda.yml
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      533 2023-04-06 19:56:03.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/cortex.yml
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/data/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/data/.gitkeep
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/notebooks/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/notebooks/.gitkeep
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-21 14:31:47.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/__init__.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     2377 2023-04-06 19:56:06.000000 cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/{{cookiecutter.__model_name}}.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli/tests/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        0 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/tests/__init__.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1801 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/tests/test_cortex_data.py
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1825 2023-03-09 15:57:05.000000 cortex_cli-1.11.1/cortex_cli/tests/test_ethics_checks.py
│ │ +drwxr-xr-x   0 mattgroho  (1000) mattgroho  (1000)        0 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/cortex_cli.egg-info/
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      260 2023-04-06 21:58:35.000000 cortex_cli-1.11.1/cortex_cli.egg-info/PKG-INFO
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)     1909 2023-04-06 21:58:35.000000 cortex_cli-1.11.1/cortex_cli.egg-info/SOURCES.txt
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)        1 2023-04-06 21:58:35.000000 cortex_cli-1.11.1/cortex_cli.egg-info/dependency_links.txt
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       62 2023-04-06 21:58:35.000000 cortex_cli-1.11.1/cortex_cli.egg-info/entry_points.txt
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      110 2023-04-06 21:58:35.000000 cortex_cli-1.11.1/cortex_cli.egg-info/requires.txt
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       11 2023-04-06 21:58:35.000000 cortex_cli-1.11.1/cortex_cli.egg-info/top_level.txt
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)       89 2023-03-01 03:50:43.000000 cortex_cli-1.11.1/pyproject.toml
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      206 2023-04-06 21:58:35.083259 cortex_cli-1.11.1/setup.cfg
│ │ +-rw-r--r--   0 mattgroho  (1000) mattgroho  (1000)      841 2023-04-06 21:41:11.000000 cortex_cli-1.11.1/setup.py
│ │   --- cortex_cli-1.10.12/README.md
│ ├── +++ cortex_cli-1.11.1/README.md
│ │┄ Files 13% similar despite different names
│ │ @@ -14,30 +14,37 @@
│ │  ```
│ │  mamba env create -f ./conda.yml
│ │  
│ │  # Build version of Cortex CLI for release
│ │  python -m build
│ │  ```
│ │  
│ │ +## Installing the CLI
│ │ +```
│ │ +mamba create -n cortex_cli python=3.10 pip -c conda-forge
│ │ +mamba activate cortex_cli
│ │ +pip install cortex-cli
│ │ +```
│ │ +
│ │  ## Running the CLI
│ │  ```
│ │  mamba activate cortex_cli
│ │ -python ./cortex_cli/cortex.py [resource] [action] [parameters ...]
│ │ +cortex-cli [resource] [action] [parameters ...]
│ │  ```
│ │  
│ │  Resources include configure, clients, models, pipelines, and inferences.
│ │  Actions include get, list, and create.
│ │  Parameters are action+resource specific.
│ │  
│ │  ### Client
│ │  *NOTE*: the default client is `demo`.  This can be modified by passing in `-c CLENT_NAME` to all commands, or to set the ENV variable 'CLIENT' to the client key.
│ │  
│ │  *Get a List of Clients*
│ │  ```
│ │ -$ python ../cortex-cli/cortex_cli/cortex.py clients list
│ │ +$ cortex-cli clients list
│ │  
│ │  [{'_id': '6317eceaeef27d972e86b4ff',
│ │    'clientKey': 'demo',
│ │    'createdDate': '2022-09-07T00:59:22.582Z',
│ │    'description': 'The Cortex Demo Client',
│ │    'experimentId': '1',
│ │    'licensePlan': 'enterprise',
│ │ @@ -46,15 +53,15 @@
│ │    'supportPhone': '717-111-2222',
│ │    'updatedDate': '2022-09-07T00:59:22.582Z',
│ │    'website': 'https://www.nearlhuman.ai'}]
│ │  ```
│ │  
│ │  *Get a Client by ID*
│ │  ```
│ │ -$ python ../cortex-cli/cortex_cli/cortex.py clients get -i 6317eceaeef27d972e86b4ff
│ │ +$ cortex-cli clients get -i 6317eceaeef27d972e86b4ff
│ │  
│ │  {'_id': '6317eceaeef27d972e86b4ff',
│ │   'clientKey': 'demo',
│ │   'createdDate': '2022-09-07T00:59:22.582Z',
│ │   'description': 'The Cortex Demo Client',
│ │   'experimentId': '1',
│ │   'licensePlan': 'enterprise',
│ │ @@ -65,15 +72,15 @@
│ │   'website': 'https://www.nearlhuman.ai'}
│ │  
│ │  ```
│ │  
│ │  ### Models
│ │  *Get a List of Models*
│ │  ```
│ │ -$ python ../cortex-cli/cortex_cli/cortex.py models list
│ │ +$ cortex-cli models list
│ │  
│ │  [{'_id': '632b32731d2faa4ffbade76d',
│ │    'clientKey': 'demo',
│ │    'createdDate': '2022-09-20T15:49:06.882Z',
│ │    'description': 'A model that is initialized through the Cortex CLI.',
│ │    'experimentId': '1',
│ │    'name': 'nmci-chat-2',
│ │ @@ -93,15 +100,15 @@
│ │    'updatedDate': '2022-09-21T17:03:57.365Z'},
│ │   ...
│ │   ]
│ │  ```
│ │  
│ │  *Get a Model By ID*
│ │  ```
│ │ -$ python ../cortex-cli/cortex_cli/cortex.py models get -i 632b32731d2faa4ffbade76d
│ │ +$ cortex-cli models get -i 632b32731d2faa4ffbade76d
│ │  {'_id': '632b32731d2faa4ffbade76d',
│ │   'clientKey': 'demo',
│ │   'createdDate': '2022-09-20T15:49:06.882Z',
│ │   'description': 'A model that is initialized through the Cortex CLI.',
│ │   'experimentId': '1',
│ │   'name': 'nmci-chat-2',
│ │   'organization': 'nearlyhuman',
│ │ @@ -109,41 +116,42 @@
│ │   'tags': [],
│ │   'updatedDate': '2022-09-20T15:49:06.882Z'}
│ │  ```
│ │  
│ │  *Run a Model's Pipeline*
│ │  *NOTE:* First, cd to the model's local directory.  Use the `-t` flag to set tracking against the Cortex server.  Otherwise it will simply train locally.
│ │  ```
│ │ -~/workspaces/nh/demo-financialchat$ python ../cortex-cli/cortex_cli/cortex.py models run -t
│ │ -   + Found the model nearlyhuman/demo-financialchat with id 632b6da8b015504a5d35b0f2
│ │ -   + Initialized the MLFlow integration
│ │ -   + Did not find existing pipeline for branch main with status Pending
│ │ -   + Pipeline Pending with id 6331008ec84419b73954ad03
│ │ -   + Pipeline Running with id 6331008ec84419b73954ad03
│ │ -                Loading module base from ./src/financialchat/base.py
│ │ +~/nh-models/github/financialchat$ cortex-cli models run -t
│ │ +   + Found the model financialchat
│ │ +   + Did not find existing pipeline for branch main
│ │ +   + Pipeline Pending with id: 642c68841368f765a05fdb38
│ │                  Loading module financialchat from ./src/financialchat/financialchat.py
│ │ -   + Loaded the Cortex Model into memory
│ │ -   + Loaded data
│ │ -   + Ran the fit
│ │ -   + Completed the evaulation
│ │ -/home/havkarl/anaconda3/envs/mlflow/lib/python3.8/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.
│ │ -  warnings.warn("Setuptools is replacing distutils.")
│ │ -   + Saved the model artifact
│ │ -                Adding models/cortex/6331008ec84419b73954ad03 to artifacts
│ │ -   + Logged the model artifact into Cortex
│ │ -   + Pipeline Successful with id 6331008ec84419b73954ad03
│ │ +   + Loaded pipeline steps
│ │ +   + Download data completed successfully
│ │ +   + Fit model completed successfully
│ │ +   + Evaluate model completed successfully
│ │ +   + Cleanup model params completed successfully
│ │ +   > Saving pipeline artifacts...
│ │ +   + Saved the pipeline artifacts to disk: (models/cortex/642c68841368f765a05fdb38)
│ │ +   > Packing conda environment...
│ │ +Collecting packages...
│ │ +Packing environment at '/home/mattgroho/mambaforge/envs/financial_chat' to 'models/cortex/642c68841368f765a05fdb38/environment.tar.gz'
│ │ +[########################################] | 100% Completed | 13.7s
│ │ +   + Packed conda environment to disk: (models/cortex/642c68841368f765a05fdb38)
│ │ +   > Uploading pipeline artifacts to Cortex...
│ │ +   + Uploaded the pipeline artifacts to Cortex
│ │     + Completed Cortex Pipeline Run
│ │  ```
│ │  
│ │  *Initialize a New Model*
│ │  *NOTE:* Only needed if you want to both create a brand new Cortex ready model and automatically register it with the server.  Start from the workspace directory where the model repo is going to be created locally.
│ │  ```
│ │ -$ python ../cortex-cli/cortex_cli/cortex.py models init -n demo-digits-predictions-karl
│ │ +$ cortex-cli models init -n demo-digits-predictions-karl
│ │  ```
│ │  
│ │  *Register a Model*
│ │  *NOTE:* Only needed if you have an existing Cortex Github repository and you want to register it with the server. First, cd to the model's local directory.
│ │  ```
│ │ -$ python ../cortex-cli/cortex_cli/cortex.py models register -n demo-digits-predictions-karl
│ │ +$ cortex-cli models register -n "Financial Chat" -r financial-chat
│ │  ```
│ │  
│ │  ### Pipelines
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/api/github_api.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/api/github_api.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/api/http_api.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/api/http_api.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/cli_api_base.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/cli_api_base.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/cli_api_base_config.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/cli_api_base_config.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/configure.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/configure.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/cortex_cli.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/cortex_cli.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/generic_get.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/generic_get.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/inferences.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/inferences.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/models.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/models.py
│ │┄ Files 8% similar despite different names
│ │ @@ -1,12 +1,12 @@
│ │  from cookiecutter.main import cookiecutter
│ │  import plumbum.cli
│ │  from plumbum import local
│ │  import requests
│ │ -from collections import namedtuple
│ │ +from collections import ChainMap, namedtuple
│ │  import cortex_cli.cli.api.github_api as gh
│ │  
│ │  import conda_pack
│ │  import traceback
│ │  import os
│ │  import os.path
│ │  import mlflow
│ │ @@ -19,14 +19,15 @@
│ │  from os import walk
│ │  
│ │  from cortex_cli.cli.cli_api_base import CliApiBase
│ │  
│ │  import cortex_cli.core.mlflow.mlflow_cortex as mlflow_cortex
│ │  from cortex_cli.core.ethics_checks import EthicsResult
│ │  from cortex_cli.core.drift_checks import DriftResult
│ │ +from cortex_cli import __version__
│ │  
│ │  
│ │  class ModelsCli(plumbum.cli.Application):
│ │      NAME = 'models'
│ │  
│ │  
│ │  @ModelsCli.subcommand('init')
│ │ @@ -61,26 +62,27 @@
│ │          envname='GH_TOKEN'
│ │      )
│ │  
│ │      _org = plumbum.cli.SwitchAttr(
│ │          names=['--github-org'],
│ │          argtype=str,
│ │          envname='GH_ORG',
│ │ -        default='nearlyhuman',
│ │ +        default='nearlyhuman'
│ │      )
│ │  
│ │      _path = plumbum.cli.SwitchAttr(
│ │          names=['-p', '--path'],
│ │          argtype=str,
│ │          envname='MODEL_PATH',
│ │ -        default='.',
│ │ +        default='.'
│ │      )
│ │  
│ │      _register = plumbum.cli.Flag(
│ │ -        names=["--register"]
│ │ +        names=["--register"],
│ │ +        default=True
│ │      )
│ │  
│ │      # Properties
│ │  
│ │      @property
│ │      def _template_location(self):
│ │          current = os.path.dirname(os.path.realpath(__file__))
│ │ @@ -106,20 +108,19 @@
│ │              self._token
│ │          )
│ │  
│ │          try:
│ │              self._validate_repo()
│ │              self._generate_template_repo()
│ │  
│ │ -            # If the user has specified a GH token, then we can create the repo in github and automatically register with Cortex.
│ │ -            if self._token:
│ │ -                self._create_repo(github)
│ │ +            # Create the repository in Github
│ │ +            self._create_repo(github)
│ │  
│ │ -                if self._register:
│ │ -                    self._register_model()
│ │ +            # Register the model with Cortex
│ │ +            self._register_model()
│ │          except Exception as e:
│ │              self._fail(e)
│ │              self._error_message = e
│ │          finally:
│ │              if not self._error_message:
│ │                  self._pass(f'Successfully generated the model repository at "{self._model_path}"')
│ │          return
│ │ @@ -133,51 +134,53 @@
│ │      def _generate_template_repo(self):
│ │          cookiecutter(
│ │              self._template_location,
│ │              no_input=True,
│ │              output_dir=self._path,
│ │              extra_context={
│ │                  'model_name':  self._name,
│ │ -                'description': self._description
│ │ +                'description': self._description,
│ │ +                '__version': __version__
│ │              }
│ │          )
│ │  
│ │  
│ │      def _create_repo(self, github):
│ │ -        # create the repository in github
│ │ -        response = self._handle_api_response(gh.create_repo(github))
│ │ -
│ │ -        # commit and push to the new repo in github
│ │ -        repo = gh.Repo(path=self._model_path)
│ │ -        repo.init() \
│ │ -            .set_remote(github.owner, github.repo_name) \
│ │ -            .add() \
│ │ -            .commit('Initial commit. Generated from Cortex CLI using the model template.') \
│ │ -            .push()
│ │ +        if self._token:
│ │ +            try:
│ │ +                # Create the repository in Github
│ │ +                response = self._handle_api_response(gh.create_repo(github))
│ │ +
│ │ +                # Commit and push to the new repo in Github
│ │ +                repo = gh.Repo(path=self._model_path)
│ │ +                repo.init() \
│ │ +                    .set_remote(github.owner, github.repo_name) \
│ │ +                    .add() \
│ │ +                    .commit('Initial commit. Generated from Cortex CLI using the model template.') \
│ │ +                    .push()
│ │  
│ │ -        self._pass(
│ │ -            f'Created the GitHub repository "{self._org}/{self._repo}"')
│ │ -        return response
│ │ +                self._pass(
│ │ +                    f'Created the GitHub repository "{self._org}/{self._repo}"')
│ │ +                return response
│ │ +            except Exception as e:
│ │ +                raise Exception(f'An error occurred while initializing the GitHub repo.\n{e}')
│ │  
│ │  
│ │ -    def _register_model(self, model_name: str):
│ │ +    def _register_model(self):
│ │          if self._register:
│ │              response = requests.post(
│ │                  url=self.endpoint,
│ │                  headers=self.headers,
│ │                  json={
│ │ -                    'name': model_name,
│ │ -                    'repo': model_name
│ │ +                    'name': self._name,
│ │ +                    'repo': self._repo
│ │                  }
│ │              )
│ │              self._handle_api_response(
│ │                  response, f'Registered the model repository {response["_id"]}')
│ │ -        else:
│ │ -            self._fail(
│ │ -                'Skipping Cortex registration. Please register the repository with Cortex before training in the cloud')
│ │  
│ │  
│ │  @ModelsCli.subcommand('register')
│ │  class RegisterModel(CliApiBase):
│ │      _repo = plumbum.cli.SwitchAttr(
│ │          names=['-r', '--repo'],
│ │          argtype=str,
│ │ @@ -332,21 +335,25 @@
│ │              # Step 8 - Upload the pipeline artifacts
│ │              if self._tracking:
│ │                  self._upload_pipeline()
│ │          except Exception as e:
│ │              if not self._error_message:
│ │                  self._error_message = traceback.format_exc()
│ │          finally:
│ │ -            # Step 9 - Contact callback route to update currentStage of model pipeline
│ │ -            if self._tracking and self._pipeline_json and self._model_json:
│ │ -                status = 'Failed' if self._error_message or not self._success else 'Successful'
│ │ -                self._complete_callback(
│ │ -                    status,
│ │ -                    self._error_message
│ │ -                )
│ │ +
│ │ +            try:
│ │ +                # Step 9 - Contact callback route to update currentStage of model pipeline
│ │ +                if self._tracking and self._pipeline_json and self._model_json:
│ │ +                    status = 'Failed' if self._error_message or not self._success else 'Successful'
│ │ +                    self._complete_callback(
│ │ +                        status,
│ │ +                        self._error_message
│ │ +                    )
│ │ +            except Exception as e:
│ │ +                self._fail(f'An internal server error has occurred!\n{e}')
│ │  
│ │              if self._error_message:
│ │                  self._fail(self._error_message)
│ │              else:
│ │                  self._pass('Completed Cortex Pipeline Run')
│ │  
│ │  # -------------------------------------------------------------------------------
│ │ @@ -522,15 +529,15 @@
│ │  
│ │  
│ │      def _setup_pipeline(self):
│ │          # Get the local branch
│ │          git_branch = gh.Repo().branch
│ │          git_hash = gh.Repo().hash
│ │  
│ │ -        if git_hash is None or git_hash is '':
│ │ +        if git_hash is None or git_hash == '':
│ │              self._fail('Could not get git commit hash. Please initialize the git repository and commit your code before running the pipeline.')
│ │  
│ │          # Look for an existing 'Pending' pipeline for this branch
│ │          pipeline_response = self._get_pipeline(
│ │              git_branch,
│ │              self._model_id
│ │          )
│ │ @@ -557,18 +564,18 @@
│ │  
│ │          response = requests.get(
│ │              url=self._endpoint,
│ │              params=query,
│ │              headers=self._headers
│ │          )
│ │  
│ │ -        model = response.json()['documents']
│ │ -
│ │ -        if response.status_code != 200 or len(model) != 1:
│ │ +        if response.status_code != 200 or 'documents' not in response.json() or len(response.json()['documents']) != 1:
│ │              raise Exception('Error! This model could not be found')
│ │ +        
│ │ +        model = response.json()['documents']
│ │  
│ │          self._pass(
│ │              f'Found the model {gh.Repo().repo}')
│ │  
│ │          return model[0]
│ │  
│ │  
│ │ @@ -586,15 +593,14 @@
│ │              headers=self._headers,
│ │              json=body
│ │          )
│ │  
│ │  
│ │      def _save_pipeline(self, model):
│ │          self._info('Saving pipeline artifacts...')
│ │ -        # TODO: How to generalize this infer signature call
│ │          signature = infer_signature(model.input_example, model.output_example)
│ │  
│ │          # Save model
│ │          modules = list(self._modules.keys())
│ │          modules.append(self._model_module)
│ │          if model.model_type == 'cortex':
│ │              mlflow_cortex.save_model(
│ │ @@ -668,14 +674,14 @@
│ │  
│ │          # LOAD MODEL MODULE
│ │          model_module = self._load_module(
│ │              '{}/{}.py'.format(config['module_path'], config['model_module']),
│ │              config['model_module']
│ │          )
│ │  
│ │ -        # return getattr(model_module, config['model_class'])(config['params'], 'demo', gh.Repo())
│ │ -        return getattr(model_module, config['model_class'])(config['params'], self._model_id, self._api_url, self._headers)
│ │ +        model_params = dict(ChainMap(*config['params'])) if config['params'] else {}
│ │ +        return getattr(model_module, config['model_class'])(model_params, self._model_id, self._api_url, self._headers)
│ │  
│ │  
│ │      def _setup_mlflow(self):
│ │          # Create a client to make API calls to the tracking server
│ │          return mlflow.tracking.MlflowClient()
│ │   --- cortex_cli-1.10.12/cortex_cli/cli/pipelines.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/cli/pipelines.py
│ │┄ Files 5% similar despite different names
│ │ @@ -68,15 +68,15 @@
│ │  
│ │      _path = plumbum.cli.SwitchAttr(
│ │          names     = ['-p','--path'], 
│ │          argtype   = str
│ │      )
│ │  
│ │      _id = plumbum.cli.SwitchAttr(
│ │ -        names     = ['-i','--id'],
│ │ +        names     = ['-i','--id']
│ │      )
│ │  
│ │  
│ │      def main(self, *args):
│ │          if self._id and self._path:
│ │              self._fail('Cannot specify both --id and --path')
│ │  
│ │ @@ -94,15 +94,15 @@
│ │      _path = plumbum.cli.SwitchAttr(
│ │          names     = ['-p','--path'], 
│ │          argtype   = str,
│ │          mandatory = True
│ │      )
│ │  
│ │      _id = plumbum.cli.SwitchAttr(
│ │ -        names     = ['-i','--id'],
│ │ +        names     = ['-i','--id']
│ │      )
│ │  
│ │  
│ │      def main(self, *args):
│ │          if self._id and self._path:
│ │              self._fail('Cannot specify both --id and --path')
│ │   --- cortex_cli-1.10.12/cortex_cli/core/cortex_data.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/core/cortex_data.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/core/drift_checks.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/core/drift_checks.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/core/ethics_checks.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/core/ethics_checks.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/core/mlflow/mlflow_cortex.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/core/mlflow/mlflow_cortex.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/core/models/cortex_model.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/core/models/cortex_model.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/ml_model_template/.gitignore
│ ├── +++ cortex_cli-1.11.1/cortex_cli/ml_model_template/.gitignore
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/ml_model_template/README.md
│ ├── +++ cortex_cli-1.11.1/cortex_cli/ml_model_template/README.md
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/.gitignore
│ ├── +++ cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/.gitignore
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/README.md
│ ├── +++ cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/README.md
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/cortex.yml
│ ├── +++ cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/cortex.yml
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/{{cookiecutter.__model_name}}.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/ml_model_template/{{cookiecutter.__model_slug}}/src/{{cookiecutter.__model_name}}/{{cookiecutter.__model_name}}.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/tests/test_cortex_data.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/tests/test_cortex_data.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli/tests/test_ethics_checks.py
│ ├── +++ cortex_cli-1.11.1/cortex_cli/tests/test_ethics_checks.py
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/cortex_cli.egg-info/SOURCES.txt
│ ├── +++ cortex_cli-1.11.1/cortex_cli.egg-info/SOURCES.txt
│ │┄ Files identical despite different names
│ │   --- cortex_cli-1.10.12/setup.py
│ ├── +++ cortex_cli-1.11.1/setup.py
│ │┄ Files 2% similar despite different names
│ │ @@ -1,13 +1,13 @@
│ │  from setuptools import find_packages, setup
│ │  
│ │  
│ │  setup(
│ │      name="cortex_cli",
│ │ -    version="1.10.12",
│ │ +    version="1.11.1",
│ │      packages=find_packages(exclude=['tests*']),
│ │      author='Nearly Human',
│ │      author_email='support@nearlyhuman.ai',
│ │      description='Nearly Human Cortex CLI for interacting with model functions.',
│ │      keywords='CLI, API, nearlyhuman, nearly human, cortex',
│ │  
│ │      python_requires='>=3.8.10',
