--- tmp/repository_service_tuf-0.0.1a9.tar.gz
+++ tmp/repository_service_tuf-0.1.0a1.tar.gz
│   --- repository_service_tuf-0.0.1a9.tar
├── +++ repository_service_tuf-0.1.0a1.tar
│ ├── file list
│ │ @@ -1,96 +1,91 @@
│ │ --rw-r--r--   0        0        0     1886 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.gitignore
│ │ --rw-r--r--   0        0        0     1332 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.pre-commit-config.yaml
│ │ --rw-r--r--   0        0        0      564 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.readthedocs.yaml
│ │ --rw-r--r--   0        0        0     5444 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/CODE_OF_CONDUCT.rst
│ │ --rw-r--r--   0        0        0     4117 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/CONTRIBUTING.rst
│ │ --rw-r--r--   0        0        0     1067 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/LICENSE
│ │ --rw-r--r--   0        0        0      410 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/MAINTAINERS.rst
│ │ --rw-r--r--   0        0        0      415 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/Makefile
│ │ --rw-r--r--   0        0        0      812 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/Pipfile
│ │ --rw-r--r--   0        0        0    82737 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/Pipfile.lock
│ │ --rw-r--r--   0        0        0     1789 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/README.rst
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/id_ed25519
│ │ --rwxr-xr-x   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/id_ed25519.pub
│ │ --rw-r--r--   0        0        0     1471 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/pyproject.toml
│ │ --rw-r--r--   0        0        0     3334 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/requirements-dev.txt
│ │ --rw-r--r--   0        0        0     1003 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/requirements.txt
│ │ --rw-r--r--   0        0        0     1518 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tox.ini
│ │ --rw-r--r--   0        0        0      262 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/dependabot.yml
│ │ --rw-r--r--   0        0        0     1437 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/ISSUE_TEMPLATE/bug.yml
│ │ --rw-r--r--   0        0        0      169 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/ISSUE_TEMPLATE/config.yml
│ │ --rw-r--r--   0        0        0     1001 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/ISSUE_TEMPLATE/other.yml
│ │ --rw-r--r--   0        0        0     1106 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/ISSUE_TEMPLATE/task.yml
│ │ --rw-r--r--   0        0        0     1486 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/PULL_REQUEST_TEMPLATE/pr.yml
│ │ --rw-r--r--   0        0        0     2452 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/workflows/cd.yml
│ │ --rw-r--r--   0        0        0      974 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/workflows/ci.yml
│ │ --rw-r--r--   0        0        0     1237 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/.github/workflows/update-python-deps.yml
│ │ --rw-r--r--   0        0        0      638 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/Makefile
│ │ --rw-r--r--   0        0        0      799 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/make.bat
│ │ --rw-r--r--   0        0        0       26 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/requirements.txt
│ │ --rw-r--r--   0        0        0     2941 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/diagrams/repository-service-tuf-cli-C1.puml
│ │ --rw-r--r--   0        0        0     5408 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/diagrams/repository-service-tuf-cli-C2.puml
│ │ --rw-r--r--   0        0        0     4192 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/diagrams/repository-service-tuf-cli-C3.puml
│ │ --rw-r--r--   0        0        0     2081 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/conf.py
│ │ --rw-r--r--   0        0        0      310 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/index.rst
│ │ --rw-r--r--   0        0        0        0 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/_static/INFO
│ │ --rw-r--r--   0        0        0    19648 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/_static/repository-service-tuf-cli-C1.png
│ │ --rw-r--r--   0        0        0    41916 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/_static/repository-service-tuf-cli-C2.png
│ │ --rw-r--r--   0        0        0    94852 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/_static/repository-service-tuf-cli-C3.png
│ │ --rw-r--r--   0        0        0      921 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/devel/design.rst
│ │ --rw-r--r--   0        0        0      318 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/devel/index.rst
│ │ --rw-r--r--   0        0        0      103 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/devel/modules.rst
│ │ --rw-r--r--   0        0        0      876 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/devel/repository_service_tuf.cli.admin.rst
│ │ --rw-r--r--   0        0        0      297 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/devel/repository_service_tuf.cli.rst
│ │ --rw-r--r--   0        0        0      653 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/devel/repository_service_tuf.helpers.rst
│ │ --rw-r--r--   0        0        0      313 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/devel/repository_service_tuf.rst
│ │ --rw-r--r--   0        0        0    42980 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/docs/source/guide/index.rst
│ │ --rw-r--r--   0        0        0      124 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/__init__.py
│ │ --rw-r--r--   0        0        0      177 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/__version__.py
│ │ --rw-r--r--   0        0        0     1433 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/cli/__init__.py
│ │ --rw-r--r--   0        0        0      190 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/__init__.py
│ │ --rw-r--r--   0        0        0    22046 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/ceremony.py
│ │ --rw-r--r--   0        0        0     6498 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/import_targets.py
│ │ --rw-r--r--   0        0        0     3950 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/login.py
│ │ --rw-r--r--   0        0        0     2552 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/token.py
│ │ --rw-r--r--   0        0        0       80 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/helpers/__init__.py
│ │ --rw-r--r--   0        0        0     4966 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/helpers/api_client.py
│ │ --rw-r--r--   0        0        0     9363 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/repository_service_tuf/helpers/tuf.py
│ │ --rwxr-xr-x   0        0        0      861 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/2.targets.json
│ │ --rw-r--r--   0        0        0      560 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/conftest.py
│ │ --rw-r--r--   0        0        0      622 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/test_tuf_repository_service.py
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/ChrisCornel.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/ChrisCornel.key.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/JanisJoplin.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/JanisJoplin.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/JimiHendrix.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/JimiHendrix.key.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/JoeCocker.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/JoeCocker.key.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/KurtCobain.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/KurtCobain.key.pub
│ │ --rw-r--r--   0        0        0        0 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/README.md
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/bins1.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/bins1.key.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/root3.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/root3.key.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/snapshot1.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/snapshot1.key.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/timestamp1.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/timestamp1.key.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/JanisJoplin.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/JanisJoplin.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/JimiHendrix.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/JimiHendrix.pub
│ │ --rw-r--r--   0        0        0      182 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/README.md
│ │ --rw-r--r--   0        0        0     2546 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/online-rsa.key
│ │ --rwxr-xr-x   0        0        0      624 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/online-rsa.pub
│ │ --rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/online.key
│ │ --rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/files/keystorage/online.pub
│ │ --rw-r--r--   0        0        0     1011 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/tools/generate_keys.py
│ │ --rw-r--r--   0        0        0       80 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/unit/cli/admin/__init__.py
│ │ --rw-r--r--   0        0        0    20327 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/unit/cli/admin/test_ceremony.py
│ │ --rw-r--r--   0        0        0    18182 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/unit/cli/admin/test_import_targets.py
│ │ --rw-r--r--   0        0        0    11224 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/unit/cli/admin/test_login.py
│ │ --rw-r--r--   0        0        0       80 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/unit/helpers/__init__.py
│ │ --rw-r--r--   0        0        0    13196 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/tests/unit/helpers/test_api_client.py
│ │ --rw-r--r--   0        0        0     2894 2020-02-02 00:00:00.000000 repository_service_tuf-0.0.1a9/PKG-INFO
│ │ +-rw-r--r--   0        0        0     1886 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.gitignore
│ │ +-rw-r--r--   0        0        0     1332 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.pre-commit-config.yaml
│ │ +-rw-r--r--   0        0        0      564 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.readthedocs.yaml
│ │ +-rw-r--r--   0        0        0     5444 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/CODE_OF_CONDUCT.rst
│ │ +-rw-r--r--   0        0        0     4117 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/CONTRIBUTING.rst
│ │ +-rw-r--r--   0        0        0     1067 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/LICENSE
│ │ +-rw-r--r--   0        0        0      410 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/MAINTAINERS.rst
│ │ +-rw-r--r--   0        0        0      415 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/Makefile
│ │ +-rw-r--r--   0        0        0      812 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/Pipfile
│ │ +-rw-r--r--   0        0        0    81107 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/Pipfile.lock
│ │ +-rw-r--r--   0        0        0     1789 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/README.rst
│ │ +-rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/id_ed25519
│ │ +-rwxr-xr-x   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/id_ed25519.pub
│ │ +-rw-r--r--   0        0        0     1471 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/pyproject.toml
│ │ +-rw-r--r--   0        0        0     3366 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/requirements-dev.txt
│ │ +-rw-r--r--   0        0        0     1036 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/requirements.txt
│ │ +-rw-r--r--   0        0        0     1633 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tox.ini
│ │ +-rw-r--r--   0        0        0      262 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/dependabot.yml
│ │ +-rw-r--r--   0        0        0     1437 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/ISSUE_TEMPLATE/bug.yml
│ │ +-rw-r--r--   0        0        0      169 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/ISSUE_TEMPLATE/config.yml
│ │ +-rw-r--r--   0        0        0     1001 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/ISSUE_TEMPLATE/other.yml
│ │ +-rw-r--r--   0        0        0     1106 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/ISSUE_TEMPLATE/task.yml
│ │ +-rw-r--r--   0        0        0     1486 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/PULL_REQUEST_TEMPLATE/pr.yml
│ │ +-rw-r--r--   0        0        0     2452 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/workflows/cd.yml
│ │ +-rw-r--r--   0        0        0      974 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/workflows/ci.yml
│ │ +-rw-r--r--   0        0        0     1237 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/.github/workflows/update-python-deps.yml
│ │ +-rw-r--r--   0        0        0      638 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/Makefile
│ │ +-rw-r--r--   0        0        0      799 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/make.bat
│ │ +-rw-r--r--   0        0        0       26 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/requirements.txt
│ │ +-rw-r--r--   0        0        0     2941 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/diagrams/repository-service-tuf-cli-C1.puml
│ │ +-rw-r--r--   0        0        0     5408 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/diagrams/repository-service-tuf-cli-C2.puml
│ │ +-rw-r--r--   0        0        0     4192 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/diagrams/repository-service-tuf-cli-C3.puml
│ │ +-rw-r--r--   0        0        0     2081 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/conf.py
│ │ +-rw-r--r--   0        0        0      310 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/index.rst
│ │ +-rw-r--r--   0        0        0        0 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/_static/INFO
│ │ +-rw-r--r--   0        0        0    19648 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/_static/repository-service-tuf-cli-C1.png
│ │ +-rw-r--r--   0        0        0    41916 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/_static/repository-service-tuf-cli-C2.png
│ │ +-rw-r--r--   0        0        0    94852 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/_static/repository-service-tuf-cli-C3.png
│ │ +-rw-r--r--   0        0        0      921 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/design.rst
│ │ +-rw-r--r--   0        0        0      352 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/index.rst
│ │ +-rw-r--r--   0        0        0      103 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/modules.rst
│ │ +-rw-r--r--   0        0        0      876 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/repository_service_tuf.cli.admin.rst
│ │ +-rw-r--r--   0        0        0      464 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/repository_service_tuf.cli.key.rst
│ │ +-rw-r--r--   0        0        0      297 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/repository_service_tuf.cli.rst
│ │ +-rw-r--r--   0        0        0      653 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/repository_service_tuf.helpers.rst
│ │ +-rw-r--r--   0        0        0      313 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/devel/repository_service_tuf.rst
│ │ +-rw-r--r--   0        0        0    45268 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/docs/source/guide/index.rst
│ │ +-rw-r--r--   0        0        0      124 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/__init__.py
│ │ +-rw-r--r--   0        0        0      177 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/__version__.py
│ │ +-rw-r--r--   0        0        0      558 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/constants.py
│ │ +-rw-r--r--   0        0        0     1433 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/__init__.py
│ │ +-rw-r--r--   0        0        0      190 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/__init__.py
│ │ +-rw-r--r--   0        0        0    24520 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/ceremony.py
│ │ +-rw-r--r--   0        0        0     6210 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/import_targets.py
│ │ +-rw-r--r--   0        0        0     3949 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/login.py
│ │ +-rw-r--r--   0        0        0     2552 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/token.py
│ │ +-rw-r--r--   0        0        0      191 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/key/__init__.py
│ │ +-rw-r--r--   0        0        0     2447 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/cli/key/generate_key.py
│ │ +-rw-r--r--   0        0        0       80 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/helpers/__init__.py
│ │ +-rw-r--r--   0        0        0     5793 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/helpers/api_client.py
│ │ +-rw-r--r--   0        0        0     7454 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/repository_service_tuf/helpers/tuf.py
│ │ +-rwxr-xr-x   0        0        0      861 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/2.targets.json
│ │ +-rw-r--r--   0        0        0     3626 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/conftest.py
│ │ +-rw-r--r--   0        0        0      617 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/test_tuf_repository_service.py
│ │ +-rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/JanisJoplin.key
│ │ +-rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/JanisJoplin.pub
│ │ +-rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/JimiHendrix.key
│ │ +-rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/JimiHendrix.pub
│ │ +-rw-r--r--   0        0        0      182 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/README.md
│ │ +-rw-r--r--   0        0        0     2546 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/online-rsa.key
│ │ +-rwxr-xr-x   0        0        0      624 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/online-rsa.pub
│ │ +-rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/online.key
│ │ +-rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/online.pub
│ │ +-rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/JanisJoplin.key
│ │ +-rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/JanisJoplin.pub
│ │ +-rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/JimiHendrix.key
│ │ +-rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/JimiHendrix.pub
│ │ +-rw-r--r--   0        0        0      182 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/README.md
│ │ +-rw-r--r--   0        0        0     2546 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/online-rsa.key
│ │ +-rwxr-xr-x   0        0        0      624 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/online-rsa.pub
│ │ +-rw-r--r--   0        0        0      822 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/online.key
│ │ +-rw-r--r--   0        0        0      180 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/files/keystorage/online.pub
│ │ +-rw-r--r--   0        0        0       80 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/cli/admin/__init__.py
│ │ +-rw-r--r--   0        0        0    27843 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/cli/admin/test_ceremony.py
│ │ +-rw-r--r--   0        0        0    15993 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/cli/admin/test_import_targets.py
│ │ +-rw-r--r--   0        0        0    11219 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/cli/admin/test_login.py
│ │ +-rw-r--r--   0        0        0     5620 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/cli/key/test_generate_key.py
│ │ +-rw-r--r--   0        0        0       80 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/helpers/__init__.py
│ │ +-rw-r--r--   0        0        0    20035 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/helpers/test_api_client.py
│ │ +-rw-r--r--   0        0        0    12210 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/tests/unit/helpers/test_tuf.py
│ │ +-rw-r--r--   0        0        0     2894 2020-02-02 00:00:00.000000 repository_service_tuf-0.1.0a1/PKG-INFO
│ │   --- repository_service_tuf-0.0.1a9/.gitignore
│ ├── +++ repository_service_tuf-0.1.0a1/.gitignore
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/.pre-commit-config.yaml
│ ├── +++ repository_service_tuf-0.1.0a1/.pre-commit-config.yaml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/.readthedocs.yaml
│ ├── +++ repository_service_tuf-0.1.0a1/.readthedocs.yaml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/CODE_OF_CONDUCT.rst
│ ├── +++ repository_service_tuf-0.1.0a1/CODE_OF_CONDUCT.rst
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/CONTRIBUTING.rst
│ ├── +++ repository_service_tuf-0.1.0a1/CONTRIBUTING.rst
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/LICENSE
│ ├── +++ repository_service_tuf-0.1.0a1/LICENSE
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/Pipfile
│ ├── +++ repository_service_tuf-0.1.0a1/Pipfile
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/Pipfile.lock
│ ├── +++ repository_service_tuf-0.1.0a1/Pipfile.lock
│ │┄ Files 13% similar despite different names
│ │ ├── Pretty-printed
│ │ │┄ Similarity: 0.9747972972972972%
│ │ │┄ Differences: {"'default'": "{'charset-normalizer': {'hashes': "
│ │ │┄               "['sha256:04afa6387e2b282cf78ff3dbce20f0cc071c12dc8f685bd40960cc68644cfea6', "
│ │ │┄               "'sha256:04eefcee095f58eaabe6dc3cc2262f3bcd776d2c67005880894f447b3f2cb9c1', "
│ │ │┄               "'sha256:0be65ccf618c1e7ac9b849c315cc2e8a8751d9cfdaa43027d4f6624bd587ab7e', "
│ │ │┄               "'sha256:0c95f12b74681e9ae127728f7e5409cbbef9cd914d5896ef238cc779b8152373', "
│ │ │┄               "'sha256:0ca564606d2caafb0abe6d1b5311c2649e8071eb241b2d64e75a0d0065107e62', "
│ │ │┄  […]
│ │ │ @@ -91,104 +91,92 @@
│ │ │                  "sha256:fa6693661a4c91757f4412306191b6dc88c1703f780c8234035eac011922bc01",
│ │ │                  "sha256:fcd131dd944808b5bdb38e6f5b53013c5aa4f334c5cad0c72742f6eba4b73db0"
│ │ │              ],
│ │ │              "version": "==1.15.1"
│ │ │          },
│ │ │          "charset-normalizer": {
│ │ │              "hashes": [
│ │ │ -                "sha256:00d3ffdaafe92a5dc603cb9bd5111aaa36dfa187c8285c543be562e61b755f6b",
│ │ │ -                "sha256:024e606be3ed92216e2b6952ed859d86b4cfa52cd5bc5f050e7dc28f9b43ec42",
│ │ │ -                "sha256:0298eafff88c99982a4cf66ba2efa1128e4ddaca0b05eec4c456bbc7db691d8d",
│ │ │ -                "sha256:02a51034802cbf38db3f89c66fb5d2ec57e6fe7ef2f4a44d070a593c3688667b",
│ │ │ -                "sha256:083c8d17153ecb403e5e1eb76a7ef4babfc2c48d58899c98fcaa04833e7a2f9a",
│ │ │ -                "sha256:0a11e971ed097d24c534c037d298ad32c6ce81a45736d31e0ff0ad37ab437d59",
│ │ │ -                "sha256:0bf2dae5291758b6f84cf923bfaa285632816007db0330002fa1de38bfcb7154",
│ │ │ -                "sha256:0c0a590235ccd933d9892c627dec5bc7511ce6ad6c1011fdf5b11363022746c1",
│ │ │ -                "sha256:0f438ae3532723fb6ead77e7c604be7c8374094ef4ee2c5e03a3a17f1fca256c",
│ │ │ -                "sha256:109487860ef6a328f3eec66f2bf78b0b72400280d8f8ea05f69c51644ba6521a",
│ │ │ -                "sha256:11b53acf2411c3b09e6af37e4b9005cba376c872503c8f28218c7243582df45d",
│ │ │ -                "sha256:12db3b2c533c23ab812c2b25934f60383361f8a376ae272665f8e48b88e8e1c6",
│ │ │ -                "sha256:14e76c0f23218b8f46c4d87018ca2e441535aed3632ca134b10239dfb6dadd6b",
│ │ │ -                "sha256:16a8663d6e281208d78806dbe14ee9903715361cf81f6d4309944e4d1e59ac5b",
│ │ │ -                "sha256:292d5e8ba896bbfd6334b096e34bffb56161c81408d6d036a7dfa6929cff8783",
│ │ │ -                "sha256:2c03cc56021a4bd59be889c2b9257dae13bf55041a3372d3295416f86b295fb5",
│ │ │ -                "sha256:2e396d70bc4ef5325b72b593a72c8979999aa52fb8bcf03f701c1b03e1166918",
│ │ │ -                "sha256:2edb64ee7bf1ed524a1da60cdcd2e1f6e2b4f66ef7c077680739f1641f62f555",
│ │ │ -                "sha256:31a9ddf4718d10ae04d9b18801bd776693487cbb57d74cc3458a7673f6f34639",
│ │ │ -                "sha256:356541bf4381fa35856dafa6a965916e54bed415ad8a24ee6de6e37deccf2786",
│ │ │ -                "sha256:358a7c4cb8ba9b46c453b1dd8d9e431452d5249072e4f56cfda3149f6ab1405e",
│ │ │ -                "sha256:37f8febc8ec50c14f3ec9637505f28e58d4f66752207ea177c1d67df25da5aed",
│ │ │ -                "sha256:39049da0ffb96c8cbb65cbf5c5f3ca3168990adf3551bd1dee10c48fce8ae820",
│ │ │ -                "sha256:39cf9ed17fe3b1bc81f33c9ceb6ce67683ee7526e65fde1447c772afc54a1bb8",
│ │ │ -                "sha256:3ae1de54a77dc0d6d5fcf623290af4266412a7c4be0b1ff7444394f03f5c54e3",
│ │ │ -                "sha256:3b590df687e3c5ee0deef9fc8c547d81986d9a1b56073d82de008744452d6541",
│ │ │ -                "sha256:3e45867f1f2ab0711d60c6c71746ac53537f1684baa699f4f668d4c6f6ce8e14",
│ │ │ -                "sha256:3fc1c4a2ffd64890aebdb3f97e1278b0cc72579a08ca4de8cd2c04799a3a22be",
│ │ │ -                "sha256:4457ea6774b5611f4bed5eaa5df55f70abde42364d498c5134b7ef4c6958e20e",
│ │ │ -                "sha256:44ba614de5361b3e5278e1241fda3dc1838deed864b50a10d7ce92983797fa76",
│ │ │ -                "sha256:4a8fcf28c05c1f6d7e177a9a46a1c52798bfe2ad80681d275b10dcf317deaf0b",
│ │ │ -                "sha256:4b0d02d7102dd0f997580b51edc4cebcf2ab6397a7edf89f1c73b586c614272c",
│ │ │ -                "sha256:502218f52498a36d6bf5ea77081844017bf7982cdbe521ad85e64cabee1b608b",
│ │ │ -                "sha256:503e65837c71b875ecdd733877d852adbc465bd82c768a067badd953bf1bc5a3",
│ │ │ -                "sha256:5995f0164fa7df59db4746112fec3f49c461dd6b31b841873443bdb077c13cfc",
│ │ │ -                "sha256:59e5686dd847347e55dffcc191a96622f016bc0ad89105e24c14e0d6305acbc6",
│ │ │ -                "sha256:601f36512f9e28f029d9481bdaf8e89e5148ac5d89cffd3b05cd533eeb423b59",
│ │ │ -                "sha256:608862a7bf6957f2333fc54ab4399e405baad0163dc9f8d99cb236816db169d4",
│ │ │ -                "sha256:62595ab75873d50d57323a91dd03e6966eb79c41fa834b7a1661ed043b2d404d",
│ │ │ -                "sha256:70990b9c51340e4044cfc394a81f614f3f90d41397104d226f21e66de668730d",
│ │ │ -                "sha256:71140351489970dfe5e60fc621ada3e0f41104a5eddaca47a7acb3c1b851d6d3",
│ │ │ -                "sha256:72966d1b297c741541ca8cf1223ff262a6febe52481af742036a0b296e35fa5a",
│ │ │ -                "sha256:74292fc76c905c0ef095fe11e188a32ebd03bc38f3f3e9bcb85e4e6db177b7ea",
│ │ │ -                "sha256:761e8904c07ad053d285670f36dd94e1b6ab7f16ce62b9805c475b7aa1cffde6",
│ │ │ -                "sha256:772b87914ff1152b92a197ef4ea40efe27a378606c39446ded52c8f80f79702e",
│ │ │ -                "sha256:79909e27e8e4fcc9db4addea88aa63f6423ebb171db091fb4373e3312cb6d603",
│ │ │ -                "sha256:7e189e2e1d3ed2f4aebabd2d5b0f931e883676e51c7624826e0a4e5fe8a0bf24",
│ │ │ -                "sha256:7eb33a30d75562222b64f569c642ff3dc6689e09adda43a082208397f016c39a",
│ │ │ -                "sha256:81d6741ab457d14fdedc215516665050f3822d3e56508921cc7239f8c8e66a58",
│ │ │ -                "sha256:8499ca8f4502af841f68135133d8258f7b32a53a1d594aa98cc52013fff55678",
│ │ │ -                "sha256:84c3990934bae40ea69a82034912ffe5a62c60bbf6ec5bc9691419641d7d5c9a",
│ │ │ -                "sha256:87701167f2a5c930b403e9756fab1d31d4d4da52856143b609e30a1ce7160f3c",
│ │ │ -                "sha256:88600c72ef7587fe1708fd242b385b6ed4b8904976d5da0893e31df8b3480cb6",
│ │ │ -                "sha256:8ac7b6a045b814cf0c47f3623d21ebd88b3e8cf216a14790b455ea7ff0135d18",
│ │ │ -                "sha256:8b8af03d2e37866d023ad0ddea594edefc31e827fee64f8de5611a1dbc373174",
│ │ │ -                "sha256:8c7fe7afa480e3e82eed58e0ca89f751cd14d767638e2550c77a92a9e749c317",
│ │ │ -                "sha256:8eade758719add78ec36dc13201483f8e9b5d940329285edcd5f70c0a9edbd7f",
│ │ │ -                "sha256:911d8a40b2bef5b8bbae2e36a0b103f142ac53557ab421dc16ac4aafee6f53dc",
│ │ │ -                "sha256:93ad6d87ac18e2a90b0fe89df7c65263b9a99a0eb98f0a3d2e079f12a0735837",
│ │ │ -                "sha256:95dea361dd73757c6f1c0a1480ac499952c16ac83f7f5f4f84f0658a01b8ef41",
│ │ │ -                "sha256:9ab77acb98eba3fd2a85cd160851816bfce6871d944d885febf012713f06659c",
│ │ │ -                "sha256:9cb3032517f1627cc012dbc80a8ec976ae76d93ea2b5feaa9d2a5b8882597579",
│ │ │ -                "sha256:9cf4e8ad252f7c38dd1f676b46514f92dc0ebeb0db5552f5f403509705e24753",
│ │ │ -                "sha256:9d9153257a3f70d5f69edf2325357251ed20f772b12e593f3b3377b5f78e7ef8",
│ │ │ -                "sha256:a152f5f33d64a6be73f1d30c9cc82dfc73cec6477ec268e7c6e4c7d23c2d2291",
│ │ │ -                "sha256:a16418ecf1329f71df119e8a65f3aa68004a3f9383821edcb20f0702934d8087",
│ │ │ -                "sha256:a60332922359f920193b1d4826953c507a877b523b2395ad7bc716ddd386d866",
│ │ │ -                "sha256:a8d0fc946c784ff7f7c3742310cc8a57c5c6dc31631269876a88b809dbeff3d3",
│ │ │ -                "sha256:ab5de034a886f616a5668aa5d098af2b5385ed70142090e2a31bcbd0af0fdb3d",
│ │ │ -                "sha256:c22d3fe05ce11d3671297dc8973267daa0f938b93ec716e12e0f6dee81591dc1",
│ │ │ -                "sha256:c2ac1b08635a8cd4e0cbeaf6f5e922085908d48eb05d44c5ae9eabab148512ca",
│ │ │ -                "sha256:c512accbd6ff0270939b9ac214b84fb5ada5f0409c44298361b2f5e13f9aed9e",
│ │ │ -                "sha256:c75ffc45f25324e68ab238cb4b5c0a38cd1c3d7f1fb1f72b5541de469e2247db",
│ │ │ -                "sha256:c95a03c79bbe30eec3ec2b7f076074f4281526724c8685a42872974ef4d36b72",
│ │ │ -                "sha256:cadaeaba78750d58d3cc6ac4d1fd867da6fc73c88156b7a3212a3cd4819d679d",
│ │ │ -                "sha256:cd6056167405314a4dc3c173943f11249fa0f1b204f8b51ed4bde1a9cd1834dc",
│ │ │ -                "sha256:db72b07027db150f468fbada4d85b3b2729a3db39178abf5c543b784c1254539",
│ │ │ -                "sha256:df2c707231459e8a4028eabcd3cfc827befd635b3ef72eada84ab13b52e1574d",
│ │ │ -                "sha256:e62164b50f84e20601c1ff8eb55620d2ad25fb81b59e3cd776a1902527a788af",
│ │ │ -                "sha256:e696f0dd336161fca9adbb846875d40752e6eba585843c768935ba5c9960722b",
│ │ │ -                "sha256:eaa379fcd227ca235d04152ca6704c7cb55564116f8bc52545ff357628e10602",
│ │ │ -                "sha256:ebea339af930f8ca5d7a699b921106c6e29c617fe9606fa7baa043c1cdae326f",
│ │ │ -                "sha256:f4c39b0e3eac288fedc2b43055cfc2ca7a60362d0e5e87a637beac5d801ef478",
│ │ │ -                "sha256:f5057856d21e7586765171eac8b9fc3f7d44ef39425f85dbcccb13b3ebea806c",
│ │ │ -                "sha256:f6f45710b4459401609ebebdbcfb34515da4fc2aa886f95107f556ac69a9147e",
│ │ │ -                "sha256:f97e83fa6c25693c7a35de154681fcc257c1c41b38beb0304b9c4d2d9e164479",
│ │ │ -                "sha256:f9d0c5c045a3ca9bedfc35dca8526798eb91a07aa7a2c0fee134c6c6f321cbd7",
│ │ │ -                "sha256:ff6f3db31555657f3163b15a6b7c6938d08df7adbfc9dd13d9d19edad678f1e8"
│ │ │ +                "sha256:04afa6387e2b282cf78ff3dbce20f0cc071c12dc8f685bd40960cc68644cfea6",
│ │ │ +                "sha256:04eefcee095f58eaabe6dc3cc2262f3bcd776d2c67005880894f447b3f2cb9c1",
│ │ │ +                "sha256:0be65ccf618c1e7ac9b849c315cc2e8a8751d9cfdaa43027d4f6624bd587ab7e",
│ │ │ +                "sha256:0c95f12b74681e9ae127728f7e5409cbbef9cd914d5896ef238cc779b8152373",
│ │ │ +                "sha256:0ca564606d2caafb0abe6d1b5311c2649e8071eb241b2d64e75a0d0065107e62",
│ │ │ +                "sha256:10c93628d7497c81686e8e5e557aafa78f230cd9e77dd0c40032ef90c18f2230",
│ │ │ +                "sha256:11d117e6c63e8f495412d37e7dc2e2fff09c34b2d09dbe2bee3c6229577818be",
│ │ │ +                "sha256:11d3bcb7be35e7b1bba2c23beedac81ee893ac9871d0ba79effc7fc01167db6c",
│ │ │ +                "sha256:12a2b561af122e3d94cdb97fe6fb2bb2b82cef0cdca131646fdb940a1eda04f0",
│ │ │ +                "sha256:12d1a39aa6b8c6f6248bb54550efcc1c38ce0d8096a146638fd4738e42284448",
│ │ │ +                "sha256:1435ae15108b1cb6fffbcea2af3d468683b7afed0169ad718451f8db5d1aff6f",
│ │ │ +                "sha256:1c60b9c202d00052183c9be85e5eaf18a4ada0a47d188a83c8f5c5b23252f649",
│ │ │ +                "sha256:1e8fcdd8f672a1c4fc8d0bd3a2b576b152d2a349782d1eb0f6b8e52e9954731d",
│ │ │ +                "sha256:20064ead0717cf9a73a6d1e779b23d149b53daf971169289ed2ed43a71e8d3b0",
│ │ │ +                "sha256:21fa558996782fc226b529fdd2ed7866c2c6ec91cee82735c98a197fae39f706",
│ │ │ +                "sha256:22908891a380d50738e1f978667536f6c6b526a2064156203d418f4856d6e86a",
│ │ │ +                "sha256:3160a0fd9754aab7d47f95a6b63ab355388d890163eb03b2d2b87ab0a30cfa59",
│ │ │ +                "sha256:322102cdf1ab682ecc7d9b1c5eed4ec59657a65e1c146a0da342b78f4112db23",
│ │ │ +                "sha256:34e0a2f9c370eb95597aae63bf85eb5e96826d81e3dcf88b8886012906f509b5",
│ │ │ +                "sha256:3573d376454d956553c356df45bb824262c397c6e26ce43e8203c4c540ee0acb",
│ │ │ +                "sha256:3747443b6a904001473370d7810aa19c3a180ccd52a7157aacc264a5ac79265e",
│ │ │ +                "sha256:38e812a197bf8e71a59fe55b757a84c1f946d0ac114acafaafaf21667a7e169e",
│ │ │ +                "sha256:3a06f32c9634a8705f4ca9946d667609f52cf130d5548881401f1eb2c39b1e2c",
│ │ │ +                "sha256:3a5fc78f9e3f501a1614a98f7c54d3969f3ad9bba8ba3d9b438c3bc5d047dd28",
│ │ │ +                "sha256:3d9098b479e78c85080c98e1e35ff40b4a31d8953102bb0fd7d1b6f8a2111a3d",
│ │ │ +                "sha256:3dc5b6a8ecfdc5748a7e429782598e4f17ef378e3e272eeb1340ea57c9109f41",
│ │ │ +                "sha256:4155b51ae05ed47199dc5b2a4e62abccb274cee6b01da5b895099b61b1982974",
│ │ │ +                "sha256:49919f8400b5e49e961f320c735388ee686a62327e773fa5b3ce6721f7e785ce",
│ │ │ +                "sha256:53d0a3fa5f8af98a1e261de6a3943ca631c526635eb5817a87a59d9a57ebf48f",
│ │ │ +                "sha256:5f008525e02908b20e04707a4f704cd286d94718f48bb33edddc7d7b584dddc1",
│ │ │ +                "sha256:628c985afb2c7d27a4800bfb609e03985aaecb42f955049957814e0491d4006d",
│ │ │ +                "sha256:65ed923f84a6844de5fd29726b888e58c62820e0769b76565480e1fdc3d062f8",
│ │ │ +                "sha256:6734e606355834f13445b6adc38b53c0fd45f1a56a9ba06c2058f86893ae8017",
│ │ │ +                "sha256:6baf0baf0d5d265fa7944feb9f7451cc316bfe30e8df1a61b1bb08577c554f31",
│ │ │ +                "sha256:6f4f4668e1831850ebcc2fd0b1cd11721947b6dc7c00bf1c6bd3c929ae14f2c7",
│ │ │ +                "sha256:6f5c2e7bc8a4bf7c426599765b1bd33217ec84023033672c1e9a8b35eaeaaaf8",
│ │ │ +                "sha256:6f6c7a8a57e9405cad7485f4c9d3172ae486cfef1344b5ddd8e5239582d7355e",
│ │ │ +                "sha256:7381c66e0561c5757ffe616af869b916c8b4e42b367ab29fedc98481d1e74e14",
│ │ │ +                "sha256:73dc03a6a7e30b7edc5b01b601e53e7fc924b04e1835e8e407c12c037e81adbd",
│ │ │ +                "sha256:74db0052d985cf37fa111828d0dd230776ac99c740e1a758ad99094be4f1803d",
│ │ │ +                "sha256:75f2568b4189dda1c567339b48cba4ac7384accb9c2a7ed655cd86b04055c795",
│ │ │ +                "sha256:78cacd03e79d009d95635e7d6ff12c21eb89b894c354bd2b2ed0b4763373693b",
│ │ │ +                "sha256:80d1543d58bd3d6c271b66abf454d437a438dff01c3e62fdbcd68f2a11310d4b",
│ │ │ +                "sha256:830d2948a5ec37c386d3170c483063798d7879037492540f10a475e3fd6f244b",
│ │ │ +                "sha256:891cf9b48776b5c61c700b55a598621fdb7b1e301a550365571e9624f270c203",
│ │ │ +                "sha256:8f25e17ab3039b05f762b0a55ae0b3632b2e073d9c8fc88e89aca31a6198e88f",
│ │ │ +                "sha256:9a3267620866c9d17b959a84dd0bd2d45719b817245e49371ead79ed4f710d19",
│ │ │ +                "sha256:a04f86f41a8916fe45ac5024ec477f41f886b3c435da2d4e3d2709b22ab02af1",
│ │ │ +                "sha256:aaf53a6cebad0eae578f062c7d462155eada9c172bd8c4d250b8c1d8eb7f916a",
│ │ │ +                "sha256:abc1185d79f47c0a7aaf7e2412a0eb2c03b724581139193d2d82b3ad8cbb00ac",
│ │ │ +                "sha256:ac0aa6cd53ab9a31d397f8303f92c42f534693528fafbdb997c82bae6e477ad9",
│ │ │ +                "sha256:ac3775e3311661d4adace3697a52ac0bab17edd166087d493b52d4f4f553f9f0",
│ │ │ +                "sha256:b06f0d3bf045158d2fb8837c5785fe9ff9b8c93358be64461a1089f5da983137",
│ │ │ +                "sha256:b116502087ce8a6b7a5f1814568ccbd0e9f6cfd99948aa59b0e241dc57cf739f",
│ │ │ +                "sha256:b82fab78e0b1329e183a65260581de4375f619167478dddab510c6c6fb04d9b6",
│ │ │ +                "sha256:bd7163182133c0c7701b25e604cf1611c0d87712e56e88e7ee5d72deab3e76b5",
│ │ │ +                "sha256:c36bcbc0d5174a80d6cccf43a0ecaca44e81d25be4b7f90f0ed7bcfbb5a00909",
│ │ │ +                "sha256:c3af8e0f07399d3176b179f2e2634c3ce9c1301379a6b8c9c9aeecd481da494f",
│ │ │ +                "sha256:c84132a54c750fda57729d1e2599bb598f5fa0344085dbde5003ba429a4798c0",
│ │ │ +                "sha256:cb7b2ab0188829593b9de646545175547a70d9a6e2b63bf2cd87a0a391599324",
│ │ │ +                "sha256:cca4def576f47a09a943666b8f829606bcb17e2bc2d5911a46c8f8da45f56755",
│ │ │ +                "sha256:cf6511efa4801b9b38dc5546d7547d5b5c6ef4b081c60b23e4d941d0eba9cbeb",
│ │ │ +                "sha256:d16fd5252f883eb074ca55cb622bc0bee49b979ae4e8639fff6ca3ff44f9f854",
│ │ │ +                "sha256:d2686f91611f9e17f4548dbf050e75b079bbc2a82be565832bc8ea9047b61c8c",
│ │ │ +                "sha256:d7fc3fca01da18fbabe4625d64bb612b533533ed10045a2ac3dd194bfa656b60",
│ │ │ +                "sha256:dd5653e67b149503c68c4018bf07e42eeed6b4e956b24c00ccdf93ac79cdff84",
│ │ │ +                "sha256:de5695a6f1d8340b12a5d6d4484290ee74d61e467c39ff03b39e30df62cf83a0",
│ │ │ +                "sha256:e0ac8959c929593fee38da1c2b64ee9778733cdf03c482c9ff1d508b6b593b2b",
│ │ │ +                "sha256:e1b25e3ad6c909f398df8921780d6a3d120d8c09466720226fc621605b6f92b1",
│ │ │ +                "sha256:e633940f28c1e913615fd624fcdd72fdba807bf53ea6925d6a588e84e1151531",
│ │ │ +                "sha256:e89df2958e5159b811af9ff0f92614dabf4ff617c03a4c1c6ff53bf1c399e0e1",
│ │ │ +                "sha256:ea9f9c6034ea2d93d9147818f17c2a0860d41b71c38b9ce4d55f21b6f9165a11",
│ │ │ +                "sha256:f645caaf0008bacf349875a974220f1f1da349c5dbe7c4ec93048cdc785a3326",
│ │ │ +                "sha256:f8303414c7b03f794347ad062c0516cee0e15f7a612abd0ce1e25caf6ceb47df",
│ │ │ +                "sha256:fca62a8301b605b954ad2e9c3666f9d97f63872aa4efcae5492baca2056b74ab"
│ │ │              ],
│ │ │ -            "version": "==3.0.1"
│ │ │ +            "markers": "python_full_version >= '3.7.0'",
│ │ │ +            "version": "==3.1.0"
│ │ │          },
│ │ │          "click": {
│ │ │              "hashes": [
│ │ │                  "sha256:7682dc8afb30297001674575ea00d1814d808d6a36af415a82bd481d37ba7b8e",
│ │ │                  "sha256:bb4d8133cb15a609f44e8213d9b391b0809795062913b383c62be0ee95b1db48"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ @@ -200,50 +188,46 @@
│ │ │                  "sha256:a7a8c6ab7daade85c3f329931a807c8aee750a2494363934f8ea84d8a54c87ea",
│ │ │                  "sha256:d808d7e04e6f81fbb23d5ac2cd50e69ccbee58eaf9360eb89ede22d93216a314"
│ │ │              ],
│ │ │              "version": "==5.0.8"
│ │ │          },
│ │ │          "cryptography": {
│ │ │              "hashes": [
│ │ │ -                "sha256:0f8da300b5c8af9f98111ffd512910bc792b4c77392a9523624680f7956a99d4",
│ │ │ -                "sha256:35f7c7d015d474f4011e859e93e789c87d21f6f4880ebdc29896a60403328f1f",
│ │ │ -                "sha256:4789d1e3e257965e960232345002262ede4d094d1a19f4d3b52e48d4d8f3b885",
│ │ │ -                "sha256:5aa67414fcdfa22cf052e640cb5ddc461924a045cacf325cd164e65312d99502",
│ │ │ -                "sha256:5d2d8b87a490bfcd407ed9d49093793d0f75198a35e6eb1a923ce1ee86c62b41",
│ │ │ -                "sha256:6687ef6d0a6497e2b58e7c5b852b53f62142cfa7cd1555795758934da363a965",
│ │ │ -                "sha256:6f8ba7f0328b79f08bdacc3e4e66fb4d7aab0c3584e0bd41328dce5262e26b2e",
│ │ │ -                "sha256:706843b48f9a3f9b9911979761c91541e3d90db1ca905fd63fee540a217698bc",
│ │ │ -                "sha256:807ce09d4434881ca3a7594733669bd834f5b2c6d5c7e36f8c00f691887042ad",
│ │ │ -                "sha256:83e17b26de248c33f3acffb922748151d71827d6021d98c70e6c1a25ddd78505",
│ │ │ -                "sha256:96f1157a7c08b5b189b16b47bc9db2332269d6680a196341bf30046330d15388",
│ │ │ -                "sha256:aec5a6c9864be7df2240c382740fcf3b96928c46604eaa7f3091f58b878c0bb6",
│ │ │ -                "sha256:b0afd054cd42f3d213bf82c629efb1ee5f22eba35bf0eec88ea9ea7304f511a2",
│ │ │ -                "sha256:c5caeb8188c24888c90b5108a441c106f7faa4c4c075a2bcae438c6e8ca73cef",
│ │ │ -                "sha256:ced4e447ae29ca194449a3f1ce132ded8fcab06971ef5f618605aacaa612beac",
│ │ │ -                "sha256:d1f6198ee6d9148405e49887803907fe8962a23e6c6f83ea7d98f1c0de375695",
│ │ │ -                "sha256:e124352fd3db36a9d4a21c1aa27fd5d051e621845cb87fb851c08f4f75ce8be6",
│ │ │ -                "sha256:e422abdec8b5fa8462aa016786680720d78bdce7a30c652b7fadf83a4ba35336",
│ │ │ -                "sha256:ef8b72fa70b348724ff1218267e7f7375b8de4e8194d1636ee60510aae104cd0",
│ │ │ -                "sha256:f0c64d1bd842ca2633e74a1a28033d139368ad959872533b1bab8c80e8240a0c",
│ │ │ -                "sha256:f24077a3b5298a5a06a8e0536e3ea9ec60e4c7ac486755e5fb6e6ea9b3500106",
│ │ │ -                "sha256:fdd188c8a6ef8769f148f88f859884507b954cc64db6b52f66ef199bb9ad660a",
│ │ │ -                "sha256:fe913f20024eb2cb2f323e42a64bdf2911bb9738a15dba7d3cce48151034e3a8"
│ │ │ +                "sha256:0a4e3406cfed6b1f6d6e87ed243363652b2586b2d917b0609ca4f97072994405",
│ │ │ +                "sha256:1e0af458515d5e4028aad75f3bb3fe7a31e46ad920648cd59b64d3da842e4356",
│ │ │ +                "sha256:2803f2f8b1e95f614419926c7e6f55d828afc614ca5ed61543877ae668cc3472",
│ │ │ +                "sha256:28d63d75bf7ae4045b10de5413fb1d6338616e79015999ad9cf6fc538f772d41",
│ │ │ +                "sha256:32057d3d0ab7d4453778367ca43e99ddb711770477c4f072a51b3ca69602780a",
│ │ │ +                "sha256:3a4805a4ca729d65570a1b7cac84eac1e431085d40387b7d3bbaa47e39890b88",
│ │ │ +                "sha256:63dac2d25c47f12a7b8aa60e528bfb3c51c5a6c5a9f7c86987909c6c79765554",
│ │ │ +                "sha256:650883cc064297ef3676b1db1b7b1df6081794c4ada96fa457253c4cc40f97db",
│ │ │ +                "sha256:6f2bbd72f717ce33100e6467572abaedc61f1acb87b8d546001328d7f466b778",
│ │ │ +                "sha256:7c872413353c70e0263a9368c4993710070e70ab3e5318d85510cc91cce77e7c",
│ │ │ +                "sha256:918cb89086c7d98b1b86b9fdb70c712e5a9325ba6f7d7cfb509e784e0cfc6917",
│ │ │ +                "sha256:9618a87212cb5200500e304e43691111570e1f10ec3f35569fdfcd17e28fd797",
│ │ │ +                "sha256:a805a7bce4a77d51696410005b3e85ae2839bad9aa38894afc0aa99d8e0c3160",
│ │ │ +                "sha256:cc3a621076d824d75ab1e1e530e66e7e8564e357dd723f2533225d40fe35c60c",
│ │ │ +                "sha256:cd033d74067d8928ef00a6b1327c8ea0452523967ca4463666eeba65ca350d4c",
│ │ │ +                "sha256:cf91e428c51ef692b82ce786583e214f58392399cf65c341bc7301d096fa3ba2",
│ │ │ +                "sha256:d36bbeb99704aabefdca5aee4eba04455d7a27ceabd16f3b3ba9bdcc31da86c4",
│ │ │ +                "sha256:d8aa3609d337ad85e4eb9bb0f8bcf6e4409bfb86e706efa9a027912169e89122",
│ │ │ +                "sha256:f5d7b79fa56bc29580faafc2ff736ce05ba31feaa9d4735048b0de7d9ceb2b94"
│ │ │              ],
│ │ │ -            "version": "==39.0.1"
│ │ │ +            "version": "==40.0.1"
│ │ │          },
│ │ │          "dynaconf": {
│ │ │              "extras": [
│ │ │                  "ini"
│ │ │              ],
│ │ │              "hashes": [
│ │ │ -                "sha256:87e0b3b12b5db9e8fb465e1f8c7fdb926cd2ec5b6d88aa7f821f316df93fb165",
│ │ │ -                "sha256:d9cfb50fd4a71a543fd23845d4f585b620b6ff6d9d3cc1825c614f7b2097cb39"
│ │ │ +                "sha256:11a60bcd735f82b8a47b288f99e4ffbbd08c6c130a7be93c5d03e93fc260a5e1",
│ │ │ +                "sha256:a79d7b3ad4a35af9b576c49f11cd3b23a1b04b87b63a4e9f92cc82f2b0cafeeb"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==3.1.11"
│ │ │ +            "version": "==3.1.12"
│ │ │          },
│ │ │          "greenlet": {
│ │ │              "hashes": [
│ │ │                  "sha256:03a8f4f3430c3b3ff8d10a2a86028c660355ab637cee9333d63d66b56f09d52a",
│ │ │                  "sha256:0bf60faf0bc2468089bdc5edd10555bab6e85152191df713e2ab1fcc86382b5a",
│ │ │                  "sha256:18a7f18b82b52ee85322d7a7874e676f34ab319b9f8cce5de06067384aa8ff43",
│ │ │                  "sha256:18e98fb3de7dba1c0a852731c3070cf022d14f0d68b4c87a19cc1016f3bb8b33",
│ │ │ @@ -337,30 +321,30 @@
│ │ │                  "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │              "version": "==0.1.2"
│ │ │          },
│ │ │          "psycopg2": {
│ │ │              "hashes": [
│ │ │ -                "sha256:093e3894d2d3c592ab0945d9eba9d139c139664dcf83a1c440b8a7aa9bb21955",
│ │ │ -                "sha256:190d51e8c1b25a47484e52a79638a8182451d6f6dff99f26ad9bd81e5359a0fa",
│ │ │ -                "sha256:1a5c7d7d577e0eabfcf15eb87d1e19314c8c4f0e722a301f98e0e3a65e238b4e",
│ │ │ -                "sha256:1e5a38aa85bd660c53947bd28aeaafb6a97d70423606f1ccb044a03a1203fe4a",
│ │ │ -                "sha256:322fd5fca0b1113677089d4ebd5222c964b1760e361f151cbb2706c4912112c5",
│ │ │ -                "sha256:4cb9936316d88bfab614666eb9e32995e794ed0f8f6b3b718666c22819c1d7ee",
│ │ │ -                "sha256:920bf418000dd17669d2904472efeab2b20546efd0548139618f8fa305d1d7ad",
│ │ │ -                "sha256:922cc5f0b98a5f2b1ff481f5551b95cd04580fd6f0c72d9b22e6c0145a4840e0",
│ │ │ -                "sha256:a5246d2e683a972e2187a8714b5c2cf8156c064629f9a9b1a873c1730d9e245a",
│ │ │ -                "sha256:b9ac1b0d8ecc49e05e4e182694f418d27f3aedcfca854ebd6c05bb1cffa10d6d",
│ │ │ -                "sha256:d3ef67e630b0de0779c42912fe2cbae3805ebaba30cda27fea2a3de650a9414f",
│ │ │ -                "sha256:f5b6320dbc3cf6cfb9f25308286f9f7ab464e65cfb105b64cc9c52831748ced2",
│ │ │ -                "sha256:fc04dd5189b90d825509caa510f20d1d504761e78b8dfb95a0ede180f71d50e5"
│ │ │ +                "sha256:11aca705ec888e4f4cea97289a0bf0f22a067a32614f6ef64fcf7b8bfbc53744",
│ │ │ +                "sha256:1861a53a6a0fd248e42ea37c957d36950da00266378746588eab4f4b5649e95f",
│ │ │ +                "sha256:2362ee4d07ac85ff0ad93e22c693d0f37ff63e28f0615a16b6635a645f4b9214",
│ │ │ +                "sha256:36c941a767341d11549c0fbdbb2bf5be2eda4caf87f65dfcd7d146828bd27f39",
│ │ │ +                "sha256:53f4ad0a3988f983e9b49a5d9765d663bbe84f508ed655affdb810af9d0972ad",
│ │ │ +                "sha256:869776630c04f335d4124f120b7fb377fe44b0a7645ab3c34b4ba42516951889",
│ │ │ +                "sha256:a8ad4a47f42aa6aec8d061fdae21eaed8d864d4bb0f0cade5ad32ca16fcd6258",
│ │ │ +                "sha256:b81fcb9ecfc584f661b71c889edeae70bae30d3ef74fa0ca388ecda50b1222b7",
│ │ │ +                "sha256:d24ead3716a7d093b90b27b3d73459fe8cd90fd7065cf43b3c40966221d8c394",
│ │ │ +                "sha256:ded2faa2e6dfb430af7713d87ab4abbfc764d8d7fb73eafe96a24155f906ebf5",
│ │ │ +                "sha256:f15158418fd826831b28585e2ab48ed8df2d0d98f502a2b4fe619e7d5ca29011",
│ │ │ +                "sha256:f75001a1cbbe523e00b0ef896a5a1ada2da93ccd752b7636db5a99bc57c44494",
│ │ │ +                "sha256:f7a7a5ee78ba7dc74265ba69e010ae89dae635eea0e97b055fb641a01a31d2b1"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==2.9.5"
│ │ │ +            "version": "==2.9.6"
│ │ │          },
│ │ │          "pycparser": {
│ │ │              "hashes": [
│ │ │                  "sha256:8ee45429555515e1f6b185e78100aea234072576aa43ab53aefcae078162fca9",
│ │ │                  "sha256:e644fdec12f7872f86c58ff790da456218b10f863970249516d60a5eaca77206"
│ │ │              ],
│ │ │              "version": "==2.21"
│ │ │ @@ -395,93 +379,93 @@
│ │ │                  "sha256:98b1b2782e3c6c4904938b84c0eb932721069dfdb9134313beff7c83c2df24bf"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │              "version": "==2.28.2"
│ │ │          },
│ │ │          "rich": {
│ │ │              "hashes": [
│ │ │ -                "sha256:125d96d20c92b946b983d0d392b84ff945461e5a06d3867e9f9e575f8697b67f",
│ │ │ -                "sha256:8aa57747f3fc3e977684f0176a88e789be314a99f99b43b75d1e9cb5dc6db9e9"
│ │ │ +                "sha256:540c7d6d26a1178e8e8b37e9ba44573a3cd1464ff6348b99ee7061b95d1c6333",
│ │ │ +                "sha256:dc84400a9d842b3a9c5ff74addd8eb798d155f36c1c91303888e0a66850d2a15"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==13.3.1"
│ │ │ +            "version": "==13.3.3"
│ │ │          },
│ │ │          "rich-click": {
│ │ │              "hashes": [
│ │ │                  "sha256:0fcf4d1a09029d79322dd814ab0b2e66ac183633037561881d45abae8a161d95",
│ │ │                  "sha256:f8ff96693ec6e261d1544e9f7d9a5811c5ef5d74c8adb4978430fc0dac16777e"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │              "version": "==1.6.1"
│ │ │          },
│ │ │          "securesystemslib": {
│ │ │              "extras": [
│ │ │                  "crypto"
│ │ │              ],
│ │ │              "hashes": [
│ │ │ -                "sha256:41c7b25c52dc0bafe774413b5738bbf4431f094e72a091e83d9921901972ae4c",
│ │ │ -                "sha256:a8fa49831d6a7e48f81050984ddfac3713af0c326f558727113533edb5ca8eac"
│ │ │ +                "sha256:27fab4aae9adaf82530dc58f8e85a546f637d5ec5c5ef00d261689985420a70b",
│ │ │ +                "sha256:7ba326a41f980b3897356663144f6091531bf3d4e8333b821164526ce8e9f48d"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==0.26.0"
│ │ │ +            "version": "==0.27.0"
│ │ │          },
│ │ │          "six": {
│ │ │              "hashes": [
│ │ │                  "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926",
│ │ │                  "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"
│ │ │              ],
│ │ │              "markers": "python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'",
│ │ │              "version": "==1.16.0"
│ │ │          },
│ │ │          "sqlalchemy": {
│ │ │              "hashes": [
│ │ │ -                "sha256:011ef3c33f30bae5637c575f30647e0add98686642d237f0c3a1e3d9b35747fa",
│ │ │ -                "sha256:0adca8a3ca77234a142c5afed29322fb501921f13d1d5e9fa4253450d786c160",
│ │ │ -                "sha256:1644c603558590f465b3fa16e4557d87d3962bc2c81fd7ea85b582ecf4676b31",
│ │ │ -                "sha256:2267c004e78e291bba0dc766a9711c389649cf3e662cd46eec2bc2c238c637bd",
│ │ │ -                "sha256:25e4e54575f9d2af1eab82d3a470fca27062191c48ee57b6386fe09a3c0a6a33",
│ │ │ -                "sha256:2a2f9120eb32190bdba31d1022181ef08f257aed4f984f3368aa4e838de72bc0",
│ │ │ -                "sha256:2c82395e2925639e6d320592943608070678e7157bd1db2672a63be9c7889434",
│ │ │ -                "sha256:3f927340b37fe65ec42e19af7ce15260a73e11c6b456febb59009bfdfec29a35",
│ │ │ -                "sha256:54aa9f40d88728dd058e951eeb5ecc55241831ba4011e60c641738c1da0146b7",
│ │ │ -                "sha256:57dcd9eed52413f7270b22797aa83c71b698db153d1541c1e83d45ecdf8e95e7",
│ │ │ -                "sha256:582053571125895d008d4b8d9687d12d4bd209c076cdbab3504da307e2a0a2bd",
│ │ │ -                "sha256:59cf0cdb29baec4e074c7520d7226646a8a8f856b87d8300f3e4494901d55235",
│ │ │ -                "sha256:6363697c938b9a13e07f1bc2cd433502a7aa07efd55b946b31d25b9449890621",
│ │ │ -                "sha256:662a79e80f3e9fe33b7861c19fedf3d8389fab2413c04bba787e3f1139c22188",
│ │ │ -                "sha256:67901b91bf5821482fcbe9da988cb16897809624ddf0fde339cd62365cc50032",
│ │ │ -                "sha256:679b9bd10bb32b8d3befed4aad4356799b6ec1bdddc0f930a79e41ba5b084124",
│ │ │ -                "sha256:738c80705e11c1268827dbe22c01162a9cdc98fc6f7901b429a1459db2593060",
│ │ │ -                "sha256:77a380bf8721b416782c763e0ff66f80f3b05aee83db33ddfc0eac20bcb6791f",
│ │ │ -                "sha256:77d05773d5c79f2d3371d81697d54ee1b2c32085ad434ce9de4482e457ecb018",
│ │ │ -                "sha256:817aab80f7e8fe581696dae7aaeb2ceb0b7ea70ad03c95483c9115970d2a9b00",
│ │ │ -                "sha256:81f1ea264278fcbe113b9a5840f13a356cb0186e55b52168334124f1cd1bc495",
│ │ │ -                "sha256:8a88b32ce5b69d18507ffc9f10401833934ebc353c7b30d1e056023c64f0a736",
│ │ │ -                "sha256:8ff0a7c669ec7cdb899eae7e622211c2dd8725b82655db2b41740d39e3cda466",
│ │ │ -                "sha256:918c2b553e3c78268b187f70983c9bc6f91e451a4f934827e9c919e03d258bd7",
│ │ │ -                "sha256:954f1ad73b78ea5ba5a35c89c4a5dfd0f3a06c17926503de19510eb9b3857bde",
│ │ │ -                "sha256:95a18e1a6af2114dbd9ee4f168ad33070d6317e11bafa28d983cc7b585fe900b",
│ │ │ -                "sha256:9946ee503962859f1a9e1ad17dff0859269b0cb453686747fe87f00b0e030b34",
│ │ │ -                "sha256:9a7ecaf90fe9ec8e45c86828f4f183564b33c9514e08667ca59e526fea63893a",
│ │ │ -                "sha256:a42e6831e82dfa6d16b45f0c98c69e7b0defc64d76213173456355034450c414",
│ │ │ -                "sha256:b01dce097cf6f145da131a53d4cce7f42e0bfa9ae161dd171a423f7970d296d0",
│ │ │ -                "sha256:b5deafb4901618b3f98e8df7099cd11edd0d1e6856912647e28968b803de0dae",
│ │ │ -                "sha256:b67d6e626caa571fb53accaac2fba003ef4f7317cb3481e9ab99dad6e89a70d6",
│ │ │ -                "sha256:c1e8edc49b32483cd5d2d015f343e16be7dfab89f4aaf66b0fa6827ab356880d",
│ │ │ -                "sha256:c621f05859caed5c0aab032888a3d3bde2cae3988ca151113cbecf262adad976",
│ │ │ -                "sha256:ce54965a94673a0ebda25e7c3a05bf1aa74fd78cc452a1a710b704bf73fb8402",
│ │ │ -                "sha256:d8efdda920988bcade542f53a2890751ff680474d548f32df919a35a21404e3f",
│ │ │ -                "sha256:dc7b9f55c2f72c13b2328b8a870ff585c993ba1b5c155ece5c9d3216fa4b18f6",
│ │ │ -                "sha256:dd801375f19a6e1f021dabd8b1714f2fdb91cbc835cd13b5dd0bd7e9860392d7",
│ │ │ -                "sha256:f342057422d6bcfdd4996e34cd5c7f78f7e500112f64b113f334cdfc6a0c593d",
│ │ │ -                "sha256:f696828784ab2c07b127bfd2f2d513f47ec58924c29cff5b19806ac37acee31c",
│ │ │ -                "sha256:fdb2686eb01f670cdc6c43f092e333ff08c1cf0b646da5256c1237dc4ceef4ae"
│ │ │ +                "sha256:07950fc82f844a2de67ddb4e535f29b65652b4d95e8b847823ce66a6d540a41d",
│ │ │ +                "sha256:0a865b5ec4ba24f57c33b633b728e43fde77b968911a6046443f581b25d29dd9",
│ │ │ +                "sha256:0b49f1f71d7a44329a43d3edd38cc5ee4c058dfef4487498393d16172007954b",
│ │ │ +                "sha256:13f984a190d249769a050634b248aef8991acc035e849d02b634ea006c028fa8",
│ │ │ +                "sha256:1b69666e25cc03c602d9d3d460e1281810109e6546739187044fc256c67941ef",
│ │ │ +                "sha256:1d06e119cf79a3d80ab069f064a07152eb9ba541d084bdaee728d8a6f03fd03d",
│ │ │ +                "sha256:246712af9fc761d6c13f4f065470982e175d902e77aa4218c9cb9fc9ff565a0c",
│ │ │ +                "sha256:34eb96c1de91d8f31e988302243357bef3f7785e1b728c7d4b98bd0c117dafeb",
│ │ │ +                "sha256:4c3020afb144572c7bfcba9d7cce57ad42bff6e6115dffcfe2d4ae6d444a214f",
│ │ │ +                "sha256:4f759eccb66e6d495fb622eb7f4ac146ae674d829942ec18b7f5a35ddf029597",
│ │ │ +                "sha256:68ed381bc340b4a3d373dbfec1a8b971f6350139590c4ca3cb722fdb50035777",
│ │ │ +                "sha256:6b72dccc5864ea95c93e0a9c4e397708917fb450f96737b4a8395d009f90b868",
│ │ │ +                "sha256:6e84ab63d25d8564d7a8c05dc080659931a459ee27f6ed1cf4c91f292d184038",
│ │ │ +                "sha256:734805708632e3965c2c40081f9a59263c29ffa27cba9b02d4d92dfd57ba869f",
│ │ │ +                "sha256:78612edf4ba50d407d0eb3a64e9ec76e6efc2b5d9a5c63415d53e540266a230a",
│ │ │ +                "sha256:7e472e9627882f2d75b87ff91c5a2bc45b31a226efc7cc0a054a94fffef85862",
│ │ │ +                "sha256:865392a50a721445156809c1a6d6ab6437be70c1c2599f591a8849ed95d3c693",
│ │ │ +                "sha256:8d118e233f416d713aac715e2c1101e17f91e696ff315fc9efbc75b70d11e740",
│ │ │ +                "sha256:8d3ece5960b3e821e43a4927cc851b6e84a431976d3ffe02aadb96519044807e",
│ │ │ +                "sha256:93c78d42c14aa9a9e0866eacd5b48df40a50d0e2790ee377af7910d224afddcf",
│ │ │ +                "sha256:95719215e3ec7337b9f57c3c2eda0e6a7619be194a5166c07c1e599f6afc20fa",
│ │ │ +                "sha256:9838bd247ee42eb74193d865e48dd62eb50e45e3fdceb0fdef3351133ee53dcf",
│ │ │ +                "sha256:aa5c270ece17c0c0e0a38f2530c16b20ea05d8b794e46c79171a86b93b758891",
│ │ │ +                "sha256:ac6a0311fb21a99855953f84c43fcff4bdca27a2ffcc4f4d806b26b54b5cddc9",
│ │ │ +                "sha256:ad5363a1c65fde7b7466769d4261126d07d872fc2e816487ae6cec93da604b6b",
│ │ │ +                "sha256:b3e5864eba71a3718236a120547e52c8da2ccb57cc96cecd0480106a0c799c92",
│ │ │ +                "sha256:bbda1da8d541904ba262825a833c9f619e93cb3fd1156be0a5e43cd54d588dcd",
│ │ │ +                "sha256:c6e27189ff9aebfb2c02fd252c629ea58657e7a5ff1a321b7fc9c2bf6dc0b5f3",
│ │ │ +                "sha256:c8239ce63a90007bce479adf5460d48c1adae4b933d8e39a4eafecfc084e503c",
│ │ │ +                "sha256:d209594e68bec103ad5243ecac1b40bf5770c9ebf482df7abf175748a34f4853",
│ │ │ +                "sha256:d5327f54a9c39e7871fc532639616f3777304364a0bb9b89d6033ad34ef6c5f8",
│ │ │ +                "sha256:db4bd1c4792da753f914ff0b688086b9a8fd78bb9bc5ae8b6d2e65f176b81eb9",
│ │ │ +                "sha256:e4780be0f19e5894c17f75fc8de2fe1ae233ab37827125239ceb593c6f6bd1e2",
│ │ │ +                "sha256:e4a019f723b6c1e6b3781be00fb9e0844bc6156f9951c836ff60787cc3938d76",
│ │ │ +                "sha256:e62c4e762d6fd2901692a093f208a6a6575b930e9458ad58c2a7f080dd6132da",
│ │ │ +                "sha256:e730603cae5747bc6d6dece98b45a57d647ed553c8d5ecef602697b1c1501cf2",
│ │ │ +                "sha256:ebc4eeb1737a5a9bdb0c24f4c982319fa6edd23cdee27180978c29cbb026f2bd",
│ │ │ +                "sha256:ee2946042cc7851842d7a086a92b9b7b494cbe8c3e7e4627e27bc912d3a7655e",
│ │ │ +                "sha256:f005245e1cb9b8ca53df73ee85e029ac43155e062405015e49ec6187a2e3fb44",
│ │ │ +                "sha256:f49c5d3c070a72ecb96df703966c9678dda0d4cb2e2736f88d15f5e1203b4159",
│ │ │ +                "sha256:f61ab84956dc628c8dfe9d105b6aec38afb96adae3e5e7da6085b583ff6ea789"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==2.0.4"
│ │ │ +            "version": "==2.0.9"
│ │ │          },
│ │ │          "tuf": {
│ │ │              "hashes": [
│ │ │                  "sha256:1524b0fbd8504245f600f121daf86b8fdcb30df74410acc9655944c4868e461c",
│ │ │                  "sha256:76e7f2a7aced84466865fac2a7127b6085afae51d4328af896fb46f952dd3a53"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ @@ -493,19 +477,19 @@
│ │ │                  "sha256:fb33085c39dd998ac16d1431ebc293a8b3eedd00fd4a32de0ff79002c19511b4"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │              "version": "==4.5.0"
│ │ │          },
│ │ │          "urllib3": {
│ │ │              "hashes": [
│ │ │ -                "sha256:076907bf8fd355cde77728471316625a4d2f7e713c125f51953bb5b3eecf4f72",
│ │ │ -                "sha256:75edcdc2f7d85b137124a6c3c9fc3933cdeaa12ecb9a6a959f22797a0feca7e1"
│ │ │ +                "sha256:8a388717b9476f934a21484e8c8e61875ab60644d29b9b39e11e4b9dc1c6b305",
│ │ │ +                "sha256:aa751d169e23c7479ce47a0cb0da579e3ede798f994f5816a74e4f4500dcea42"
│ │ │              ],
│ │ │              "markers": "python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5'",
│ │ │ -            "version": "==1.26.14"
│ │ │ +            "version": "==1.26.15"
│ │ │          }
│ │ │      },
│ │ │      "develop": {
│ │ │          "alabaster": {
│ │ │              "hashes": [
│ │ │                  "sha256:1ee19aca801bbabb5ba3f5f258e4422dfa86f82f3e9cefb0859b283cdd7f62a3",
│ │ │                  "sha256:a27a4a084d5e690e16e01e03ad2b2e552c61a65469419b907243193de1a84ae2"
│ │ │ @@ -527,50 +511,50 @@
│ │ │                  "sha256:cc2d99999cd01d44420ae725a21c9e3711b3aadc7976d6147f622d8581963455"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │              "version": "==2.12.1"
│ │ │          },
│ │ │          "bandit": {
│ │ │              "hashes": [
│ │ │ -                "sha256:2d63a8c573417bae338962d4b9b06fbc6080f74ecd955a092849e1e65c717bd2",
│ │ │ -                "sha256:412d3f259dab4077d0e7f0c11f50f650cc7d10db905d98f6520a95a18049658a"
│ │ │ +                "sha256:75665181dc1e0096369112541a056c59d1c5f66f9bb74a8d686c3c362b83f549",
│ │ │ +                "sha256:bdfc739baa03b880c2d15d0431b31c658ffc348e907fe197e54e0389dd59e11e"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==1.7.4"
│ │ │ +            "version": "==1.7.5"
│ │ │          },
│ │ │          "black": {
│ │ │              "hashes": [
│ │ │ -                "sha256:0052dba51dec07ed029ed61b18183942043e00008ec65d5028814afaab9a22fd",
│ │ │ -                "sha256:0680d4380db3719ebcfb2613f34e86c8e6d15ffeabcf8ec59355c5e7b85bb555",
│ │ │ -                "sha256:121ca7f10b4a01fd99951234abdbd97728e1240be89fde18480ffac16503d481",
│ │ │ -                "sha256:162e37d49e93bd6eb6f1afc3e17a3d23a823042530c37c3c42eeeaf026f38468",
│ │ │ -                "sha256:2a951cc83ab535d248c89f300eccbd625e80ab880fbcfb5ac8afb5f01a258ac9",
│ │ │ -                "sha256:2bf649fda611c8550ca9d7592b69f0637218c2369b7744694c5e4902873b2f3a",
│ │ │ -                "sha256:382998821f58e5c8238d3166c492139573325287820963d2f7de4d518bd76958",
│ │ │ -                "sha256:49f7b39e30f326a34b5c9a4213213a6b221d7ae9d58ec70df1c4a307cf2a1580",
│ │ │ -                "sha256:57c18c5165c1dbe291d5306e53fb3988122890e57bd9b3dcb75f967f13411a26",
│ │ │ -                "sha256:7a0f701d314cfa0896b9001df70a530eb2472babb76086344e688829efd97d32",
│ │ │ -                "sha256:8178318cb74f98bc571eef19068f6ab5613b3e59d4f47771582f04e175570ed8",
│ │ │ -                "sha256:8b70eb40a78dfac24842458476135f9b99ab952dd3f2dab738c1881a9b38b753",
│ │ │ -                "sha256:9880d7d419bb7e709b37e28deb5e68a49227713b623c72b2b931028ea65f619b",
│ │ │ -                "sha256:9afd3f493666a0cd8f8df9a0200c6359ac53940cbde049dcb1a7eb6ee2dd7074",
│ │ │ -                "sha256:a29650759a6a0944e7cca036674655c2f0f63806ddecc45ed40b7b8aa314b651",
│ │ │ -                "sha256:a436e7881d33acaf2536c46a454bb964a50eff59b21b51c6ccf5a40601fbef24",
│ │ │ -                "sha256:a59db0a2094d2259c554676403fa2fac3473ccf1354c1c63eccf7ae65aac8ab6",
│ │ │ -                "sha256:a8471939da5e824b891b25751955be52ee7f8a30a916d570a5ba8e0f2eb2ecad",
│ │ │ -                "sha256:b0bd97bea8903f5a2ba7219257a44e3f1f9d00073d6cc1add68f0beec69692ac",
│ │ │ -                "sha256:b6a92a41ee34b883b359998f0c8e6eb8e99803aa8bf3123bf2b2e6fec505a221",
│ │ │ -                "sha256:bb460c8561c8c1bec7824ecbc3ce085eb50005883a6203dcfb0122e95797ee06",
│ │ │ -                "sha256:bfffba28dc52a58f04492181392ee380e95262af14ee01d4bc7bb1b1c6ca8d27",
│ │ │ -                "sha256:c1c476bc7b7d021321e7d93dc2cbd78ce103b84d5a4cf97ed535fbc0d6660648",
│ │ │ -                "sha256:c91dfc2c2a4e50df0026f88d2215e166616e0c80e86004d0003ece0488db2739",
│ │ │ -                "sha256:e6663f91b6feca5d06f2ccd49a10f254f9298cc1f7f49c46e498a0771b507104"
│ │ │ +                "sha256:064101748afa12ad2291c2b91c960be28b817c0c7eaa35bec09cc63aa56493c5",
│ │ │ +                "sha256:0945e13506be58bf7db93ee5853243eb368ace1c08a24c65ce108986eac65915",
│ │ │ +                "sha256:11c410f71b876f961d1de77b9699ad19f939094c3a677323f43d7a29855fe326",
│ │ │ +                "sha256:1c7b8d606e728a41ea1ccbd7264677e494e87cf630e399262ced92d4a8dac940",
│ │ │ +                "sha256:1d06691f1eb8de91cd1b322f21e3bfc9efe0c7ca1f0e1eb1db44ea367dff656b",
│ │ │ +                "sha256:3238f2aacf827d18d26db07524e44741233ae09a584273aa059066d644ca7b30",
│ │ │ +                "sha256:32daa9783106c28815d05b724238e30718f34155653d4d6e125dc7daec8e260c",
│ │ │ +                "sha256:35d1381d7a22cc5b2be2f72c7dfdae4072a3336060635718cc7e1ede24221d6c",
│ │ │ +                "sha256:3a150542a204124ed00683f0db1f5cf1c2aaaa9cc3495b7a3b5976fb136090ab",
│ │ │ +                "sha256:48f9d345675bb7fbc3dd85821b12487e1b9a75242028adad0333ce36ed2a6d27",
│ │ │ +                "sha256:50cb33cac881766a5cd9913e10ff75b1e8eb71babf4c7104f2e9c52da1fb7de2",
│ │ │ +                "sha256:562bd3a70495facf56814293149e51aa1be9931567474993c7942ff7d3533961",
│ │ │ +                "sha256:67de8d0c209eb5b330cce2469503de11bca4085880d62f1628bd9972cc3366b9",
│ │ │ +                "sha256:6b39abdfb402002b8a7d030ccc85cf5afff64ee90fa4c5aebc531e3ad0175ddb",
│ │ │ +                "sha256:6f3c333ea1dd6771b2d3777482429864f8e258899f6ff05826c3a4fcc5ce3f70",
│ │ │ +                "sha256:714290490c18fb0126baa0fca0a54ee795f7502b44177e1ce7624ba1c00f2331",
│ │ │ +                "sha256:7c3eb7cea23904399866c55826b31c1f55bbcd3890ce22ff70466b907b6775c2",
│ │ │ +                "sha256:92c543f6854c28a3c7f39f4d9b7694f9a6eb9d3c5e2ece488c327b6e7ea9b266",
│ │ │ +                "sha256:a6f6886c9869d4daae2d1715ce34a19bbc4b95006d20ed785ca00fa03cba312d",
│ │ │ +                "sha256:a8a968125d0a6a404842fa1bf0b349a568634f856aa08ffaff40ae0dfa52e7c6",
│ │ │ +                "sha256:c7ab5790333c448903c4b721b59c0d80b11fe5e9803d8703e84dcb8da56fec1b",
│ │ │ +                "sha256:e114420bf26b90d4b9daa597351337762b63039752bdf72bf361364c1aa05925",
│ │ │ +                "sha256:e198cf27888ad6f4ff331ca1c48ffc038848ea9f031a3b40ba36aced7e22f2c8",
│ │ │ +                "sha256:ec751418022185b0c1bb7d7736e6933d40bbb14c14a0abcf9123d1b159f98dd4",
│ │ │ +                "sha256:f0bd2f4a58d6666500542b26354978218a9babcdc972722f4bf90779524515f3"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==23.1.0"
│ │ │ +            "version": "==23.3.0"
│ │ │          },
│ │ │          "build": {
│ │ │              "hashes": [
│ │ │                  "sha256:af266720050a66c893a6096a2f410989eeac74ff9a68ba194b3f6473e8e26171",
│ │ │                  "sha256:d5b71264afdb5951d6704482aac78de887c80691c52b88a9ad195983ca2c9269"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ @@ -606,104 +590,92 @@
│ │ │                  "sha256:362777fb014af596ad31334fde1e8c327dfdb076e1960d1694662d46a6917ab9"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │              "version": "==5.1.0"
│ │ │          },
│ │ │          "charset-normalizer": {
│ │ │              "hashes": [
│ │ │ -                "sha256:00d3ffdaafe92a5dc603cb9bd5111aaa36dfa187c8285c543be562e61b755f6b",
│ │ │ -                "sha256:024e606be3ed92216e2b6952ed859d86b4cfa52cd5bc5f050e7dc28f9b43ec42",
│ │ │ -                "sha256:0298eafff88c99982a4cf66ba2efa1128e4ddaca0b05eec4c456bbc7db691d8d",
│ │ │ -                "sha256:02a51034802cbf38db3f89c66fb5d2ec57e6fe7ef2f4a44d070a593c3688667b",
│ │ │ -                "sha256:083c8d17153ecb403e5e1eb76a7ef4babfc2c48d58899c98fcaa04833e7a2f9a",
│ │ │ -                "sha256:0a11e971ed097d24c534c037d298ad32c6ce81a45736d31e0ff0ad37ab437d59",
│ │ │ -                "sha256:0bf2dae5291758b6f84cf923bfaa285632816007db0330002fa1de38bfcb7154",
│ │ │ -                "sha256:0c0a590235ccd933d9892c627dec5bc7511ce6ad6c1011fdf5b11363022746c1",
│ │ │ -                "sha256:0f438ae3532723fb6ead77e7c604be7c8374094ef4ee2c5e03a3a17f1fca256c",
│ │ │ -                "sha256:109487860ef6a328f3eec66f2bf78b0b72400280d8f8ea05f69c51644ba6521a",
│ │ │ -                "sha256:11b53acf2411c3b09e6af37e4b9005cba376c872503c8f28218c7243582df45d",
│ │ │ -                "sha256:12db3b2c533c23ab812c2b25934f60383361f8a376ae272665f8e48b88e8e1c6",
│ │ │ -                "sha256:14e76c0f23218b8f46c4d87018ca2e441535aed3632ca134b10239dfb6dadd6b",
│ │ │ -                "sha256:16a8663d6e281208d78806dbe14ee9903715361cf81f6d4309944e4d1e59ac5b",
│ │ │ -                "sha256:292d5e8ba896bbfd6334b096e34bffb56161c81408d6d036a7dfa6929cff8783",
│ │ │ -                "sha256:2c03cc56021a4bd59be889c2b9257dae13bf55041a3372d3295416f86b295fb5",
│ │ │ -                "sha256:2e396d70bc4ef5325b72b593a72c8979999aa52fb8bcf03f701c1b03e1166918",
│ │ │ -                "sha256:2edb64ee7bf1ed524a1da60cdcd2e1f6e2b4f66ef7c077680739f1641f62f555",
│ │ │ -                "sha256:31a9ddf4718d10ae04d9b18801bd776693487cbb57d74cc3458a7673f6f34639",
│ │ │ -                "sha256:356541bf4381fa35856dafa6a965916e54bed415ad8a24ee6de6e37deccf2786",
│ │ │ -                "sha256:358a7c4cb8ba9b46c453b1dd8d9e431452d5249072e4f56cfda3149f6ab1405e",
│ │ │ -                "sha256:37f8febc8ec50c14f3ec9637505f28e58d4f66752207ea177c1d67df25da5aed",
│ │ │ -                "sha256:39049da0ffb96c8cbb65cbf5c5f3ca3168990adf3551bd1dee10c48fce8ae820",
│ │ │ -                "sha256:39cf9ed17fe3b1bc81f33c9ceb6ce67683ee7526e65fde1447c772afc54a1bb8",
│ │ │ -                "sha256:3ae1de54a77dc0d6d5fcf623290af4266412a7c4be0b1ff7444394f03f5c54e3",
│ │ │ -                "sha256:3b590df687e3c5ee0deef9fc8c547d81986d9a1b56073d82de008744452d6541",
│ │ │ -                "sha256:3e45867f1f2ab0711d60c6c71746ac53537f1684baa699f4f668d4c6f6ce8e14",
│ │ │ -                "sha256:3fc1c4a2ffd64890aebdb3f97e1278b0cc72579a08ca4de8cd2c04799a3a22be",
│ │ │ -                "sha256:4457ea6774b5611f4bed5eaa5df55f70abde42364d498c5134b7ef4c6958e20e",
│ │ │ -                "sha256:44ba614de5361b3e5278e1241fda3dc1838deed864b50a10d7ce92983797fa76",
│ │ │ -                "sha256:4a8fcf28c05c1f6d7e177a9a46a1c52798bfe2ad80681d275b10dcf317deaf0b",
│ │ │ -                "sha256:4b0d02d7102dd0f997580b51edc4cebcf2ab6397a7edf89f1c73b586c614272c",
│ │ │ -                "sha256:502218f52498a36d6bf5ea77081844017bf7982cdbe521ad85e64cabee1b608b",
│ │ │ -                "sha256:503e65837c71b875ecdd733877d852adbc465bd82c768a067badd953bf1bc5a3",
│ │ │ -                "sha256:5995f0164fa7df59db4746112fec3f49c461dd6b31b841873443bdb077c13cfc",
│ │ │ -                "sha256:59e5686dd847347e55dffcc191a96622f016bc0ad89105e24c14e0d6305acbc6",
│ │ │ -                "sha256:601f36512f9e28f029d9481bdaf8e89e5148ac5d89cffd3b05cd533eeb423b59",
│ │ │ -                "sha256:608862a7bf6957f2333fc54ab4399e405baad0163dc9f8d99cb236816db169d4",
│ │ │ -                "sha256:62595ab75873d50d57323a91dd03e6966eb79c41fa834b7a1661ed043b2d404d",
│ │ │ -                "sha256:70990b9c51340e4044cfc394a81f614f3f90d41397104d226f21e66de668730d",
│ │ │ -                "sha256:71140351489970dfe5e60fc621ada3e0f41104a5eddaca47a7acb3c1b851d6d3",
│ │ │ -                "sha256:72966d1b297c741541ca8cf1223ff262a6febe52481af742036a0b296e35fa5a",
│ │ │ -                "sha256:74292fc76c905c0ef095fe11e188a32ebd03bc38f3f3e9bcb85e4e6db177b7ea",
│ │ │ -                "sha256:761e8904c07ad053d285670f36dd94e1b6ab7f16ce62b9805c475b7aa1cffde6",
│ │ │ -                "sha256:772b87914ff1152b92a197ef4ea40efe27a378606c39446ded52c8f80f79702e",
│ │ │ -                "sha256:79909e27e8e4fcc9db4addea88aa63f6423ebb171db091fb4373e3312cb6d603",
│ │ │ -                "sha256:7e189e2e1d3ed2f4aebabd2d5b0f931e883676e51c7624826e0a4e5fe8a0bf24",
│ │ │ -                "sha256:7eb33a30d75562222b64f569c642ff3dc6689e09adda43a082208397f016c39a",
│ │ │ -                "sha256:81d6741ab457d14fdedc215516665050f3822d3e56508921cc7239f8c8e66a58",
│ │ │ -                "sha256:8499ca8f4502af841f68135133d8258f7b32a53a1d594aa98cc52013fff55678",
│ │ │ -                "sha256:84c3990934bae40ea69a82034912ffe5a62c60bbf6ec5bc9691419641d7d5c9a",
│ │ │ -                "sha256:87701167f2a5c930b403e9756fab1d31d4d4da52856143b609e30a1ce7160f3c",
│ │ │ -                "sha256:88600c72ef7587fe1708fd242b385b6ed4b8904976d5da0893e31df8b3480cb6",
│ │ │ -                "sha256:8ac7b6a045b814cf0c47f3623d21ebd88b3e8cf216a14790b455ea7ff0135d18",
│ │ │ -                "sha256:8b8af03d2e37866d023ad0ddea594edefc31e827fee64f8de5611a1dbc373174",
│ │ │ -                "sha256:8c7fe7afa480e3e82eed58e0ca89f751cd14d767638e2550c77a92a9e749c317",
│ │ │ -                "sha256:8eade758719add78ec36dc13201483f8e9b5d940329285edcd5f70c0a9edbd7f",
│ │ │ -                "sha256:911d8a40b2bef5b8bbae2e36a0b103f142ac53557ab421dc16ac4aafee6f53dc",
│ │ │ -                "sha256:93ad6d87ac18e2a90b0fe89df7c65263b9a99a0eb98f0a3d2e079f12a0735837",
│ │ │ -                "sha256:95dea361dd73757c6f1c0a1480ac499952c16ac83f7f5f4f84f0658a01b8ef41",
│ │ │ -                "sha256:9ab77acb98eba3fd2a85cd160851816bfce6871d944d885febf012713f06659c",
│ │ │ -                "sha256:9cb3032517f1627cc012dbc80a8ec976ae76d93ea2b5feaa9d2a5b8882597579",
│ │ │ -                "sha256:9cf4e8ad252f7c38dd1f676b46514f92dc0ebeb0db5552f5f403509705e24753",
│ │ │ -                "sha256:9d9153257a3f70d5f69edf2325357251ed20f772b12e593f3b3377b5f78e7ef8",
│ │ │ -                "sha256:a152f5f33d64a6be73f1d30c9cc82dfc73cec6477ec268e7c6e4c7d23c2d2291",
│ │ │ -                "sha256:a16418ecf1329f71df119e8a65f3aa68004a3f9383821edcb20f0702934d8087",
│ │ │ -                "sha256:a60332922359f920193b1d4826953c507a877b523b2395ad7bc716ddd386d866",
│ │ │ -                "sha256:a8d0fc946c784ff7f7c3742310cc8a57c5c6dc31631269876a88b809dbeff3d3",
│ │ │ -                "sha256:ab5de034a886f616a5668aa5d098af2b5385ed70142090e2a31bcbd0af0fdb3d",
│ │ │ -                "sha256:c22d3fe05ce11d3671297dc8973267daa0f938b93ec716e12e0f6dee81591dc1",
│ │ │ -                "sha256:c2ac1b08635a8cd4e0cbeaf6f5e922085908d48eb05d44c5ae9eabab148512ca",
│ │ │ -                "sha256:c512accbd6ff0270939b9ac214b84fb5ada5f0409c44298361b2f5e13f9aed9e",
│ │ │ -                "sha256:c75ffc45f25324e68ab238cb4b5c0a38cd1c3d7f1fb1f72b5541de469e2247db",
│ │ │ -                "sha256:c95a03c79bbe30eec3ec2b7f076074f4281526724c8685a42872974ef4d36b72",
│ │ │ -                "sha256:cadaeaba78750d58d3cc6ac4d1fd867da6fc73c88156b7a3212a3cd4819d679d",
│ │ │ -                "sha256:cd6056167405314a4dc3c173943f11249fa0f1b204f8b51ed4bde1a9cd1834dc",
│ │ │ -                "sha256:db72b07027db150f468fbada4d85b3b2729a3db39178abf5c543b784c1254539",
│ │ │ -                "sha256:df2c707231459e8a4028eabcd3cfc827befd635b3ef72eada84ab13b52e1574d",
│ │ │ -                "sha256:e62164b50f84e20601c1ff8eb55620d2ad25fb81b59e3cd776a1902527a788af",
│ │ │ -                "sha256:e696f0dd336161fca9adbb846875d40752e6eba585843c768935ba5c9960722b",
│ │ │ -                "sha256:eaa379fcd227ca235d04152ca6704c7cb55564116f8bc52545ff357628e10602",
│ │ │ -                "sha256:ebea339af930f8ca5d7a699b921106c6e29c617fe9606fa7baa043c1cdae326f",
│ │ │ -                "sha256:f4c39b0e3eac288fedc2b43055cfc2ca7a60362d0e5e87a637beac5d801ef478",
│ │ │ -                "sha256:f5057856d21e7586765171eac8b9fc3f7d44ef39425f85dbcccb13b3ebea806c",
│ │ │ -                "sha256:f6f45710b4459401609ebebdbcfb34515da4fc2aa886f95107f556ac69a9147e",
│ │ │ -                "sha256:f97e83fa6c25693c7a35de154681fcc257c1c41b38beb0304b9c4d2d9e164479",
│ │ │ -                "sha256:f9d0c5c045a3ca9bedfc35dca8526798eb91a07aa7a2c0fee134c6c6f321cbd7",
│ │ │ -                "sha256:ff6f3db31555657f3163b15a6b7c6938d08df7adbfc9dd13d9d19edad678f1e8"
│ │ │ +                "sha256:04afa6387e2b282cf78ff3dbce20f0cc071c12dc8f685bd40960cc68644cfea6",
│ │ │ +                "sha256:04eefcee095f58eaabe6dc3cc2262f3bcd776d2c67005880894f447b3f2cb9c1",
│ │ │ +                "sha256:0be65ccf618c1e7ac9b849c315cc2e8a8751d9cfdaa43027d4f6624bd587ab7e",
│ │ │ +                "sha256:0c95f12b74681e9ae127728f7e5409cbbef9cd914d5896ef238cc779b8152373",
│ │ │ +                "sha256:0ca564606d2caafb0abe6d1b5311c2649e8071eb241b2d64e75a0d0065107e62",
│ │ │ +                "sha256:10c93628d7497c81686e8e5e557aafa78f230cd9e77dd0c40032ef90c18f2230",
│ │ │ +                "sha256:11d117e6c63e8f495412d37e7dc2e2fff09c34b2d09dbe2bee3c6229577818be",
│ │ │ +                "sha256:11d3bcb7be35e7b1bba2c23beedac81ee893ac9871d0ba79effc7fc01167db6c",
│ │ │ +                "sha256:12a2b561af122e3d94cdb97fe6fb2bb2b82cef0cdca131646fdb940a1eda04f0",
│ │ │ +                "sha256:12d1a39aa6b8c6f6248bb54550efcc1c38ce0d8096a146638fd4738e42284448",
│ │ │ +                "sha256:1435ae15108b1cb6fffbcea2af3d468683b7afed0169ad718451f8db5d1aff6f",
│ │ │ +                "sha256:1c60b9c202d00052183c9be85e5eaf18a4ada0a47d188a83c8f5c5b23252f649",
│ │ │ +                "sha256:1e8fcdd8f672a1c4fc8d0bd3a2b576b152d2a349782d1eb0f6b8e52e9954731d",
│ │ │ +                "sha256:20064ead0717cf9a73a6d1e779b23d149b53daf971169289ed2ed43a71e8d3b0",
│ │ │ +                "sha256:21fa558996782fc226b529fdd2ed7866c2c6ec91cee82735c98a197fae39f706",
│ │ │ +                "sha256:22908891a380d50738e1f978667536f6c6b526a2064156203d418f4856d6e86a",
│ │ │ +                "sha256:3160a0fd9754aab7d47f95a6b63ab355388d890163eb03b2d2b87ab0a30cfa59",
│ │ │ +                "sha256:322102cdf1ab682ecc7d9b1c5eed4ec59657a65e1c146a0da342b78f4112db23",
│ │ │ +                "sha256:34e0a2f9c370eb95597aae63bf85eb5e96826d81e3dcf88b8886012906f509b5",
│ │ │ +                "sha256:3573d376454d956553c356df45bb824262c397c6e26ce43e8203c4c540ee0acb",
│ │ │ +                "sha256:3747443b6a904001473370d7810aa19c3a180ccd52a7157aacc264a5ac79265e",
│ │ │ +                "sha256:38e812a197bf8e71a59fe55b757a84c1f946d0ac114acafaafaf21667a7e169e",
│ │ │ +                "sha256:3a06f32c9634a8705f4ca9946d667609f52cf130d5548881401f1eb2c39b1e2c",
│ │ │ +                "sha256:3a5fc78f9e3f501a1614a98f7c54d3969f3ad9bba8ba3d9b438c3bc5d047dd28",
│ │ │ +                "sha256:3d9098b479e78c85080c98e1e35ff40b4a31d8953102bb0fd7d1b6f8a2111a3d",
│ │ │ +                "sha256:3dc5b6a8ecfdc5748a7e429782598e4f17ef378e3e272eeb1340ea57c9109f41",
│ │ │ +                "sha256:4155b51ae05ed47199dc5b2a4e62abccb274cee6b01da5b895099b61b1982974",
│ │ │ +                "sha256:49919f8400b5e49e961f320c735388ee686a62327e773fa5b3ce6721f7e785ce",
│ │ │ +                "sha256:53d0a3fa5f8af98a1e261de6a3943ca631c526635eb5817a87a59d9a57ebf48f",
│ │ │ +                "sha256:5f008525e02908b20e04707a4f704cd286d94718f48bb33edddc7d7b584dddc1",
│ │ │ +                "sha256:628c985afb2c7d27a4800bfb609e03985aaecb42f955049957814e0491d4006d",
│ │ │ +                "sha256:65ed923f84a6844de5fd29726b888e58c62820e0769b76565480e1fdc3d062f8",
│ │ │ +                "sha256:6734e606355834f13445b6adc38b53c0fd45f1a56a9ba06c2058f86893ae8017",
│ │ │ +                "sha256:6baf0baf0d5d265fa7944feb9f7451cc316bfe30e8df1a61b1bb08577c554f31",
│ │ │ +                "sha256:6f4f4668e1831850ebcc2fd0b1cd11721947b6dc7c00bf1c6bd3c929ae14f2c7",
│ │ │ +                "sha256:6f5c2e7bc8a4bf7c426599765b1bd33217ec84023033672c1e9a8b35eaeaaaf8",
│ │ │ +                "sha256:6f6c7a8a57e9405cad7485f4c9d3172ae486cfef1344b5ddd8e5239582d7355e",
│ │ │ +                "sha256:7381c66e0561c5757ffe616af869b916c8b4e42b367ab29fedc98481d1e74e14",
│ │ │ +                "sha256:73dc03a6a7e30b7edc5b01b601e53e7fc924b04e1835e8e407c12c037e81adbd",
│ │ │ +                "sha256:74db0052d985cf37fa111828d0dd230776ac99c740e1a758ad99094be4f1803d",
│ │ │ +                "sha256:75f2568b4189dda1c567339b48cba4ac7384accb9c2a7ed655cd86b04055c795",
│ │ │ +                "sha256:78cacd03e79d009d95635e7d6ff12c21eb89b894c354bd2b2ed0b4763373693b",
│ │ │ +                "sha256:80d1543d58bd3d6c271b66abf454d437a438dff01c3e62fdbcd68f2a11310d4b",
│ │ │ +                "sha256:830d2948a5ec37c386d3170c483063798d7879037492540f10a475e3fd6f244b",
│ │ │ +                "sha256:891cf9b48776b5c61c700b55a598621fdb7b1e301a550365571e9624f270c203",
│ │ │ +                "sha256:8f25e17ab3039b05f762b0a55ae0b3632b2e073d9c8fc88e89aca31a6198e88f",
│ │ │ +                "sha256:9a3267620866c9d17b959a84dd0bd2d45719b817245e49371ead79ed4f710d19",
│ │ │ +                "sha256:a04f86f41a8916fe45ac5024ec477f41f886b3c435da2d4e3d2709b22ab02af1",
│ │ │ +                "sha256:aaf53a6cebad0eae578f062c7d462155eada9c172bd8c4d250b8c1d8eb7f916a",
│ │ │ +                "sha256:abc1185d79f47c0a7aaf7e2412a0eb2c03b724581139193d2d82b3ad8cbb00ac",
│ │ │ +                "sha256:ac0aa6cd53ab9a31d397f8303f92c42f534693528fafbdb997c82bae6e477ad9",
│ │ │ +                "sha256:ac3775e3311661d4adace3697a52ac0bab17edd166087d493b52d4f4f553f9f0",
│ │ │ +                "sha256:b06f0d3bf045158d2fb8837c5785fe9ff9b8c93358be64461a1089f5da983137",
│ │ │ +                "sha256:b116502087ce8a6b7a5f1814568ccbd0e9f6cfd99948aa59b0e241dc57cf739f",
│ │ │ +                "sha256:b82fab78e0b1329e183a65260581de4375f619167478dddab510c6c6fb04d9b6",
│ │ │ +                "sha256:bd7163182133c0c7701b25e604cf1611c0d87712e56e88e7ee5d72deab3e76b5",
│ │ │ +                "sha256:c36bcbc0d5174a80d6cccf43a0ecaca44e81d25be4b7f90f0ed7bcfbb5a00909",
│ │ │ +                "sha256:c3af8e0f07399d3176b179f2e2634c3ce9c1301379a6b8c9c9aeecd481da494f",
│ │ │ +                "sha256:c84132a54c750fda57729d1e2599bb598f5fa0344085dbde5003ba429a4798c0",
│ │ │ +                "sha256:cb7b2ab0188829593b9de646545175547a70d9a6e2b63bf2cd87a0a391599324",
│ │ │ +                "sha256:cca4def576f47a09a943666b8f829606bcb17e2bc2d5911a46c8f8da45f56755",
│ │ │ +                "sha256:cf6511efa4801b9b38dc5546d7547d5b5c6ef4b081c60b23e4d941d0eba9cbeb",
│ │ │ +                "sha256:d16fd5252f883eb074ca55cb622bc0bee49b979ae4e8639fff6ca3ff44f9f854",
│ │ │ +                "sha256:d2686f91611f9e17f4548dbf050e75b079bbc2a82be565832bc8ea9047b61c8c",
│ │ │ +                "sha256:d7fc3fca01da18fbabe4625d64bb612b533533ed10045a2ac3dd194bfa656b60",
│ │ │ +                "sha256:dd5653e67b149503c68c4018bf07e42eeed6b4e956b24c00ccdf93ac79cdff84",
│ │ │ +                "sha256:de5695a6f1d8340b12a5d6d4484290ee74d61e467c39ff03b39e30df62cf83a0",
│ │ │ +                "sha256:e0ac8959c929593fee38da1c2b64ee9778733cdf03c482c9ff1d508b6b593b2b",
│ │ │ +                "sha256:e1b25e3ad6c909f398df8921780d6a3d120d8c09466720226fc621605b6f92b1",
│ │ │ +                "sha256:e633940f28c1e913615fd624fcdd72fdba807bf53ea6925d6a588e84e1151531",
│ │ │ +                "sha256:e89df2958e5159b811af9ff0f92614dabf4ff617c03a4c1c6ff53bf1c399e0e1",
│ │ │ +                "sha256:ea9f9c6034ea2d93d9147818f17c2a0860d41b71c38b9ce4d55f21b6f9165a11",
│ │ │ +                "sha256:f645caaf0008bacf349875a974220f1f1da349c5dbe7c4ec93048cdc785a3326",
│ │ │ +                "sha256:f8303414c7b03f794347ad062c0516cee0e15f7a612abd0ce1e25caf6ceb47df",
│ │ │ +                "sha256:fca62a8301b605b954ad2e9c3666f9d97f63872aa4efcae5492baca2056b74ab"
│ │ │              ],
│ │ │ -            "version": "==3.0.1"
│ │ │ +            "markers": "python_full_version >= '3.7.0'",
│ │ │ +            "version": "==3.1.0"
│ │ │          },
│ │ │          "click": {
│ │ │              "hashes": [
│ │ │                  "sha256:7682dc8afb30297001674575ea00d1814d808d6a36af415a82bd481d37ba7b8e",
│ │ │                  "sha256:bb4d8133cb15a609f44e8213d9b391b0809795062913b383c62be0ee95b1db48"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ @@ -715,68 +687,68 @@
│ │ │                  "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"
│ │ │              ],
│ │ │              "markers": "python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6'",
│ │ │              "version": "==0.4.6"
│ │ │          },
│ │ │          "coverage": {
│ │ │              "hashes": [
│ │ │ -                "sha256:0339dc3237c0d31c3b574f19c57985fcbe494280153bbcad33f2cdf469f4ac3e",
│ │ │ -                "sha256:09643fb0df8e29f7417adc3f40aaf379d071ee8f0350ab290517c7004f05360b",
│ │ │ -                "sha256:0bd7e628f6c3ec4e7d2d24ec0e50aae4e5ae95ea644e849d92ae4805650b4c4e",
│ │ │ -                "sha256:0cf557827be7eca1c38a2480484d706693e7bb1929e129785fe59ec155a59de6",
│ │ │ -                "sha256:0f8318ed0f3c376cfad8d3520f496946977abde080439d6689d7799791457454",
│ │ │ -                "sha256:1b7fb13850ecb29b62a447ac3516c777b0e7a09ecb0f4bb6718a8654c87dfc80",
│ │ │ -                "sha256:22c308bc508372576ffa3d2dbc4824bb70d28eeb4fcd79d4d1aed663a06630d0",
│ │ │ -                "sha256:3004765bca3acd9e015794e5c2f0c9a05587f5e698127ff95e9cfba0d3f29339",
│ │ │ -                "sha256:3a209d512d157379cc9ab697cbdbb4cfd18daa3e7eebaa84c3d20b6af0037384",
│ │ │ -                "sha256:436313d129db7cf5b4ac355dd2bd3f7c7e5294af077b090b85de75f8458b8616",
│ │ │ -                "sha256:49567ec91fc5e0b15356da07a2feabb421d62f52a9fff4b1ec40e9e19772f5f8",
│ │ │ -                "sha256:4dd34a935de268a133e4741827ae951283a28c0125ddcdbcbba41c4b98f2dfef",
│ │ │ -                "sha256:570c21a29493b350f591a4b04c158ce1601e8d18bdcd21db136fbb135d75efa6",
│ │ │ -                "sha256:5928b85416a388dd557ddc006425b0c37e8468bd1c3dc118c1a3de42f59e2a54",
│ │ │ -                "sha256:5d2b9b5e70a21474c105a133ba227c61bc95f2ac3b66861143ce39a5ea4b3f84",
│ │ │ -                "sha256:617a94ada56bbfe547aa8d1b1a2b8299e2ec1ba14aac1d4b26a9f7d6158e1273",
│ │ │ -                "sha256:6a034480e9ebd4e83d1aa0453fd78986414b5d237aea89a8fdc35d330aa13bae",
│ │ │ -                "sha256:6fce673f79a0e017a4dc35e18dc7bb90bf6d307c67a11ad5e61ca8d42b87cbff",
│ │ │ -                "sha256:78d2c3dde4c0b9be4b02067185136b7ee4681978228ad5ec1278fa74f5ca3e99",
│ │ │ -                "sha256:7f099da6958ddfa2ed84bddea7515cb248583292e16bb9231d151cd528eab657",
│ │ │ -                "sha256:80559eaf6c15ce3da10edb7977a1548b393db36cbc6cf417633eca05d84dd1ed",
│ │ │ -                "sha256:834c2172edff5a08d78e2f53cf5e7164aacabeb66b369f76e7bb367ca4e2d993",
│ │ │ -                "sha256:861cc85dfbf55a7a768443d90a07e0ac5207704a9f97a8eb753292a7fcbdfcfc",
│ │ │ -                "sha256:8649371570551d2fd7dee22cfbf0b61f1747cdfb2b7587bb551e4beaaa44cb97",
│ │ │ -                "sha256:87dc37f16fb5e3a28429e094145bf7c1753e32bb50f662722e378c5851f7fdc6",
│ │ │ -                "sha256:8a6450da4c7afc4534305b2b7d8650131e130610cea448ff240b6ab73d7eab63",
│ │ │ -                "sha256:8d3843ca645f62c426c3d272902b9de90558e9886f15ddf5efe757b12dd376f5",
│ │ │ -                "sha256:8dca3c1706670297851bca1acff9618455122246bdae623be31eca744ade05ec",
│ │ │ -                "sha256:97a3189e019d27e914ecf5c5247ea9f13261d22c3bb0cfcfd2a9b179bb36f8b1",
│ │ │ -                "sha256:99f4dd81b2bb8fc67c3da68b1f5ee1650aca06faa585cbc6818dbf67893c6d58",
│ │ │ -                "sha256:9e872b082b32065ac2834149dc0adc2a2e6d8203080501e1e3c3c77851b466f9",
│ │ │ -                "sha256:a81dbcf6c6c877986083d00b834ac1e84b375220207a059ad45d12f6e518a4e3",
│ │ │ -                "sha256:abacd0a738e71b20e224861bc87e819ef46fedba2fb01bc1af83dfd122e9c319",
│ │ │ -                "sha256:ae82c988954722fa07ec5045c57b6d55bc1a0890defb57cf4a712ced65b26ddd",
│ │ │ -                "sha256:b0c0d46de5dd97f6c2d1b560bf0fcf0215658097b604f1840365296302a9d1fb",
│ │ │ -                "sha256:b1991a6d64231a3e5bbe3099fb0dd7c9aeaa4275ad0e0aeff4cb9ef885c62ba2",
│ │ │ -                "sha256:b2167d116309f564af56f9aa5e75ef710ef871c5f9b313a83050035097b56820",
│ │ │ -                "sha256:bd5a12239c0006252244f94863f1c518ac256160cd316ea5c47fb1a11b25889a",
│ │ │ -                "sha256:bdd3f2f285ddcf2e75174248b2406189261a79e7fedee2ceeadc76219b6faa0e",
│ │ │ -                "sha256:c77f2a9093ccf329dd523a9b2b3c854c20d2a3d968b6def3b820272ca6732242",
│ │ │ -                "sha256:cb5f152fb14857cbe7f3e8c9a5d98979c4c66319a33cad6e617f0067c9accdc4",
│ │ │ -                "sha256:cca7c0b7f5881dfe0291ef09ba7bb1582cb92ab0aeffd8afb00c700bf692415a",
│ │ │ -                "sha256:d2ef6cae70168815ed91388948b5f4fcc69681480a0061114db737f957719f03",
│ │ │ -                "sha256:d9256d4c60c4bbfec92721b51579c50f9e5062c21c12bec56b55292464873508",
│ │ │ -                "sha256:e191a63a05851f8bce77bc875e75457f9b01d42843f8bd7feed2fc26bbe60833",
│ │ │ -                "sha256:e2b50ebc2b6121edf352336d503357321b9d8738bb7a72d06fc56153fd3f4cd8",
│ │ │ -                "sha256:e3ea04b23b114572b98a88c85379e9e9ae031272ba1fb9b532aa934c621626d4",
│ │ │ -                "sha256:e4d70c853f0546855f027890b77854508bdb4d6a81242a9d804482e667fff6e6",
│ │ │ -                "sha256:f29351393eb05e6326f044a7b45ed8e38cb4dcc38570d12791f271399dc41431",
│ │ │ -                "sha256:f3d07edb912a978915576a776756069dede66d012baa503022d3a0adba1b6afa",
│ │ │ -                "sha256:fac6343bae03b176e9b58104a9810df3cdccd5cfed19f99adfa807ffbf43cf9b"
│ │ │ +                "sha256:006ed5582e9cbc8115d2e22d6d2144a0725db542f654d9d4fda86793832f873d",
│ │ │ +                "sha256:046936ab032a2810dcaafd39cc4ef6dd295df1a7cbead08fe996d4765fca9fe4",
│ │ │ +                "sha256:0484d9dd1e6f481b24070c87561c8d7151bdd8b044c93ac99faafd01f695c78e",
│ │ │ +                "sha256:0ce383d5f56d0729d2dd40e53fe3afeb8f2237244b0975e1427bfb2cf0d32bab",
│ │ │ +                "sha256:186e0fc9cf497365036d51d4d2ab76113fb74f729bd25da0975daab2e107fd90",
│ │ │ +                "sha256:2199988e0bc8325d941b209f4fd1c6fa007024b1442c5576f1a32ca2e48941e6",
│ │ │ +                "sha256:299bc75cb2a41e6741b5e470b8c9fb78d931edbd0cd009c58e5c84de57c06731",
│ │ │ +                "sha256:3668291b50b69a0c1ef9f462c7df2c235da3c4073f49543b01e7eb1dee7dd540",
│ │ │ +                "sha256:36dd42da34fe94ed98c39887b86db9d06777b1c8f860520e21126a75507024f2",
│ │ │ +                "sha256:38004671848b5745bb05d4d621526fca30cee164db42a1f185615f39dc997292",
│ │ │ +                "sha256:387fb46cb8e53ba7304d80aadca5dca84a2fbf6fe3faf6951d8cf2d46485d1e5",
│ │ │ +                "sha256:3eb55b7b26389dd4f8ae911ba9bc8c027411163839dea4c8b8be54c4ee9ae10b",
│ │ │ +                "sha256:420f94a35e3e00a2b43ad5740f935358e24478354ce41c99407cddd283be00d2",
│ │ │ +                "sha256:4ac0f522c3b6109c4b764ffec71bf04ebc0523e926ca7cbe6c5ac88f84faced0",
│ │ │ +                "sha256:4c752d5264053a7cf2fe81c9e14f8a4fb261370a7bb344c2a011836a96fb3f57",
│ │ │ +                "sha256:4f01911c010122f49a3e9bdc730eccc66f9b72bd410a3a9d3cb8448bb50d65d3",
│ │ │ +                "sha256:4f68ee32d7c4164f1e2c8797535a6d0a3733355f5861e0f667e37df2d4b07140",
│ │ │ +                "sha256:4fa54fb483decc45f94011898727802309a109d89446a3c76387d016057d2c84",
│ │ │ +                "sha256:507e4720791977934bba016101579b8c500fb21c5fa3cd4cf256477331ddd988",
│ │ │ +                "sha256:53d0fd4c17175aded9c633e319360d41a1f3c6e352ba94edcb0fa5167e2bad67",
│ │ │ +                "sha256:55272f33da9a5d7cccd3774aeca7a01e500a614eaea2a77091e9be000ecd401d",
│ │ │ +                "sha256:5764e1f7471cb8f64b8cda0554f3d4c4085ae4b417bfeab236799863703e5de2",
│ │ │ +                "sha256:57b77b9099f172804e695a40ebaa374f79e4fb8b92f3e167f66facbf92e8e7f5",
│ │ │ +                "sha256:5afdad4cc4cc199fdf3e18088812edcf8f4c5a3c8e6cb69127513ad4cb7471a9",
│ │ │ +                "sha256:5cc0783844c84af2522e3a99b9b761a979a3ef10fb87fc4048d1ee174e18a7d8",
│ │ │ +                "sha256:5e1df45c23d4230e3d56d04414f9057eba501f78db60d4eeecfcb940501b08fd",
│ │ │ +                "sha256:6146910231ece63facfc5984234ad1b06a36cecc9fd0c028e59ac7c9b18c38c6",
│ │ │ +                "sha256:797aad79e7b6182cb49c08cc5d2f7aa7b2128133b0926060d0a8889ac43843be",
│ │ │ +                "sha256:7c20b731211261dc9739bbe080c579a1835b0c2d9b274e5fcd903c3a7821cf88",
│ │ │ +                "sha256:817295f06eacdc8623dc4df7d8b49cea65925030d4e1e2a7c7218380c0072c25",
│ │ │ +                "sha256:81f63e0fb74effd5be736cfe07d710307cc0a3ccb8f4741f7f053c057615a137",
│ │ │ +                "sha256:872d6ce1f5be73f05bea4df498c140b9e7ee5418bfa2cc8204e7f9b817caa968",
│ │ │ +                "sha256:8c99cb7c26a3039a8a4ee3ca1efdde471e61b4837108847fb7d5be7789ed8fd9",
│ │ │ +                "sha256:8dbe2647bf58d2c5a6c5bcc685f23b5f371909a5624e9f5cd51436d6a9f6c6ef",
│ │ │ +                "sha256:8efb48fa743d1c1a65ee8787b5b552681610f06c40a40b7ef94a5b517d885c54",
│ │ │ +                "sha256:92ebc1619650409da324d001b3a36f14f63644c7f0a588e331f3b0f67491f512",
│ │ │ +                "sha256:9d22e94e6dc86de981b1b684b342bec5e331401599ce652900ec59db52940005",
│ │ │ +                "sha256:ba279aae162b20444881fc3ed4e4f934c1cf8620f3dab3b531480cf602c76b7f",
│ │ │ +                "sha256:bc4803779f0e4b06a2361f666e76f5c2e3715e8e379889d02251ec911befd149",
│ │ │ +                "sha256:bfe7085783cda55e53510482fa7b5efc761fad1abe4d653b32710eb548ebdd2d",
│ │ │ +                "sha256:c448b5c9e3df5448a362208b8d4b9ed85305528313fca1b479f14f9fe0d873b8",
│ │ │ +                "sha256:c90e73bdecb7b0d1cea65a08cb41e9d672ac6d7995603d6465ed4914b98b9ad7",
│ │ │ +                "sha256:d2b96123a453a2d7f3995ddb9f28d01fd112319a7a4d5ca99796a7ff43f02af5",
│ │ │ +                "sha256:d52f0a114b6a58305b11a5cdecd42b2e7f1ec77eb20e2b33969d702feafdd016",
│ │ │ +                "sha256:d530191aa9c66ab4f190be8ac8cc7cfd8f4f3217da379606f3dd4e3d83feba69",
│ │ │ +                "sha256:d683d230b5774816e7d784d7ed8444f2a40e7a450e5720d58af593cb0b94a212",
│ │ │ +                "sha256:db45eec1dfccdadb179b0f9ca616872c6f700d23945ecc8f21bb105d74b1c5fc",
│ │ │ +                "sha256:db8c2c5ace167fd25ab5dd732714c51d4633f58bac21fb0ff63b0349f62755a8",
│ │ │ +                "sha256:e2926b8abedf750c2ecf5035c07515770944acf02e1c46ab08f6348d24c5f94d",
│ │ │ +                "sha256:e627dee428a176ffb13697a2c4318d3f60b2ccdde3acdc9b3f304206ec130ccd",
│ │ │ +                "sha256:efe1c0adad110bf0ad7fb59f833880e489a61e39d699d37249bdf42f80590169"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==7.2.1"
│ │ │ +            "version": "==7.2.2"
│ │ │          },
│ │ │          "distlib": {
│ │ │              "hashes": [
│ │ │                  "sha256:14bad2d9b04d3a36127ac97f30b12a19268f211063d8f8ee4f47108896e11b46",
│ │ │                  "sha256:f35c4b692542ca110de7ef0bea44d73981caeb34ca0b9b6b2e6d7790dda8f80e"
│ │ │              ],
│ │ │              "version": "==0.3.6"
│ │ │ @@ -795,27 +767,27 @@
│ │ │                  "sha256:ee686a8db9f5d91da39849f175ffeef094dd0e9c36d6a59a2e8c7f92a3b80020"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.1'",
│ │ │              "version": "==0.3"
│ │ │          },
│ │ │          "exceptiongroup": {
│ │ │              "hashes": [
│ │ │ -                "sha256:327cbda3da756e2de031a3107b81ab7b3770a602c4d16ca618298c526f4bec1e",
│ │ │ -                "sha256:bcb67d800a4497e1b404c2dd44fca47d3b7a5e5433dbab67f96c1a685cdfdf23"
│ │ │ +                "sha256:232c37c63e4f682982c8b6459f33a8981039e5fb8756b2074364e5055c498c9e",
│ │ │ +                "sha256:d484c3090ba2889ae2928419117447a14daf3c1231d5e30d0aae34f354f01785"
│ │ │              ],
│ │ │              "markers": "python_version < '3.11'",
│ │ │ -            "version": "==1.1.0"
│ │ │ +            "version": "==1.1.1"
│ │ │          },
│ │ │          "filelock": {
│ │ │              "hashes": [
│ │ │ -                "sha256:7b319f24340b51f55a2bf7a12ac0755a9b03e718311dac567a0f4f7fabd2f5de",
│ │ │ -                "sha256:f58d535af89bb9ad5cd4df046f741f8553a418c01a7856bf0d173bbc9f6bd16d"
│ │ │ +                "sha256:892be14aa8efc01673b5ed6589dbccb95f9a8596f0507e232626155495c18105",
│ │ │ +                "sha256:bde48477b15fde2c7e5a0713cbe72721cb5a5ad32ee0b8f419907960b9d75536"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │ -            "version": "==3.9.0"
│ │ │ +            "version": "==3.10.7"
│ │ │          },
│ │ │          "flake8": {
│ │ │              "hashes": [
│ │ │                  "sha256:3833794e27ff64ea4e9cf5d410082a8b97ff1a06c16aa3d2027339cd0f1195c7",
│ │ │                  "sha256:c61007e76655af75e6785a931f452915b371dc48f56efd765247c8fe68f2b181"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ @@ -843,19 +815,19 @@
│ │ │                  "sha256:81f2e6063cdbdf17ea11cffe603dfa3fba781da0c127a2814ab1eb5b864de2c0"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │              "version": "==0.22.0"
│ │ │          },
│ │ │          "identify": {
│ │ │              "hashes": [
│ │ │ -                "sha256:89e144fa560cc4cffb6ef2ab5e9fb18ed9f9b3cb054384bab4b95c12f6c309fe",
│ │ │ -                "sha256:93aac7ecf2f6abf879b8f29a8002d3c6de7086b8c28d88e1ad15045a15ab63f9"
│ │ │ +                "sha256:f0faad595a4687053669c112004178149f6c326db71ee999ae4636685753ad2f",
│ │ │ +                "sha256:f7a93d6cf98e29bd07663c60728e7a4057615068d7a639d132dc883b2d54d31e"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │ -            "version": "==2.5.18"
│ │ │ +            "version": "==2.5.22"
│ │ │          },
│ │ │          "idna": {
│ │ │              "hashes": [
│ │ │                  "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4",
│ │ │                  "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.5'",
│ │ │ @@ -889,14 +861,22 @@
│ │ │              "hashes": [
│ │ │                  "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852",
│ │ │                  "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │              "version": "==3.1.2"
│ │ │          },
│ │ │ +        "markdown-it-py": {
│ │ │ +            "hashes": [
│ │ │ +                "sha256:5a35f8d1870171d9acc47b99612dc146129b631baf04970128b568f190d0cc30",
│ │ │ +                "sha256:7c9a5e412688bc771c67432cbfebcdd686c93ce6484913dccf06cb5a0bea35a1"
│ │ │ +            ],
│ │ │ +            "markers": "python_version >= '3.7'",
│ │ │ +            "version": "==2.2.0"
│ │ │ +        },
│ │ │          "markupsafe": {
│ │ │              "hashes": [
│ │ │                  "sha256:0576fe974b40a400449768941d5d0858cc624e3249dfd1e0c33674e5c7ca7aed",
│ │ │                  "sha256:085fd3201e7b12809f9e6e9bc1e5c96a368c8523fad5afb02afe3c051ae4afcc",
│ │ │                  "sha256:090376d812fb6ac5f171e5938e82e7f2d7adc2b629101cec0db8b267815c85e2",
│ │ │                  "sha256:0b462104ba25f1ac006fdab8b6a01ebbfbce9ed37fd37fd4acd70c67c973e460",
│ │ │                  "sha256:137678c63c977754abe9086a3ec011e8fd985ab90631145dfb9294ad09c102a7",
│ │ │ @@ -953,45 +933,53 @@
│ │ │              "hashes": [
│ │ │                  "sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325",
│ │ │                  "sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.6'",
│ │ │              "version": "==0.7.0"
│ │ │          },
│ │ │ +        "mdurl": {
│ │ │ +            "hashes": [
│ │ │ +                "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8",
│ │ │ +                "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"
│ │ │ +            ],
│ │ │ +            "markers": "python_version >= '3.7'",
│ │ │ +            "version": "==0.1.2"
│ │ │ +        },
│ │ │          "mypy": {
│ │ │              "hashes": [
│ │ │ -                "sha256:0af4f0e20706aadf4e6f8f8dc5ab739089146b83fd53cb4a7e0e850ef3de0bb6",
│ │ │ -                "sha256:15b5a824b58c7c822c51bc66308e759243c32631896743f030daf449fe3677f3",
│ │ │ -                "sha256:17455cda53eeee0a4adb6371a21dd3dbf465897de82843751cf822605d152c8c",
│ │ │ -                "sha256:2013226d17f20468f34feddd6aae4635a55f79626549099354ce641bc7d40262",
│ │ │ -                "sha256:24189f23dc66f83b839bd1cce2dfc356020dfc9a8bae03978477b15be61b062e",
│ │ │ -                "sha256:27a0f74a298769d9fdc8498fcb4f2beb86f0564bcdb1a37b58cbbe78e55cf8c0",
│ │ │ -                "sha256:28cea5a6392bb43d266782983b5a4216c25544cd7d80be681a155ddcdafd152d",
│ │ │ -                "sha256:448de661536d270ce04f2d7dddaa49b2fdba6e3bd8a83212164d4174ff43aa65",
│ │ │ -                "sha256:48525aec92b47baed9b3380371ab8ab6e63a5aab317347dfe9e55e02aaad22e8",
│ │ │ -                "sha256:5bc8d6bd3b274dd3846597855d96d38d947aedba18776aa998a8d46fabdaed76",
│ │ │ -                "sha256:5deb252fd42a77add936b463033a59b8e48eb2eaec2976d76b6878d031933fe4",
│ │ │ -                "sha256:5f546ac34093c6ce33f6278f7c88f0f147a4849386d3bf3ae193702f4fe31407",
│ │ │ -                "sha256:5fdd63e4f50e3538617887e9aee91855368d9fc1dea30da743837b0df7373bc4",
│ │ │ -                "sha256:65b122a993d9c81ea0bfde7689b3365318a88bde952e4dfa1b3a8b4ac05d168b",
│ │ │ -                "sha256:71a808334d3f41ef011faa5a5cd8153606df5fc0b56de5b2e89566c8093a0c9a",
│ │ │ -                "sha256:920169f0184215eef19294fa86ea49ffd4635dedfdea2b57e45cb4ee85d5ccaf",
│ │ │ -                "sha256:93a85495fb13dc484251b4c1fd7a5ac370cd0d812bbfc3b39c1bafefe95275d5",
│ │ │ -                "sha256:a2948c40a7dd46c1c33765718936669dc1f628f134013b02ff5ac6c7ef6942bf",
│ │ │ -                "sha256:c6c2ccb7af7154673c591189c3687b013122c5a891bb5651eca3db8e6c6c55bd",
│ │ │ -                "sha256:c96b8a0c019fe29040d520d9257d8c8f122a7343a8307bf8d6d4a43f5c5bfcc8",
│ │ │ -                "sha256:d42a98e76070a365a1d1c220fcac8aa4ada12ae0db679cb4d910fabefc88b994",
│ │ │ -                "sha256:dbeb24514c4acbc78d205f85dd0e800f34062efcc1f4a4857c57e4b4b8712bff",
│ │ │ -                "sha256:e60d0b09f62ae97a94605c3f73fd952395286cf3e3b9e7b97f60b01ddfbbda88",
│ │ │ -                "sha256:e64f48c6176e243ad015e995de05af7f22bbe370dbb5b32bd6988438ec873919",
│ │ │ -                "sha256:e831662208055b006eef68392a768ff83596035ffd6d846786578ba1714ba8f6",
│ │ │ -                "sha256:eda5c8b9949ed411ff752b9a01adda31afe7eae1e53e946dbdf9db23865e66c4"
│ │ │ +                "sha256:0a28a76785bf57655a8ea5eb0540a15b0e781c807b5aa798bd463779988fa1d5",
│ │ │ +                "sha256:19ba15f9627a5723e522d007fe708007bae52b93faab00f95d72f03e1afa9598",
│ │ │ +                "sha256:21b437be1c02712a605591e1ed1d858aba681757a1e55fe678a15c2244cd68a5",
│ │ │ +                "sha256:26cdd6a22b9b40b2fd71881a8a4f34b4d7914c679f154f43385ca878a8297389",
│ │ │ +                "sha256:2888ce4fe5aae5a673386fa232473014056967f3904f5abfcf6367b5af1f612a",
│ │ │ +                "sha256:2b0c373d071593deefbcdd87ec8db91ea13bd8f1328d44947e88beae21e8d5e9",
│ │ │ +                "sha256:315ac73cc1cce4771c27d426b7ea558fb4e2836f89cb0296cbe056894e3a1f78",
│ │ │ +                "sha256:39c7119335be05630611ee798cc982623b9e8f0cff04a0b48dfc26100e0b97af",
│ │ │ +                "sha256:4b398d8b1f4fba0e3c6463e02f8ad3346f71956b92287af22c9b12c3ec965a9f",
│ │ │ +                "sha256:4e4e8b362cdf99ba00c2b218036002bdcdf1e0de085cdb296a49df03fb31dfc4",
│ │ │ +                "sha256:59bbd71e5c58eed2e992ce6523180e03c221dcd92b52f0e792f291d67b15a71c",
│ │ │ +                "sha256:5b5f81b40d94c785f288948c16e1f2da37203c6006546c5d947aab6f90aefef2",
│ │ │ +                "sha256:5cb14ff9919b7df3538590fc4d4c49a0f84392237cbf5f7a816b4161c061829e",
│ │ │ +                "sha256:61bf08362e93b6b12fad3eab68c4ea903a077b87c90ac06c11e3d7a09b56b9c1",
│ │ │ +                "sha256:64cc3afb3e9e71a79d06e3ed24bb508a6d66f782aff7e56f628bf35ba2e0ba51",
│ │ │ +                "sha256:69b35d1dcb5707382810765ed34da9db47e7f95b3528334a3c999b0c90fe523f",
│ │ │ +                "sha256:9401e33814cec6aec8c03a9548e9385e0e228fc1b8b0a37b9ea21038e64cdd8a",
│ │ │ +                "sha256:a380c041db500e1410bb5b16b3c1c35e61e773a5c3517926b81dfdab7582be54",
│ │ │ +                "sha256:ae9ceae0f5b9059f33dbc62dea087e942c0ccab4b7a003719cb70f9b8abfa32f",
│ │ │ +                "sha256:b7c7b708fe9a871a96626d61912e3f4ddd365bf7f39128362bc50cbd74a634d5",
│ │ │ +                "sha256:c1c10fa12df1232c936830839e2e935d090fc9ee315744ac33b8a32216b93707",
│ │ │ +                "sha256:ce61663faf7a8e5ec6f456857bfbcec2901fbdb3ad958b778403f63b9e606a1b",
│ │ │ +                "sha256:d64c28e03ce40d5303450f547e07418c64c241669ab20610f273c9e6290b4b0b",
│ │ │ +                "sha256:d809f88734f44a0d44959d795b1e6f64b2bbe0ea4d9cc4776aa588bb4229fc1c",
│ │ │ +                "sha256:dbb19c9f662e41e474e0cff502b7064a7edc6764f5262b6cd91d698163196799",
│ │ │ +                "sha256:ef6a01e563ec6a4940784c574d33f6ac1943864634517984471642908b30b6f7"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==1.0.1"
│ │ │ +            "version": "==1.1.1"
│ │ │          },
│ │ │          "mypy-extensions": {
│ │ │              "hashes": [
│ │ │                  "sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d",
│ │ │                  "sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.5'",
│ │ │ @@ -1011,19 +999,19 @@
│ │ │                  "sha256:b6ad297f8907de0fa2fe1ccbd26fdaf387f5f47c7275fedf8cce89f99446cf97"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.1'",
│ │ │              "version": "==23.0"
│ │ │          },
│ │ │          "pathspec": {
│ │ │              "hashes": [
│ │ │ -                "sha256:3a66eb970cbac598f9e5ccb5b2cf58930cd8e3ed86d393d541eaf2d8b1705229",
│ │ │ -                "sha256:64d338d4e0914e91c1792321e6907b5a593f1ab1851de7fc269557a21b30ebbc"
│ │ │ +                "sha256:2798de800fa92780e33acca925945e9a19a133b715067cf165b8866c15a31687",
│ │ │ +                "sha256:d8af70af76652554bd134c22b3e8a1cc46ed7d91edcdd721ef1a0c51a84a5293"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │ -            "version": "==0.11.0"
│ │ │ +            "version": "==0.11.1"
│ │ │          },
│ │ │          "pbr": {
│ │ │              "hashes": [
│ │ │                  "sha256:567f09558bae2b3ab53cb3c1e2e33e726ff3338e7bae3db5dc954b3a44eef12b",
│ │ │                  "sha256:aefc51675b0b533d56bb5fd1c8c6c0522fe31896679882e1c4c63d5e4a0fccb3"
│ │ │              ],
│ │ │              "markers": "python_version >= '2.6'",
│ │ │ @@ -1035,35 +1023,35 @@
│ │ │                  "sha256:cd015ea1bfb0fcef59d8a286c1f8bebcb983f6317719d415dc5351efb7cd7024"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │              "version": "==23.0.1"
│ │ │          },
│ │ │          "platformdirs": {
│ │ │              "hashes": [
│ │ │ -                "sha256:8a1228abb1ef82d788f74139988b137e78692984ec7b08eaa6c65f1723af28f9",
│ │ │ -                "sha256:b1d5eb14f221506f50d6604a561f4c5786d9e80355219694a1b244bcd96f4567"
│ │ │ +                "sha256:d5b638ca397f25f979350ff789db335903d7ea010ab28903f57b27e1b16c2b08",
│ │ │ +                "sha256:ebe11c0d7a805086e99506aa331612429a72ca7cd52a1f0d277dc4adc20cb10e"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │ -            "version": "==3.0.0"
│ │ │ +            "version": "==3.2.0"
│ │ │          },
│ │ │          "pluggy": {
│ │ │              "hashes": [
│ │ │                  "sha256:4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159",
│ │ │                  "sha256:74134bbf457f031a36d68416e1509f34bd5ccc019f0bcc952c7b909d06b37bd3"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.1'",
│ │ │              "version": "==1.0.0"
│ │ │          },
│ │ │          "pre-commit": {
│ │ │              "hashes": [
│ │ │ -                "sha256:b80254e60668e1dd1f5c03a1c9e0413941d61f568a57d745add265945f65bfe8",
│ │ │ -                "sha256:d63e6537f9252d99f65755ae5b79c989b462d511ebbc481b561db6a297e1e865"
│ │ │ +                "sha256:0b4210aea813fe81144e87c5a291f09ea66f199f367fa1df41b55e1d26e1e2b4",
│ │ │ +                "sha256:5b808fcbda4afbccf6d6633a56663fed35b6c2bc08096fd3d47ce197ac351d9d"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==3.1.1"
│ │ │ +            "version": "==3.2.2"
│ │ │          },
│ │ │          "pretend": {
│ │ │              "hashes": [
│ │ │                  "sha256:c90eb810cde8ebb06dafcb8796f9a95228ce796531bc806e794c2f4649aa1b10",
│ │ │                  "sha256:e389b12b7073604be67845dbe32bf8297360ad9a609b24846fe15d86e0b7dc01"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ @@ -1091,35 +1079,35 @@
│ │ │                  "sha256:fa7bd7bd2771287c0de303af8bfdfc731f51bd2c6a47ab69d117138893b82717"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.6'",
│ │ │              "version": "==2.14.0"
│ │ │          },
│ │ │          "pyproject-api": {
│ │ │              "hashes": [
│ │ │ -                "sha256:0962df21f3e633b8ddb9567c011e6c1b3dcdfc31b7860c0ede7e24c5a1200fbe",
│ │ │ -                "sha256:4c111277dfb96bcd562c6245428f27250b794bfe3e210b8714c4f893952f2c17"
│ │ │ +                "sha256:435f46547a9ff22cf4208ee274fca3e2869aeb062a4834adfc99a4dd64af3cf9",
│ │ │ +                "sha256:4698a3777c2e0f6b624f8a4599131e2a25376d90fe8d146d7ac74c67c6f97c43"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │ -            "version": "==1.5.0"
│ │ │ +            "version": "==1.5.1"
│ │ │          },
│ │ │          "pyproject-hooks": {
│ │ │              "hashes": [
│ │ │                  "sha256:283c11acd6b928d2f6a7c73fa0d01cb2bdc5f07c57a2eeb6e83d5e56b97976f8",
│ │ │                  "sha256:f271b298b97f5955d53fb12b72c1fb1948c22c1a6b70b315c54cedaca0264ef5"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │              "version": "==1.0.0"
│ │ │          },
│ │ │          "pytest": {
│ │ │              "hashes": [
│ │ │ -                "sha256:c7c6ca206e93355074ae32f7403e8ea12163b1163c976fee7d4d84027c162be5",
│ │ │ -                "sha256:d45e0952f3727241918b8fd0f376f5ff6b301cc0777c6f9a556935c92d8a7d42"
│ │ │ +                "sha256:130328f552dcfac0b1cec75c12e3f005619dc5f874f0a06e8ff7263f0ee6225e",
│ │ │ +                "sha256:c99ab0c73aceb050f68929bc93af19ab6db0558791c6a0715723abe9d0ade9d4"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==7.2.1"
│ │ │ +            "version": "==7.2.2"
│ │ │          },
│ │ │          "pyyaml": {
│ │ │              "hashes": [
│ │ │                  "sha256:01b45c0191e6d66c470b6cf1b9531a771a83c1c4208272ead47a3ae4f2f603bf",
│ │ │                  "sha256:0283c35a6a9fbf047493e3a0ce8d79ef5030852c51e9d911a27badfde0605293",
│ │ │                  "sha256:055d937d65826939cb044fc8c9b08889e8c743fdc6a32b33e2390f66013e449b",
│ │ │                  "sha256:07751360502caac1c067a8132d150cf3d61339af5691fe9e87803040dbc5db57",
│ │ │ @@ -1167,21 +1155,29 @@
│ │ │              "hashes": [
│ │ │                  "sha256:64299f4909223da747622c030b781c0d7811e359c37124b4bd368fb8c6518baa",
│ │ │                  "sha256:98b1b2782e3c6c4904938b84c0eb932721069dfdb9134313beff7c83c2df24bf"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │              "version": "==2.28.2"
│ │ │          },
│ │ │ +        "rich": {
│ │ │ +            "hashes": [
│ │ │ +                "sha256:540c7d6d26a1178e8e8b37e9ba44573a3cd1464ff6348b99ee7061b95d1c6333",
│ │ │ +                "sha256:dc84400a9d842b3a9c5ff74addd8eb798d155f36c1c91303888e0a66850d2a15"
│ │ │ +            ],
│ │ │ +            "index": "pypi",
│ │ │ +            "version": "==13.3.3"
│ │ │ +        },
│ │ │          "setuptools": {
│ │ │              "hashes": [
│ │ │ -                "sha256:e5fd0a713141a4a105412233c63dc4e17ba0090c8e8334594ac790ec97792330",
│ │ │ -                "sha256:f106dee1b506dee5102cc3f3e9e68137bbad6d47b616be7991714b0c62204251"
│ │ │ +                "sha256:257de92a9d50a60b8e22abfcbb771571fde0dbf3ec234463212027a4eeecbe9a",
│ │ │ +                "sha256:e728ca814a823bf7bf60162daf9db95b93d532948c4c0bea762ce62f60189078"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │ -            "version": "==67.4.0"
│ │ │ +            "version": "==67.6.1"
│ │ │          },
│ │ │          "smmap": {
│ │ │              "hashes": [
│ │ │                  "sha256:2aba19d6a040e78d8b09de5c57e96207b09ed71d8e55ce0959eeee6c8e190d94",
│ │ │                  "sha256:c840e62059cd3be204b0c9c9f74be2c09d5648eddd4580d9314c3ecde0b30936"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.6'",
│ │ │ @@ -1232,34 +1228,34 @@
│ │ │                  "sha256:c38cb46dccf316c79de6e5515e1770414b797162b23cd3d06e67020e1d2a6903"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │              "version": "==2.0.1"
│ │ │          },
│ │ │          "sphinxcontrib-jquery": {
│ │ │              "hashes": [
│ │ │ -                "sha256:8fb65f6dba84bf7bcd1aea1f02ab3955ac34611d838bcc95d4983b805b234daa",
│ │ │ -                "sha256:ed47fa425c338ffebe3c37e1cdb56e30eb806116b85f01055b158c7057fdb995"
│ │ │ +                "sha256:1620739f04e36a2c779f1a131a2dfd49b2fd07351bf1968ced074365933abc7a",
│ │ │ +                "sha256:f936030d7d0147dd026a4f2b5a57343d233f1fc7b363f68b3d4f1cb0993878ae"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.1'",
│ │ │ -            "version": "==2.0.0"
│ │ │ +            "version": "==4.1"
│ │ │          },
│ │ │          "sphinxcontrib-jsmath": {
│ │ │              "hashes": [
│ │ │                  "sha256:2ec2eaebfb78f3f2078e73666b1415417a116cc848b72e5172e596c871103178",
│ │ │                  "sha256:a9925e4a4587247ed2191a22df5f6970656cb8ca2bd6284309578f2153e0c4b8"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │              "version": "==1.0.1"
│ │ │          },
│ │ │          "sphinxcontrib-plantuml": {
│ │ │              "hashes": [
│ │ │ -                "sha256:39d2e4bc40d5e093126129a144f56b6ee15f58cfa5048b5948e63a11aff3b586"
│ │ │ +                "sha256:8fde531d92d1cfc2817fe3647b3f2d07e76682c4a84889c04a53e831f7c54432"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==0.24.1"
│ │ │ +            "version": "==0.25"
│ │ │          },
│ │ │          "sphinxcontrib-qthelp": {
│ │ │              "hashes": [
│ │ │                  "sha256:4c33767ee058b70dba89a6fc5c1892c0d57a54be67ddd3e7875a18d14cba5a72",
│ │ │                  "sha256:bd9fc24bcb748a8d51fd4ecaade681350aa63009a347a8c14e637895444dfab6"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ @@ -1287,54 +1283,54 @@
│ │ │                  "sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.1'",
│ │ │              "version": "==2.0.1"
│ │ │          },
│ │ │          "tox": {
│ │ │              "hashes": [
│ │ │ -                "sha256:9786671d23b673ace7499c602c5746e2a225d1ecd9d9f624d0461303f40bd93b",
│ │ │ -                "sha256:e3d4a65852f029e5ba441a01824d2d839d30bb8fb071635ef9cb53952698e6bf"
│ │ │ +                "sha256:6fa4dbd933d0e335b5392c81e9cd467630119b3669705dbad47814a93b6c9586",
│ │ │ +                "sha256:cd88e41aef9c71f0ba02b6d7939f102760b192b63458fbe04dbbaed82f7bf5f5"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==4.4.6"
│ │ │ +            "version": "==4.4.11"
│ │ │          },
│ │ │          "types-requests": {
│ │ │              "hashes": [
│ │ │ -                "sha256:a05e4c7bc967518fba5789c341ea8b0c942776ee474c7873129a61161978e586",
│ │ │ -                "sha256:fc8eaa09cc014699c6b63c60c2e3add0c8b09a410c818b5ac6e65f92a26dde09"
│ │ │ +                "sha256:0d580652ce903f643f8c3b494dd01d29367ea57cea0c7ad7f65cf3169092edb0",
│ │ │ +                "sha256:cc1aba862575019306b2ed134eb1ea994cab1c887a22e18d3383e6dd42e9789b"
│ │ │              ],
│ │ │              "index": "pypi",
│ │ │ -            "version": "==2.28.11.15"
│ │ │ +            "version": "==2.28.11.17"
│ │ │          },
│ │ │          "types-urllib3": {
│ │ │              "hashes": [
│ │ │ -                "sha256:95ea847fbf0bf675f50c8ae19a665baedcf07e6b4641662c4c3c72e7b2edf1a9",
│ │ │ -                "sha256:ecf43c42d8ee439d732a1110b4901e9017a79a38daca26f08e42c8460069392c"
│ │ │ +                "sha256:12c744609d588340a07e45d333bf870069fc8793bcf96bae7a96d4712a42591d",
│ │ │ +                "sha256:c44881cde9fc8256d05ad6b21f50c4681eb20092552351570ab0a8a0653286d6"
│ │ │              ],
│ │ │ -            "version": "==1.26.25.8"
│ │ │ +            "version": "==1.26.25.10"
│ │ │          },
│ │ │          "typing-extensions": {
│ │ │              "hashes": [
│ │ │                  "sha256:5cb5f4a79139d699607b3ef622a1dedafa84e115ab0024e0d9c044a9479ca7cb",
│ │ │                  "sha256:fb33085c39dd998ac16d1431ebc293a8b3eedd00fd4a32de0ff79002c19511b4"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │              "version": "==4.5.0"
│ │ │          },
│ │ │          "urllib3": {
│ │ │              "hashes": [
│ │ │ -                "sha256:076907bf8fd355cde77728471316625a4d2f7e713c125f51953bb5b3eecf4f72",
│ │ │ -                "sha256:75edcdc2f7d85b137124a6c3c9fc3933cdeaa12ecb9a6a959f22797a0feca7e1"
│ │ │ +                "sha256:8a388717b9476f934a21484e8c8e61875ab60644d29b9b39e11e4b9dc1c6b305",
│ │ │ +                "sha256:aa751d169e23c7479ce47a0cb0da579e3ede798f994f5816a74e4f4500dcea42"
│ │ │              ],
│ │ │              "markers": "python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5'",
│ │ │ -            "version": "==1.26.14"
│ │ │ +            "version": "==1.26.15"
│ │ │          },
│ │ │          "virtualenv": {
│ │ │              "hashes": [
│ │ │ -                "sha256:3c22fa5a7c7aa106ced59934d2c20a2ecb7f49b4130b8bf444178a16b880fa45",
│ │ │ -                "sha256:a8a4b8ca1e28f864b7514a253f98c1d62b64e31e77325ba279248c65fb4fcef4"
│ │ │ +                "sha256:31712f8f2a17bd06234fa97fdf19609e789dd4e3e4bf108c3da71d710651adbc",
│ │ │ +                "sha256:f50e3e60f990a0757c9b68333c9fdaa72d7188caa417f96af9e52407831a3b68"
│ │ │              ],
│ │ │              "markers": "python_version >= '3.7'",
│ │ │ -            "version": "==20.20.0"
│ │ │ +            "version": "==20.21.0"
│ │ │          }
│ │ │      }
│ │ │  }
│ │   --- repository_service_tuf-0.0.1a9/README.rst
│ ├── +++ repository_service_tuf-0.1.0a1/README.rst
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/id_ed25519
│ ├── +++ repository_service_tuf-0.1.0a1/id_ed25519
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/pyproject.toml
│ ├── +++ repository_service_tuf-0.1.0a1/pyproject.toml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/requirements-dev.txt
│ ├── +++ repository_service_tuf-0.1.0a1/requirements-dev.txt
│ │┄ Files 3% similar despite different names
│ │ @@ -1,88 +1,88 @@
│ │  -i https://pypi.org/simple
│ │  alabaster==0.7.13 ; python_version >= '3.6'
│ │  attrs==22.2.0 ; python_version >= '3.6'
│ │  babel==2.12.1 ; python_version >= '3.7'
│ │ -bandit==1.7.4
│ │ -black==23.1.0
│ │ +bandit==1.7.5
│ │ +black==23.3.0
│ │  build==0.10.0
│ │  cachetools==5.3.0 ; python_version ~= '3.7'
│ │  certifi==2022.12.7 ; python_version >= '3.6'
│ │  cfgv==3.3.1 ; python_full_version >= '3.6.1'
│ │  chardet==5.1.0 ; python_version >= '3.7'
│ │ -charset-normalizer==3.0.1
│ │ +charset-normalizer==3.1.0 ; python_full_version >= '3.7.0'
│ │  click==8.1.3
│ │  colorama==0.4.6 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6'
│ │ -coverage==7.2.1
│ │ +coverage==7.2.2
│ │  distlib==0.3.6
│ │  docutils==0.18.1 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4'
│ │  editables==0.3 ; python_version >= '3.1'
│ │ -exceptiongroup==1.1.0 ; python_version < '3.11'
│ │ -filelock==3.9.0 ; python_version >= '3.7'
│ │ +exceptiongroup==1.1.1 ; python_version < '3.11'
│ │ +filelock==3.10.7 ; python_version >= '3.7'
│ │  flake8==6.0.0
│ │  gitdb==4.0.10 ; python_version >= '3.7'
│ │  gitpython==3.1.31 ; python_version >= '3.7'
│ │  hatchling==0.22.0
│ │ -identify==2.5.18 ; python_version >= '3.7'
│ │ +identify==2.5.22 ; python_version >= '3.7'
│ │  idna==3.4 ; python_version >= '3.5'
│ │  imagesize==1.4.1 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'
│ │  iniconfig==2.0.0 ; python_version >= '3.7'
│ │  isort==5.12.0
│ │  jinja2==3.1.2 ; python_version >= '3.7'
│ │ +markdown-it-py==2.2.0 ; python_version >= '3.7'
│ │  markupsafe==2.1.2 ; python_version >= '3.7'
│ │  mccabe==0.7.0 ; python_version >= '3.6'
│ │ -mypy==1.0.1
│ │ +mdurl==0.1.2 ; python_version >= '3.7'
│ │ +mypy==1.1.1
│ │  mypy-extensions==1.0.0 ; python_version >= '3.5'
│ │  nodeenv==1.7.0 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6'
│ │  packaging==23.0 ; python_version >= '3.1'
│ │ -pathspec==0.11.0 ; python_version >= '3.7'
│ │ +pathspec==0.11.1 ; python_version >= '3.7'
│ │  pbr==5.11.1 ; python_version >= '2.6'
│ │  pip==23.0.1
│ │ -platformdirs==3.0.0 ; python_version >= '3.7'
│ │ +platformdirs==3.2.0 ; python_version >= '3.7'
│ │  pluggy==1.0.0 ; python_version >= '3.1'
│ │ -pre-commit==3.1.1
│ │ +pre-commit==3.2.2
│ │  pretend==1.0.9
│ │  pycodestyle==2.10.0 ; python_version >= '3.6'
│ │  pyflakes==3.0.1 ; python_version >= '3.6'
│ │  pygments==2.14.0 ; python_version >= '3.6'
│ │ -pyproject-api==1.5.0 ; python_version >= '3.7'
│ │ +pyproject-api==1.5.1 ; python_version >= '3.7'
│ │  pyproject-hooks==1.0.0 ; python_version >= '3.7'
│ │ -pytest==7.2.1
│ │ +pytest==7.2.2
│ │  pyyaml==6.0 ; python_version >= '3.6'
│ │  requests==2.28.2
│ │ -setuptools==67.4.0 ; python_version >= '3.7'
│ │ +rich==13.3.3
│ │ +setuptools==67.6.1 ; python_version >= '3.7'
│ │  smmap==5.0.0 ; python_version >= '3.6'
│ │  snowballstemmer==2.2.0
│ │  sphinx==6.1.3
│ │  sphinx-rtd-theme==1.2.0
│ │  sphinxcontrib-applehelp==1.0.4
│ │  sphinxcontrib-devhelp==1.0.2
│ │  sphinxcontrib-htmlhelp==2.0.1
│ │ -sphinxcontrib-jquery==2.0.0 ; python_version >= '3.1'
│ │ +sphinxcontrib-jquery==4.1 ; python_version >= '3.1'
│ │  sphinxcontrib-jsmath==1.0.1
│ │ -sphinxcontrib-plantuml==0.24.1
│ │ +sphinxcontrib-plantuml==0.25
│ │  sphinxcontrib-qthelp==1.0.3
│ │  sphinxcontrib-serializinghtml==1.1.5
│ │  stevedore==5.0.0 ; python_version >= '3.8'
│ │  tomli==2.0.1 ; python_version >= '3.1'
│ │ -tox==4.4.6
│ │ -types-requests==2.28.11.15
│ │ -types-urllib3==1.26.25.8
│ │ +tox==4.4.11
│ │ +types-requests==2.28.11.17
│ │ +types-urllib3==1.26.25.10
│ │  typing-extensions==4.5.0 ; python_version >= '3.7'
│ │ -urllib3==1.26.14 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5'
│ │ -virtualenv==20.20.0 ; python_version >= '3.7'
│ │ +urllib3==1.26.15 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5'
│ │ +virtualenv==20.21.0 ; python_version >= '3.7'
│ │  cffi==1.15.1
│ │  configobj==5.0.8
│ │ -cryptography==39.0.1
│ │ -dynaconf[ini]==3.1.11
│ │ +cryptography==40.0.1
│ │ +dynaconf[ini]==3.1.12
│ │  greenlet==2.0.2 ; platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32')))))
│ │ -markdown-it-py==2.2.0 ; python_version >= '3.7'
│ │ -mdurl==0.1.2 ; python_version >= '3.7'
│ │ -psycopg2==2.9.5
│ │ +psycopg2==2.9.6
│ │  pycparser==2.21
│ │  pynacl==1.5.0
│ │ -rich==13.3.1
│ │  rich-click==1.6.1
│ │ -securesystemslib[crypto]==0.26.0
│ │ +securesystemslib[crypto]==0.27.0
│ │  six==1.16.0 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'
│ │ -sqlalchemy==2.0.4
│ │ +sqlalchemy==2.0.9
│ │  tuf==2.0.0
│ │   --- repository_service_tuf-0.0.1a9/requirements.txt
│ ├── +++ repository_service_tuf-0.1.0a1/requirements.txt
│ │┄ Files 19% similar despite different names
│ │ @@ -1,26 +1,26 @@
│ │  -i https://pypi.org/simple
│ │  certifi==2022.12.7 ; python_version >= '3.6'
│ │  cffi==1.15.1
│ │ -charset-normalizer==3.0.1
│ │ +charset-normalizer==3.1.0 ; python_full_version >= '3.7.0'
│ │  click==8.1.3
│ │  configobj==5.0.8
│ │ -cryptography==39.0.1
│ │ -dynaconf[ini]==3.1.11
│ │ +cryptography==40.0.1
│ │ +dynaconf[ini]==3.1.12
│ │  greenlet==2.0.2 ; platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32')))))
│ │  idna==3.4 ; python_version >= '3.5'
│ │  isort==5.12.0
│ │  markdown-it-py==2.2.0 ; python_version >= '3.7'
│ │  mdurl==0.1.2 ; python_version >= '3.7'
│ │ -psycopg2==2.9.5
│ │ +psycopg2==2.9.6
│ │  pycparser==2.21
│ │  pygments==2.14.0 ; python_version >= '3.6'
│ │  pynacl==1.5.0
│ │  requests==2.28.2
│ │ -rich==13.3.1
│ │ +rich==13.3.3
│ │  rich-click==1.6.1
│ │ -securesystemslib[crypto]==0.26.0
│ │ +securesystemslib[crypto]==0.27.0
│ │  six==1.16.0 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'
│ │ -sqlalchemy==2.0.4
│ │ +sqlalchemy==2.0.9
│ │  tuf==2.0.0
│ │  typing-extensions==4.5.0 ; python_version >= '3.7'
│ │ -urllib3==1.26.14 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5'
│ │ +urllib3==1.26.15 ; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5'
│ │   --- repository_service_tuf-0.0.1a9/tox.ini
│ ├── +++ repository_service_tuf-0.1.0a1/tox.ini
│ │┄ Files 4% similar despite different names
│ │ @@ -17,15 +17,17 @@
│ │      pre-commit run flake8 --all-files --show-diff-on-failure
│ │      pre-commit run isort --all-files --show-diff-on-failure
│ │      pre-commit run black --all-files --show-diff-on-failure
│ │      pre-commit run bandit --all-files --show-diff-on-failure
│ │  
│ │  [testenv:typing]
│ │  commands =
│ │ -    mypy .
│ │ +    # Exclude tests for now as mocking and using pretend often leads to many
│ │ +    # mypy warnings.
│ │ +    mypy --exclude tests/ .
│ │  
│ │  [testenv:test]
│ │  allowlist_externals = coverage
│ │  commands =
│ │      coverage run --omit='tests/*' -m pytest -vv
│ │      coverage xml -i
│ │      coverage report
│ │   --- repository_service_tuf-0.0.1a9/.github/ISSUE_TEMPLATE/bug.yml
│ ├── +++ repository_service_tuf-0.1.0a1/.github/ISSUE_TEMPLATE/bug.yml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/.github/ISSUE_TEMPLATE/other.yml
│ ├── +++ repository_service_tuf-0.1.0a1/.github/ISSUE_TEMPLATE/other.yml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/.github/ISSUE_TEMPLATE/task.yml
│ ├── +++ repository_service_tuf-0.1.0a1/.github/ISSUE_TEMPLATE/task.yml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/.github/PULL_REQUEST_TEMPLATE/pr.yml
│ ├── +++ repository_service_tuf-0.1.0a1/.github/PULL_REQUEST_TEMPLATE/pr.yml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/.github/workflows/cd.yml
│ ├── +++ repository_service_tuf-0.1.0a1/.github/workflows/cd.yml
│ │┄ Files 9% similar despite different names
│ │ @@ -21,15 +21,15 @@
│ │      name: Build
│ │      runs-on: ubuntu-latest
│ │      needs: functional-latest
│ │      outputs:
│ │        release_id: ${{ steps.gh-release.outputs.id }}
│ │      steps:
│ │        - name: Checkout release tag
│ │ -        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
│ │ +        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
│ │          with:
│ │            ref: ${{ github.event.workflow_run.head_branch }}
│ │  
│ │        - name: Set up Python
│ │          uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
│ │          with:
│ │            python-version: '3.x'
│ │   --- repository_service_tuf-0.0.1a9/.github/workflows/ci.yml
│ ├── +++ repository_service_tuf-0.1.0a1/.github/workflows/ci.yml
│ │┄ Files 26% similar despite different names
│ │ @@ -11,15 +11,15 @@
│ │    build:
│ │      runs-on: ubuntu-latest
│ │      strategy:
│ │        matrix:
│ │          python-versions: [ "3.10", "3.11" ]
│ │  
│ │      steps:
│ │ -    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
│ │ +    - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
│ │      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
│ │        with:
│ │          python-version: ${{ matrix.python-versions }}
│ │  
│ │      - name: Install tox and coverage
│ │        run: pip install tox tox-gh-actions build
│ │   --- repository_service_tuf-0.0.1a9/.github/workflows/update-python-deps.yml
│ ├── +++ repository_service_tuf-0.1.0a1/.github/workflows/update-python-deps.yml
│ │┄ Files 6% similar despite different names
│ │ @@ -6,30 +6,30 @@
│ │  jobs:
│ │    update-dep:
│ │      runs-on: ubuntu-latest
│ │      strategy:
│ │        matrix:
│ │          python-versions: ["3.10"]
│ │      steps:
│ │ -      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
│ │ +      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
│ │        - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
│ │          with:
│ │            python-version: ${{ matrix.python-versions }}
│ │        - name: Install prerequisites
│ │          run: |
│ │            pip install tox pipenv
│ │        - name: Update dependencies
│ │          run: |
│ │            pipenv update -d
│ │            make requirements
│ │        - name: Run tests
│ │          run: |
│ │            make tests
│ │        - name: Create Pull Request
│ │ -        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04
│ │ +        uses: peter-evans/create-pull-request@5b4a9f6a9e2af26e5f02351490b90d01eb8ec1e5
│ │          with:
│ │            token: ${{ secrets.GITHUB_TOKEN }}
│ │            commit-message: "build: Update Python dependencies"
│ │            branch: "rstuf-bot/update-python-dependencies"
│ │            delete-branch: true
│ │            title: "build: Update Python dependencies"
│ │            body: >
│ │   --- repository_service_tuf-0.0.1a9/docs/Makefile
│ ├── +++ repository_service_tuf-0.1.0a1/docs/Makefile
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/make.bat
│ ├── +++ repository_service_tuf-0.1.0a1/docs/make.bat
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/diagrams/repository-service-tuf-cli-C1.puml
│ ├── +++ repository_service_tuf-0.1.0a1/docs/diagrams/repository-service-tuf-cli-C1.puml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/diagrams/repository-service-tuf-cli-C2.puml
│ ├── +++ repository_service_tuf-0.1.0a1/docs/diagrams/repository-service-tuf-cli-C2.puml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/diagrams/repository-service-tuf-cli-C3.puml
│ ├── +++ repository_service_tuf-0.1.0a1/docs/diagrams/repository-service-tuf-cli-C3.puml
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/conf.py
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/conf.py
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/_static/repository-service-tuf-cli-C1.png
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/_static/repository-service-tuf-cli-C1.png
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/_static/repository-service-tuf-cli-C2.png
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/_static/repository-service-tuf-cli-C2.png
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/_static/repository-service-tuf-cli-C3.png
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/_static/repository-service-tuf-cli-C3.png
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/devel/design.rst
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/devel/design.rst
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/devel/repository_service_tuf.cli.admin.rst
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/devel/repository_service_tuf.cli.admin.rst
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/devel/repository_service_tuf.helpers.rst
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/devel/repository_service_tuf.helpers.rst
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/docs/source/guide/index.rst
│ ├── +++ repository_service_tuf-0.1.0a1/docs/source/guide/index.rst
│ │┄ Files 27% similar despite different names
│ │ @@ -1,7 +1,8 @@
│ │ +
│ │  ==============================
│ │  Repository Service for TUF CLI
│ │  ==============================
│ │  
│ │  ``repository-service-tuf`` is a Command Line Interface for the Repository Service for TUF.
│ │  
│ │  Installation
│ │ @@ -12,49 +13,55 @@
│ │  .. code:: shell
│ │  
│ │      $ pip install repository-service-tuf
│ │  
│ │  .. code:: shell
│ │  
│ │      ❯ rstuf
│ │ -                                                                                                                                                 
│ │ -     Usage: rstuf [OPTIONS] COMMAND [ARGS]...                                                                                                  
│ │ -                                                                                                                                                 
│ │ -     Repository Service for TUF Command Line Interface (CLI).                                                                                        
│ │ -                                                                                                                                                 
│ │ -    ╭─ Options ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ -    │  --config  -c  TEXT  Repository Service for TUF config file                                                                                   │
│ │ -    │  --help    -h        Show this message and exit.                                                                                          │
│ │ -    ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ -    ╭─ Commands ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ -    │  admin  Administrative Commands                                                                                                           │
│ │ -    ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ -    
│ │ +
│ │ +    Usage: rstuf [OPTIONS] COMMAND [ARGS]...
│ │ +
│ │ +    Repository Service for TUF Command Line Interface (CLI).
│ │ +
│ │ +    ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ +    │ --config   -c  TEXT  Repository Service for TUF config file                                                                      │
│ │ +    │ --version            Show the version and exit.                                                                                  │
│ │ +    │ --help     -h        Show this message and exit.                                                                                 │
│ │ +    ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ +    ╭─ Commands ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ +    │ admin                      Administrative Commands                                                                               │
│ │ +    │ key                        Cryptographic Key Commands                                                                            │
│ │ +    ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ +
│ │ +.. rstuf-cli-admin
│ │ +
│ │  Administration (``admin``)
│ │  ==========================
│ │  
│ │  It executes administrative commands to the Repository Service for TUF.
│ │  
│ │  .. code:: shell
│ │  
│ │      ❯ rstuf admin
│ │  
│ │      Usage: rstuf admin [OPTIONS] COMMAND [ARGS]...
│ │  
│ │      Administrative Commands
│ │  
│ │ -    ╭─ Options ────────────────────────────────────────────────────────────────────────────╮
│ │ -    │  --help  -h    Show this message and exit.                                           │
│ │ -    ╰──────────────────────────────────────────────────────────────────────────────────────╯
│ │ -    ╭─ Commands ───────────────────────────────────────────────────────────────────────────╮
│ │ -    │  ceremony  Start a new Metadata Ceremony.                                            │
│ │ -    │  login     Login to Repository Service for TUF (API).                                            │
│ │ -    │  token     Token Management.                                                         │
│ │ -    ╰──────────────────────────────────────────────────────────────────────────────────────╯
│ │ +    ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ +    │ --help  -h    Show this message and exit.                                                                                        │
│ │ +    ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ +    ╭─ Commands ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ +    │ ceremony                        Start a new Metadata Ceremony.                                                                   │
│ │ +    │ import-targets                  Import targets to RSTUF from exported CSV file.                                                  │
│ │ +    │ login                           Login to Repository Service for TUF (API).                                                       │
│ │ +    │ token                           Token Management.                                                                                │
│ │ +    ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │  
│ │ +.. rstuf-cli-admin-login
│ │  
│ │  Login to Server (``login``)
│ │  ---------------------------
│ │  
│ │  This command will log in to Repository Service for TUF and give you a token to run other commands
│ │  such as Ceremony, Token Generation, etc.
│ │  
│ │ @@ -74,49 +81,47 @@
│ │      Username (admin): admin
│ │      Password:
│ │      Expire (in hours): 2
│ │      Token stored in /Users/kairoaraujo/.repository_service_tuf.ini
│ │  
│ │      Login successful.
│ │  
│ │ +.. rstuf-cli-admin-ceremony
│ │  
│ │  Ceremony (``ceremony``)
│ │  -----------------------
│ │  
│ │  The Repository Service for TUF Metadata uses the following Roles: ``root``, ``timestamp``,
│ │ -``snapshot``, ``targets``, ``bin``, and ``bins`` to build the Repository
│ │ +``snapshot``, ``targets``, and ``bins`` to build the Repository
│ │  Metadata (for more details, check out TUF Specification and PEP 458).
│ │  
│ │  The Ceremony is a complex process that Repository Service for TUF CLI tries to simplify.
│ │  You can do the Ceremony offline. This means on a disconnected computer
│ │  (recommended once you will manage the keys).
│ │  
│ │  
│ │  .. code:: shell
│ │  
│ │      ❯ rstuf admin ceremony --help
│ │ -                                                                                                                            
│ │ -    Usage: rstuf admin ceremony [OPTIONS]                                                                                  
│ │ -                                                                                                                            
│ │ -    Start a new Metadata Ceremony.                                                                                           
│ │ -                                                                                                                            
│ │ -    ╭─ Options ───────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ -    │  --bootstrap  -b        Bootstrap a Repository Service for TUF using the Repository Metadata after Ceremony     │
│ │ -    │  --file       -f  TEXT  Generate specific JSON Payload compatible with Repository Service for TUF bootstrap     │
│ │ -                              after Ceremony                                                                          │
│ │ -    │                         [default: payload.json]                                                                 │
│ │ -    │  --upload     -u        Upload existent payload 'file'. Requires '-b/--bootstrap'. Optional '-f/--file' to use  │
│ │ -    │                         non default file.                                                                       │
│ │ -    │  --save       -s        Save a copy of the metadata locally. This option saves the metadata files (json) in the │
│ │ -    │                         'metadata' dir.                                                                         │
│ │ -    │                         [default: False]                                                                        │
│ │ -    │  --help       -h        Show this message and exit.                                                             │
│ │ -    ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │  
│ │ -There are three steps in the Ceremony.
│ │ +    Usage: rstuf admin ceremony [OPTIONS]
│ │ +
│ │ +    Start a new Metadata Ceremony.
│ │ +
│ │ +    ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ +    │ --bootstrap  -b        Bootstrap a Repository Service for TUF using the Repository Metadata after Ceremony                       │
│ │ +    │ --file       -f  TEXT  Generate specific JSON Payload compatible with TUF Repository Service bootstrap after Ceremony            │
│ │ +    │                        [default: payload.json]                                                                                   │
│ │ +    │ --upload     -u        Upload existent payload 'file'. Requires '-b/--bootstrap'. Optional '-f/--file' to use non default file.  │
│ │ +    │ --save       -s        Save a copy of the metadata locally. This option saves the JSON metadata files in the 'metadata' folder   │
│ │ +    │                        in the current directory.                                                                                 │
│ │ +    │ --help       -h        Show this message and exit.                                                                               │
│ │ +    ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ +
│ │ +There are four steps in the ceremony.
│ │  
│ │  .. note::
│ │  
│ │      We recommend running the ``rstuf admin ceremony`` to simulate and check
│ │      the details of the instructions. It is more detailed.
│ │  
│ │  
│ │ @@ -124,287 +129,298 @@
│ │  ...........................
│ │  
│ │  .. code:: shell
│ │  
│ │      ❯ rstuf admin ceremony
│ │  
│ │      (...)
│ │ -    Do you want start the ceremony? [y/n]: y
│ │ -    ╔══════════════════════════════════════════════════════════════════════════════╗
│ │ -    ║                         STEP 1: Configure the Roles                          ║
│ │ -    ╚══════════════════════════════════════════════════════════════════════════════╝
│ │ +    Do you want to start the ceremony? [y/n]: y
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃                         STEP 1: Configure the Roles                          ┃
│ │ +    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
│ │ +
│ │ +    The TUF root role supports multiple keys and the threshold (quorum of trust)
│ │ +    defines the minimal number of keys required to take actions using the root role.
│ │  
│ │ -    The TUF roles support multiple keys and the threshold (quorum trust) defines
│ │ -    the minimal number of keys required to take actions using a specific Role.
│ │ +    Reference: TUF Goals for PKI
│ │  
│ │ -    Reference: TUF                                                                  
│ │ +    The TUF roles have an expiration, clients must not trust expired metadata.
│ │  
│ │ -    What is the Metadata expiration for the root role?(Days) (365):
│ │ +    Reference: TUF expires
│ │ +
│ │ +                                            root configuration
│ │ +
│ │ +    What is the metadata expiration for the root role?(Days) (365):
│ │      What is the number of keys for the root role? (2):
│ │      What is the key threshold for the root role signing? (1):
│ │  
│ │ -    What is the Metadata expiration for the targets role?(Days) (365):
│ │ -    What is the number of keys for the targets role? (2):
│ │ -    What is the key threshold for the targets role signing? (1):
│ │ -    The role targets delegates paths to the bin role. See TUF Specification about Path Pattern for the paths
│ │ -    pattern and the example.                                                                            
│ │ -    Show example [y/n] (y): y
│ │ +                                        targets configuration
│ │  
│ │ -                                                Example:                                              
│ │ +    What is the metadata expiration for the targets role?(Days) (365):
│ │  
│ │ -    The Organization Example (https://example.com) has all files downloaded /downloads path, meaning    
│ │ -    https://example.com/downloads/.                                                                     
│ │  
│ │ -    Additionally, it has two sub-folders, productA and productB where the clients can find all files
│ │ -    (i.e.: productA-v1.0.tar, productB-1.0.tar), for productB it even has a sub-folder, updates where
│ │ -    clients can find update files (i.e.: servicepack-1.tar, servicepack-2.tar).
│ │ +    The target metadata file might contain a large number of target files.
│ │ +    That is why the targets role
│ │ +    delegates trust to the hash bin roles to reduce the metadata overhead for
│ │ +    clients.
│ │  
│ │ -    In that case mapping all targets files paths as:                                                    
│ │ +    See: TUF Specification about succinct hash bin delegation.
│ │ +    Show example? [y/n] (y): y
│ │  
│ │ -    • https://example.com/downloads/ is *                                                              
│ │ -    • https://example.com/downloads/productA/ is */*                                                   
│ │ -    • https://example.com/downloads/productB/ is */* (same as above)                                   
│ │ -    • https://example.com/downloads/productB/updates/ is */*/*                                         
│ │ +    Choose the number of delegated hash bin roles [2/4/8/16/32/64/128/256/512/1024/2048/4096/8192/16384] (256): 16
│ │  
│ │ -    Specific paths that role targets delegates are: */productA/*, */productB/*, * /productB/updates/*   
│ │ +    What is the targets base URL? (i.e.: https://www.example.com/downloads/): http://www.example.com/downloads/
│ │  
│ │ -    Generic paths that role targets delegates are: *, */*, */*/*                                        
│ │ +                                        snapshot configuration
│ │  
│ │ -    What is the Base URL (i.e.: https://www.example.com/downloads/): https://www.example.com/downloads/
│ │ +    What is the metadata expiration for the snapshot role?(Days) (1):
│ │  
│ │ -    What paths targets delegates? (*, */*): *, */*, */*/*
│ │ +                                        timestamp configuration
│ │  
│ │ -    What is the Metadata expiration for the snapshot role?(Days) (1):
│ │ -    What is the number of keys for the snapshot role? (1):
│ │ -    The threshold for snapshot is 1 (one) based on the number of keys (1).
│ │ +    What is the metadata expiration for the timestamp role?(Days) (1):
│ │  
│ │ -    What is the Metadata expiration for timestamp role?(Days) (1):
│ │ -    What is the number of keys for timestamp role? (1): 
│ │ -    The threshold for timestamp is 1 (one) based on the number of keys (1).
│ │ +                                            bins configuration
│ │  
│ │ -    What is the Metadata expiration for the bin role?(Days) (365):
│ │ -    What is the number of keys for the bin role? (1):
│ │ -    The threshold for bin is 1 (one) based on the number of keys (1).
│ │ +    What is the metadata expiration for the bins role?(Days) (1):
│ │  
│ │ -    What is the Metadata expiration for the bins role?(Days) (1):
│ │ -    What is the number of keys for the bins role? (1):
│ │ -    The threshold for bins is 1 (one) based on the number of keys (1).
│ │ -    Number of hashed bins for bins? (8): 
│ │  
│ │  
│ │  1. root ``expiration``, ``number of keys``, and ``threshold``
│ │ -2. targets ``expiration``, ``number of keys``,  ``threshold``, the ``base URL``
│ │ -   for the files (target files), and the ``paths``
│ │ -3. snapshot ``expiration``, ``number of keys``, and ``threshold``
│ │ -4. timestamp ``expiration``, ``number of keys``, and ``threshold``
│ │ -5. bin ``expiration``, ``number of keys``, and ``threshold``
│ │ -6. bins ``expiration``, ``number of keys``, ``threshold``, and ``number of hash bins``
│ │ -
│ │ -- ``expiration`` is the number of days in which the Metadata will expire
│ │ -- ``number of keys`` Metadata will have
│ │ -- ``threshold`` is the number of keys needed to sign the Metadata
│ │ +2. targets ``expiration``, the ``base URL`` for the files (target files), and the
│ │ +   ``number of delegated hash bins``
│ │ +3. snapshot ``expiration``
│ │ +4. timestamp ``expiration``
│ │ +5. bins ``expiration``
│ │ +
│ │ +- ``expiration`` is the number of days in which the metadata will expire
│ │ +- ``number of keys`` the metadata will have
│ │ +- ``threshold`` is the number of keys needed to sign the metadata
│ │  - ``base URL`` for the artifacts, example: http://www.example.com/download/
│ │ -- ``paths`` is the delegated paths, example:
│ │ -  http://www.example.com/download/productA/* will be ``*, */*``
│ │ -- ``number of hash bins`` is the number of hash bins between 1 and 32. How many
│ │ +- ``number of delegated hash bins`` is the number of hash bin roles, How many
│ │    delegated roles (``bins-X``) will it create?
│ │  
│ │ -Step 2: Loading the Keys
│ │ -........................
│ │ +Step 2: Load the Online Key
│ │ +...........................
│ │  
│ │ -It is essential to define the Key Owners. There is a suggestion in the CLI.
│ │ +.. code::
│ │  
│ │ -The owners will need to be present to share the key and use their password to
│ │ -load the keys.
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃                                   STEP 2: Load the Online Key                                    ┃
│ │ +    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
│ │  
│ │ -.. code:: shell
│ │  
│ │ -    ╔══════════════════════════════════════════════════════════════════════════════════════════════════╗
│ │ -    ║                                     STEP 2: Load roles keys                                      ║
│ │ -    ╚══════════════════════════════════════════════════════════════════════════════════════════════════╝
│ │ +                                            The Online Key
│ │  
│ │ -    The keys must have a password and the file must be accessible.
│ │ +    The online key is the same one provided to the Repository Service for TUF Workers (RSTUF Worker).
│ │ +    This key is responsible for signing the snapshot, timestamp, targets, and delegated targets (hash
│ │ +    bin) roles.
│ │  
│ │ -    Depending on the Organization, each key has an owner. During the key loading process, it is
│ │ -    important that the owner of the key inserts the password.
│ │ +    The RSTUF Worker uses this key during the process of managing the metadata.
│ │  
│ │ -    The password or the key content is not shown on the screen.
│ │ +    Note: the ceremony process won't show any password or key content.
│ │  
│ │ -    Ready to start loading the keys? Passwords will be required for keys [y/n]: y
│ │ +    Choose 1/1 ONLINE key type [ed25519/ecdsa/rsa] (ed25519):
│ │ +    Enter 1/1 the ONLINE`s private key path: tests/files/online.key
│ │ +    Enter 1/1 the ONLINE`s private key password:
│ │ +    ✅ Key 1/1 Verified
│ │  
│ │ -    Enter 1/2 the root`s Key path: tests/files/JanisJoplin.key
│ │ -    Enter 1/2 the root`s Key password: 
│ │ -    ✅ Key 1/2 Verified
│ │ +    Step 3: Validate the information/settings
│ │ +    .........................................
│ │  
│ │ -    Enter 2/2 the root`s Key path: tests/files/JimiHendrix.key
│ │ -    Enter 2/2 the root`s Key password: 
│ │ -    ✅ Key 2/2 Verified
│ │ +    After confirming all details, the initial payload for bootstrap will be
│ │ +    complete (without the offline keys).
│ │  
│ │ -    Enter 1/2 the targets`s Key path: tests/files/KurtCobain.key
│ │ -    Enter 1/2 the targets`s Key password: 
│ │ -    ✅ Key 1/2 Verified
│ │  
│ │ -    Enter 2/2 the targets`s Key path: tests/files/ChrisCornel.key
│ │ -    Enter 2/2 the targets`s Key password: 
│ │ -    ✅ Key 2/2 Verified
│ │ +Step 3: Load Root Keys
│ │ +......................
│ │  
│ │ -    Enter 1/1 the snapshot`s Key path: tests/files/snapshot1.key
│ │ -    Enter 1/1 the snapshot`s Key password: 
│ │ -    ✅ Key 1/1 Verified
│ │ +It is essential to define the key owners. There is a suggestion in the CLI.
│ │  
│ │ -    Enter 1/1 the timestamp`s Key path: tests/files/timestamp1.key
│ │ -    Enter 1/1 the timestamp`s Key password: 
│ │ -    ✅ Key 1/1 Verified
│ │ +The owners will need to be present to insert their keys and passwords
│ │ +to load their keys.
│ │  
│ │ -    Enter 1/1 the bin`s Key path: tests/files/JoeCocker.key
│ │ -    Enter 1/1 the bin`s Key password: 
│ │ -    ✅ Key 1/1 Verified
│ │ +.. code::
│ │  
│ │ -    Enter 1/1 the bins`s Key path: tests/files/bins1.key
│ │ -    Enter 1/1 the bins`s Key password: 
│ │ -    ✅ Key 1/1 Verified
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃                                      STEP 3: Load Root Keys                                      ┃
│ │ +    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
│ │  
│ │  
│ │ -Step 3: Validate the information/settings
│ │ -.........................................
│ │ +                                                Root Keys
│ │  
│ │ -After confirming all details, the initial payload for bootstrap will be
│ │ -complete (without the offline keys).
│ │ +    The keys must have a password, and the file must be accessible.
│ │  
│ │ -.. code:: shell
│ │ +    Depending on the organization, each key has an owner, and each owner should insert their password
│ │ +    personally.
│ │ +
│ │ +    Note: the ceremony process won't show any password or key content.
│ │  
│ │ -    ╔══════════════════════════════════════════════════════════════════════════════════════════════════╗
│ │ -    ║                                  STEP 3: Validate configuration                                  ║
│ │ -    ╚══════════════════════════════════════════════════════════════════════════════════════════════════╝
│ │ -
│ │ -    The information below is the configuration done in the preview steps. Check the number of keys, the
│ │ -    threshold/quorum and type of key.
│ │ -    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ -    ┃       ROLE SUMMARY        ┃                                 KEYS                                 ┃
│ │ -    ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ -    │        Role: root         │                   ╷                                     ╷            │
│ │ -    │     Number of Keys: 2     │              path │                 id                  │ verified   │
│ │ -    │       Threshold: 1        │ ╶─────────────────┼─────────────────────────────────────┼──────────╴ │
│ │ -    │    Keys Type: offline     │   JanisJoplin.key │ 1cebe343e35f0213f6136758e6c3a8f8e1… │    ✅      │
│ │ -    │ Role Expiration: 365 days │   JimiHendrix.key │ 800dfb5a1982b82b7893e58035e19f414f… │    ✅      │
│ │ -    │                           │                   ╵                                     ╵            │
│ │ -    └───────────────────────────┴──────────────────────────────────────────────────────────────────────┘
│ │ -    Configuration correct for root? [y/n]: y
│ │ -    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ -    ┃              ROLE SUMMARY               ┃                          KEYS                          ┃
│ │ -    ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ -    │              Role: targets              │                   ╷                       ╷            │
│ │ -    │            Number of Keys: 2            │              path │          id           │ verified   │
│ │ -    │              Threshold: 1               │ ╶─────────────────┼───────────────────────┼──────────╴ │
│ │ -    │           Keys Type: offline            │    KurtCobain.key │ 208fc4139cf7482abbe8… │    ✅      │
│ │ -    │        Role Expiration: 365 days        │   ChrisCornel.key │ c2e9ee4a292e5d08bc0d… │    ✅      │
│ │ -    │                                         │                   ╵                       ╵            │
│ │ -    │                                         │                                                        │
│ │ -    │                                         │                                                        │
│ │ -    │               DELEGATIONS               │                                                        │
│ │ -    │             targets -> bin              │                                                        │
│ │ -    │   https://www.example.com/downloads/*   │                                                        │
│ │ -    │  https://www.example.com/downloads/*/*  │                                                        │
│ │ -    │ https://www.example.com/downloads/*/*/* │                                                        │
│ │ -    └─────────────────────────────────────────┴────────────────────────────────────────────────────────┘
│ │ -    Configuration correct for targets? [y/n]: y
│ │ -    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ -    ┃      ROLE SUMMARY       ┃                                  KEYS                                  ┃
│ │ -    ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ -    │     Role: snapshot      │                 ╷                                         ╷            │
│ │ -    │    Number of Keys: 1    │            path │                   id                    │ verified   │
│ │ -    │      Threshold: 1       │ ╶───────────────┼─────────────────────────────────────────┼──────────╴ │
│ │ -    │    Keys Type: online    │   snapshot1.key │ 139c406ac6150598fb9f7cafd1463bc07e0318… │    ✅      │
│ │ -    │ Role Expiration: 1 days │                 ╵                                         ╵            │
│ │ -    └─────────────────────────┴────────────────────────────────────────────────────────────────────────┘
│ │ -    Configuration correct for snapshot? [y/n]: y
│ │ -    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ -    ┃      ROLE SUMMARY       ┃                                  KEYS                                  ┃
│ │ -    ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ -    │     Role: timestamp     │                  ╷                                        ╷            │
│ │ -    │    Number of Keys: 1    │             path │                   id                   │ verified   │
│ │ -    │      Threshold: 1       │ ╶────────────────┼────────────────────────────────────────┼──────────╴ │
│ │ -    │    Keys Type: online    │   timestamp1.key │ 19f5992640ab71f49fb64d5b5d198ee0115c3… │    ✅      │
│ │ -    │ Role Expiration: 1 days │                  ╵                                        ╵            │
│ │ -    └─────────────────────────┴────────────────────────────────────────────────────────────────────────┘
│ │ -    Configuration correct for timestamp? [y/n]: y
│ │ -    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ -    ┃       ROLE SUMMARY        ┃                                 KEYS                                 ┃
│ │ -    ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ -    │         Role: bin         │                 ╷                                       ╷            │
│ │ -    │     Number of Keys: 1     │            path │                  id                   │ verified   │
│ │ -    │       Threshold: 1        │ ╶───────────────┼───────────────────────────────────────┼──────────╴ │
│ │ -    │    Keys Type: offline     │   JoeCocker.key │ be95ae808ff4f17e248470c941700247d8c7… │    ✅      │
│ │ -    │ Role Expiration: 365 days │                 ╵                                       ╵            │
│ │ -    └───────────────────────────┴──────────────────────────────────────────────────────────────────────┘
│ │ -    Configuration correct for bin? [y/n]: y
│ │ -    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ -    ┃      ROLE SUMMARY       ┃                                  KEYS                                  ┃
│ │ -    ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ -    │       Role: bins        │             ╷                                             ╷            │
│ │ -    │    Number of Keys: 1    │        path │                     id                      │ verified   │
│ │ -    │      Threshold: 1       │ ╶───────────┼─────────────────────────────────────────────┼──────────╴ │
│ │ -    │    Keys Type: online    │   bins1.key │ 9b2a880bd470e8373e24efb0dc54df3909e180e445… │    ✅      │
│ │ -    │ Role Expiration: 1 days │             ╵                                             ╵            │
│ │ -    │                         │                                                                        │
│ │ -    │                         │                                                                        │
│ │ -    │       DELEGATIONS       │                                                                        │
│ │ -    │      bins -> bins       │                                                                        │
│ │ -    │     Number bins: 8      │                                                                        │
│ │ -    └─────────────────────────┴────────────────────────────────────────────────────────────────────────┘
│ │ +    Choose 1/2 root key type [ed25519/ecdsa/rsa] (ed25519):
│ │ +    Enter 1/2 the root`s private key path: tests/files/JanisJoplin.key
│ │ +    Enter 1/2 the root`s private key password:
│ │ +    ✅ Key 1/2 Verified
│ │ +
│ │ +    Choose 2/2 root key type [ed25519/ecdsa/rsa] (ed25519):
│ │ +    Enter 2/2 the root`s private key path: tests/files/JimiHendrix.key
│ │ +    Enter 2/2 the root`s private key password:
│ │ +    ✅ Key 2/2 Verified
│ │ +
│ │ +Step 4: Validate Configuration
│ │ +..............................
│ │ +
│ │ +.. code::
│ │ +
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃                                  STEP 4: Validate Configuration                                  ┃
│ │ +    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
│ │ +
│ │ +    The information below is the configuration done in the previous steps. Check the number of keys, the
│ │ +    threshold/quorum, and the key details.
│ │ +
│ │ +
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃ ONLINE KEY SUMMARY                                                                                                ┃
│ │ +    ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ +    │                          ╷        ╷          ╷                                                                    │
│ │ +    │                     path │  type  │ verified │                                id                                  │
│ │ +    │ ╶────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────────────────────╴ │
│ │ +    │   tests/files/online.key │ Online │    ✅    │ f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8   │
│ │ +    │                          ╵        ╵          ╵                                                                    │
│ │ +    └───────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
│ │ +
│ │ +    Is the online key configuration correct? [y/n]: y
│ │ +
│ │ +
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃ ROLE SUMMARY              ┃                                                 KEYS                                                 ┃
│ │ +    ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ +    │                           │                               ╷         ╷          ╷                                                 │
│ │ +    │ Role: root                │                          path │  type   │ verified │                      id                         │
│ │ +    │ Number of Keys: 2         │ ╶─────────────────────────────┼─────────┼──────────┼───────────────────────────────────────────────╴ │
│ │ +    │ Threshold: 1              │   tests/files/JanisJoplin.key │ Offline │    ✅    │ 1cebe343e35f0213f6136758e6c3a8f8e1f9eeb7e47a…   │
│ │ +    │ Role Expiration: 365 days │   tests/files/JimiHendrix.key │ Offline │    ✅    │ 800dfb5a1982b82b7893e58035e19f414f553fc08cbb…   │
│ │ +    │                           │                               ╵         ╵          ╵                                                 │
│ │ +    └───────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────┘
│ │ +
│ │ +    Is the root configuration correct? [y/n]: y
│ │ +
│ │ +
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃ ROLE SUMMARY                                ┃                                        KEYS                                        ┃
│ │ +    ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ +    │                                             │          ╷          ╷                                                              │
│ │ +    │ Role: targets                               │    type  │ verified │                             id                               │
│ │ +    │ Role Expiration: 365 days                   │ ╶────────┼──────────┼────────────────────────────────────────────────────────────╴ │
│ │ +    │                                             │   Online │    ✅    │ f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36…   │
│ │ +    │                                             │          ╵          ╵                                                              │
│ │ +    │                                             │                                                                                    │
│ │ +    │ Base URL: http://www.example.com/downloads/ │                                                                                    │
│ │ +    │                                             │                                                                                    │
│ │ +    │ DELEGATIONS                                 │                                                                                    │
│ │ +    │ targets -> bins                             │                                                                                    │
│ │ +    │ Number of bins: 16                          │                                                                                    │
│ │ +    └─────────────────────────────────────────────┴────────────────────────────────────────────────────────────────────────────────────┘
│ │ +
│ │ +    Is the targets configuration correct? [y/n]: y
│ │ +
│ │ +
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃ ROLE SUMMARY            ┃                                           KEYS                                           ┃
│ │ +    ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ +    │                         │          ╷          ╷                                                                    │
│ │ +    │ Role: snapshot          │    type  │ verified │                                id                                  │
│ │ +    │ Role Expiration: 1 days │ ╶────────┼──────────┼──────────────────────────────────────────────────────────────────╴ │
│ │ +    │                         │   Online │    ✅    │ f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8   │
│ │ +    │                         │          ╵          ╵                                                                    │
│ │ +    └─────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────┘
│ │ +
│ │ +    Is the snapshot configuration correct? [y/n]: y
│ │ +
│ │ +
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃ ROLE SUMMARY            ┃                                           KEYS                                           ┃
│ │ +    ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ +    │                         │          ╷          ╷                                                                    │
│ │ +    │ Role: timestamp         │    type  │ verified │                                id                                  │
│ │ +    │ Role Expiration: 1 days │ ╶────────┼──────────┼──────────────────────────────────────────────────────────────────╴ │
│ │ +    │                         │   Online │    ✅    │ f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8   │
│ │ +    │                         │          ╵          ╵                                                                    │
│ │ +    └─────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────┘
│ │ +
│ │ +    Is the timestamp configuration correct? [y/n]: y
│ │ +
│ │ +
│ │ +    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
│ │ +    ┃ ROLE SUMMARY            ┃                                           KEYS                                           ┃
│ │ +    ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ │ +    │                         │          ╷          ╷                                                                    │
│ │ +    │ Role: bins              │    type  │ verified │                                id                                  │
│ │ +    │ Role Expiration: 1 days │ ╶────────┼──────────┼──────────────────────────────────────────────────────────────────╴ │
│ │ +    │                         │   Online │    ✅    │ f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8   │
│ │ +    │                         │          ╵          ╵                                                                    │
│ │ +    └─────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────┘
│ │ +
│ │ +    Is the bins configuration correct? [y/n]: y
│ │  
│ │  Finishing
│ │  .........
│ │  
│ │  If you choose ``-b/--bootstrap`` it will automatically send the bootstrap to
│ │  ``repository-service-tuf-api``, no actions necessary.
│ │  
│ │  If you did the ceremony in a disconnected computer:
│ │  Using another computer with access to ``repository-service-tuf-api``
│ │ -1.  Get the generated ``payload.json`` (or the custom name you chose)
│ │ -2.  Install ``repository-service-tuf``
│ │ -3.  Run ``rstuf admin ceremony -b [-u filename]``
│ │ +
│ │ +  1.  Get the generated ``payload.json`` (or the custom name you chose)
│ │ +  2.  Install ``repository-service-tuf``
│ │ +  3.  Run ``rstuf admin ceremony -b -u [-f filename]``
│ │ +
│ │ +
│ │ +.. rstuf-cli-admin-token
│ │  
│ │  Token (``token``)
│ │  -----------------
│ │  
│ │  Token Management
│ │  
│ │ -.. code:: shell
│ │ +.. code::
│ │  
│ │      ❯ rstuf admin token
│ │ -                                                                                                                            
│ │ -    Usage: rstuf admin token [OPTIONS] COMMAND [ARGS]...                                                                   
│ │ -                                                                                                                            
│ │ -    Token Management.                                                                                                        
│ │ -                                                                                                                            
│ │ +
│ │ +    Usage: rstuf admin token [OPTIONS] COMMAND [ARGS]...
│ │ +
│ │ +    Token Management.
│ │ +
│ │      ╭─ Options ──────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │      │  --help  -h    Show this message and exit.                                                                             │
│ │      ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │      ╭─ Commands ─────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │      │  generate  Generate new token.                                                                                         │
│ │      │  inspect   Show token information details.                                                                             │
│ │      ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │  
│ │ +.. rstuf-cli-admin-token-generate
│ │ +
│ │  ``generate``
│ │  ............
│ │ +
│ │  Generate tokens to use in integrations.
│ │  
│ │ -.. code:: shell
│ │ +.. code::
│ │  
│ │      ❯ rstuf admin token generate -h
│ │ -                                                                                                        
│ │ -    Usage: rstuf admin token generate [OPTIONS]                                                      
│ │ -                                                                                                        
│ │ +
│ │ +    Usage: rstuf admin token generate [OPTIONS]
│ │ +
│ │      Generate a new token.
│ │ -                                                                                                        
│ │ +
│ │      ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────╮
│ │      │     --expires  -e  INTEGER  Expires in hours. Default: 24 [default: 24]                          │
│ │      │  *  --scope    -s  TEXT     Scope to grant. Multiple is accepted. Ex: -s write:targets -s        │
│ │ -    │                             read:settings                                                         │
│ │ +    │                             read:settings                                                        │
│ │      │                             [required]                                                           │
│ │      │     --help     -h           Show this message and exit.                                          │
│ │      ╰──────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │  
│ │  Example of usage:
│ │  
│ │  .. code:: shell
│ │ @@ -417,27 +433,29 @@
│ │          LCJzY29wZXMiOlsid3JpdGU6dGFyZ2V0cyJdLCJleHAiOjE2NjIyODExMDl9.ugwibyv8H
│ │          -zVgGgRfliKgUgHZrZzeJDeAw9mQJrYLz8"
│ │      }
│ │  
│ │  This token can be used with GitHub Secrets, Jenkins Secrets, CircleCI, shell
│ │  script, etc
│ │  
│ │ +.. rstuf-cli-admin-token-inspect
│ │ +
│ │  ``inspect``
│ │  ...........
│ │  
│ │  Show token detailed information.
│ │  
│ │  .. code:: shell
│ │  
│ │      ❯ rstuf admin token inspect -h
│ │ -                                                                                                                            
│ │ -    Usage: rstuf admin token inspect [OPTIONS] TOKEN                                                                       
│ │ -                                                                                                                            
│ │ -    Show token information details.                                                                                          
│ │ -                                                                                                                            
│ │ +
│ │ +    Usage: rstuf admin token inspect [OPTIONS] TOKEN
│ │ +
│ │ +    Show token information details.
│ │ +
│ │      ╭─ Options ──────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │      │  --help  -h    Show this message and exit.                                                                             │
│ │      ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │  
│ │      ❯ rstuf admin token inspect eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1...PDwwY
│ │      {
│ │      "data": {
│ │ @@ -447,14 +465,16 @@
│ │          "expired": false,
│ │          "expiration": "2022-09-04T08:42:44"
│ │      },
│ │      "message": "Token information"
│ │      }
│ │  
│ │  
│ │ +.. rstuf-cli-admin-import-targets
│ │ +
│ │  Import Targets (``import-targets``)
│ │  -----------------------------------
│ │  
│ │  This feature imports a large number of targets directly to RSTUF Database.
│ │  RSTUF doesn't recommend using this feature for regular flow, but in case you're
│ │  onboarding an existent repository that contains a large number of targets.
│ │  
│ │ @@ -518,8 +538,63 @@
│ │      Import status: ../repository-service-tuf/tests/data/targets-2of2.csv imported
│ │      Import status: Commiting all data to the RSTUF database
│ │      Import status: All data imported to RSTUF DB
│ │      Import status: Submitting action publish targets
│ │      Import status: Publish targets task id is dd1cbf2320ad4df6bda9ca62cdc0ef82
│ │      Import status: task STARTED
│ │      Import status: task SUCCESS
│ │ -    Import status: Finished.
│ │ +    Import status: Finished.
│ │ +
│ │ +
│ │ +.. rstuf-cli-key
│ │ +
│ │ +Key Management (``key``)
│ │ +========================
│ │ +
│ │ +It executes commands related to cryptographic key management and may be used
│ │ +for managing keys in the Repository Service for TUF.
│ │ +
│ │ +.. code:: shell
│ │ +
│ │ +    ❯ rstuf key
│ │ +
│ │ +    Usage: rstuf key [OPTIONS] COMMAND [ARGS]...
│ │ +
│ │ +    Cryptographic Key Commands
│ │ +
│ │ +    ╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ +    │ --help  -h    Show this message and exit.                                                                                        │
│ │ +    ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ +    ╭─ Commands ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ │ +    │ generate                        Generate cryptographic keys using the `securesystemslib` library                                 │
│ │ +    ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
│ │ +
│ │ +
│ │ +.. rstuf-cli-key-generate
│ │ +
│ │ +Key Generation (``generate``)
│ │ +-----------------------------
│ │ +
│ │ +This command will generate cryptographic keys using the ``securesystemslib`` library.
│ │ +The user is requested to provide:
│ │ +
│ │ +1. the key type, from the supported list of encryption algorithms
│ │ +
│ │ +2. the key's filename, whose path will be the current working directory
│ │ +
│ │ +3. a password, to encrypt the private key file
│ │ +
│ │ +After the above procedure, two files, the private and public key
│ │ +(e.g., ``id_ed25519`` and ``id_ed25519.pub``), will be generated in the current
│ │ +working directory.
│ │ +
│ │ +The generated keys may be used in the Repository Service for TUF Ceremony
│ │ +process, for the online key or the TUF roles' keys (``root``, ``targets``, etc. keys).
│ │ +
│ │ +.. code::
│ │ +
│ │ +    ❯ rstuf key generate
│ │ +
│ │ +    Choose key type [ed25519/ecdsa/rsa] (ed25519): ed25519
│ │ +    Enter the key's filename: (id_ed25519): id_ed25519
│ │ +    Enter password to encrypt private key file 'id_ed25519':
│ │ +    Confirm:
│ │   --- repository_service_tuf-0.0.1a9/repository_service_tuf/cli/__init__.py
│ ├── +++ repository_service_tuf-0.1.0a1/repository_service_tuf/cli/__init__.py
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/ceremony.py
│ ├── +++ repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/ceremony.py
│ │┄ Files 12% similar despite different names
│ │ @@ -3,460 +3,660 @@
│ │  # SPDX-License-Identifier: MIT
│ │  
│ │  #
│ │  # Ceremony
│ │  #
│ │  import json
│ │  import os
│ │ -from dataclasses import asdict, dataclass
│ │ -from enum import Enum
│ │ -from typing import Any, Dict, Optional
│ │ +from typing import Any, Dict, Generator, Optional
│ │  
│ │  from rich import box, markdown, prompt, table  # type: ignore
│ │  from rich.console import Console  # type: ignore
│ │  from securesystemslib.exceptions import (  # type: ignore
│ │      CryptoError,
│ │      Error,
│ │      FormatError,
│ │      StorageError,
│ │  )
│ │  from securesystemslib.interface import (  # type: ignore
│ │ -    import_ed25519_privatekey_from_file,
│ │ +    import_privatekey_from_file,
│ │  )
│ │  
│ │  from repository_service_tuf.cli import click
│ │  from repository_service_tuf.cli.admin import admin
│ │ +from repository_service_tuf.constants import KeyType
│ │  from repository_service_tuf.helpers.api_client import (
│ │      URL,
│ │ +    LazySettings,
│ │      Methods,
│ │ +    bootstrap_status,
│ │      get_headers,
│ │      request_server,
│ │      task_status,
│ │  )
│ │  from repository_service_tuf.helpers.tuf import (
│ │ -    RolesKeysInput,
│ │ -    initialize_metadata,
│ │ +    BootstrapSetup,
│ │ +    Roles,
│ │ +    RSTUFKey,
│ │ +    ServiceSettings,
│ │ +    TUFManagement,
│ │  )
│ │  
│ │  CEREMONY_INTRO = """
│ │  # Repository Metadata and Settings for the Repository Service for TUF
│ │  
│ │ -Create new Repository Metadata and Settings
│ │ -
│ │ -Repository Service for TUF is an implementation for The Update Framework (TUF)
│ │ -as a Service to be deployed in Cloud or on-premises, protecting your target
│ │ -files repository.
│ │ -
│ │ -TUF helps developers maintain the security of software update systems,
│ │ -providing protection even against attackers that compromise the repository or
│ │ -signing keys. TUF provides a flexible framework and specification that
│ │ -developers can adopt to any software update system.
│ │ -
│ │ -More about TUF access https://theupdateframework.io
│ │ +Repository Service for TUF (RSTUF) is a system for securing content downloads
│ │ +from tampering between the repository and the client using The Update Framework
│ │ +(TUF). More about TUF access https://theupdateframework.io
│ │ +
│ │ +## Ceremony of signing the TUF Metadata
│ │ +
│ │ +This process consists of using the metadata settings and signing this metadata,
│ │ +generating the initial metadata at the end of the process, and optionally
│ │ +bootstrapping the RSTUF system. See [`rstuf admin ceremony -h`]
│ │ +
│ │ +This process is done by answering settings definitions, using the **offline
│ │ +keys** for signing the Root metadata, and providing the **online key** used by
│ │ +the other metadata roles in RSTUF.
│ │  """
│ │  
│ │  CEREMONY_INTRO_ROLES_RESPONSIBILITIES = """
│ │ -
│ │  ## Roles and Responsibilities
│ │ -Repository Service for TUF implements Roles and Responsibilities based on TUF
│ │ -top roles (root, targets, timestamp, and snapshot) and the delegated roles bin
│ │ -and bins.
│ │ +
│ │ +Repository Service for TUF implements roles and responsibilities based on TUF
│ │ +top-level roles (root, targets, timestamp, and snapshot) and the delegated hash
│ │ +bin roles.
│ │  
│ │  The inspiration for Repository Service for TUF is the
│ │  [Python Enhancement Proposal 458](https://peps.python.org/pep-0458/).
│ │  
│ │  
│ │  
│ │                         .-------------,
│ │              .--------- |   root *    |-----------.
│ │              |          `-------------'           |
│ │              |                 |                  |
│ │              V                 V                  V
│ │      .-------------,    .-------------,    .-------------,
│ │ -    |  timestamp  |    |  snapshot   |    |   targets * |
│ │ +    |  timestamp  |    |  snapshot   |    |   targets   |
│ │      `-------------'    `-------------'    `-------------'
│ │ -                                                 |
│ │ -                                                 V
│ │ -                                          .-------------,
│ │ -                             .............|     bin *   |
│ │ -                             .            `-------------'
│ │ -                             .                   .
│ │ -                             .                   .
│ │ -                             V                   V
│ │ -                      .-------------,     .-------------,
│ │ -                      |  bins 0-X   | ... |  bin X-FF   |
│ │ -                      `-------------'     `-------------'
│ │ +                                                 .
│ │ +                                                 .
│ │ +                                                 .
│ │ +                             .........................................
│ │ +                             .                   .                   .
│ │ +                             .                   .                   .
│ │ +                             .                   .                   .
│ │ +                             V                   V                   V
│ │ +                      .-------------,     .-------------,     .-------------,
│ │ +                      |  bins 0-X   | ... |  bin A-FF   | ... |  bin X-FF   |
│ │ +                      `-------------'     `-------------'     `-------------'
│ │      * offline keys
│ │  
│ │  The explanation will follow an example of the Organization Example Inc.
│ │  
│ │  **root**
│ │  
│ │  The root role is the locus of trust for the entire repository. The root role
│ │  signs the `root.json` metadata file. This file indicates the authorized keys
│ │  for each top-level role, including the root role itself.
│ │  
│ │  Minimum recommended: 2 Keys and a Threshold equal to 1.
│ │  
│ │  Example:
│ │  Corp Example Inc will use two keys and a threshold of one. Key Owners:
│ │ -- CTO (Jimi Hendrix)
│ │ -- VP of Security (Janis Joplin).
│ │ +* CTO (Jimi Hendrix)
│ │ +* VP of Security (Janis Joplin).
│ │  
│ │  **targets**
│ │  
│ │  The targets role is responsible for indicating which target files are available
│ │  from the repository. More precisely, it shares the responsibility of providing
│ │  information about the content of updates. The targets role signs `targets.json`
│ │ -metadata and delegates trust for repository files to bin Role.
│ │ -
│ │ -Recommended: 2 Keys and a Threshold equal to 2. Destroy after the ceremony.
│ │ -
│ │ -Example:
│ │ -Corp Example Inc will use two Keys and a Threshold of two keys.
│ │ -The Keys will be generated by the Security Team and discarded after the
│ │ -Ceremony.
│ │ -
│ │ -**bin**
│ │ -
│ │ -The bin role is a target delegated Role (delegated by targets Role) and is
│ │ -responsible for delegating to the bins Role. This Role controls the delegation
│ │ -to the Hash Bins Roles (bins).
│ │ +metadata and delegates to the hash bins roles (called bins).
│ │  
│ │ -Recommended: 2 Keys and a Threshold equal to 2.
│ │ -
│ │ -Example:
│ │ -Corp Example Inc will use two Keys and a Threshold of two Keys.
│ │ -- Head of Development (Kurt Cobain)
│ │ -- Release Manager (Chris Cornell).
│ │ +Uses one single online key.
│ │  
│ │  **bins**
│ │  
│ │ -The bins role is a target delegated role (delegated by bin role) and is
│ │ -responsible for signing the target files in the file repositories. This key is
│ │ -an online key.
│ │ +The bins role is a target delegated role and is responsible for signing
│ │ +the target files in the file repositories.
│ │  
│ │ -Recommended: 1 Key and a Threshold equal to 1.
│ │ -
│ │ -Example:
│ │ -Corp Example Inc will use one Key and a Threshold of 1 Key.
│ │ -- DevOpsSec Team
│ │ +Uses one single online key.
│ │  
│ │  **snapshot**
│ │  
│ │  The snapshot role ensures that clients see a consistent repository state.
│ │  It provides repository state information by indicating the latest versions
│ │ -of the top-level targets (targets, bin Roles) and delegated targets
│ │ -(hash bins Roles) metadata files on the repository in `snapshot.json`.
│ │ -
│ │ -Recommended: 1 Key and a Threshold equal to 1.
│ │ +of the top-level targets (the targets role) and delegated targets
│ │ +(hash bins roles) metadata files on the repository in `snapshot.json`.
│ │  
│ │ -Example:
│ │ -Corp Example Inc will use one Key and a Threshold of one Key.
│ │ -- DevOps Team
│ │ +Uses one single online key.
│ │  
│ │  **timestamp**
│ │  
│ │  The timestamp role is responsible for providing information about the
│ │  timelines of available updates. Timelines information is made available by
│ │  frequently signing a new timestamp.json file with a short expiration time.
│ │  This file indicates the latest version of `snapshot.json`.
│ │  
│ │ -Recommended: 1 Key and a Threshold equal to 1
│ │ -
│ │ -Example:
│ │ -Corp Example Inc will use one Key and a Threshold of one Key.
│ │ -- DevOps Team
│ │ +Uses one single online key,
│ │  """
│ │  
│ │  STEP_1 = """
│ │  # STEP 1: Configure the Roles
│ │  
│ │ -The TUF roles supports multiple keys and the threshold (quorum trust)
│ │ -defines the minimal number of keys required to take actions using
│ │ -a specific Role.
│ │ +The TUF root role supports multiple keys and the threshold (quorum of trust)
│ │ +defines the minimal number of keys required to take actions using the root role.
│ │ +
│ │ +Reference: [TUF Goals for PKI](https://theupdateframework.github.io/specification/latest/#goals-for-pki)
│ │  
│ │ -Reference: [TUF](https://theupdateframework.github.io/specification/latest/#goals-for-pki)
│ │ +The TUF roles have an expiration, clients must not trust expired metadata.
│ │ +
│ │ +Reference: [TUF expires](https://theupdateframework.github.io/specification/latest/#expires)
│ │  
│ │  """  # noqa
│ │  
│ │  STEP_2 = """
│ │ -# STEP 2: Load roles keys
│ │ +# STEP 2: Load the Online Key
│ │  
│ │ -The keys must have a password, and the file must be accessible.
│ │ +## The Online Key
│ │ +The online key is the same one provided to the Repository Service for TUF
│ │ +Workers (RSTUF Worker). This key is responsible for signing the snapshot,
│ │ +timestamp, targets, and delegated targets (hash bin) roles.
│ │  
│ │ -Depending on the Organization, each key has an owner, and each owner should
│ │ -insert the password personally.
│ │ +The RSTUF Worker uses this key during the process of managing the metadata.
│ │  
│ │ -The Ceremony process doesn't show the password or key content.
│ │ +Note: the ceremony process won't show any password or key content.
│ │  """
│ │  
│ │  STEP_3 = """
│ │ -# STEP 3: Validate configuration
│ │ +# STEP 3: Load Root Keys
│ │ +
│ │ +## Root Keys
│ │ +The keys must have a password, and the file must be accessible.
│ │ +
│ │ +Depending on the organization, each key has an owner, and each owner should
│ │ +insert their password personally.
│ │  
│ │ -The information below is the configuration done in the preview steps.
│ │ +Note: the ceremony process won't show any password or key content.
│ │ +"""
│ │ +
│ │ +STEP_4 = """
│ │ +# STEP 4: Validate Configuration
│ │ +
│ │ +The information below is the configuration done in the previous steps.
│ │  Check the number of keys, the threshold/quorum, and the key details.
│ │  
│ │  """
│ │  
│ │ -PATHS_DELEGATION_MESSAGE = """
│ │ -The role *targets* delegates `paths` to `bin`
│ │ -role. See
│ │ -[TUF Specification about Path Pattern](
│ │ -    https://theupdateframework.github.io/specification/latest/#pathpattern
│ │ -) for the paths pattern and the example.
│ │ +BINS_DELEGATION_MESSAGE = """
│ │ +
│ │ +The target metadata file might contain a large number of target files. That's
│ │ +why the targets role delegates trust to the hash bin roles to reduce the
│ │ +metadata overhead for clients.
│ │ +
│ │ +See:
│ │ +[TUF Specification about succinct hash bin delegation](
│ │ +    https://github.com/theupdateframework/taps/blob/master/tap15.md
│ │ +).
│ │  """
│ │  
│ │ -PATHS_EXAMPLE = """
│ │ +HASH_BINS_EXAMPLE = """
│ │  
│ │  Example:
│ │  --------
│ │  
│ │  The Organization Example (https://example.com) has all files downloaded
│ │  `/downloads` path, meaning https://example.com/downloads/.
│ │  
│ │ -Additionally, it has two sub-folders, `productA` and `productB` where the
│ │ -clients can find all files (i.e.: `productA-v1.0.tar`, `productB-1.0.tar`), for
│ │ -`productB` it even has a sub-folder, `updates`, where clients can find update
│ │ -files (i.e.: `servicepack-1.tar`, `servicepack-2.tar`).
│ │ -
│ │ -In that case mapping all targets files paths as:
│ │ -- https://example.com/downloads/ is `*`
│ │ -- https://example.com/downloads/productA/ is `*/*`
│ │ -- https://example.com/downloads/productB/ is `*/*` (same as above)
│ │ -- https://example.com/downloads/productB/updates/ is `*/*/*`
│ │ -
│ │ -Specific paths that role `targets` delegates are:
│ │ -``*/productA/*, */productB/*, * /productB/updates/*``
│ │ -
│ │ -Generic paths that role targets delegates are: ``*, */*, */*/*``
│ │ +Additionally, it has two sub-folders, productA and productB where the clients
│ │ +can find all files (i.e.: productA-v1.0.tar, productB-v1.0.tar), for productB
│ │ +it even has a sub-folder, updates where clients can find update files
│ │ +(i.e.: servicepack-1.tar, servicepack-2.tar).
│ │ +The organization has decided to use 8 hash bins. Target files will be
│ │ +uniformly distributed over 8 bins whose names will be "1.bins-0.json",
│ │ +"1.bins-1.json", ... , "1.bins-7.json".
│ │ +
│ │ +Now imagine that the organization stores the following files:
│ │ +- https://example.com/downloads/productA/productA-v1.0.tar
│ │ +- https://example.com/downloads/productB/productB-v1.0.tar
│ │ +- https://example.com/downloads/productB/updates/servicepack-1.tar
│ │ +
│ │ +As we said the targets will be uniformly distributed over the 8 bins no matter
│ │ +if they are located in the same folder.
│ │ +In this example here is how they will be distributed:
│ │ +- "1.bins-0.json" will be responsible for file:
│ │ + https://example.com/downloads/productA/productA-v1.0.tar
│ │ +- "1.bins-1.json" will be responsible for file:
│ │ + https://example.com/downloads/productB/productB-v1.0.tar
│ │ +- "1.bins-5.json" will be responsible for file:
│ │ + https://example.com/downloads/productB/updates/servicepack-1.tar
│ │  """
│ │  
│ │  console = Console()
│ │  
│ │  
│ │ -class Roles(Enum):
│ │ -    ROOT = "root"
│ │ -    TARGETS = "targets"
│ │ -    SNAPSHOT = "snapshot"
│ │ -    TIMESTAMP = "timestamp"
│ │ -    BIN = "bin"
│ │ -    BINS = "bins"
│ │ -
│ │ +# Define all initial settings
│ │ +setup = BootstrapSetup(
│ │ +    expiration={
│ │ +        Roles.ROOT: 365,
│ │ +        Roles.TARGETS: 365,
│ │ +        Roles.SNAPSHOT: 1,
│ │ +        Roles.TIMESTAMP: 1,
│ │ +        Roles.BINS: 1,
│ │ +    },
│ │ +    services=ServiceSettings(),
│ │ +    number_of_keys={Roles.ROOT: 2, Roles.TARGETS: 1},
│ │ +    threshold={
│ │ +        Roles.ROOT: 1,
│ │ +        Roles.TARGETS: 1,
│ │ +    },
│ │ +    root_keys=[],
│ │ +    online_key=RSTUFKey(),
│ │ +)
│ │  
│ │ -@dataclass
│ │ -class RoleSettings:
│ │ -    expiration: int
│ │ -    threshold: int
│ │ -    keys: int
│ │ -    offline_keys: bool
│ │  
│ │ +def _key_already_in_use(key: Dict[str, Any]) -> bool:
│ │ +    """Check if a key is duplicated, used in a role or the online_key"""
│ │ +    if key is None:
│ │ +        return False
│ │ +
│ │ +    keyid = key.get("keyid")
│ │ +    if keyid == setup.online_key.key.get("keyid"):
│ │ +        return True
│ │  
│ │ -default_settings = {
│ │ -    Roles.ROOT.value: RoleSettings(365, 1, 2, True),
│ │ -    Roles.TARGETS.value: RoleSettings(365, 1, 2, True),
│ │ -    Roles.SNAPSHOT.value: RoleSettings(1, 1, 1, False),
│ │ -    Roles.TIMESTAMP.value: RoleSettings(1, 1, 1, False),
│ │ -    Roles.BIN.value: RoleSettings(365, 1, 1, True),
│ │ -    Roles.BINS.value: RoleSettings(1, 1, 1, False),
│ │ -}
│ │ +    for root_key in setup.root_keys:
│ │ +        if keyid == root_key.key.get("keyid"):
│ │ +            return True
│ │  
│ │ +    return False
│ │  
│ │ -@dataclass
│ │ -class Key:
│ │ -    key: Optional[Dict[str, Any]] = None
│ │ -    error: Optional[str] = None
│ │  
│ │ +def _load_key(
│ │ +    filepath: str, keytype: str, password: Optional[str]
│ │ +) -> RSTUFKey:
│ │ +    try:
│ │ +        key = import_privatekey_from_file(filepath, keytype, password)
│ │ +        return RSTUFKey(key=key, key_path=filepath)
│ │ +    except CryptoError as err:
│ │ +        return RSTUFKey(
│ │ +            error=(
│ │ +                f":cross_mark: [red]Failed[/]: {str(err)} Check the"
│ │ +                " password, type, etc"
│ │ +            )
│ │ +        )
│ │  
│ │ -@dataclass
│ │ -class ServiceSettings:
│ │ -    targets_base_url: str
│ │ +    except (StorageError, FormatError, Error, OSError) as err:
│ │ +        return RSTUFKey(error=f":cross_mark: [red]Failed[/]: {str(err)}")
│ │  
│ │ -    def to_dict(self):
│ │ -        return asdict(self)
│ │  
│ │ +def _send_bootstrap(
│ │ +    settings: LazySettings, bootstrap_payload: Dict[str, Any]
│ │ +) -> str:
│ │ +    headers = get_headers(settings)
│ │ +    response = request_server(
│ │ +        settings.SERVER,
│ │ +        URL.bootstrap.value,
│ │ +        Methods.post,
│ │ +        bootstrap_payload,
│ │ +        headers=headers,
│ │ +    )
│ │  
│ │ -@dataclass
│ │ -class PayloadSettings:
│ │ -    roles: Dict[str, RolesKeysInput]
│ │ -    service: ServiceSettings
│ │ +    if response.status_code != 202:
│ │ +        raise click.ClickException(
│ │ +            f"Error {response.status_code} {response.text}"
│ │ +        )
│ │  
│ │ +    response_json = response.json()
│ │ +    if (
│ │ +        response_json.get("message") is None
│ │ +        or response_json.get("message") != "Bootstrap accepted."
│ │ +    ):
│ │ +        raise click.ClickException(response.text)
│ │  
│ │ -OFFLINE_KEYS = {Roles.ROOT.value, Roles.TARGETS.value, Roles.BIN.value}
│ │ +    else:
│ │ +        if data := response_json.get("data"):
│ │ +            task_id = data.get("task_id")
│ │ +            if task_id is None:
│ │ +                raise click.ClickException(
│ │ +                    f"Failed to get `task id` {response.text}"
│ │ +                )
│ │ +            console.print(f"Bootstrap status: ACCEPTED ({task_id})")
│ │  
│ │ -# generate the basic data structure
│ │ -SETTINGS = PayloadSettings(
│ │ -    roles={role.value: RolesKeysInput() for role in Roles},
│ │ -    service=ServiceSettings(targets_base_url=""),
│ │ -)
│ │ +            return task_id
│ │ +        else:
│ │ +            raise click.ClickException(
│ │ +                f"Failed to get task response data {response.text}"
│ │ +            )
│ │  
│ │  
│ │ -def _key_is_duplicated(key: Dict[str, Any]) -> bool:
│ │ -    for role in SETTINGS.roles.values():
│ │ -        if any(k for k in role.keys.values() if key == k.get("key")):
│ │ -            return True
│ │ -        if any(k for k in role.keys.values() if key == k.get("path")):
│ │ -            return False
│ │ +def _load_bootstrap_payload(path: str) -> Dict[str, Any]:
│ │ +    try:
│ │ +        with open(path) as payload_data:
│ │ +            bootstrap_payload = json.load(payload_data)
│ │ +    except OSError as err:
│ │ +        raise click.ClickException(f"Error to load {path}. {str(err)}")
│ │  
│ │ -    return False
│ │ +    return bootstrap_payload
│ │  
│ │  
│ │ -def _load_key(filepath: str, password: str) -> Key:
│ │ +def _save_bootstrap_payload(file: str, bootstrap_payload: Dict[str, Any]):
│ │      try:
│ │ -        key = import_ed25519_privatekey_from_file(filepath, password)
│ │ -        return Key(key=key)
│ │ -    except CryptoError as err:
│ │ -        return Key(
│ │ -            error=(
│ │ -                f":cross_mark: [red]Failed[/]: {str(err)} Check the"
│ │ -                " password."
│ │ -            )
│ │ -        )
│ │ -
│ │ -    except (StorageError, FormatError, Error) as err:
│ │ -        return Key(error=f":cross_mark: [red]Failed[/]: {str(err)}")
│ │ -
│ │ +        with open(file, "w") as f:
│ │ +            f.write(json.dumps(bootstrap_payload, indent=2))
│ │ +    except OSError as err:
│ │ +        raise click.ClickException(f"Failed to save {file}. {str(err)}")
│ │ +
│ │ +
│ │ +def _configure_role_target():
│ │ +    console.print("\n")
│ │ +    console.print(markdown.Markdown(BINS_DELEGATION_MESSAGE), width=100)
│ │ +    show_example = prompt.Confirm.ask("Show example?", default="y")
│ │ +    if show_example:
│ │ +        with console.pager(links=True):
│ │ +            console.print(markdown.Markdown(HASH_BINS_EXAMPLE), width=100)
│ │ +
│ │ +    setup.services.number_of_delegated_bins = prompt.IntPrompt.ask(
│ │ +        "\nChoose the number of delegated hash bin roles",
│ │ +        default=256,
│ │ +        choices=[str(2**i) for i in range(1, 15)],  # choices must be str
│ │ +        show_default=True,
│ │ +        show_choices=True,
│ │ +    )
│ │  
│ │ -def _configure_role(rolename: str, role: RolesKeysInput) -> None:
│ │ -    # default reset when start configuration
│ │ -    role.keys.clear()
│ │ +    targets_base_url = click.prompt(
│ │ +        "\nWhat is the targets base URL? (i.e.: "
│ │ +        "https://www.example.com/downloads/)"
│ │ +    )
│ │ +    if targets_base_url.endswith("/") is False:
│ │ +        targets_base_url = targets_base_url + "/"
│ │  
│ │ -    role.threshold = default_settings[rolename].threshold
│ │ -    role.offline_keys = default_settings[rolename].offline_keys
│ │ +    setup.services.targets_base_url = targets_base_url
│ │  
│ │ -    role.expiration = prompt.IntPrompt.ask(
│ │ -        (
│ │ -            f"\nWhat [green]Metadata expiration[/] for [cyan]{rolename}[/]"
│ │ -            " role?(Days)"
│ │ -        ),
│ │ -        default=default_settings[rolename].expiration,
│ │ -        show_default=True,
│ │ -    )
│ │  
│ │ -    role.num_of_keys = prompt.IntPrompt.ask(
│ │ +def _configure_role_root():
│ │ +    setup.number_of_keys[Roles.ROOT] = prompt.IntPrompt.ask(
│ │          (
│ │              f"What is the [green]number of keys[/] for "
│ │ -            f"[cyan]{rolename}[/] role?"
│ │ +            f"the [cyan]{Roles.ROOT.value}[/] role?"
│ │          ),
│ │ -        default=default_settings[rolename].keys,
│ │ +        default=setup.number_of_keys[Roles.ROOT],
│ │          show_default=True,
│ │      )
│ │ -    if role.num_of_keys > 1:
│ │ -        role.threshold = prompt.IntPrompt.ask(
│ │ +    if setup.number_of_keys[Roles.ROOT] > 1:
│ │ +        setup.threshold[Roles.ROOT] = prompt.IntPrompt.ask(
│ │              (
│ │                  f"What is the key [green]threshold[/] for "
│ │ -                f"[cyan]{rolename}[/] role signing?"
│ │ +                f"the [cyan]{Roles.ROOT.value}[/] role signing?"
│ │              ),
│ │ -            default=default_settings[rolename].threshold,
│ │ +            default=setup.threshold[Roles.ROOT],
│ │              show_default=True,
│ │          )
│ │      else:
│ │ -        role.threshold = 1
│ │ +        setup.threshold[Roles.ROOT] = 1
│ │          console.print(
│ │ -            f"The [green]threshold[/] for [cyan]{rolename}[/] is "
│ │ -            "[cyan]1[/] (one) based on the number of keys "
│ │ -            "([cyan]1[/])."
│ │ +            f"The [green]threshold[/] for [cyan]{Roles.ROOT.value}[/] "
│ │ +            "is [cyan]1[/] (one) based on the number of keys ([cyan]1[/])."
│ │          )
│ │  
│ │ -    if rolename == Roles.TARGETS.value:
│ │ -        console.print(markdown.Markdown(PATHS_DELEGATION_MESSAGE), width=100)
│ │ -        show_example = prompt.Confirm.ask("Show example", default="y")
│ │ -        if show_example:
│ │ -            console.print(markdown.Markdown(PATHS_EXAMPLE), width=100)
│ │ -
│ │ -        targets_base_url = click.prompt(
│ │ -            "\nWhat is the Base URL (i.e.: https://www.example.com/downloads/)"
│ │ -        )
│ │ -        if targets_base_url.endswith("/") is False:
│ │ -            targets_base_url = targets_base_url + "/"
│ │  
│ │ -        SETTINGS.service.targets_base_url = targets_base_url
│ │ +def _configure_role(role: Roles) -> None:
│ │ +    console.print(
│ │ +        markdown.Markdown(f"## {role.value} configuration"), width=100
│ │ +    )
│ │ +    setup.expiration[role] = prompt.IntPrompt.ask(
│ │ +        (
│ │ +            "\nWhat is the [green]metadata expiration[/] for "
│ │ +            f"the [cyan]{role.value}[/] role?(Days)"
│ │ +        ),
│ │ +        default=setup.expiration[role],
│ │ +        show_default=True,
│ │ +    )
│ │  
│ │ -        input_paths = prompt.Prompt.ask(
│ │ -            f"\nWhat [green]paths[/] [cyan]{rolename}[/] delegates?",
│ │ -            default="*, */*",
│ │ -            show_default=True,
│ │ -        )
│ │ -        delegate_paths = [path.strip() for path in input_paths.split(",")]
│ │ -        role.paths = delegate_paths
│ │ +    if role == Roles.ROOT:
│ │ +        _configure_role_root()
│ │  
│ │ -    elif rolename == Roles.BINS.value:
│ │ -        role.number_hash_prefixes = prompt.IntPrompt.ask(
│ │ -            f"[green]Number of hashed bins[/] for [cyan]{rolename}[/]?",
│ │ -            default=8,
│ │ -            show_default=True,
│ │ -        )
│ │ +    if role == Roles.TARGETS:
│ │ +        _configure_role_target()
│ │  
│ │  
│ │ -def _configure_keys(rolename: str, role: RolesKeysInput) -> None:
│ │ +def _configure_keys(
│ │ +    role: str, number_of_keys: int
│ │ +) -> Generator[RSTUFKey, None, None]:
│ │      key_count = 1
│ │ -    while len(role.keys) < role.num_of_keys:
│ │ +    while key_count <= number_of_keys:
│ │ +        key_type = prompt.Prompt.ask(
│ │ +            f"\nChoose {key_count}/{number_of_keys} [cyan]{role}[/] key type",
│ │ +            choices=KeyType.get_all_members(),
│ │ +            default=KeyType.KEY_TYPE_ED25519.value,
│ │ +        )
│ │          filepath = prompt.Prompt.ask(
│ │ -            f"\nEnter {key_count}/{role.num_of_keys} the "
│ │ -            f"[cyan]{rolename}[/]`s Key [green]path[/]"
│ │ +            f"Enter {key_count}/{number_of_keys} the "
│ │ +            f"[cyan]{role}[/]`s private key [green]path[/]"
│ │          )
│ │  
│ │          password = click.prompt(
│ │ -            f"Enter {key_count}/{role.num_of_keys} the "
│ │ -            f"{rolename}`s Key password",
│ │ +            f"Enter {key_count}/{number_of_keys} the "
│ │ +            f"{role}`s private key password",
│ │              hide_input=True,
│ │          )
│ │ -        key: Key = _load_key(filepath, password)
│ │ +        role_key: RSTUFKey = _load_key(filepath, key_type, password)
│ │  
│ │ -        if key.error:
│ │ -            console.print(key.error)
│ │ +        if role_key.error:
│ │ +            console.print(role_key.error)
│ │              try_again = prompt.Confirm.ask("Try again?", default="y")
│ │              if try_again:
│ │                  continue
│ │              else:
│ │                  raise click.ClickException("Required key not validated.")
│ │  
│ │ -        if key.key is not None and _key_is_duplicated(key.key) is True:
│ │ +        if _key_already_in_use(role_key.key) is True:
│ │              console.print(":cross_mark: [red]Failed[/]: Key is duplicated.")
│ │              continue
│ │  
│ │ -        role.keys[f"{rolename}_{key_count}"] = {
│ │ -            "filename": filepath.split("/")[-1],
│ │ -            "password": password,
│ │ -            "key": key.key,
│ │ -        }
│ │ +        yield role_key
│ │ +
│ │          console.print(
│ │              ":white_check_mark: Key "
│ │ -            f"{key_count}/{role.num_of_keys} [green]Verified[/]"
│ │ +            f"{key_count}/{number_of_keys} [green]Verified[/]"
│ │          )
│ │          key_count += 1
│ │  
│ │  
│ │ -def _bootstrap(server, headers, json_payload) -> Optional[str]:
│ │ -    task_id = None
│ │ -    response = request_server(
│ │ -        server,
│ │ -        URL.bootstrap.value,
│ │ -        Methods.post,
│ │ -        json_payload,
│ │ -        headers=headers,
│ │ +def _run_user_validation():
│ │ +    # Tables
│ │ +    #
│ │ +    # The table.Table doesn't have a library API to remove/clean the rows, so
│ │ +    # we call the function to reset/construct it.
│ │ +    def _init_summary_table(title: str) -> table.Table:
│ │ +        online_key_table = table.Table()
│ │ +        online_key_table.add_column(
│ │ +            f"{title}",
│ │ +            justify="left",
│ │ +            vertical="middle",
│ │ +        )
│ │ +        return online_key_table
│ │ +
│ │ +    def _init_keys_table(path: Optional[bool] = True) -> table.Table:
│ │ +        """Gets a new keys table"""
│ │ +        keys_table = table.Table(box=box.MINIMAL)
│ │ +        if path is True:
│ │ +            keys_table.add_column(
│ │ +                "path", justify="right", style="cyan", no_wrap=True
│ │ +            )
│ │ +        keys_table.add_column("type", justify="center")
│ │ +        keys_table.add_column("verified", justify="center")
│ │ +        keys_table.add_column("id", justify="center")
│ │ +
│ │ +        return keys_table
│ │ +
│ │ +    # Validations
│ │ +    #
│ │ +    # Online key validation
│ │ +    while True:
│ │ +        online_key_table = _init_summary_table("ONLINE KEY SUMMARY")
│ │ +        keys_table = _init_keys_table()
│ │ +        keys_table.add_row(
│ │ +            f"[yellow]{setup.online_key.key_path}[/]",
│ │ +            "[green]Online[/]",
│ │ +            ":white_heavy_check_mark:",
│ │ +            f"[yellow]{setup.online_key.key.get('keyid')}[/]",
│ │ +        )
│ │ +
│ │ +        online_key_table.add_row(keys_table)
│ │ +        console.print("\n", online_key_table)
│ │ +
│ │ +        confirm_config = prompt.Confirm.ask(
│ │ +            "\nIs the [cyan]online key[/] configuration correct?"
│ │ +        )
│ │ +        if confirm_config is False:
│ │ +            setup.online_key.key = {}
│ │ +            setup.online_key.key_path = None
│ │ +            for key in _configure_keys("ONLINE", 1):
│ │ +                setup.online_key.key = key.key
│ │ +                setup.online_key.key_path = key.key_path
│ │ +        else:
│ │ +            break
│ │ +
│ │ +    # Roles validation
│ │ +    for role in Roles:
│ │ +        while True:
│ │ +            role_table = _init_summary_table("ROLE SUMMARY")
│ │ +            role_table.add_column("KEYS", justify="center", vertical="middle")
│ │ +
│ │ +            if role == Roles.ROOT:
│ │ +                keys_table = _init_keys_table()
│ │ +                for key in setup.root_keys:
│ │ +                    keys_table.add_row(
│ │ +                        f"[yellow]{key.key_path}[/]",
│ │ +                        "[bright_blue]Offline[/]",
│ │ +                        ":white_heavy_check_mark:",
│ │ +                        key.key.get("keyid"),
│ │ +                    )
│ │ +
│ │ +                role_table.add_row(
│ │ +                    (
│ │ +                        f"Role: [cyan]{role.value}[/]"
│ │ +                        f"\nNumber of Keys: [yellow]{len(setup.root_keys)}[/]"
│ │ +                        f"\nThreshold: [yellow]{setup.threshold[Roles.ROOT]}"
│ │ +                        "[/]"
│ │ +                        f"\nRole Expiration: [yellow]{setup.expiration[role]} "
│ │ +                        "[/]days"
│ │ +                    ),
│ │ +                    keys_table,
│ │ +                )
│ │ +            else:
│ │ +                keys_table = _init_keys_table(path=False)
│ │ +                if setup.online_key.key is not None:
│ │ +                    keys_table.add_row(
│ │ +                        "[green]Online[/]",
│ │ +                        ":white_heavy_check_mark:",
│ │ +                        setup.online_key.key.get("keyid"),
│ │ +                    )
│ │ +                role_table.add_row(
│ │ +                    (
│ │ +                        f"Role: [cyan]{role.value}[/]"
│ │ +                        f"\nRole Expiration: [yellow]{setup.expiration[role]} "
│ │ +                        "[/]days"
│ │ +                    ),
│ │ +                    keys_table,
│ │ +                )
│ │ +
│ │ +            if role == Roles.TARGETS:
│ │ +                base_url = setup.services.targets_base_url
│ │ +                role_table.add_row(
│ │ +                    (
│ │ +                        f"\n[white]Base URL:[/] [yellow]{base_url}[/]"
│ │ +                        "\n"
│ │ +                        "\n[orange1]DELEGATIONS[/]"
│ │ +                        f"\n[aquamarine3]{role.value} -> bins[/]"
│ │ +                        "\nNumber of bins: "
│ │ +                        f"[yellow]{setup.services.number_of_delegated_bins}[/]"
│ │ +                    ),
│ │ +                    "",
│ │ +                )
│ │ +
│ │ +            console.print("\n", role_table)
│ │ +            confirm_config = prompt.Confirm.ask(
│ │ +                f"\nIs the [cyan]{role.value}[/] [yellow]configuration[/] "
│ │ +                "correct?"
│ │ +            )
│ │ +            if confirm_config is False:
│ │ +                # reconfigure role and keys
│ │ +                _configure_role(role)
│ │ +
│ │ +                # if root, reconfigure also the keys
│ │ +                if role == Roles.ROOT:
│ │ +                    setup.root_keys.clear()
│ │ +                    for key in _configure_keys(
│ │ +                        role.value,
│ │ +                        setup.number_of_keys[Roles.ROOT],
│ │ +                    ):
│ │ +                        setup.root_keys.append(key)
│ │ +            else:
│ │ +                break
│ │ +
│ │ +
│ │ +def _run_ceremony_steps(save: bool) -> Dict[str, Any]:
│ │ +    console.print(markdown.Markdown(CEREMONY_INTRO), width=100)
│ │ +
│ │ +    ceremony_detailed = prompt.Confirm.ask(
│ │ +        "\nDo you want more information about roles and responsibilities?"
│ │      )
│ │ -    response_json = response.json()
│ │ -    if response.status_code != 202:
│ │ -        raise click.ClickException(
│ │ -            f"Error {response.status_code} {response_json.get('detail')}"
│ │ -        )
│ │ +    if ceremony_detailed is True:
│ │ +        with console.pager():
│ │ +            console.print(
│ │ +                markdown.Markdown(CEREMONY_INTRO_ROLES_RESPONSIBILITIES),
│ │ +                width=100,
│ │ +            )
│ │  
│ │ -    elif (
│ │ -        response_json.get("message") is None
│ │ -        or response_json.get("message") != "Bootstrap accepted."
│ │ -    ):
│ │ -        raise click.ClickException(response.text)
│ │ +    start_ceremony = prompt.Confirm.ask("\nDo you want to start the ceremony?")
│ │  
│ │ -    else:
│ │ -        if data := response_json.get("data"):
│ │ -            task_id = data.get("task_id")
│ │ -            console.print(f"Bootstrap status: ACCEPTED ({task_id})")
│ │ +    if start_ceremony is False:
│ │ +        raise click.ClickException("Ceremony aborted.")
│ │  
│ │ -    return task_id
│ │ +    # STEP 1: configure the roles settings (keys, threshold, expiration)
│ │ +    console.print(markdown.Markdown(STEP_1), width=80)
│ │ +    for role in Roles:
│ │ +        _configure_role(role)
│ │ +
│ │ +    start_ceremony = prompt.Confirm.ask(
│ │ +        "\nReady to start loading the keys? Passwords will be "
│ │ +        "required for keys"
│ │ +    )
│ │ +    if start_ceremony is False:
│ │ +        raise click.ClickException("Ceremony aborted.")
│ │ +
│ │ +    # STEP 2: configure the online key (one)
│ │ +    console.print(markdown.Markdown(STEP_2), width=100)
│ │ +    for key in _configure_keys("ONLINE", number_of_keys=1):
│ │ +        setup.online_key.key = key.key
│ │ +        setup.online_key.key_path = key.key_path
│ │ +
│ │ +    # STEP 3: load the root keys
│ │ +    console.print(markdown.Markdown(STEP_3), width=100)
│ │ +    root = Roles.ROOT.value
│ │ +    for key in _configure_keys(root, setup.number_of_keys[Roles.ROOT]):
│ │ +        setup.root_keys.append(key)
│ │ +
│ │ +    # STEP 4: user validation
│ │ +    console.print(markdown.Markdown(STEP_4), width=100)
│ │ +    _run_user_validation()
│ │ +
│ │ +    tuf_management = TUFManagement(setup, save)
│ │ +    metadata = tuf_management.initialize_metadata()
│ │ +
│ │ +    json_payload: Dict[str, Any] = dict()
│ │ +    json_payload["settings"] = setup.to_dict()
│ │ +    json_payload["metadata"] = {
│ │ +        key: data.to_dict() for key, data in metadata.items()
│ │ +    }
│ │ +
│ │ +    return json_payload
│ │  
│ │  
│ │  @admin.command()
│ │  @click.option(
│ │      "-b",
│ │      "--bootstrap",
│ │      "bootstrap",
│ │ @@ -489,209 +689,59 @@
│ │      required=False,
│ │      is_flag=True,
│ │  )
│ │  @click.option(
│ │      "-s",
│ │      "--save",
│ │      help=(
│ │ -        "Save a copy of the metadata locally. This option saves the metadata "
│ │ -        "files (json) in the 'metadata' folder in the current directory."
│ │ +        "Save a copy of the metadata locally. This option saves the JSON "
│ │ +        "metadata files in the 'metadata' folder in the current directory."
│ │      ),
│ │ +    default=False,
│ │      show_default=True,
│ │      is_flag=True,
│ │  )
│ │  @click.pass_context
│ │ -def ceremony(context, bootstrap, file, upload, save) -> None:
│ │ +def ceremony(
│ │ +    context: Any, bootstrap: bool, file: str, upload: bool, save: bool
│ │ +) -> None:
│ │      """
│ │      Start a new Metadata Ceremony.
│ │      """
│ │ -
│ │ -    if save:
│ │ +    settings = context.obj["settings"]
│ │ +    # option save: creates the folder
│ │ +    if save is True:
│ │          try:
│ │              os.makedirs("metadata", exist_ok=True)
│ │          except OSError as err:
│ │              raise click.ClickException(str(err))
│ │  
│ │ +    # option upload: it requires -b/--bootstrap
│ │      if upload is True and bootstrap is False:
│ │          raise click.ClickException("Requires '-b/--bootstrap' option.")
│ │  
│ │ -    settings = context.obj["settings"]
│ │ +    # option bootstrap: checks if the server accepts it beforehand
│ │      if bootstrap:
│ │ -        headers = get_headers(settings)
│ │ -        bs_response = request_server(
│ │ -            settings.SERVER, URL.bootstrap.value, Methods.get, headers=headers
│ │ -        )
│ │ -        if bs_response.status_code == 404:
│ │ -            raise click.ClickException(
│ │ -                f"Server {settings.SERVER} doesn't allow bootstrap"
│ │ -            )
│ │ -        if bs_response.status_code != 200:
│ │ -            raise click.ClickException(
│ │ -                f"Error {bs_response.status_code} {bs_response.text}"
│ │ -            )
│ │ -
│ │ -        bs_data = bs_response.json()
│ │ -        if bs_data.get("bootstrap") is True or None:
│ │ -            raise click.ClickException(f"{bs_data.get('message')}")
│ │ -
│ │ -    if upload is False:
│ │ -        console.print(markdown.Markdown(CEREMONY_INTRO), width=100)
│ │ -
│ │ -        ceramony_detailed = prompt.Confirm.ask(
│ │ -            "\nDo you want more information about Roles and Responsabilities?"
│ │ -        )
│ │ -        if ceramony_detailed is True:
│ │ -            with console.pager():
│ │ -                console.print(
│ │ -                    markdown.Markdown(CEREMONY_INTRO_ROLES_RESPONSIBILITIES),
│ │ -                    width=100,
│ │ -                )
│ │ +        bs_status = bootstrap_status(settings)
│ │ +        if bs_status.get("data", {}).get("bootstrap") is True:
│ │ +            raise click.ClickException(f"{bs_status.get('message')}")
│ │ +
│ │ +    # option bootstrap + upload: bootstrap payload is available, skips ceremony
│ │ +    if bootstrap is True and upload is True:
│ │ +        bootstrap_payload = _load_bootstrap_payload(file)
│ │ +        console.print("Starting online bootstrap")
│ │ +        task_id = _send_bootstrap(settings, bootstrap_payload)
│ │ +        task_status(task_id, settings, "Bootstrap status: ")
│ │ +        console.print(f"Bootstrap completed using `{file}`. 🔐 🎉")
│ │  
│ │ -        start_ceremony = prompt.Confirm.ask(
│ │ -            "\nDo you want start the ceremony?"
│ │ +    # option ceremony: runs the ceremony, save the payload
│ │ +    else:
│ │ +        bootstrap_payload = _run_ceremony_steps(save)
│ │ +        _save_bootstrap_payload(file, bootstrap_payload)
│ │ +        console.print(
│ │ +            f"\nCeremony done. 🔐 🎉. Bootstrap payload ({file}) saved."
│ │          )
│ │  
│ │ -        if start_ceremony is False:
│ │ -            raise click.ClickException("Ceremony aborted.")
│ │ -
│ │ -        console.print(markdown.Markdown(STEP_1), width=80)
│ │ -        for rolename, role in SETTINGS.roles.items():
│ │ -            _configure_role(rolename, role)
│ │ -
│ │ -        console.print(markdown.Markdown(STEP_2), width=100)
│ │ -        start_ceremony = prompt.Confirm.ask(
│ │ -            "\nReady to start loading the keys? Passwords will be "
│ │ -            "required for keys"
│ │ -        )
│ │ -        if start_ceremony is False:
│ │ -            raise click.ClickException("Ceremony aborted.")
│ │ -
│ │ -        for rolename, role in SETTINGS.roles.items():
│ │ -            _configure_keys(rolename, role)
│ │ -
│ │ -        console.print(markdown.Markdown(STEP_3), width=100)
│ │ -
│ │ -        for rolename, role in SETTINGS.roles.items():
│ │ -            while True:
│ │ -                role_table = table.Table()
│ │ -                role_table.add_column(
│ │ -                    "ROLE SUMMARY",
│ │ -                    style="yellow",
│ │ -                    justify="center",
│ │ -                    vertical="middle",
│ │ -                )
│ │ -                role_table.add_column(
│ │ -                    "KEYS", justify="center", vertical="middle"
│ │ -                )
│ │ -                keys_table = table.Table(box=box.MINIMAL)
│ │ -                keys_table.add_column(
│ │ -                    "path", justify="right", style="cyan", no_wrap=True
│ │ -                )
│ │ -                keys_table.add_column("id", justify="center")
│ │ -                keys_table.add_column("verified", justify="center")
│ │ -                for key in role.keys.values():
│ │ -                    keys_table.add_row(
│ │ -                        key.get("filename"),
│ │ -                        key.get("key").get("keyid"),
│ │ -                        ":white_heavy_check_mark:",
│ │ -                    )
│ │ -
│ │ -                if role.offline_keys is True:
│ │ -                    key_type = "[red]offline[/red]"
│ │ -                else:
│ │ -                    key_type = "[green]online[/]"
│ │ -
│ │ -                role_table.add_row(
│ │ -                    (
│ │ -                        f"Role: [cyan]{rolename}[/]"
│ │ -                        f"\nNumber of Keys: {len(role.keys)}"
│ │ -                        f"\nThreshold: {role.threshold}"
│ │ -                        f"\nKeys Type: {key_type}"
│ │ -                        f"\nRole Expiration: {role.expiration} days"
│ │ -                    ),
│ │ -                    keys_table,
│ │ -                )
│ │ -
│ │ -                if rolename == Roles.TARGETS.value:
│ │ -                    assert role.paths is not None  # nosec B101:assert_used
│ │ -                    delegations_row = (
│ │ -                        f"\n{SETTINGS.service.targets_base_url}".join(
│ │ -                            ["", *role.paths]
│ │ -                        )
│ │ -                    )
│ │ -                    role_table.add_row(
│ │ -                        (
│ │ -                            "\n"
│ │ -                            "\n[orange1]DELEGATIONS[/]"
│ │ -                            f"\n[aquamarine3]{rolename} -> bin[/]"
│ │ -                            f"{delegations_row}"
│ │ -                        ),
│ │ -                        "",
│ │ -                    )
│ │ -
│ │ -                if rolename == Roles.BINS.value:
│ │ -                    role_table.add_row(
│ │ -                        (
│ │ -                            "\n"
│ │ -                            "\n[orange1]DELEGATIONS[/]"
│ │ -                            f"\n[aquamarine3]{rolename} -> bins[/]"
│ │ -                            f"\nNumber bins: {role.number_hash_prefixes}"
│ │ -                        ),
│ │ -                        "",
│ │ -                    )
│ │ -
│ │ -                console.print(role_table)
│ │ -                confirm_config = prompt.Confirm.ask(
│ │ -                    f"Configuration correct for {rolename}?"
│ │ -                )
│ │ -                if not confirm_config:
│ │ -                    # reconfigure role and keys
│ │ -                    _configure_role(rolename, role)
│ │ -                    _configure_keys(rolename, role)
│ │ -                else:
│ │ -                    break
│ │ -
│ │ -        metadata = initialize_metadata(SETTINGS.roles, save=save)
│ │ -
│ │ -        json_payload: Dict[str, Any] = dict()
│ │ -
│ │ -        json_payload["settings"] = {"service": SETTINGS.service.to_dict()}
│ │ -        for settings_role, data in SETTINGS.roles.items():
│ │ -            if data.offline_keys is True:
│ │ -                data.keys.clear()
│ │ -
│ │ -            if "roles" not in json_payload["settings"]:
│ │ -                json_payload["settings"]["roles"] = {
│ │ -                    settings_role: data.to_dict()
│ │ -                }
│ │ -            else:
│ │ -                json_payload["settings"]["roles"][
│ │ -                    settings_role
│ │ -                ] = data.to_dict()
│ │ -
│ │ -        json_payload["metadata"] = {
│ │ -            key: data.to_dict() for key, data in metadata.items()
│ │ -        }
│ │ -
│ │ -        if file:
│ │ -            with open(file, "w") as f:
│ │ -                f.write(json.dumps(json_payload, indent=2))
│ │ -
│ │          if bootstrap is True:
│ │ -            _bootstrap(settings.SERVER, headers, json_payload)
│ │ -
│ │ -    elif bootstrap is True and upload is True:
│ │ -        try:
│ │ -            with open(file) as payload_file:
│ │ -                json_payload = json.load(payload_file)
│ │ -        except OSError:
│ │ -            raise click.ClickException(f"Invalid file {file}")
│ │ -
│ │ -        console.print("Starting online bootstrap")
│ │ -        task_id = _bootstrap(settings.SERVER, headers, json_payload)
│ │ -
│ │ -        if task_id is None:
│ │ -            raise click.ClickException("task id wasn't received")
│ │ -
│ │ -        task_status(task_id, settings.SERVER, headers, "Bootstrap status: ")
│ │ -
│ │ -    console.print("\nCeremony done. 🔐 🎉")
│ │ +            task_id = _send_bootstrap(settings, bootstrap_payload)
│ │ +            task_status(task_id, settings, "Bootstrap status: ")
│ │ +            console.print("\nCeremony done. 🔐 🎉. Bootstrap completed.")
│ │   --- repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/import_targets.py
│ ├── +++ repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/import_targets.py
│ │┄ Files 6% similar despite different names
│ │ @@ -1,30 +1,25 @@
│ │  import json
│ │  import os
│ │  from datetime import datetime
│ │  from typing import Any, Dict, List
│ │  
│ │  from rich.console import Console
│ │ +from tuf.api.metadata import Delegations, SuccinctRoles, Targets
│ │  
│ │  from repository_service_tuf.cli import click
│ │  from repository_service_tuf.cli.admin import admin
│ │  from repository_service_tuf.helpers.api_client import (
│ │ -    URL,
│ │      Methods,
│ │ -    get_headers,
│ │ +    bootstrap_status,
│ │      publish_targets,
│ │      request_server,
│ │      task_status,
│ │  )
│ │ -from repository_service_tuf.helpers.tuf import (
│ │ -    Delegations,
│ │ -    Metadata,
│ │ -    SuccinctRoles,
│ │ -    Targets,
│ │ -)
│ │ +from repository_service_tuf.helpers.tuf import Metadata
│ │  
│ │  console = Console()
│ │  
│ │  
│ │  def _check_csv_files(csv_files: List[str]):
│ │      not_found_csv_files: List[str] = []
│ │      for csv_file in csv_files:
│ │ @@ -150,30 +145,20 @@
│ │      except ModuleNotFoundError:
│ │          raise ModuleNotFoundError(
│ │              "SQLAlchemy is required by import-targets. "
│ │              "pip install repository-service-tuf[sqlalchemy,psycopg2]"
│ │          )
│ │  
│ │      settings = context.obj["settings"]
│ │ -    server = settings.get("SERVER")
│ │ -
│ │ -    headers = get_headers(settings)
│ │ -
│ │ -    bs_response = request_server(
│ │ -        settings.SERVER, URL.bootstrap.value, Methods.get, headers=headers
│ │ -    )
│ │ -    if bs_response.status_code != 200:
│ │ -        raise click.ClickException(
│ │ -            f"Error {bs_response.status_code} {bs_response.text}"
│ │ -        )
│ │  
│ │ -    bs_data = bs_response.json()["data"]
│ │ -    if bs_data.get("bootstrap") is False:
│ │ +    bs_status = bootstrap_status(settings)
│ │ +    if bs_status.get("data", {}).get("bootstrap") is False:
│ │          raise click.ClickException(
│ │ -            "`import-targets` requires bootstrap process done."
│ │ +            "`import-targets` requires bootstrap process done. "
│ │ +            f"{bs_status.get('message')}"
│ │          )
│ │  
│ │      # load all required infrastructure
│ │      succinct_roles = _get_succinct_roles(metadata_url)
│ │      engine = create_engine(f"{db_uri}")
│ │      db_metadata = MetaData()
│ │      db_client: Connection = engine.connect()
│ │ @@ -192,13 +177,13 @@
│ │      if skip_publish_targets:
│ │          console.print(
│ │              "Import status: Finished. "
│ │              "Not targets published (`--skip-publish-targets`)"
│ │          )
│ │      else:
│ │          console.print("Import status: Submitting action publish targets")
│ │ -        task_id = publish_targets(server, headers)
│ │ +        task_id = publish_targets(settings)
│ │          console.print(f"Import status: Publish targets task id is {task_id}")
│ │          # monitor task status
│ │ -        result = task_status(task_id, server, headers, "Import status: task ")
│ │ +        result = task_status(task_id, settings, "Import status: task ")
│ │          if result is not None:
│ │              console.print("Import status: [green]Finished.[/]")
│ │   --- repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/login.py
│ ├── +++ repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/login.py
│ │┄ Files 1% similar despite different names
│ │ @@ -17,15 +17,14 @@
│ │      request_server,
│ │  )
│ │  
│ │  console = Console()
│ │  
│ │  
│ │  def _login(server: str, data: Dict[str, str]):
│ │ -
│ │      token_response = request_server(
│ │          server, URL.token.value, Methods.post, data=data
│ │      )
│ │      if token_response.status_code != 200:
│ │          raise click.ClickException(token_response.json()["detail"])
│ │  
│ │      return token_response.json()
│ │   --- repository_service_tuf-0.0.1a9/repository_service_tuf/cli/admin/token.py
│ ├── +++ repository_service_tuf-0.1.0a1/repository_service_tuf/cli/admin/token.py
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/repository_service_tuf/helpers/api_client.py
│ ├── +++ repository_service_tuf-0.1.0a1/repository_service_tuf/helpers/api_client.py
│ │┄ Files 11% similar despite different names
│ │ @@ -3,14 +3,15 @@
│ │  # SPDX-License-Identifier: MIT
│ │  import time
│ │  from dataclasses import dataclass
│ │  from enum import Enum
│ │  from typing import Any, Dict, Optional
│ │  
│ │  import requests
│ │ +from dynaconf import LazySettings
│ │  from requests.exceptions import ConnectionError
│ │  from rich.console import Console
│ │  
│ │  from repository_service_tuf.cli import click
│ │  
│ │  console = Console()
│ │  
│ │ @@ -75,15 +76,15 @@
│ │  
│ │      else:
│ │          raise click.ClickException(
│ │              f"Error {response.status_code} {response.text}"
│ │          )
│ │  
│ │  
│ │ -def get_headers(settings: Dict[str, str]) -> Dict[str, str]:
│ │ +def get_headers(settings: LazySettings) -> Dict[str, str]:
│ │      server = settings.get("SERVER")
│ │      token = settings.get("TOKEN")
│ │      if server and token:
│ │          token_access_check = is_logged(server, token)
│ │          if token_access_check.state is False:
│ │              raise click.ClickException(
│ │                  f"{str(token_access_check.data)}"
│ │ @@ -106,21 +107,46 @@
│ │                  )
│ │      else:
│ │          raise click.ClickException("Login first. Run 'rstuf admin login'")
│ │  
│ │      return headers
│ │  
│ │  
│ │ +def bootstrap_status(settings: LazySettings) -> Dict[str, Any]:
│ │ +    headers = get_headers(settings)
│ │ +    response = request_server(
│ │ +        settings.SERVER, URL.bootstrap.value, Methods.get, headers=headers
│ │ +    )
│ │ +    if response.status_code == 404:
│ │ +        raise click.ClickException(
│ │ +            f"Server {settings.SERVER} does not allow bootstrap"
│ │ +        )
│ │ +    if response.status_code != 200:
│ │ +        raise click.ClickException(
│ │ +            f"Error {response.status_code} {response.text}"
│ │ +        )
│ │ +
│ │ +    bootstrap_json = response.json()
│ │ +    if bootstrap_json is None:
│ │ +        raise click.ClickException(f"Unexpected error {response.text}")
│ │ +
│ │ +    return bootstrap_json
│ │ +
│ │ +
│ │  def task_status(
│ │ -    task_id: str, server: str, headers: Dict[str, str], title: Optional[str]
│ │ +    task_id: str, settings: LazySettings, title: Optional[str]
│ │  ) -> Dict[str, Any]:
│ │ +    headers = get_headers(settings)
│ │      received_states = []
│ │      while True:
│ │          state_response = request_server(
│ │ -            server, f"{URL.task.value}{task_id}", Methods.get, headers=headers
│ │ +            settings.SERVER,
│ │ +            f"{URL.task.value}{task_id}",
│ │ +            Methods.get,
│ │ +            headers=headers,
│ │          )
│ │  
│ │          if state_response.status_code != 200:
│ │              raise click.ClickException(
│ │                  f"Unexpected response {state_response.text}"
│ │              )
│ │  
│ │ @@ -149,17 +175,21 @@
│ │          else:
│ │              raise click.ClickException(
│ │                  f"No data received {state_response.text}"
│ │              )
│ │          time.sleep(2)
│ │  
│ │  
│ │ -def publish_targets(server: str, headers: Dict[str, str]) -> str:
│ │ +def publish_targets(settings: LazySettings) -> str:
│ │ +    headers = get_headers(settings)
│ │      publish_targets = request_server(
│ │ -        server, URL.publish_targets.value, Methods.post, headers=headers
│ │ +        settings.SERVER,
│ │ +        URL.publish_targets.value,
│ │ +        Methods.post,
│ │ +        headers=headers,
│ │      )
│ │      if publish_targets.status_code != 202:
│ │          raise click.ClickException(
│ │              f"Failed to publish targets. {publish_targets.status_code} "
│ │              f"{publish_targets.text}"
│ │          )
│ │      task_id = publish_targets.json()["data"]["task_id"]
│ │   --- repository_service_tuf-0.0.1a9/tests/2.targets.json
│ ├── +++ repository_service_tuf-0.1.0a1/tests/2.targets.json
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/test_tuf_repository_service.py
│ ├── +++ repository_service_tuf-0.1.0a1/tests/test_tuf_repository_service.py
│ │┄ Files 2% similar despite different names
│ │ @@ -4,18 +4,17 @@
│ │  
│ │  from repository_service_tuf.__version__ import version
│ │  from repository_service_tuf.cli import rstuf
│ │  
│ │  
│ │  class TestRSTUFCLI:
│ │      def test_tuf_repository_service(self, client):
│ │ -
│ │          test_result = client.invoke(rstuf)
│ │          assert test_result.exit_code == 0
│ │  
│ │ -    def test_trs_version_parameter(self, client):
│ │ +    def test_version_parameter(self, client):
│ │          """Tests the CLI --version parameter existence and output format."""
│ │  
│ │          result = client.invoke(rstuf, ["--version"])
│ │  
│ │          assert result.exit_code == 0
│ │          assert result.output == f"rstuf, version {version}\n"
│ │   --- repository_service_tuf-0.0.1a9/tests/files/JanisJoplin.key
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/JanisJoplin.key
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/files/JimiHendrix.key
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/JimiHendrix.key
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/files/root3.key
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/online.key
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/files/keystorage/JanisJoplin.key
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/keystorage/JanisJoplin.key
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/files/keystorage/JimiHendrix.key
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/keystorage/JimiHendrix.key
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/files/keystorage/online-rsa.key
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/online-rsa.key
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/files/keystorage/online-rsa.pub
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/online-rsa.pub
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/files/keystorage/online.key
│ ├── +++ repository_service_tuf-0.1.0a1/tests/files/keystorage/online.key
│ │┄ Files identical despite different names
│ │   --- repository_service_tuf-0.0.1a9/tests/unit/cli/admin/test_import_targets.py
│ ├── +++ repository_service_tuf-0.1.0a1/tests/unit/cli/admin/test_import_targets.py
│ │┄ Files 12% similar despite different names
│ │ @@ -219,23 +219,16 @@
│ │  class TestImportTargetsGroupCLI:
│ │      def test_import_targets(self, client, test_context):
│ │          # Required to properly mock functions imported inside import_targets
│ │          import sqlalchemy
│ │  
│ │          test_context["settings"].SERVER = "fake-server"
│ │  
│ │ -        import_targets.get_headers = pretend.call_recorder(
│ │ -            lambda *a: "headers"
│ │ -        )
│ │ -        fake_response = pretend.stub(
│ │ -            status_code=200,
│ │ -            json=pretend.call_recorder(lambda: {"data": {"bootstrap": True}}),
│ │ -        )
│ │ -        import_targets.request_server = pretend.call_recorder(
│ │ -            lambda *a, **kw: fake_response
│ │ +        import_targets.bootstrap_status = pretend.call_recorder(
│ │ +            lambda *a: {"data": {"bootstrap": True}, "message": "some msg"}
│ │          )
│ │          import_targets._get_succinct_roles = pretend.call_recorder(
│ │              lambda *a: "fake_succinct_roles"
│ │          )
│ │          sqlalchemy.create_engine = pretend.call_recorder(
│ │              lambda *a: pretend.stub(
│ │                  connect=pretend.call_recorder(
│ │ @@ -272,62 +265,45 @@
│ │              "targets2of2.csv",
│ │          ]
│ │          result = client.invoke(
│ │              import_targets.import_targets, options, obj=test_context
│ │          )
│ │          assert result.exit_code == 0, result.output
│ │          assert "Finished." in result.output
│ │ -        assert import_targets.request_server.calls == [
│ │ -            pretend.call(
│ │ -                "fake-server",
│ │ -                import_targets.URL.bootstrap.value,
│ │ -                import_targets.Methods.get,
│ │ -                headers="headers",
│ │ -            )
│ │ -        ]
│ │ -        assert import_targets.get_headers.calls == [
│ │ +        assert import_targets.bootstrap_status.calls == [
│ │              pretend.call(test_context["settings"])
│ │          ]
│ │          assert import_targets._get_succinct_roles.calls == [
│ │              pretend.call("http://127.0.0.1/metadata/")
│ │          ]
│ │ -        assert fake_response.json.calls == [pretend.call()]
│ │          assert sqlalchemy.create_engine.calls == [
│ │              pretend.call("postgresql://postgres:secret@127.0.0.1:5433")
│ │          ]
│ │          assert import_targets._check_csv_files.calls == [
│ │              pretend.call(csv_files=("targets1of2.csv", "targets2of2.csv"))
│ │          ]
│ │          assert import_targets.publish_targets.calls == [
│ │ -            pretend.call("fake-server", "headers")
│ │ +            pretend.call(test_context["settings"])
│ │          ]
│ │          assert import_targets.task_status.calls == [
│ │              pretend.call(
│ │                  "fake_task_id",
│ │ -                "fake-server",
│ │ -                "headers",
│ │ +                test_context["settings"],
│ │                  "Import status: task ",
│ │              )
│ │          ]
│ │  
│ │      def test_import_targets_skip_publish_targets(self, client, test_context):
│ │          # Required to properly mock functions imported inside import_targets
│ │          import sqlalchemy
│ │  
│ │          test_context["settings"].SERVER = "fake-server"
│ │  
│ │ -        import_targets.get_headers = pretend.call_recorder(
│ │ -            lambda *a: "headers"
│ │ -        )
│ │ -        fake_response = pretend.stub(
│ │ -            status_code=200,
│ │ -            json=pretend.call_recorder(lambda: {"data": {"bootstrap": True}}),
│ │ -        )
│ │ -        import_targets.request_server = pretend.call_recorder(
│ │ -            lambda *a, **kw: fake_response
│ │ +        import_targets.bootstrap_status = pretend.call_recorder(
│ │ +            lambda *a: {"data": {"bootstrap": True}, "message": "some msg"}
│ │          )
│ │          import_targets._get_succinct_roles = pretend.call_recorder(
│ │              lambda *a: "fake_succinct_roles"
│ │          )
│ │          sqlalchemy.create_engine = pretend.call_recorder(
│ │              lambda *a: pretend.stub(
│ │                  connect=pretend.call_recorder(
│ │ @@ -366,29 +342,20 @@
│ │          ]
│ │          result = client.invoke(
│ │              import_targets.import_targets, options, obj=test_context
│ │          )
│ │          assert result.exit_code == 0, result.output
│ │          assert "Finished." in result.output
│ │          assert "Not targets published" in result.output
│ │ -        assert import_targets.request_server.calls == [
│ │ -            pretend.call(
│ │ -                "fake-server",
│ │ -                import_targets.URL.bootstrap.value,
│ │ -                import_targets.Methods.get,
│ │ -                headers="headers",
│ │ -            )
│ │ -        ]
│ │ -        assert import_targets.get_headers.calls == [
│ │ +        assert import_targets.bootstrap_status.calls == [
│ │              pretend.call(test_context["settings"])
│ │          ]
│ │          assert import_targets._get_succinct_roles.calls == [
│ │              pretend.call("http://127.0.0.1/metadata/")
│ │          ]
│ │ -        assert fake_response.json.calls == [pretend.call()]
│ │          assert sqlalchemy.create_engine.calls == [
│ │              pretend.call("postgresql://postgres:secret@127.0.0.1:5433")
│ │          ]
│ │          assert import_targets._check_csv_files.calls == [
│ │              pretend.call(csv_files=("targets1of2.csv", "targets2of2.csv"))
│ │          ]
│ │          assert import_targets.publish_targets.calls == []
│ │ @@ -424,64 +391,40 @@
│ │          assert isinstance(result.exception, ModuleNotFoundError)
│ │          exc_msg = result.exception.msg
│ │          assert "pip install repository-service-tuf[sqlalchemy" in exc_msg
│ │  
│ │      def test_import_targets_bootstrap_check_failed(self, client, test_context):
│ │          test_context["settings"].SERVER = "fake-server"
│ │  
│ │ -        import_targets.get_headers = pretend.call_recorder(
│ │ -            lambda *a: "headers"
│ │ -        )
│ │ -        fake_response = pretend.stub(
│ │ -            status_code=500,
│ │ -            text="Internal Error",
│ │ -        )
│ │ -        import_targets.request_server = pretend.call_recorder(
│ │ -            lambda *a, **kw: fake_response
│ │ +        import_targets.bootstrap_status = pretend.raiser(
│ │ +            import_targets.click.ClickException("Server ERROR")
│ │          )
│ │  
│ │          options = [
│ │              "--metadata-url",
│ │              "http://127.0.0.1/metadata/",
│ │              "--db-uri",
│ │              "postgresql://postgres:secret@127.0.0.1:5433",
│ │              "--csv",
│ │              "targets1of2.csv",
│ │              "--csv",
│ │              "targets2of2.csv",
│ │          ]
│ │ +
│ │          result = client.invoke(
│ │              import_targets.import_targets, options, obj=test_context
│ │          )
│ │ -        assert result.exit_code == 1, result.output
│ │ -        assert "Error 500 Internal Error" in result.output
│ │ -        assert import_targets.get_headers.calls == [
│ │ -            pretend.call(test_context["settings"])
│ │ -        ]
│ │ -        assert import_targets.request_server.calls == [
│ │ -            pretend.call(
│ │ -                "fake-server",
│ │ -                import_targets.URL.bootstrap.value,
│ │ -                import_targets.Methods.get,
│ │ -                headers="headers",
│ │ -            )
│ │ -        ]
│ │ +        assert result.exit_code == 1
│ │ +        assert "Server ERROR" in result.output, result.output
│ │  
│ │      def test_import_targets_without_bootstrap(self, client, test_context):
│ │          test_context["settings"].SERVER = "fake-server"
│ │  
│ │ -        import_targets.get_headers = pretend.call_recorder(
│ │ -            lambda *a: "headers"
│ │ -        )
│ │ -        fake_response = pretend.stub(
│ │ -            status_code=200,
│ │ -            json=pretend.call_recorder(lambda: {"data": {"bootstrap": False}}),
│ │ -        )
│ │ -        import_targets.request_server = pretend.call_recorder(
│ │ -            lambda *a, **kw: fake_response
│ │ +        import_targets.bootstrap_status = pretend.call_recorder(
│ │ +            lambda *a: {"data": {"bootstrap": False}, "message": "some msg"}
│ │          )
│ │  
│ │          options = [
│ │              "--metadata-url",
│ │              "http://127.0.0.1/metadata/",
│ │              "--db-uri",
│ │              "postgresql://postgres:secret@127.0.0.1:5433",
│ │ @@ -493,18 +436,10 @@
│ │          result = client.invoke(
│ │              import_targets.import_targets, options, obj=test_context
│ │          )
│ │          assert result.exit_code == 1, result.output
│ │          assert (
│ │              "import-targets` requires bootstrap process done." in result.output
│ │          )
│ │ -        assert import_targets.get_headers.calls == [
│ │ +        assert import_targets.bootstrap_status.calls == [
│ │              pretend.call(test_context["settings"])
│ │          ]
│ │ -        assert import_targets.request_server.calls == [
│ │ -            pretend.call(
│ │ -                "fake-server",
│ │ -                import_targets.URL.bootstrap.value,
│ │ -                import_targets.Methods.get,
│ │ -                headers="headers",
│ │ -            )
│ │ -        ]
│ │   --- repository_service_tuf-0.0.1a9/tests/unit/cli/admin/test_login.py
│ ├── +++ repository_service_tuf-0.1.0a1/tests/unit/cli/admin/test_login.py
│ │┄ Files 0% similar despite different names
│ │ @@ -6,15 +6,14 @@
│ │  import pytest
│ │  
│ │  from repository_service_tuf.cli.admin import login
│ │  
│ │  
│ │  class TestLoginGroupCLI:
│ │      def test__login(self):
│ │ -
│ │          expected_response = {"data": {"k": "v"}}
│ │          login.request_server = pretend.call_recorder(
│ │              lambda *a, **kw: pretend.stub(
│ │                  status_code=200,
│ │                  json=pretend.call_recorder(lambda *a: expected_response),
│ │              )
│ │          )
│ │ @@ -27,15 +26,14 @@
│ │                  "api/v1/token/",
│ │                  login.Methods.post,
│ │                  data=test_data,
│ │              )
│ │          ]
│ │  
│ │      def test__login_unauthorized(self):
│ │ -
│ │          expected_response = {"detail": "Unauthorized."}
│ │          login.request_server = pretend.call_recorder(
│ │              lambda *a, **kw: pretend.stub(
│ │                  status_code=401,
│ │                  json=pretend.call_recorder(lambda *a: expected_response),
│ │              )
│ │          )
│ │ @@ -77,15 +75,14 @@
│ │          assert login.loaders.write.calls == [
│ │              pretend.call(
│ │                  test_context["config"], test_context["settings"].to_dict()
│ │              )
│ │          ]
│ │  
│ │      def test_login_force(self, client, test_context):
│ │ -
│ │          # simulate the settings file
│ │          test_context["settings"].SERVER = "fake-server"
│ │          test_context["settings"].TOKEN = "test-token"
│ │  
│ │          steps = [
│ │              "http://test-rstuf",
│ │              "admin",
│ │ @@ -108,15 +105,14 @@
│ │          assert login.loaders.write.calls == [
│ │              pretend.call(
│ │                  test_context["config"], test_context["settings"].to_dict()
│ │              )
│ │          ]
│ │  
│ │      def test_login_expired_token(self, client, test_context):
│ │ -
│ │          # simulate the settings file with invalid/expired token
│ │          test_context["settings"].SERVER = "http://test-rstuf"
│ │          test_context["settings"].TOKEN = "fake-token"
│ │  
│ │          steps = [
│ │              "http://test-rstuf",
│ │              "admin",
│ │ @@ -146,15 +142,14 @@
│ │              )
│ │          ]
│ │          assert login.is_logged.calls == [
│ │              pretend.call(test_context["settings"].SERVER, "fake-token")
│ │          ]
│ │  
│ │      def test_login_already_logged(self, client, test_context):
│ │ -
│ │          # simulate the settings file with invalid/expired token
│ │          test_context["settings"].SERVER = "http://test-rstuf"
│ │          test_context["settings"].TOKEN = "fake-token"
│ │  
│ │          steps = [
│ │              "http://test-rstuf",
│ │              "admin",
│ │   --- repository_service_tuf-0.0.1a9/PKG-INFO
│ ├── +++ repository_service_tuf-0.1.0a1/PKG-INFO
│ │┄ Files 2% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: repository-service-tuf
│ │ -Version: 0.0.1a9
│ │ +Version: 0.1.0a1
│ │  Summary: Repository Service for TUF Command Line Interface
│ │  Author-email: Kairo de Araujo <kairo@dearaujo.nl>
│ │  License: MIT
│ │  Classifier: Development Status :: 4 - Beta
│ │  Classifier: Programming Language :: Python
│ │  Classifier: Programming Language :: Python :: 3.10
│ │  Classifier: Programming Language :: Python :: 3.11
