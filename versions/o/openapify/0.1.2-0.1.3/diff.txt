--- tmp/openapify-0.1.2.tar.gz
+++ tmp/openapify-0.1.3.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "openapify-0.1.2.tar", last modified: Fri Apr  7 11:50:27 2023, max compression
│ +gzip compressed data, was "openapify-0.1.3.tar", last modified: Fri Apr  7 14:47:27 2023, max compression
│   --- openapify-0.1.2.tar
├── +++ openapify-0.1.3.tar
│ ├── file list
│ │ @@ -1,31 +1,33 @@
│ │ -drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 11:50:27.743728 openapify-0.1.2/
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      732 2023-04-07 11:50:27.743556 openapify-0.1.2/PKG-INFO
│ │ -drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 11:50:27.739756 openapify-0.1.2/openapify/
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      198 2023-04-03 17:00:50.000000 openapify-0.1.2/openapify/__init__.py
│ │ -drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 11:50:27.742201 openapify-0.1.2/openapify/core/
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-03 13:14:57.000000 openapify-0.1.2/openapify/core/__init__.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     1123 2023-04-07 11:40:06.000000 openapify-0.1.2/openapify/core/apispec.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)    15113 2023-04-06 11:04:29.000000 openapify-0.1.2/openapify/core/builder.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       92 2023-03-20 20:50:13.000000 openapify-0.1.2/openapify/core/const.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      591 2023-04-03 13:10:22.000000 openapify-0.1.2/openapify/core/jsonschema.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     1748 2023-04-07 11:38:54.000000 openapify-0.1.2/openapify/core/models.py
│ │ -drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 11:50:27.742527 openapify-0.1.2/openapify/core/openapi/
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-20 12:12:59.000000 openapify-0.1.2/openapify/core/openapi/__init__.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     5270 2023-04-07 11:47:46.000000 openapify-0.1.2/openapify/core/openapi/models.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     4769 2023-04-07 11:42:13.000000 openapify-0.1.2/openapify/decorators.py
│ │ -drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 11:50:27.742761 openapify-0.1.2/openapify/ext/
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-17 15:48:32.000000 openapify-0.1.2/openapify/ext/__init__.py
│ │ -drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 11:50:27.742946 openapify-0.1.2/openapify/ext/web/
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-18 09:45:46.000000 openapify-0.1.2/openapify/ext/web/__init__.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     4332 2023-04-03 13:47:08.000000 openapify-0.1.2/openapify/ext/web/aiohttp.py
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-17 11:19:37.000000 openapify-0.1.2/openapify/py.typed
│ │ -drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 11:50:27.740610 openapify-0.1.2/openapify.egg-info/
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      732 2023-04-07 11:50:27.000000 openapify-0.1.2/openapify.egg-info/PKG-INFO
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      594 2023-04-07 11:50:27.000000 openapify-0.1.2/openapify.egg-info/SOURCES.txt
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        1 2023-04-07 11:50:27.000000 openapify-0.1.2/openapify.egg-info/dependency_links.txt
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        1 2023-04-07 10:28:17.000000 openapify-0.1.2/openapify.egg-info/not-zip-safe
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       42 2023-04-07 11:50:27.000000 openapify-0.1.2/openapify.egg-info/requires.txt
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       10 2023-04-07 11:50:27.000000 openapify-0.1.2/openapify.egg-info/top_level.txt
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      364 2023-04-07 11:44:47.000000 openapify-0.1.2/pyproject.toml
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       38 2023-04-07 11:50:27.743787 openapify-0.1.2/setup.cfg
│ │ --rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     1099 2023-04-07 11:50:16.000000 openapify-0.1.2/setup.py
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.023633 openapify-0.1.3/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      732 2023-04-07 14:47:27.023498 openapify-0.1.3/PKG-INFO
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.019027 openapify-0.1.3/openapify/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      239 2023-04-07 14:25:34.000000 openapify-0.1.3/openapify/__init__.py
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.022041 openapify-0.1.3/openapify/core/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-03 13:14:57.000000 openapify-0.1.3/openapify/core/__init__.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     1123 2023-04-07 11:40:06.000000 openapify-0.1.3/openapify/core/apispec.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)    15544 2023-04-07 14:43:54.000000 openapify-0.1.3/openapify/core/builder.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       92 2023-03-20 20:50:13.000000 openapify-0.1.3/openapify/core/const.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      591 2023-04-03 13:10:22.000000 openapify-0.1.3/openapify/core/jsonschema.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     1748 2023-04-07 11:38:54.000000 openapify-0.1.3/openapify/core/models.py
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.022457 openapify-0.1.3/openapify/core/openapi/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-20 12:12:59.000000 openapify-0.1.3/openapify/core/openapi/__init__.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     5270 2023-04-07 14:46:46.000000 openapify-0.1.3/openapify/core/openapi/models.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     4769 2023-04-07 11:42:13.000000 openapify-0.1.3/openapify/decorators.py
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.022698 openapify-0.1.3/openapify/ext/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-17 15:48:32.000000 openapify-0.1.3/openapify/ext/__init__.py
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.022883 openapify-0.1.3/openapify/ext/web/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-18 09:45:46.000000 openapify-0.1.3/openapify/ext/web/__init__.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     4332 2023-04-03 13:47:08.000000 openapify-0.1.3/openapify/ext/web/aiohttp.py
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        0 2023-03-17 11:19:37.000000 openapify-0.1.3/openapify/py.typed
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.020439 openapify-0.1.3/openapify.egg-info/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      732 2023-04-07 14:47:26.000000 openapify-0.1.3/openapify.egg-info/PKG-INFO
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      616 2023-04-07 14:47:26.000000 openapify-0.1.3/openapify.egg-info/SOURCES.txt
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        1 2023-04-07 14:47:26.000000 openapify-0.1.3/openapify.egg-info/dependency_links.txt
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)        1 2023-04-07 10:28:17.000000 openapify-0.1.3/openapify.egg-info/not-zip-safe
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       42 2023-04-07 14:47:26.000000 openapify-0.1.3/openapify.egg-info/requires.txt
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       10 2023-04-07 14:47:26.000000 openapify-0.1.3/openapify.egg-info/top_level.txt
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)      364 2023-04-07 11:44:47.000000 openapify-0.1.3/pyproject.toml
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       38 2023-04-07 14:47:27.023672 openapify-0.1.3/setup.cfg
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)     1099 2023-04-07 14:45:10.000000 openapify-0.1.3/setup.py
│ │ +drwxr-xr-x   0 alexander.tikhonov   (503) staff       (20)        0 2023-04-07 14:47:27.023145 openapify-0.1.3/tests/
│ │ +-rw-r--r--   0 alexander.tikhonov   (503) staff       (20)       85 2023-03-20 20:36:26.000000 openapify-0.1.3/tests/test_aiohttp.py
│ │   --- openapify-0.1.2/PKG-INFO
│ ├── +++ openapify-0.1.3/PKG-INFO
│ │┄ Files 0% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: openapify
│ │ -Version: 0.1.2
│ │ +Version: 0.1.3
│ │  Summary: Generate Open API Specification using decorators
│ │  Author: Alexander Tikhonov
│ │  Author-email: random.gauss@gmail.com
│ │  License: Apache License, Version 2.0
│ │  Platform: all
│ │  Classifier: License :: OSI Approved :: Apache Software License
│ │  Classifier: Intended Audience :: Developers
│ │   --- openapify-0.1.2/openapify/core/apispec.py
│ ├── +++ openapify-0.1.3/openapify/core/apispec.py
│ │┄ Files identical despite different names
│ │   --- openapify-0.1.2/openapify/core/builder.py
│ ├── +++ openapify-0.1.3/openapify/core/builder.py
│ │┄ Files 2% similar despite different names
│ │ @@ -1,14 +1,15 @@
│ │  from contextlib import suppress
│ │  from enum import Enum
│ │  from typing import (
│ │      Any,
│ │      Dict,
│ │      Iterable,
│ │      List,
│ │ +    Mapping,
│ │      Optional,
│ │      Sequence,
│ │      Tuple,
│ │      Type,
│ │      Union,
│ │      overload,
│ │  )
│ │ @@ -250,15 +251,15 @@
│ │                      location=openapi.ParameterLocation.QUERY,
│ │                      description=param.description,
│ │                      required=param.required,
│ │                      deprecated=param.deprecated,
│ │                      allowEmptyValue=param.allowEmptyValue,
│ │                      schema=parameter_schema,
│ │                      example=param.example,
│ │ -                    examples=param.examples,
│ │ +                    examples=self._build_examples(param.examples),
│ │                  )
│ │              )
│ │          return result
│ │  
│ │      def _build_headers(
│ │          self, headers: Dict[str, Union[str, Header]]
│ │      ) -> Sequence[openapi.Parameter]:
│ │ @@ -275,15 +276,15 @@
│ │                      location=openapi.ParameterLocation.HEADER,
│ │                      description=header.description,
│ │                      required=header.required,
│ │                      deprecated=header.deprecated,
│ │                      allowEmptyValue=header.allowEmptyValue,
│ │                      schema=parameter_schema,
│ │                      example=header.example,
│ │ -                    examples=header.examples,
│ │ +                    examples=self._build_examples(header.examples),
│ │                  )
│ │              )
│ │          return result
│ │  
│ │      def _build_cookies(
│ │          self, cookies: Optional[Dict[str, Union[str, Cookie]]] = None
│ │      ) -> Sequence[openapi.Parameter]:
│ │ @@ -300,15 +301,15 @@
│ │                      location=openapi.ParameterLocation.QUERY,
│ │                      description=cookie.description,
│ │                      required=cookie.required,
│ │                      deprecated=cookie.deprecated,
│ │                      allowEmptyValue=cookie.allowEmptyValue,
│ │                      schema=parameter_schema,
│ │                      example=cookie.example,
│ │ -                    examples=cookie.examples,
│ │ +                    examples=self._build_examples(cookie.examples),
│ │                  )
│ │              )
│ │          return result
│ │  
│ │      def _build_request_body(
│ │          self,
│ │          value_type: Type,
│ │ @@ -326,15 +327,17 @@
│ │              # Try to apply plugins with schema_helper
│ │              self.spec.components.schema(component_id, schema=value_type)
│ │              schema = component_id  # FIXME: type violation
│ │          return openapi.RequestBody(
│ │              description=description,
│ │              content={
│ │                  media_type: openapi.MediaType(
│ │ -                    schema=schema, example=example, examples=examples
│ │ +                    schema=schema,
│ │ +                    example=example,
│ │ +                    examples=self._build_examples(examples),
│ │                  )
│ │              },
│ │              required=required,
│ │          )
│ │  
│ │      def _build_response(
│ │          self,
│ │ @@ -348,32 +351,30 @@
│ │          if headers:
│ │              for key, value in headers.items():
│ │                  if not isinstance(value, openapi.Header):
│ │                      header_schema = _build_object_schema(
│ │                          self.spec, value, APISpecObjectType.HEADER, key
│ │                      )
│ │                      headers[key] = openapi.Header(header_schema)
│ │ -        if examples:
│ │ -            for key, value in examples.items():
│ │ -                if not isinstance(value, openapi.Example):
│ │ -                    examples[key] = openapi.Example(value=value)
│ │          component_id = type_name(schema, short=True)
│ │          component_schema = build_json_schema(schema, self.spec)
│ │          if component_schema:
│ │              schema = component_schema
│ │          else:
│ │              # Try to apply plugins with schema_helper
│ │              self.spec.components.schema(component_id, schema=schema)
│ │              schema = component_id
│ │          return openapi.Response(
│ │              description=description,
│ │              headers=headers,
│ │              content={
│ │                  media_type: openapi.MediaType(
│ │ -                    schema=schema, example=example, examples=examples
│ │ +                    schema=schema,
│ │ +                    example=example,
│ │ +                    examples=self._build_examples(examples),
│ │                  ),
│ │              },
│ │          )
│ │  
│ │      @staticmethod
│ │      def _build_external_docs(
│ │          data: Union[str, Tuple[str, str]]
│ │ @@ -402,14 +403,26 @@
│ │                      self.spec.components.security_scheme(
│ │                          name, scheme.to_dict()
│ │                      )
│ │                  # TODO: include list of scopes for oauth2 or openIdConnect
│ │                  result.append({name: []})
│ │          return result
│ │  
│ │ +    @staticmethod
│ │ +    def _build_examples(
│ │ +        examples: Optional[Mapping[str, Union[openapi.Example, Any]]] = None,
│ │ +    ) -> Optional[Mapping[str, openapi.Example]]:
│ │ +        if examples is None:
│ │ +            return None
│ │ +        result = {}
│ │ +        for key, value in examples.items():
│ │ +            if not isinstance(value, openapi.Example):
│ │ +                result[key] = openapi.Example(value)
│ │ +        return result
│ │ +
│ │  
│ │  def build_spec(
│ │      routes: Iterable[RouteDef],
│ │      spec: Optional[APISpec] = None,
│ │      *,
│ │      title: str = "API",
│ │      version: str = "1.0.0",
│ │   --- openapify-0.1.2/openapify/core/jsonschema.py
│ ├── +++ openapify-0.1.3/openapify/core/jsonschema.py
│ │┄ Files identical despite different names
│ │   --- openapify-0.1.2/openapify/core/models.py
│ ├── +++ openapify-0.1.3/openapify/core/models.py
│ │┄ Files identical despite different names
│ │   --- openapify-0.1.2/openapify/core/openapi/models.py
│ ├── +++ openapify-0.1.3/openapify/core/openapi/models.py
│ │┄ Ordering differences only
│ │┄ Files 0% similar despite different names
│ │ @@ -28,17 +28,17 @@
│ │      url: str
│ │      description: Optional[str] = None
│ │      variables: Optional[Mapping[str, ServerVariable]] = None
│ │  
│ │  
│ │  @dataclass
│ │  class Example(Object):
│ │ +    value: Optional[Any] = None
│ │      summary: Optional[str] = None
│ │      description: Optional[str] = None
│ │ -    value: Optional[Any] = None
│ │  
│ │  
│ │  @dataclass
│ │  class Header(Object):
│ │      schema: Schema
│ │      description: Optional[str] = None
│ │      required: Optional[bool] = None
│ │   --- openapify-0.1.2/openapify/decorators.py
│ ├── +++ openapify-0.1.3/openapify/decorators.py
│ │┄ Files identical despite different names
│ │   --- openapify-0.1.2/openapify/ext/web/aiohttp.py
│ ├── +++ openapify-0.1.3/openapify/ext/web/aiohttp.py
│ │┄ Files identical despite different names
│ │   --- openapify-0.1.2/openapify.egg-info/PKG-INFO
│ ├── +++ openapify-0.1.3/openapify.egg-info/PKG-INFO
│ │┄ Files 0% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: openapify
│ │ -Version: 0.1.2
│ │ +Version: 0.1.3
│ │  Summary: Generate Open API Specification using decorators
│ │  Author: Alexander Tikhonov
│ │  Author-email: random.gauss@gmail.com
│ │  License: Apache License, Version 2.0
│ │  Platform: all
│ │  Classifier: License :: OSI Approved :: Apache Software License
│ │  Classifier: Intended Audience :: Developers
│ │   --- openapify-0.1.2/openapify.egg-info/SOURCES.txt
│ ├── +++ openapify-0.1.3/openapify.egg-info/SOURCES.txt
│ │┄ Files 12% similar despite different names
│ │ @@ -15,8 +15,9 @@
│ │  openapify/core/const.py
│ │  openapify/core/jsonschema.py
│ │  openapify/core/models.py
│ │  openapify/core/openapi/__init__.py
│ │  openapify/core/openapi/models.py
│ │  openapify/ext/__init__.py
│ │  openapify/ext/web/__init__.py
│ │ -openapify/ext/web/aiohttp.py
│ │ +openapify/ext/web/aiohttp.py
│ │ +tests/test_aiohttp.py
│ │   --- openapify-0.1.2/setup.py
│ ├── +++ openapify-0.1.3/setup.py
│ │┄ Files 1% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  #!/usr/bin/env python
│ │  
│ │  from setuptools import find_packages, setup
│ │  
│ │  setup(
│ │      name="openapify",
│ │ -    version="0.1.2",
│ │ +    version="0.1.3",
│ │      description="Generate Open API Specification using decorators",
│ │      platforms="all",
│ │      classifiers=[
│ │          "License :: OSI Approved :: Apache Software License",
│ │          "Intended Audience :: Developers",
│ │          "Programming Language :: Python :: 3 :: Only",
│ │          "Programming Language :: Python :: 3.7",
