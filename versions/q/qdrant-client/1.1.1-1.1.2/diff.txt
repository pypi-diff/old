--- tmp/qdrant_client-1.1.1.tar.gz
+++ tmp/qdrant_client-1.1.2.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "qdrant_client-1.1.1.tar", max compression
│ +gzip compressed data, was "qdrant_client-1.1.2.tar", max compression
│   --- qdrant_client-1.1.1.tar
├── +++ qdrant_client-1.1.2.tar
│ ├── file list
│ │ @@ -1,68 +1,68 @@
│ │ --rw-r--r--   0        0        0    11357 2023-03-30 21:32:27.220617 qdrant_client-1.1.1/LICENSE
│ │ --rw-r--r--   0        0        0     5535 2023-03-30 21:32:27.220617 qdrant_client-1.1.1/README.md
│ │ --rw-r--r--   0        0        0     1277 2023-03-30 21:32:27.220617 qdrant_client-1.1.1/pyproject.toml
│ │ --rw-r--r--   0        0        0       56 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/__init__.py
│ │ --rw-r--r--   0        0        0    25845 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/client_base.py
│ │ --rw-r--r--   0        0        0     1104 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/connection.py
│ │ --rw-r--r--   0        0        0        0 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/conversions/__init__.py
│ │ --rw-r--r--   0        0        0     3231 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/conversions/common_types.py
│ │ --rw-r--r--   0        0        0    61186 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/conversions/conversion.py
│ │ --rw-r--r--   0        0        0      252 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/__init__.py
│ │ --rw-r--r--   0        0        0    28376 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/collections_pb2.py
│ │ --rw-r--r--   0        0        0      159 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/collections_pb2_grpc.py
│ │ --rw-r--r--   0        0        0     1794 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/collections_service_pb2.py
│ │ --rw-r--r--   0        0        0    13456 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/collections_service_pb2_grpc.py
│ │ --rw-r--r--   0        0        0     3395 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/json_with_int_pb2.py
│ │ --rw-r--r--   0        0        0      159 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/json_with_int_pb2_grpc.py
│ │ --rw-r--r--   0        0        0    43930 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/points_pb2.py
│ │ --rw-r--r--   0        0        0      159 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/points_pb2_grpc.py
│ │ --rw-r--r--   0        0        0     2502 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/points_service_pb2.py
│ │ --rw-r--r--   0        0        0    23690 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/points_service_pb2_grpc.py
│ │ --rw-r--r--   0        0        0     2254 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/qdrant_pb2.py
│ │ --rw-r--r--   0        0        0     2411 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/qdrant_pb2_grpc.py
│ │ --rw-r--r--   0        0        0     7768 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/snapshots_service_pb2.py
│ │ --rw-r--r--   0        0        0    10406 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/grpc/snapshots_service_pb2_grpc.py
│ │ --rw-r--r--   0        0        0      505 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/__init__.py
│ │ --rw-r--r--   0        0        0        0 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/api/__init__.py
│ │ --rw-r--r--   0        0        0    10437 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/api/cluster_api.py
│ │ --rw-r--r--   0        0        0    27408 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/api/collections_api.py
│ │ --rw-r--r--   0        0        0    30820 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/api/points_api.py
│ │ --rw-r--r--   0        0        0     9499 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/api/service_api.py
│ │ --rw-r--r--   0        0        0    15295 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/api/snapshots_api.py
│ │ --rw-r--r--   0        0        0     7577 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/api_client.py
│ │ --rw-r--r--   0        0        0      233 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/configuration.py
│ │ --rw-r--r--   0        0        0     1616 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/exceptions.py
│ │ --rw-r--r--   0        0        0       22 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/models/__init__.py
│ │ --rw-r--r--   0        0        0    58719 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/http/models/models.py
│ │ --rw-r--r--   0        0        0        0 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/__init__.py
│ │ --rw-r--r--   0        0        0     2962 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/distances.py
│ │ --rw-r--r--   0        0        0     1446 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/geo.py
│ │ --rw-r--r--   0        0        0    21832 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/local_collection.py
│ │ --rw-r--r--   0        0        0     5595 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/payload_filters.py
│ │ --rw-r--r--   0        0        0     2713 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/payload_value_extractor.py
│ │ --rw-r--r--   0        0        0     2237 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/persistence.py
│ │ --rw-r--r--   0        0        0    18888 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/local/qdrant_local.py
│ │ --rw-r--r--   0        0        0       40 2023-03-30 21:32:27.224617 qdrant_client-1.1.1/qdrant_client/models/__init__.py
│ │ --rw-r--r--   0        0        0     7034 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/parallel_processor.py
│ │ --rw-r--r--   0        0        0    10624 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/proto/collections.proto
│ │ --rw-r--r--   0        0        0     1168 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/proto/collections_service.proto
│ │ --rw-r--r--   0        0        0     1929 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/proto/json_with_int.proto
│ │ --rw-r--r--   0        0        0    14485 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/proto/points.proto
│ │ --rw-r--r--   0        0        0     2191 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/proto/points_service.proto
│ │ --rw-r--r--   0        0        0      331 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/proto/qdrant.proto
│ │ --rw-r--r--   0        0        0     1895 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/proto/snapshots_service.proto
│ │ --rw-r--r--   0        0        0        8 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/py.typed
│ │ --rw-r--r--   0        0        0    54280 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/qdrant_client.py
│ │ --rw-r--r--   0        0        0    88692 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/qdrant_remote.py
│ │ --rw-r--r--   0        0        0        0 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/uploader/__init__.py
│ │ --rw-r--r--   0        0        0     2865 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/uploader/grpc_uploader.py
│ │ --rw-r--r--   0        0        0     2537 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/uploader/rest_uploader.py
│ │ --rw-r--r--   0        0        0     3200 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_client/uploader/uploader.py
│ │ --rw-r--r--   0        0        0      267 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_openapi_client/__init__.py
│ │ --rw-r--r--   0        0        0       37 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_openapi_client/api/__init__.py
│ │ --rw-r--r--   0        0        0       53 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_openapi_client/api/collections_api.py
│ │ --rw-r--r--   0        0        0       48 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_openapi_client/api/points_api.py
│ │ --rw-r--r--   0        0        0       44 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_openapi_client/exceptions.py
│ │ --rw-r--r--   0        0        0       47 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_openapi_client/models/__init__.py
│ │ --rw-r--r--   0        0        0       47 2023-03-30 21:32:27.228617 qdrant_client-1.1.1/qdrant_openapi_client/models/models.py
│ │ --rw-r--r--   0        0        0     6594 1970-01-01 00:00:00.000000 qdrant_client-1.1.1/PKG-INFO
│ │ +-rw-r--r--   0        0        0    11357 2023-04-07 12:37:36.060725 qdrant_client-1.1.2/LICENSE
│ │ +-rw-r--r--   0        0        0     5639 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/README.md
│ │ +-rw-r--r--   0        0        0     1277 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/pyproject.toml
│ │ +-rw-r--r--   0        0        0       56 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/__init__.py
│ │ +-rw-r--r--   0        0        0    25845 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/client_base.py
│ │ +-rw-r--r--   0        0        0     1104 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/connection.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/conversions/__init__.py
│ │ +-rw-r--r--   0        0        0     3231 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/conversions/common_types.py
│ │ +-rw-r--r--   0        0        0    61186 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/conversions/conversion.py
│ │ +-rw-r--r--   0        0        0      252 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/grpc/__init__.py
│ │ +-rw-r--r--   0        0        0    28376 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/grpc/collections_pb2.py
│ │ +-rw-r--r--   0        0        0      159 2023-04-07 12:37:36.064725 qdrant_client-1.1.2/qdrant_client/grpc/collections_pb2_grpc.py
│ │ +-rw-r--r--   0        0        0     1794 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/collections_service_pb2.py
│ │ +-rw-r--r--   0        0        0    13456 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/collections_service_pb2_grpc.py
│ │ +-rw-r--r--   0        0        0     3395 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/json_with_int_pb2.py
│ │ +-rw-r--r--   0        0        0      159 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/json_with_int_pb2_grpc.py
│ │ +-rw-r--r--   0        0        0    43930 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/points_pb2.py
│ │ +-rw-r--r--   0        0        0      159 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/points_pb2_grpc.py
│ │ +-rw-r--r--   0        0        0     2502 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/points_service_pb2.py
│ │ +-rw-r--r--   0        0        0    23690 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/points_service_pb2_grpc.py
│ │ +-rw-r--r--   0        0        0     2254 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/qdrant_pb2.py
│ │ +-rw-r--r--   0        0        0     2411 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/qdrant_pb2_grpc.py
│ │ +-rw-r--r--   0        0        0     7768 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/snapshots_service_pb2.py
│ │ +-rw-r--r--   0        0        0    10406 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/grpc/snapshots_service_pb2_grpc.py
│ │ +-rw-r--r--   0        0        0      505 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/__init__.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/api/__init__.py
│ │ +-rw-r--r--   0        0        0    10437 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/api/cluster_api.py
│ │ +-rw-r--r--   0        0        0    27408 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/api/collections_api.py
│ │ +-rw-r--r--   0        0        0    30820 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/api/points_api.py
│ │ +-rw-r--r--   0        0        0     9499 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/api/service_api.py
│ │ +-rw-r--r--   0        0        0    15295 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/api/snapshots_api.py
│ │ +-rw-r--r--   0        0        0     7577 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/api_client.py
│ │ +-rw-r--r--   0        0        0      233 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/configuration.py
│ │ +-rw-r--r--   0        0        0     1616 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/exceptions.py
│ │ +-rw-r--r--   0        0        0       22 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/models/__init__.py
│ │ +-rw-r--r--   0        0        0    58719 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/http/models/models.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/__init__.py
│ │ +-rw-r--r--   0        0        0     2962 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/distances.py
│ │ +-rw-r--r--   0        0        0     1446 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/geo.py
│ │ +-rw-r--r--   0        0        0    21837 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/local_collection.py
│ │ +-rw-r--r--   0        0        0     5595 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/payload_filters.py
│ │ +-rw-r--r--   0        0        0     2713 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/payload_value_extractor.py
│ │ +-rw-r--r--   0        0        0     2237 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/persistence.py
│ │ +-rw-r--r--   0        0        0    18888 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/local/qdrant_local.py
│ │ +-rw-r--r--   0        0        0       40 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/models/__init__.py
│ │ +-rw-r--r--   0        0        0     7034 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/parallel_processor.py
│ │ +-rw-r--r--   0        0        0    10624 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/proto/collections.proto
│ │ +-rw-r--r--   0        0        0     1168 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/proto/collections_service.proto
│ │ +-rw-r--r--   0        0        0     1929 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/proto/json_with_int.proto
│ │ +-rw-r--r--   0        0        0    14485 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/proto/points.proto
│ │ +-rw-r--r--   0        0        0     2191 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/proto/points_service.proto
│ │ +-rw-r--r--   0        0        0      331 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/proto/qdrant.proto
│ │ +-rw-r--r--   0        0        0     1895 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/proto/snapshots_service.proto
│ │ +-rw-r--r--   0        0        0        8 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/py.typed
│ │ +-rw-r--r--   0        0        0    54281 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/qdrant_client.py
│ │ +-rw-r--r--   0        0        0    88692 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/qdrant_remote.py
│ │ +-rw-r--r--   0        0        0        0 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/uploader/__init__.py
│ │ +-rw-r--r--   0        0        0     2865 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/uploader/grpc_uploader.py
│ │ +-rw-r--r--   0        0        0     2537 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/uploader/rest_uploader.py
│ │ +-rw-r--r--   0        0        0     3200 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_client/uploader/uploader.py
│ │ +-rw-r--r--   0        0        0      267 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_openapi_client/__init__.py
│ │ +-rw-r--r--   0        0        0       37 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_openapi_client/api/__init__.py
│ │ +-rw-r--r--   0        0        0       53 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_openapi_client/api/collections_api.py
│ │ +-rw-r--r--   0        0        0       48 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_openapi_client/api/points_api.py
│ │ +-rw-r--r--   0        0        0       44 2023-04-07 12:37:36.068725 qdrant_client-1.1.2/qdrant_openapi_client/exceptions.py
│ │ +-rw-r--r--   0        0        0       47 2023-04-07 12:37:36.072726 qdrant_client-1.1.2/qdrant_openapi_client/models/__init__.py
│ │ +-rw-r--r--   0        0        0       47 2023-04-07 12:37:36.072726 qdrant_client-1.1.2/qdrant_openapi_client/models/models.py
│ │ +-rw-r--r--   0        0        0     6698 1970-01-01 00:00:00.000000 qdrant_client-1.1.2/PKG-INFO
│ │   --- qdrant_client-1.1.1/LICENSE
│ ├── +++ qdrant_client-1.1.2/LICENSE
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/README.md
│ ├── +++ qdrant_client-1.1.2/README.md
│ │┄ Files 3% similar despite different names
│ │ @@ -59,15 +59,15 @@
│ │  # or
│ │  client = QdrantClient(path="path/to/db")  # Persists changes to disk
│ │  ```
│ │  
│ │  Local mode is useful for development, prototyping and testing.
│ │  
│ │  - You can use it to run tests in your CI/CD pipeline.
│ │ -- Run it in Colab or Jupyter Notebook, no extra dependencies required.
│ │ +- Run it in Colab or Jupyter Notebook, no extra dependencies required. See an [example](https://colab.research.google.com/drive/1Bz8RSVHwnNDaNtDwotfPj0w7AYzsdXZ-?usp=sharing)
│ │  - When you need to scale, simply switch to server mode.
│ │  
│ │  ### How it works?
│ │  
│ │  We just implemented Qdrant API in pure Python.
│ │  We covered it with tests extensively to be sure it works the same as the server version.
│ │ ├── html2text {}
│ │ │ @@ -15,45 +15,46 @@
│ │ │                                      [Qdrant]
│ │ │  Python client allows you to run same code in local mode without running Qdrant
│ │ │  server. Simply initialize client like this: ```python from qdrant_client import
│ │ │  QdrantClient client = QdrantClient(":memory:") # or client = QdrantClient
│ │ │  (path="path/to/db") # Persists changes to disk ``` Local mode is useful for
│ │ │  development, prototyping and testing. - You can use it to run tests in your CI/
│ │ │  CD pipeline. - Run it in Colab or Jupyter Notebook, no extra dependencies
│ │ │ -required. - When you need to scale, simply switch to server mode. ### How it
│ │ │ -works? We just implemented Qdrant API in pure Python. We covered it with tests
│ │ │ -extensively to be sure it works the same as the server version. ## Connect to
│ │ │ -Qdrant server To connect to Qdrant server, simply specify host and port:
│ │ │ -```python from qdrant_client import QdrantClient client = QdrantClient
│ │ │ -(host="localhost", port=6333) # or client = QdrantClient(url="http://localhost:
│ │ │ -6333") ``` You can run Qdrant server locally with docker: ```bash docker run -
│ │ │ -p 6333:6333 qdrant/qdrant:latest ``` See more launch options in [Qdrant
│ │ │ -repository](https://github.com/qdrant/qdrant#usage). ## Connect to Qdrant cloud
│ │ │ -You can register and use [Qdrant Cloud](https://cloud.qdrant.io/) to get a free
│ │ │ -tier account with 1GB RAM. Once you have your cluster and API key, you can
│ │ │ -connect to it like this: ```python from qdrant_client import QdrantClient
│ │ │ -qdrant_client = QdrantClient( url="https://xxxxxx-xxxxx-xxxxx-xxxx-
│ │ │ -xxxxxxxxx.us-east.aws.cloud.qdrant.io:6333", api_key="", ) ``` ## Examples
│ │ │ -Create a new collection ```python from qdrant_client.models import Distance,
│ │ │ -VectorParams client.recreate_collection( collection_name="my_collection",
│ │ │ -vectors_config=VectorParams(size=100, distance=Distance.COSINE), ) ``` Insert
│ │ │ -vectors into a collection ```python import numpy as np from
│ │ │ -qdrant_client.models import PointStruct vectors = np.random.rand(100, 100)
│ │ │ -client.upsert( collection_name="my_collection", points=[ PointStruct( id=idx,
│ │ │ -vector=vector.tolist(), payload={"color": "red", "rand_number": idx % 10} ) for
│ │ │ -idx, vector in enumerate(vectors) ] ) ``` Search for similar vectors ```python
│ │ │ -query_vector = np.random.rand(100) hits = client.search
│ │ │ -( collection_name="my_collection", query_vector=query_vector, limit=5 # Return
│ │ │ -5 closest points ) ``` Search for similar vectors with filtering condition
│ │ │ -```python from qdrant_client.models import Filter, FieldCondition, Range hits =
│ │ │ +required. See an [example](https://colab.research.google.com/drive/
│ │ │ +1Bz8RSVHwnNDaNtDwotfPj0w7AYzsdXZ-?usp=sharing) - When you need to scale, simply
│ │ │ +switch to server mode. ### How it works? We just implemented Qdrant API in pure
│ │ │ +Python. We covered it with tests extensively to be sure it works the same as
│ │ │ +the server version. ## Connect to Qdrant server To connect to Qdrant server,
│ │ │ +simply specify host and port: ```python from qdrant_client import QdrantClient
│ │ │ +client = QdrantClient(host="localhost", port=6333) # or client = QdrantClient
│ │ │ +(url="http://localhost:6333") ``` You can run Qdrant server locally with
│ │ │ +docker: ```bash docker run -p 6333:6333 qdrant/qdrant:latest ``` See more
│ │ │ +launch options in [Qdrant repository](https://github.com/qdrant/qdrant#usage).
│ │ │ +## Connect to Qdrant cloud You can register and use [Qdrant Cloud](https://
│ │ │ +cloud.qdrant.io/) to get a free tier account with 1GB RAM. Once you have your
│ │ │ +cluster and API key, you can connect to it like this: ```python from
│ │ │ +qdrant_client import QdrantClient qdrant_client = QdrantClient( url="https://
│ │ │ +xxxxxx-xxxxx-xxxxx-xxxx-xxxxxxxxx.us-east.aws.cloud.qdrant.io:6333",
│ │ │ +api_key="", ) ``` ## Examples Create a new collection ```python from
│ │ │ +qdrant_client.models import Distance, VectorParams client.recreate_collection
│ │ │ +( collection_name="my_collection", vectors_config=VectorParams(size=100,
│ │ │ +distance=Distance.COSINE), ) ``` Insert vectors into a collection ```python
│ │ │ +import numpy as np from qdrant_client.models import PointStruct vectors =
│ │ │ +np.random.rand(100, 100) client.upsert( collection_name="my_collection",
│ │ │ +points=[ PointStruct( id=idx, vector=vector.tolist(), payload={"color": "red",
│ │ │ +"rand_number": idx % 10} ) for idx, vector in enumerate(vectors) ] ) ``` Search
│ │ │ +for similar vectors ```python query_vector = np.random.rand(100) hits =
│ │ │  client.search( collection_name="my_collection", query_vector=query_vector,
│ │ │ -query_filter=Filter( must=[ # These conditions are required for search results
│ │ │ -FieldCondition( key='rand_number', # Condition based on values of `rand_number`
│ │ │ -field. range=Range( gte=3 # Select only those results where `rand_number` >= 3
│ │ │ -) ) ] ), limit=5 # Return 5 closest points ) ``` See more examples in our
│ │ │ -[Documentation](https://qdrant.tech/documentation/)! ### gRPC To enable
│ │ │ -(typically, much faster) collection uploading with gRPC, use the following
│ │ │ -initialization: ```python from qdrant_client import QdrantClient client =
│ │ │ -QdrantClient(host="localhost", grpc_port=6334, prefer_grpc=True) ``` ###
│ │ │ -Development This project uses git hooks to run code formatters. Install `pre-
│ │ │ -commit` with `pip3 install pre-commit` and set up hooks with `pre-commit
│ │ │ -install`. > pre-commit requires python>=3.8
│ │ │ +limit=5 # Return 5 closest points ) ``` Search for similar vectors with
│ │ │ +filtering condition ```python from qdrant_client.models import Filter,
│ │ │ +FieldCondition, Range hits = client.search( collection_name="my_collection",
│ │ │ +query_vector=query_vector, query_filter=Filter( must=[ # These conditions are
│ │ │ +required for search results FieldCondition( key='rand_number', # Condition
│ │ │ +based on values of `rand_number` field. range=Range( gte=3 # Select only those
│ │ │ +results where `rand_number` >= 3 ) ) ] ), limit=5 # Return 5 closest points )
│ │ │ +``` See more examples in our [Documentation](https://qdrant.tech/documentation/
│ │ │ +)! ### gRPC To enable (typically, much faster) collection uploading with gRPC,
│ │ │ +use the following initialization: ```python from qdrant_client import
│ │ │ +QdrantClient client = QdrantClient(host="localhost", grpc_port=6334,
│ │ │ +prefer_grpc=True) ``` ### Development This project uses git hooks to run code
│ │ │ +formatters. Install `pre-commit` with `pip3 install pre-commit` and set up
│ │ │ +hooks with `pre-commit install`. > pre-commit requires python>=3.8
│ │   --- qdrant_client-1.1.1/pyproject.toml
│ ├── +++ qdrant_client-1.1.2/pyproject.toml
│ │┄ Files 1% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  [tool.poetry]
│ │  name = "qdrant-client"
│ │ -version = "1.1.1"
│ │ +version = "1.1.2"
│ │  description = "Client library for the Qdrant vector search engine"
│ │  authors = ["Andrey Vasnetsov <andrey@qdrant.tech>"]
│ │  packages = [
│ │      {include = "qdrant_client"},
│ │      {include = "qdrant_openapi_client"}
│ │  ]
│ │  readme = "README.md"
│ │   --- qdrant_client-1.1.1/qdrant_client/client_base.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/client_base.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/connection.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/connection.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/conversions/common_types.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/conversions/common_types.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/conversions/conversion.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/conversions/conversion.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/collections_pb2.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/collections_pb2.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/collections_service_pb2.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/collections_service_pb2.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/collections_service_pb2_grpc.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/collections_service_pb2_grpc.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/json_with_int_pb2.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/json_with_int_pb2.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/points_pb2.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/points_pb2.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/points_service_pb2.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/points_service_pb2.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/points_service_pb2_grpc.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/points_service_pb2_grpc.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/qdrant_pb2.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/qdrant_pb2.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/qdrant_pb2_grpc.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/qdrant_pb2_grpc.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/snapshots_service_pb2.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/snapshots_service_pb2.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/grpc/snapshots_service_pb2_grpc.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/grpc/snapshots_service_pb2_grpc.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/api/cluster_api.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/api/cluster_api.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/api/collections_api.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/api/collections_api.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/api/points_api.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/api/points_api.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/api/service_api.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/api/service_api.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/api/snapshots_api.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/api/snapshots_api.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/api_client.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/api_client.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/exceptions.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/exceptions.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/http/models/models.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/http/models/models.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/local/distances.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/local/distances.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/local/geo.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/local/geo.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/local/local_collection.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/local/local_collection.py
│ │┄ Files 0% similar despite different names
│ │ @@ -454,15 +454,15 @@
│ │                  if batch.payloads is not None:
│ │                      payload = batch.payloads[idx]
│ │  
│ │                  vector = {name: v[idx] for name, v in vectors.items()}
│ │  
│ │                  self._upsert_point(
│ │                      models.PointStruct(
│ │ -                        id=idx,
│ │ +                        id=point_id,
│ │                          payload=payload,
│ │                          vector=vector,
│ │                      )
│ │                  )
│ │          else:
│ │              raise ValueError(f"Unsupported type: {type(points)}")
│ │   --- qdrant_client-1.1.1/qdrant_client/local/payload_filters.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/local/payload_filters.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/local/payload_value_extractor.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/local/payload_value_extractor.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/local/persistence.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/local/persistence.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/local/qdrant_local.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/local/qdrant_local.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/parallel_processor.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/parallel_processor.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/proto/collections.proto
│ ├── +++ qdrant_client-1.1.2/qdrant_client/proto/collections.proto
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/proto/collections_service.proto
│ ├── +++ qdrant_client-1.1.2/qdrant_client/proto/collections_service.proto
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/proto/json_with_int.proto
│ ├── +++ qdrant_client-1.1.2/qdrant_client/proto/json_with_int.proto
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/proto/points.proto
│ ├── +++ qdrant_client-1.1.2/qdrant_client/proto/points.proto
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/proto/points_service.proto
│ ├── +++ qdrant_client-1.1.2/qdrant_client/proto/points_service.proto
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/proto/snapshots_service.proto
│ ├── +++ qdrant_client-1.1.2/qdrant_client/proto/snapshots_service.proto
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/qdrant_client.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/qdrant_client.py
│ │┄ Files 0% similar despite different names
│ │ @@ -136,15 +136,15 @@
│ │  
│ │          Returns:
│ │              An instance of raw REST API client, generated from OpenAPI schema
│ │          """
│ │          if isinstance(self._client, QdrantRemote):
│ │              return self._client.http
│ │  
│ │ -        raise NotImplementedError("REST client is not supported for {type(self._client)}")
│ │ +        raise NotImplementedError(f"REST client is not supported for {type(self._client)}")
│ │  
│ │      def search_batch(
│ │          self,
│ │          collection_name: str,
│ │          requests: Sequence[types.SearchRequest],
│ │          consistency: Optional[types.ReadConsistency] = None,
│ │          **kwargs: Any,
│ │   --- qdrant_client-1.1.1/qdrant_client/qdrant_remote.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/qdrant_remote.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/uploader/grpc_uploader.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/uploader/grpc_uploader.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/uploader/rest_uploader.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/uploader/rest_uploader.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/qdrant_client/uploader/uploader.py
│ ├── +++ qdrant_client-1.1.2/qdrant_client/uploader/uploader.py
│ │┄ Files identical despite different names
│ │   --- qdrant_client-1.1.1/PKG-INFO
│ ├── +++ qdrant_client-1.1.2/PKG-INFO
│ │┄ Files 1% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: qdrant-client
│ │ -Version: 1.1.1
│ │ +Version: 1.1.2
│ │  Summary: Client library for the Qdrant vector search engine
│ │  Home-page: https://github.com/qdrant/qdrant-client
│ │  Keywords: vector,search,neural,matching,client
│ │  Author: Andrey Vasnetsov
│ │  Author-email: andrey@qdrant.tech
│ │  Requires-Python: >=3.7,<3.12
│ │  Classifier: Programming Language :: Python :: 3
│ │ @@ -85,15 +85,15 @@
│ │  # or
│ │  client = QdrantClient(path="path/to/db")  # Persists changes to disk
│ │  ```
│ │  
│ │  Local mode is useful for development, prototyping and testing.
│ │  
│ │  - You can use it to run tests in your CI/CD pipeline.
│ │ -- Run it in Colab or Jupyter Notebook, no extra dependencies required.
│ │ +- Run it in Colab or Jupyter Notebook, no extra dependencies required. See an [example](https://colab.research.google.com/drive/1Bz8RSVHwnNDaNtDwotfPj0w7AYzsdXZ-?usp=sharing)
│ │  - When you need to scale, simply switch to server mode.
│ │  
│ │  ### How it works?
│ │  
│ │  We just implemented Qdrant API in pure Python.
│ │  We covered it with tests extensively to be sure it works the same as the server version.
│ │ ├── html2text {}
│ │ │ @@ -1,8 +1,8 @@
│ │ │ -Metadata-Version: 2.1 Name: qdrant-client Version: 1.1.1 Summary: Client
│ │ │ +Metadata-Version: 2.1 Name: qdrant-client Version: 1.1.2 Summary: Client
│ │ │  library for the Qdrant vector search engine Home-page: https://github.com/
│ │ │  qdrant/qdrant-client Keywords: vector,search,neural,matching,client Author:
│ │ │  Andrey Vasnetsov Author-email: andrey@qdrant.tech Requires-Python: >=3.7,<3.12
│ │ │  Classifier: Programming Language :: Python :: 3 Classifier: Programming
│ │ │  Language :: Python :: 3.7 Classifier: Programming Language :: Python :: 3.8
│ │ │  Classifier: Programming Language :: Python :: 3.9 Classifier: Programming
│ │ │  Language :: Python :: 3.10 Classifier: Programming Language :: Python :: 3.11
│ │ │ @@ -30,45 +30,46 @@
│ │ │                                      [Qdrant]
│ │ │  Python client allows you to run same code in local mode without running Qdrant
│ │ │  server. Simply initialize client like this: ```python from qdrant_client import
│ │ │  QdrantClient client = QdrantClient(":memory:") # or client = QdrantClient
│ │ │  (path="path/to/db") # Persists changes to disk ``` Local mode is useful for
│ │ │  development, prototyping and testing. - You can use it to run tests in your CI/
│ │ │  CD pipeline. - Run it in Colab or Jupyter Notebook, no extra dependencies
│ │ │ -required. - When you need to scale, simply switch to server mode. ### How it
│ │ │ -works? We just implemented Qdrant API in pure Python. We covered it with tests
│ │ │ -extensively to be sure it works the same as the server version. ## Connect to
│ │ │ -Qdrant server To connect to Qdrant server, simply specify host and port:
│ │ │ -```python from qdrant_client import QdrantClient client = QdrantClient
│ │ │ -(host="localhost", port=6333) # or client = QdrantClient(url="http://localhost:
│ │ │ -6333") ``` You can run Qdrant server locally with docker: ```bash docker run -
│ │ │ -p 6333:6333 qdrant/qdrant:latest ``` See more launch options in [Qdrant
│ │ │ -repository](https://github.com/qdrant/qdrant#usage). ## Connect to Qdrant cloud
│ │ │ -You can register and use [Qdrant Cloud](https://cloud.qdrant.io/) to get a free
│ │ │ -tier account with 1GB RAM. Once you have your cluster and API key, you can
│ │ │ -connect to it like this: ```python from qdrant_client import QdrantClient
│ │ │ -qdrant_client = QdrantClient( url="https://xxxxxx-xxxxx-xxxxx-xxxx-
│ │ │ -xxxxxxxxx.us-east.aws.cloud.qdrant.io:6333", api_key="", ) ``` ## Examples
│ │ │ -Create a new collection ```python from qdrant_client.models import Distance,
│ │ │ -VectorParams client.recreate_collection( collection_name="my_collection",
│ │ │ -vectors_config=VectorParams(size=100, distance=Distance.COSINE), ) ``` Insert
│ │ │ -vectors into a collection ```python import numpy as np from
│ │ │ -qdrant_client.models import PointStruct vectors = np.random.rand(100, 100)
│ │ │ -client.upsert( collection_name="my_collection", points=[ PointStruct( id=idx,
│ │ │ -vector=vector.tolist(), payload={"color": "red", "rand_number": idx % 10} ) for
│ │ │ -idx, vector in enumerate(vectors) ] ) ``` Search for similar vectors ```python
│ │ │ -query_vector = np.random.rand(100) hits = client.search
│ │ │ -( collection_name="my_collection", query_vector=query_vector, limit=5 # Return
│ │ │ -5 closest points ) ``` Search for similar vectors with filtering condition
│ │ │ -```python from qdrant_client.models import Filter, FieldCondition, Range hits =
│ │ │ +required. See an [example](https://colab.research.google.com/drive/
│ │ │ +1Bz8RSVHwnNDaNtDwotfPj0w7AYzsdXZ-?usp=sharing) - When you need to scale, simply
│ │ │ +switch to server mode. ### How it works? We just implemented Qdrant API in pure
│ │ │ +Python. We covered it with tests extensively to be sure it works the same as
│ │ │ +the server version. ## Connect to Qdrant server To connect to Qdrant server,
│ │ │ +simply specify host and port: ```python from qdrant_client import QdrantClient
│ │ │ +client = QdrantClient(host="localhost", port=6333) # or client = QdrantClient
│ │ │ +(url="http://localhost:6333") ``` You can run Qdrant server locally with
│ │ │ +docker: ```bash docker run -p 6333:6333 qdrant/qdrant:latest ``` See more
│ │ │ +launch options in [Qdrant repository](https://github.com/qdrant/qdrant#usage).
│ │ │ +## Connect to Qdrant cloud You can register and use [Qdrant Cloud](https://
│ │ │ +cloud.qdrant.io/) to get a free tier account with 1GB RAM. Once you have your
│ │ │ +cluster and API key, you can connect to it like this: ```python from
│ │ │ +qdrant_client import QdrantClient qdrant_client = QdrantClient( url="https://
│ │ │ +xxxxxx-xxxxx-xxxxx-xxxx-xxxxxxxxx.us-east.aws.cloud.qdrant.io:6333",
│ │ │ +api_key="", ) ``` ## Examples Create a new collection ```python from
│ │ │ +qdrant_client.models import Distance, VectorParams client.recreate_collection
│ │ │ +( collection_name="my_collection", vectors_config=VectorParams(size=100,
│ │ │ +distance=Distance.COSINE), ) ``` Insert vectors into a collection ```python
│ │ │ +import numpy as np from qdrant_client.models import PointStruct vectors =
│ │ │ +np.random.rand(100, 100) client.upsert( collection_name="my_collection",
│ │ │ +points=[ PointStruct( id=idx, vector=vector.tolist(), payload={"color": "red",
│ │ │ +"rand_number": idx % 10} ) for idx, vector in enumerate(vectors) ] ) ``` Search
│ │ │ +for similar vectors ```python query_vector = np.random.rand(100) hits =
│ │ │  client.search( collection_name="my_collection", query_vector=query_vector,
│ │ │ -query_filter=Filter( must=[ # These conditions are required for search results
│ │ │ -FieldCondition( key='rand_number', # Condition based on values of `rand_number`
│ │ │ -field. range=Range( gte=3 # Select only those results where `rand_number` >= 3
│ │ │ -) ) ] ), limit=5 # Return 5 closest points ) ``` See more examples in our
│ │ │ -[Documentation](https://qdrant.tech/documentation/)! ### gRPC To enable
│ │ │ -(typically, much faster) collection uploading with gRPC, use the following
│ │ │ -initialization: ```python from qdrant_client import QdrantClient client =
│ │ │ -QdrantClient(host="localhost", grpc_port=6334, prefer_grpc=True) ``` ###
│ │ │ -Development This project uses git hooks to run code formatters. Install `pre-
│ │ │ -commit` with `pip3 install pre-commit` and set up hooks with `pre-commit
│ │ │ -install`. > pre-commit requires python>=3.8
│ │ │ +limit=5 # Return 5 closest points ) ``` Search for similar vectors with
│ │ │ +filtering condition ```python from qdrant_client.models import Filter,
│ │ │ +FieldCondition, Range hits = client.search( collection_name="my_collection",
│ │ │ +query_vector=query_vector, query_filter=Filter( must=[ # These conditions are
│ │ │ +required for search results FieldCondition( key='rand_number', # Condition
│ │ │ +based on values of `rand_number` field. range=Range( gte=3 # Select only those
│ │ │ +results where `rand_number` >= 3 ) ) ] ), limit=5 # Return 5 closest points )
│ │ │ +``` See more examples in our [Documentation](https://qdrant.tech/documentation/
│ │ │ +)! ### gRPC To enable (typically, much faster) collection uploading with gRPC,
│ │ │ +use the following initialization: ```python from qdrant_client import
│ │ │ +QdrantClient client = QdrantClient(host="localhost", grpc_port=6334,
│ │ │ +prefer_grpc=True) ``` ### Development This project uses git hooks to run code
│ │ │ +formatters. Install `pre-commit` with `pip3 install pre-commit` and set up
│ │ │ +hooks with `pre-commit install`. > pre-commit requires python>=3.8
