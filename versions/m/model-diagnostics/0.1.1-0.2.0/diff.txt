--- tmp/model_diagnostics-0.1.1.tar.gz
+++ tmp/model_diagnostics-0.2.0.tar.gz
│   --- model_diagnostics-0.1.1.tar
├── +++ model_diagnostics-0.2.0.tar
│ ├── file list
│ │ @@ -1,698 +1,836 @@
│ │ --rw-r--r--   0        0        0      148 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.flake8
│ │ --rw-r--r--   0        0        0     2811 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/mkdocs.yml
│ │ --rw-r--r--   0        0        0   638700 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/untitled.ipynb
│ │ --rw-r--r--   0        0        0        1 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/.gitignore
│ │ --rw-r--r--   0        0        0       43 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/CACHEDIR.TAG
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/10b0ade2a6d2644b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/12246d77e1f2fb63
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/122c7beab2c2ba89
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/12475df32bbcc77b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/13124832cebec68b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1337418a26061d80
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/13399b523e5d3ab
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1368307fa7c3030
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/13ac9b4c961f1872
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/13f7a824509a5485
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/142f6dbabf34fb2e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/14b4e6dc01cd9450
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/150425e696d99e81
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/15a7d783d3e6251b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/15d19a3e236e45f5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/162411955aa3a71c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/16a909410389bbcd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/16db20244b87c95e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/16dc47993a0cb44e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/175606cc4d990c28
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/186516c5d3106449
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/18725000e25f2296
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/18a27fe197205831
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/18b0ce1f781f34ad
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1919eb8085bd277
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1999c36e0418cf38
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1a5d66d156693e8e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1b2a44d1481d08a8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1c1d461bc0e08f94
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1c528a311242ffdb
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1cee7568ff2c4a4b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1d2fc5c589b42ea8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1d6214fd18a2f631
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1d6d091d4d1c782b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1e23cc22e2bad081
│ │ --rw-r--r--   0        0        0      157 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1e36830c5b2ce88
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1e3d45bdace0ed77
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1ee8031c54e5e819
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1f5f6474ffc08082
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1f9c9f35a2efeb1a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/1feb7332ca7f6f63
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/20e658a93a3918f9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/216f9339ca2d0c38
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/217cb0c125b84ab3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/21936c609a88d0a9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/219dff9eb42ee651
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/21c03c5924d515e2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/21f8a197ad87ce61
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/22789f9766ef7c5d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2356a4a11b1a6b82
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2387ed011d515123
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2394a21e691b675
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/241976cb45fdba2c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2421059fc7bfb4a4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/24c57aef3ab761ab
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/25bcd4b6408f3fde
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/276989ea3a2d4ea1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/27ac1bc9c4af5e61
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/27d118efaebd1ba3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/286c5554b1dda9e2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2984780a8ff2ca0c
│ │ --rw-r--r--   0        0        0      157 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2984a4971fb0404b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2a4e6bd9a33cf365
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2aba0815235aaeef
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2b17fe0c2aefc2e2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2b8e2775b29509d9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2b9c3139b1ad907b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2bfe53a7cb55e09
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2cd1420e7fbe6977
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2d6eea63d98b3bf3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2d859570c827a255
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2e1e708035acf0c3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2e235e872e0a4413
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2e3517ac85a9cac
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2e370b391a617682
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2ee4f62dabb8d5e8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2f1c48af6675f7b9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2f2f13a9360eafec
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/2fd00cfe815bccd7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3030534f3c514d4d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/308740f3feec5ed7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3098454f8641e57b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/30b116b85812547f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3194c31d8c451410
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/325304b54e6a28ff
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/32691ef306e4476b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/336766caf5448cc8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/34166034121037bf
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/348436689a767a2b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/35d9162b70154e7a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/361889b270433cf7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/364823c9ecea195e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/36819c4770337604
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/36a09bd44ccbe1d5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/36ca9a7a28b5020d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/37475664bc8b500f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3765a5218714f0fc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/379113fd0a8cc8d5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/37a292303c3f14a3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/37c32fc06ccc1d4e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/37f518f630dea22d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3866b6ae3a2516a6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/38e7e426c2b082ee
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/39e6b42817dc779a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3acfe37a6e94e01
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3ccafd313f5da4ee
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3cf53f5f78478003
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3df33309fd617236
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3e014783a6c76158
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3e6829238fbba3b0
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/3fb10e91ed6b8013
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4023fafea58a5ab1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/40366f22b7dd303e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/406b353e901152aa
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/406fbf8f2af46abd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4080ade432c61a2c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4124a05c9242c134
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/417aeeed3c7abe36
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/41b6379742b2b64a
│ │ --rw-r--r--   0        0        0      130 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/41dde08d69d01883
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4249164b7855b936
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4265ad5c6dbd1736
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/42727754716cf53f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4281d6289f1089d5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4295bc38d58174ee
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/43a01e68b0b9fe3b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/43cdbb4746933202
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/43e4b39796f802c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/440b1b96df4e45dc
│ │ --rw-r--r--   0        0        0      305 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/44257295216ba7c3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4434ef37fa2806af
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4458f069eb87c0a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/460f637da30b97df
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/46197ffd3dba9dec
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/47141b0708f9e6ad
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4769ab30a7a03619
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/47b1b286b5300bd6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/481400302c1eb55a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/489827192f195ae4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/48cc63af0c6f32b0
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/49043db386ce9d2a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4933d4a83e70eaa4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/496f85c34e698074
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/49a9052c14a704ad
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/49fe58199979bb34
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4a4f182037660642
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4b1639184123f872
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4b5fc7fadda12b77
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4ba29ab041af3de2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4c9c0c435804524d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4cde84a0ac8118bc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4cf6c564063e5b5e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4da37cb5eff373fb
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4dde52d70c756c81
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4de00f67facf3704
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4deb58493ca1ffc1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4e00e631af5b33e6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4e3f59780e205551
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4e40e75eb993ed6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4e7f016dc13b4ded
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4e93cfada2435833
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4e9c99d294e13cd0
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4ee00b17a43a44ae
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4f0a8aa83b94b474
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4f1e4b7cf3553f71
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4f67a7fb3832d66a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/4fd2a295e102f73b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/502364feb4e5df9a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5073e70820528be7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/516dd006806c5727
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/520afa6beea6a44f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5250ca9cbdf7637a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/525465f0187eb23
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/529a33d1c0f8bba5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/53113e84a791fe7f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/538a70a766be51b3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/53fc254a225441b8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5459058e17017c63
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5481677e81a6928f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/563c4197f2771f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/565340362cd44d68
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5659df0418dfa0e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/56d1c07061fa0c25
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/56e9a25fee227bc0
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/57f138262dce25a9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/58679f53276a50db
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/598e85c9aad6a296
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/59a76b22f461500b
│ │ --rw-r--r--   0        0        0      268 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/59de381a0a8f409c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5ab519f155be2b9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5ac6c0c8b819b85
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5ae8388f9936e84d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5af37f285ac66afd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5b2d60d89443e8e6
│ │ --rw-r--r--   0        0        0      618 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5b39456bcf061686
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5b821b91ddf00f08
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5c0aa682118c5cec
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5c92b642ec2db3f9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5c92e8bcea5bde5a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5d05f027156c811e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5d62aabad5ddfe06
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5d6ca2e044e89244
│ │ --rw-r--r--   0        0        0      836 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5d9618642e148b6d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5e0eb868ee336617
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5e1302096b677f90
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5e27b54ae3f69fc5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5e86620fe0db7720
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5f20257eb471b159
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5f5cf1c2471a2fd8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/5f626a9390ab9f7a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/60223eb4f734f0d7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/607274feed50d1d2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/60a98e476385b0db
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/60aa37d4a968b7da
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/60b0f2dc7761d98a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/61b2d8d4ba668a4f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/61e8795f650163f0
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/61faeaedd1bcab0d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/62185c7ed10e6879
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/62484b5aa5dfc151
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/626cca902b71cd21
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/62790cb84236234a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/62c808c23343d6bf
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/630ce9a7a4046773
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6349e48e306eb475
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/637cce4baeb3a123
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/640b9656e170623f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/64444a1aa5411ec5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/64d0ab9c5d27b3f2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/64db1e5152494373
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6558e9c480eceb3a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/656fabe52a93cdf4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/66cd211a0b623ca4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6709925c8fddf601
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/67122b64304df5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/674663be08b4512d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/67bd886f59157aba
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/67c2bddd82bd4229
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/67f20ba1e0722da
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/67f284feb96c3d77
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6822fd273686d53e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/68ba3a909999476f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6986dbc4329329f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6a10e733b6a3ca7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6a16564bc4d12582
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6a7a59a66b72eb4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6af394a68675ad7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6b22b5ba040aa4f0
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6b44275b9468c599
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6be2e02bcd74f57e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6c953dc4f664091
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6cb8d2ed862db546
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6d7509d6ef3ee20f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6e1790c120ee31c3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6e3436a4a8a47d01
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6f0b82faf5e65279
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6f23124ff153c3a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6f317b95d5e83e64
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6f5c9887e7b79033
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6fb4e8b932f182db
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/6fbc15c0bfddd897
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/701ba47b4de3742f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7043487841921dee
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/71233ec74817ade4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/714ac0e1d87f607d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7155f86f01656077
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7167d031ebb87ae
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7189e67de28db4a6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/722e2d2932bdda2c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/725566a3ae6e8b93
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/72ca08fa8e9012a4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/72fb5136a526ee10
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7344e4ed83e8db7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/73f0b6af7fdde1a2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/73fc6f20debd1067
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/746c1b4344e249cb
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/74a59d9b73f48b15
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/75e2b7166f792468
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7642d21130ad1d84
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/774cbc652716dbc3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/779462860d2dc3f5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/77f5447c2b3a548f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/793aa7034948dab2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7956f29300e86ba5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/79925d7d643abf5b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/79c97ab694f65816
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7a612ac8e47cf905
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7b30e892e2adde02
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7c7a19ff9eb2a36a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7d8610b0b3a5d20d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7df4f6b7d514d09b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7e296b671c3ec280
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7e505439ec12f471
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7edaa1958fc2eeff
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7f4941493cee281c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7fa269724f605754
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7fc1397fa4c18de5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/7fe27fb4bce925b6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/800b0496d695dfbd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/808bf64442aaef46
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/80fa585a6a08ecb9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/812d84033fab92f2
│ │ --rw-r--r--   0        0        0     1652 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/81412ce5ba721a54
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/815295cdd9e1e347
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/816bb040f60ab081
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/816e62bb61e05e75
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/81808c1d4c262222
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/81885c23b79743bc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/81d4407a25083bbc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8239280ada7bb261
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8289cda6005a6c9d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/82b32b0f98bc31f8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/82e5177cbb0e1174
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/82ef4b76a806dd1c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8316958c64206249
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8379643faeefba4b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/837a4464202741b4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8390c9290724e900
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8391c5588b9975f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/854a4c88b5c3fd30
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/85663c6a4bd0831f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/856b417bf8fc3951
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/85946c82b05ae8df
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/85f41f471c34d5cb
│ │ --rw-r--r--   0        0        0      146 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/85fa755a2a9af206
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/86f11c24717ecacc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/87d52f8d432bfd7b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/88343d7d2ad1282
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/885da2a09750aba3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/888b35def6a5ac34
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8897448eb11bf405
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/88a51bf6fcf232aa
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8921738ea60e1f95
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/893a00939da78740
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/895d3a129533791a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/89ddc6ae6cad97d3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8a5711e78db02025
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8a70cdb58cc22655
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8ac13b26bea09ae1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8beebc610cdac870
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8ce9fb345fc45ba2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8d11f7d21e00d8b2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8de8e7e18b931824
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8df71d95e84c4e93
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8e6bce04f9bb4d4c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8f0311ed43566116
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/8f73b0fe8288077d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9040bec82065ba13
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/904ae8fb646e638b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/908b5d57439e5835
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9111895dca3ab6f2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9157eae3830ca376
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/91aa7efebe2ad54e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/91ffebd0a7a4ca2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/923a48d0a629371a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/925f71da1ef66265
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9274d64227a15e56
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/928c594a9ce319bc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/92951cd3599b1424
│ │ --rw-r--r--   0        0        0      698 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9311a32d581056da
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9371400309bb4456
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/93cf46b29a9ccc50
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/94d12f982220cf21
│ │ --rw-r--r--   0        0        0      292 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9598a7c299b97380
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9681b49f3a239cf9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/96be26ce781f9c7b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/96d6f91d4d248cb4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/97d2ea670a9b05af
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9821a2b10dcdb296
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/98bfc7cca43cd2b8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/98ce8bfca3edb535
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/997495d92b7590d1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9a01fd7c42a9647c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9b6d03e30c74130d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9bae1907e8902b0c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9bcefe4d90cb1b4f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9c343d5e2e850cbc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9c4ac47fdab5d84b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9c526e7bba05db76
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9ca5f7748004fa3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9cb4385bca9030ec
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9cbb696d3f4a50
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9cc632023243ad9a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9ce2ef86cc64f9a2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9d2d24714081ccee
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9e51c0298e080c85
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9edd5ad92ff6f87f
│ │ --rw-r--r--   0        0        0      146 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9f0a99eeb21f3d86
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9f445aa9c6dab14d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/9fd0729c227efb30
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a0397b4cba442e9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a089615e0f49762e
│ │ --rw-r--r--   0        0        0      580 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a0d7ef002976fee4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a10ae6fd882606da
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a11d8c48973a9e7a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a183c21c0f8ef49b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a1875d3ad8bd3137
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a2388a741d9f8095
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a26e98c1e41100ff
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a2acdf24fe9cdac9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a2dbdb24d6935b3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a33943aa1c2d5fc8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a3775bbde19a9039
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a415534164a779dd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a48302d1062106c4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a4c6cfca58d558cd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a6c7577915806986
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a74c109d2e6c667f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a76b5a9f5ca0c2c4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a77659be8b656780
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a7809c0c1895034c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a78f8a76da5a861f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a7e02d9275cec092
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a7f34ed9cc81ac83
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a91087b3d373af48
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a9679d6081a7cb74
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a970d82c6907b0bf
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a98fbbe6f0e31478
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a9b49f2c82b4825b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/a9b89ec59a7e360a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aa2c4f693ee1651b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aa5a50487cd8548e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aa822652d686c103
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aa9710252a1ed117
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aac848dbaea1758f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aae06973e91174ea
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ab8f3522d7b9d19b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/abd03e5b6a3d5266
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ad0c555aad685609
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/adf81756fb68b313
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ae01f24ef8a70ce2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ae4e8b5918697762
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aedc7af474206a50
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/af15e32ed0c02dfa
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/af6ecd3a212a2668
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/af8fe8534d4dc31a
│ │ --rw-r--r--   0        0        0      152 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/aff2e149c13100e2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b00b23fe126602a7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b0bbbc386ecb9eb
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b0c0180c5960cabe
│ │ --rw-r--r--   0        0        0     1446 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b0c9922f8a756096
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b0fd973f6a55948d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b23fb6312dbb4e32
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b2669e06b3791d6a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b268b73de34b8b76
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b2ae5a7f8932ab37
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b33815c6ce86a99e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b5056c3a76d8a653
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b54b61a41b297bd8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b58e67064b80744c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b598838c25b3c93c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b5d6001e8c48a854
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b6644dae2cedd297
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b70c06839ae89c9b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b7a85cce3e27b807
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b7abefed9d467858
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b8685d6b25da2d4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b881f441159426e4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b888cd7cd3cc9fdc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b8995ccbcd963f8c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b8a6c76989ac2294
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b8d1d4a13d154fd3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b8d3d9905c3463d4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b920e3cb2de24aa7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b94017f2e5e6f7f3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b95651a4fed11ec2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b985c04f55fa177
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b9c1787dce804eec
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/b9e8358075cdd8cf
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ba5303d8f8e65bd9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ba612e54922e5a0c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ba6a26ae8c1f470c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/baa2e82ba00e15c9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bad5ba417c678c56
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bb0a8b446a833e70
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bb7e5e715b036b26
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bb9e6b13ccc3b550
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bbe48e67eded7c52
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bc14aea3a7ef6947
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bc198183ed749585
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bc42a4e1d60ea6ea
│ │ --rw-r--r--   0        0        0      496 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bd35af47666b2c7f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bdccd807889f9952
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/be8b88dafcbd3fa4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bec2149d461b97d3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bff41316119c82dc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/bff7bf35d2882d2f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c14a607101a5a861
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c15f4a69caa3ad7e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c18927bdfbe23258
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c2411e065c4982ba
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c28829574317dc17
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c2aab14da938fb36
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c2e16e46f00add68
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c36537e7346b5f40
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c38d579e6bcc3682
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c4d77fed38065188
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c51fc41fcf31a5c4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c585be06247b2c5c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c5eb0bfb397c690a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c621f6f07c86aabc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c62fa9296d5f48a8
│ │ --rw-r--r--   0        0        0      126 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c636c884e9869e57
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c6dea64140bb0c66
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c743dd4dc555f2b4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c806eed49aa52b9f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c88decd2ff34eed
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/c99a1553649f3d68
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ca2040f21d5fc602
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ca9d701e487e2b1f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cad66d828f78a949
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cb4ac30557da1517
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cb63b971e9b90f0f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cbace9752d748c6d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cbc704dc1cbbf22b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cc00f123b1c15732
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cc48995f80382034
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cc4eb0881c82d4c9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ccc7c0d185edc593
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cccc30ab2d75dc13
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ccd07ba397f7603e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ccede4e5c04e270
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cd26bcb14c2da3fe
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ce027e0be7bc0128
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ce585d9498a5863
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ceb59f9550a3ba44
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cee2f24937636b75
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cee323a72f8ad310
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cee34f24ca7578e3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cf4312c4ec8b99e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cf5fb1fbd52c878f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/cfcebc81af1941e6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d01c1c377d81bc60
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d055564410823f4f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d07e1fb045d336e8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d0dbe8056d9c5f4a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d0de9ed8b59d541b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d1befc0041416143
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d23a15b962823205
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d259284b030501e1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d2a7eefb65a6649f
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d3607a664da50e18
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d40d68f52ee32743
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d41057be0024ad28
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d410f1ed282f591d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d4603579a7f5ba29
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d5655af53acfbfcf
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d5f1e37e24f2a8d3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d619c2fc6b7ac09d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d68a0e9cef6bbbea
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d69fcbdba57dfc96
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d70bbfac822c023e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d7376dd5623201a4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d83558861b5ad4b5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d844d3c1798b1ad3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d88181b5ae1d74a4
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d8e1468a626f3450
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d9143f6c53197102
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d9d23d08662a78de
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/d9fb708b2af00423
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/da4e0fd50d4d2b6a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/dafb5b0882636931
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/db0a5b3232e5b1b9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/db0ef6a710e224fb
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/db19967369a3ee8b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/db6d7428b6c54288
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/db8753824fca63c5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/dbb31d558035b533
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/dbe412f47e8319ba
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/dc033b0f320b288d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/de3044cf520f8cca
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/de6855c5112099ca
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ded052bb19d97732
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/df8c3f3de3c2430a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/dff43c6678b6b6fc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/dff62ad8ed88590c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e09738d8d6e1d260
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e09d5c42aeb3ba6
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e0c62f116809f6bc
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e1636a128f18bb36
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e1f75e6ff9a654ba
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e25f4c622333a7fd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e3865a5351bb2f16
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e3d2e3ccf98a5b52
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e3d53b75f7203ee8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e44b80a34eac2219
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e4d8ae7d8c6e5510
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e5d7f1a32737ba29
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e5df1db699867d66
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e5ec5bbe0b49eb34
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e6a78b8b7f74c496
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e6f29c15c5b609f1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e6fa93f75da130cd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e737d732900022b3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e75b9258bddd3148
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e83c85a03b37d778
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e8611bfde3c4eec
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e8faef6e6e7156fa
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e92390187868f0e5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e96b290ef7d4ac1a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e99ff9bae4649fe3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/e9eb1e19167aaa82
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ea64a92747f8b76e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/eb08c54ac2160f13
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/eb2979b6145f898c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/eb66574ea00ccd02
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ebe8a171474c674a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ebfa5192b1c87c2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ec2c176efbdcab7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ec73ad3f73304f07
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ecb12fdd41a82510
│ │ --rw-r--r--   0        0        0      362 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ecb5aef3663405d2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ece3d2d37a230174
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ed1567b30d68695c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ed450ac6a0243041
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ede6f71e990476a9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ee33c25551af8d8
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/eea38e2045e45ab1
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/eef6a297e5bccc71
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ef161fdc5048c208
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ef574bbcc71e7
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/efb9afe2b985fccb
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f01445325aed367b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f01e36aecab63eca
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f0403179fbaceca0
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f0da5a882baeada9
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f0f24002d08efaf
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f0fa92bbbe0781df
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f116e9cb1f4b7d02
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f1e4c78d76abc3dd
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f269465b3af853ca
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f28191c753efac07
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f2b9d78b5dd88f89
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f3184589d5fa7f92
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f3740c8723d92588
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f38c8aa06211f709
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f3b0ccb2c8b0d8ce
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f3b8c255ae55e963
│ │ --rw-r--r--   0        0        0      274 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f3e848b14388d4c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f405a4800ab367be
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f46986e3b0bbd38c
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f475cc5ac3354fec
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f4f2ed73cfcab49b
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f52566cec306da03
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f5dcaa36cda43091
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f5ee122bd0ed2523
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f6009f24f7005dc3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f70cca1d2cbd907a
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f7c51a61a5208153
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f826a1a2b6b7422e
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f8727f99b2e81c58
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f9287f7440b05224
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f92c5dd035a8436d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/f9fd5ff5f8eccf64
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fa286127feee84c5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fa748fd7d2a98120
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fa7c75dd709fdc64
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fbd0879b54270324
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fbed9833dab21a5d
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fca7f0855f129ffe
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fcac9e4a92028d50
│ │ --rw-r--r--   0        0        0      532 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fcf9e0b50a771c04
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fd422aa720684e00
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fd8dc1b4fd2c7130
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fe6c4ca7da5f7409
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fe7073cda26db5b3
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/fe73b42c001857c5
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ff0ef69c7d701ce2
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ff17f4bdc6d63a21
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ff2ad8ed3c0d8b01
│ │ --rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.ruff_cache/content/ff7fe92f00caac03
│ │ --rw-r--r--   0        0        0     2037 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/docs/development.md
│ │ --rw-r--r--   0        0        0     1040 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/docs/gen_ref_pages.py
│ │ --rw-r--r--   0        0        0     2274 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/docs/index.md
│ │ --rw-r--r--   0        0        0   416833 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/docs/examples/regression_on_workers_compensation.ipynb
│ │ --rw-r--r--   0        0        0      399 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/docs/javascripts/mathjax.js
│ │ --rw-r--r--   0        0        0      515 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/__about__.py
│ │ --rw-r--r--   0        0        0        0 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/__init__.py
│ │ --rw-r--r--   0        0        0     4901 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/_utils/_array.py
│ │ --rw-r--r--   0        0        0     7829 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/_utils/tests/test_array.py
│ │ --rw-r--r--   0        0        0      236 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/calibration/__init__.py
│ │ --rw-r--r--   0        0        0    21333 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/calibration/identification.py
│ │ --rw-r--r--   0        0        0    13192 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/calibration/plots.py
│ │ --rw-r--r--   0        0        0    13094 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/calibration/tests/test_identification.py
│ │ --rw-r--r--   0        0        0     8879 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/calibration/tests/test_plots.py
│ │ --rw-r--r--   0        0        0      384 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/scoring/__init__.py
│ │ --rw-r--r--   0        0        0    21865 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/scoring/scoring.py
│ │ --rw-r--r--   0        0        0    12011 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/src/model_diagnostics/scoring/tests/test_scoring.py
│ │ --rw-r--r--   0        0        0     1840 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/.gitignore
│ │ --rw-r--r--   0        0        0     1076 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/LICENSE
│ │ --rw-r--r--   0        0        0     1960 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/README.md
│ │ --rw-r--r--   0        0        0     5319 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/pyproject.toml
│ │ --rw-r--r--   0        0        0     4132 2020-02-02 00:00:00.000000 model_diagnostics-0.1.1/PKG-INFO
│ │ +-rw-r--r--   0        0        0       14 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.codecov.yml
│ │ +-rw-r--r--   0        0        0     2889 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/mkdocs.yml
│ │ +-rw-r--r--   0        0        0  1422335 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/untitled.ipynb
│ │ +-rw-r--r--   0        0        0        1 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/.gitignore
│ │ +-rw-r--r--   0        0        0       43 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/CACHEDIR.TAG
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/10b0ade2a6d2644b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/11eec1a8dc84e44b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/12246d77e1f2fb63
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/122c7beab2c2ba89
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/12475df32bbcc77b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/13124832cebec68b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/13234988628535b8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1337418a26061d80
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/13399b523e5d3ab
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/135f44209713cd0d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1368307fa7c3030
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/136e596e76d1b905
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/13ac9b4c961f1872
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/13f7a824509a5485
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/142f6dbabf34fb2e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/14b4e6dc01cd9450
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/150425e696d99e81
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/15a7d783d3e6251b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/15d19a3e236e45f5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/162411955aa3a71c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/16a909410389bbcd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/16db20244b87c95e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/16dc47993a0cb44e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/173a583398075a1d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/175606cc4d990c28
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/186516c5d3106449
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/18725000e25f2296
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/18a27fe197205831
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/18b0ce1f781f34ad
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1919eb8085bd277
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1999c36e0418cf38
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1a5d66d156693e8e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1b2a44d1481d08a8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1bee8bc26edc1dcc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1c1d461bc0e08f94
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1c528a311242ffdb
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1cee7568ff2c4a4b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1d0e0b2af157baa3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1d2fc5c589b42ea8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1d6214fd18a2f631
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1d6d091d4d1c782b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1e23cc22e2bad081
│ │ +-rw-r--r--   0        0        0      157 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1e36830c5b2ce88
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1e3d45bdace0ed77
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1ee8031c54e5e819
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1f5f6474ffc08082
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1f9c9f35a2efeb1a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/1feb7332ca7f6f63
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/207e9577bbd725ab
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/20e658a93a3918f9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/216f9339ca2d0c38
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/217cb0c125b84ab3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/218136b80ef2a986
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/21936c609a88d0a9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/219dff9eb42ee651
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/21c03c5924d515e2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/21f8a197ad87ce61
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/22789f9766ef7c5d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/22ef46327ccb904b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2356a4a11b1a6b82
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2387ed011d515123
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2394a21e691b675
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/241976cb45fdba2c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2421059fc7bfb4a4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/24a2269be9e386f1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/24c57aef3ab761ab
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/25bcd4b6408f3fde
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/26f1ad5704b97243
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/276989ea3a2d4ea1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/27ac1bc9c4af5e61
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/27d118efaebd1ba3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/286c5554b1dda9e2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2984780a8ff2ca0c
│ │ +-rw-r--r--   0        0        0      157 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2984a4971fb0404b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2a32df05e3466f60
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2a4e6bd9a33cf365
│ │ +-rw-r--r--   0        0        0      389 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2aa546c870a74a1a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2aba0815235aaeef
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2b17fe0c2aefc2e2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2b8e2775b29509d9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2b9c3139b1ad907b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2bfe53a7cb55e09
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2cd1420e7fbe6977
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2d6eea63d98b3bf3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2d859570c827a255
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2e1e708035acf0c3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2e235e872e0a4413
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2e3517ac85a9cac
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2e370b391a617682
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2ee4f62dabb8d5e8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2f1c48af6675f7b9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2f2f13a9360eafec
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/2fd00cfe815bccd7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3030534f3c514d4d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/308740f3feec5ed7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3098454f8641e57b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/30b116b85812547f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/31619dd74ed4d86e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3194c31d8c451410
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/325304b54e6a28ff
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/32691ef306e4476b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/336766caf5448cc8
│ │ +-rw-r--r--   0        0        0      193 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/33c2eff9b27d955e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/34166034121037bf
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/345d378ca00ac9ab
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/348436689a767a2b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/35d9162b70154e7a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/361889b270433cf7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/364823c9ecea195e
│ │ +-rw-r--r--   0        0        0      187 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/366e4074776b37a3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/36819c4770337604
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/36a09bd44ccbe1d5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/36ca9a7a28b5020d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/37475664bc8b500f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3765a5218714f0fc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/379113fd0a8cc8d5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/37956232453c2112
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/37a292303c3f14a3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/37c32fc06ccc1d4e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/37f518f630dea22d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/37fed66593d19b17
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3866b6ae3a2516a6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/38e7e426c2b082ee
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/39e6b42817dc779a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3a0424b8f69b9d3d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3aa9fa3aa979779d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3acfe37a6e94e01
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3ccafd313f5da4ee
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3cf53f5f78478003
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3df33309fd617236
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3e014783a6c76158
│ │ +-rw-r--r--   0        0        0      155 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3e52e04401eea360
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3e6829238fbba3b0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3e8847ecf549befe
│ │ +-rw-r--r--   0        0        0      757 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3ed72ff6f37e0a48
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/3fb10e91ed6b8013
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4023fafea58a5ab1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/40366f22b7dd303e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/406b353e901152aa
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/406fbf8f2af46abd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4080ade432c61a2c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/40aa2f92b1c20f79
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/40df6e31371c838b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/40f750fc7b2fcdf1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4124a05c9242c134
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/417aeeed3c7abe36
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/41b6379742b2b64a
│ │ +-rw-r--r--   0        0        0      130 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/41dde08d69d01883
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4249164b7855b936
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4265ad5c6dbd1736
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/42727754716cf53f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4281d6289f1089d5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4295bc38d58174ee
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/43a01e68b0b9fe3b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/43cdbb4746933202
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/43e4b39796f802c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/440b1b96df4e45dc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4419be3ce53f4caf
│ │ +-rw-r--r--   0        0        0      305 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/44257295216ba7c3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4434ef37fa2806af
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4458f069eb87c0a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/44a6bca90687a3b3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4607929b86c14886
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/460f637da30b97df
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/46197ffd3dba9dec
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4698f3350fe31ae0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/47141b0708f9e6ad
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4758f2801dec80c9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4769ab30a7a03619
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/47b1b286b5300bd6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/481400302c1eb55a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/489827192f195ae4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/48cc63af0c6f32b0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/49043db386ce9d2a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/490b5dc4a73ef9ae
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4933d4a83e70eaa4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/496f85c34e698074
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/49a9052c14a704ad
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/49fe58199979bb34
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4a4f182037660642
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4b1639184123f872
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4b5fc7fadda12b77
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4ba29ab041af3de2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4bb17f95aa2e4a0b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4c9c0c435804524d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4cde84a0ac8118bc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4cf6c564063e5b5e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4d3c6746c93b0746
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4da37cb5eff373fb
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4dde52d70c756c81
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4de00f67facf3704
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4deb58493ca1ffc1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4e00e631af5b33e6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4e3f59780e205551
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4e40e75eb993ed6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4e7f016dc13b4ded
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4e93cfada2435833
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4e9c99d294e13cd0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4ee00b17a43a44ae
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4f0a8aa83b94b474
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4f1e4b7cf3553f71
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4f67a7fb3832d66a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/4fd2a295e102f73b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/502364feb4e5df9a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/504a14be57c280c9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5073e70820528be7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/516dd006806c5727
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/520afa6beea6a44f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5250ca9cbdf7637a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/525465f0187eb23
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/529a33d1c0f8bba5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/53113e84a791fe7f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/538a70a766be51b3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/53b66dc27d297faa
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/53fc254a225441b8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5459058e17017c63
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5481677e81a6928f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/55ca35a6b11006bd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/55ce3347b6a665b4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/563c4197f2771f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/565340362cd44d68
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5659df0418dfa0e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/56d1c07061fa0c25
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/56df4826d1fe1e53
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/56e5111198b1512c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/56e9a25fee227bc0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/57f138262dce25a9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/58223619e28c8c9c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/58679f53276a50db
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/598e85c9aad6a296
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/59a76b22f461500b
│ │ +-rw-r--r--   0        0        0      268 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/59de381a0a8f409c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5ab519f155be2b9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5ac6c0c8b819b85
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5ae8388f9936e84d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5af37f285ac66afd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5b2d60d89443e8e6
│ │ +-rw-r--r--   0        0        0      618 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5b39456bcf061686
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5b821b91ddf00f08
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5c0aa682118c5cec
│ │ +-rw-r--r--   0        0        0      193 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5c2d8f3406400464
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5c92b642ec2db3f9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5c92e8bcea5bde5a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5d05f027156c811e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5d62aabad5ddfe06
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5d6ca2e044e89244
│ │ +-rw-r--r--   0        0        0      836 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5d9618642e148b6d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5e0eb868ee336617
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5e1302096b677f90
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5e27b54ae3f69fc5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5e86620fe0db7720
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5f02ba9ac184bd01
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5f20257eb471b159
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5f5cf1c2471a2fd8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/5f626a9390ab9f7a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/60223eb4f734f0d7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/607274feed50d1d2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/60a98e476385b0db
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/60aa37d4a968b7da
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/60b0f2dc7761d98a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/60dc9416a1fa3154
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/61678e5a60b1c346
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/61b2d8d4ba668a4f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/61e8795f650163f0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/61faeaedd1bcab0d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/62185c7ed10e6879
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/62484b5aa5dfc151
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/626cca902b71cd21
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/62790cb84236234a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/62c808c23343d6bf
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/630ce9a7a4046773
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6314ecbf252817e8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6349e48e306eb475
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/637cce4baeb3a123
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/640b9656e170623f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/64444a1aa5411ec5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/64d0ab9c5d27b3f2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/64db1e5152494373
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6558e9c480eceb3a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/656157929a956faa
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/656fabe52a93cdf4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/66cd211a0b623ca4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6709925c8fddf601
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/67122b64304df5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/674663be08b4512d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/67bd886f59157aba
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/67c2bddd82bd4229
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/67f20ba1e0722da
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/67f284feb96c3d77
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6822fd273686d53e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/685fb0d830df3a89
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/68ba3a909999476f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6986dbc4329329f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/69a72d9bcc4fe155
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6a10e733b6a3ca7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6a16564bc4d12582
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6a7a59a66b72eb4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6af394a68675ad7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6b22b5ba040aa4f0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6b44275b9468c599
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6b708cbea6fc9600
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6be2e02bcd74f57e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6c953dc4f664091
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6cb8d2ed862db546
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6d7094dd34195578
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6d7509d6ef3ee20f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6e1790c120ee31c3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6e3436a4a8a47d01
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6e7c6f54d251d367
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6f0b82faf5e65279
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6f23124ff153c3a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6f317b95d5e83e64
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6f5c9887e7b79033
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6fb4e8b932f182db
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/6fbc15c0bfddd897
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/701ba47b4de3742f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7043487841921dee
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/705564d8e4d8e234
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/708f173caabbcbb9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/71233ec74817ade4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/714ac0e1d87f607d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7155f86f01656077
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7167d031ebb87ae
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7189e67de28db4a6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/722e2d2932bdda2c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/725566a3ae6e8b93
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/72ca08fa8e9012a4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/72fb5136a526ee10
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7326852f3158ab0e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7344e4ed83e8db7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/73f0b6af7fdde1a2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/73fc6f20debd1067
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/746c1b4344e249cb
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/74a59d9b73f48b15
│ │ +-rw-r--r--   0        0        0      245 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/74e8241eeca98ccf
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/75414dd3d2666869
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/75e2b7166f792468
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/75e5b1264bcbdbc4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7642d21130ad1d84
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/774cbc652716dbc3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/779462860d2dc3f5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/77f5447c2b3a548f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/793aa7034948dab2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7956f29300e86ba5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/79925d7d643abf5b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/79c97ab694f65816
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7a612ac8e47cf905
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7b30e892e2adde02
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7bb8ffeea426a745
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7c7a19ff9eb2a36a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7d8610b0b3a5d20d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7df4f6b7d514d09b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7e296b671c3ec280
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7e505439ec12f471
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7edaa1958fc2eeff
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7f4941493cee281c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7fa269724f605754
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7fc1397fa4c18de5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/7fe27fb4bce925b6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/800b0496d695dfbd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/805f65bb06437e79
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/806eb92b560e2a8f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/808bf64442aaef46
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/80fa585a6a08ecb9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/81109224f68b5bd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/812d84033fab92f2
│ │ +-rw-r--r--   0        0        0     1652 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/81412ce5ba721a54
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/815295cdd9e1e347
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/816bb040f60ab081
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/816e62bb61e05e75
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/81808c1d4c262222
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/81885c23b79743bc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/81d4407a25083bbc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8239280ada7bb261
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8289cda6005a6c9d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/82b32b0f98bc31f8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/82de0387e223835d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/82e5177cbb0e1174
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/82ef4b76a806dd1c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8316958c64206249
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8379643faeefba4b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/837a4464202741b4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8390c9290724e900
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8391c5588b9975f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/84825335a2235754
│ │ +-rw-r--r--   0        0        0      389 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/84d9122b15377a04
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/854a4c88b5c3fd30
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/85663c6a4bd0831f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/856b417bf8fc3951
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/85946c82b05ae8df
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/85f41f471c34d5cb
│ │ +-rw-r--r--   0        0        0      146 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/85fa755a2a9af206
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/86f11c24717ecacc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/87d52f8d432bfd7b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/88343d7d2ad1282
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/885da2a09750aba3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/888b35def6a5ac34
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8897448eb11bf405
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/88a51bf6fcf232aa
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8921738ea60e1f95
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/893a00939da78740
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/895d3a129533791a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/89ddc6ae6cad97d3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8a3b5f8414350a30
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8a5711e78db02025
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8a70cdb58cc22655
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8ac13b26bea09ae1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8ac6416be119fc47
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8b42ad65e4ea3891
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8beebc610cdac870
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8cb291c81c204e1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8ce9fb345fc45ba2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8d11f7d21e00d8b2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8de8e7e18b931824
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8df71d95e84c4e93
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8e6bce04f9bb4d4c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8e6bf620d58536b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8f0311ed43566116
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/8f73b0fe8288077d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9040bec82065ba13
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/904ae8fb646e638b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/908b5d57439e5835
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9111895dca3ab6f2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9157eae3830ca376
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/91aa7efebe2ad54e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/91ffebd0a7a4ca2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/922313998a9d71a0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/923a48d0a629371a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/925f71da1ef66265
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9274d64227a15e56
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/928c594a9ce319bc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/92951cd3599b1424
│ │ +-rw-r--r--   0        0        0      698 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9311a32d581056da
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9371400309bb4456
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/93cf46b29a9ccc50
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/94d12f982220cf21
│ │ +-rw-r--r--   0        0        0      292 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9598a7c299b97380
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9681b49f3a239cf9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/96be26ce781f9c7b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/96d6f91d4d248cb4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/97abe4094b7d5305
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/97d2ea670a9b05af
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9821a2b10dcdb296
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/98bfc7cca43cd2b8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/98ce8bfca3edb535
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/997495d92b7590d1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/99de091ae2ed351e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9a01fd7c42a9647c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9b6d03e30c74130d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9bae1907e8902b0c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9bcefe4d90cb1b4f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9c343d5e2e850cbc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9c4ac47fdab5d84b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9c526e7bba05db76
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9ca5f7748004fa3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9cb4385bca9030ec
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9cbb696d3f4a50
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9cc632023243ad9a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9ce2ef86cc64f9a2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9ce59acdd4f9e98a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9d2d24714081ccee
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9d39265617f02d5e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9e51c0298e080c85
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9edd5ad92ff6f87f
│ │ +-rw-r--r--   0        0        0      146 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9f0a99eeb21f3d86
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9f445aa9c6dab14d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/9fd0729c227efb30
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a0397b4cba442e9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a089615e0f49762e
│ │ +-rw-r--r--   0        0        0      580 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a0d7ef002976fee4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a10ae6fd882606da
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a11d8c48973a9e7a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a183c21c0f8ef49b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a1875d3ad8bd3137
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a214d723b9e4876f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a2388a741d9f8095
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a26e98c1e41100ff
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a2acdf24fe9cdac9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a2dbdb24d6935b3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a33943aa1c2d5fc8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a3775bbde19a9039
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a383ba035f3194c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a415534164a779dd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a48302d1062106c4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a4c6cfca58d558cd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a594c1e8aca6903
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a661a1fc3bf6c1a6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a6c7577915806986
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a74c109d2e6c667f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a76b5a9f5ca0c2c4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a77659be8b656780
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a7809c0c1895034c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a78f8a76da5a861f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a7e02d9275cec092
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a7f34ed9cc81ac83
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a91087b3d373af48
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a9679d6081a7cb74
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a970d82c6907b0bf
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a98fbbe6f0e31478
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a9b49f2c82b4825b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a9b7e77d5a735f09
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/a9b89ec59a7e360a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aa2c4f693ee1651b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aa5a50487cd8548e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aa822652d686c103
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aa9710252a1ed117
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aac848dbaea1758f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aae06973e91174ea
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ab8f3522d7b9d19b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/abb66d06290c10bc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/abd03e5b6a3d5266
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/abd0b1002a9b92bd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ad0c555aad685609
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/adf81756fb68b313
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ae01f24ef8a70ce2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ae4e8b5918697762
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aedc7af474206a50
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/af15e32ed0c02dfa
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/af6ecd3a212a2668
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/af8fe8534d4dc31a
│ │ +-rw-r--r--   0        0        0      152 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/aff2e149c13100e2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b00b23fe126602a7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b027ef12d6f3f093
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b0bbbc386ecb9eb
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b0c0180c5960cabe
│ │ +-rw-r--r--   0        0        0     1446 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b0c9922f8a756096
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b0d0959188c8ef55
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b0fd973f6a55948d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b1f1d11b78ddd73d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b23fb6312dbb4e32
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b2669e06b3791d6a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b268b73de34b8b76
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b2ae5a7f8932ab37
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b33815c6ce86a99e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b3c5557368c8f4f1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b5056c3a76d8a653
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b54b61a41b297bd8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b58e67064b80744c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b598838c25b3c93c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b5d6001e8c48a854
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b6644dae2cedd297
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b66919e695228784
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b70c06839ae89c9b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b7a85cce3e27b807
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b7abefed9d467858
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b7ae9af7dbf8c102
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b8685d6b25da2d4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b881f441159426e4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b888cd7cd3cc9fdc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b8995ccbcd963f8c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b8a6c76989ac2294
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b8d1d4a13d154fd3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b8d3d9905c3463d4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b920e3cb2de24aa7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b94017f2e5e6f7f3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b95651a4fed11ec2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b985c04f55fa177
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b9c1787dce804eec
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/b9e8358075cdd8cf
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ba5303d8f8e65bd9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ba612e54922e5a0c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ba6a26ae8c1f470c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/baa2e82ba00e15c9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bad5ba417c678c56
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bb0a8b446a833e70
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bb7e5e715b036b26
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bb9e6b13ccc3b550
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bbe48e67eded7c52
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bc14aea3a7ef6947
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bc198183ed749585
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bc42a4e1d60ea6ea
│ │ +-rw-r--r--   0        0        0      496 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bd35af47666b2c7f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bdccd807889f9952
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/be8b88dafcbd3fa4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/be8efbaf3a4135b6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bec2149d461b97d3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bff41316119c82dc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/bff7bf35d2882d2f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c14a607101a5a861
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c15f4a69caa3ad7e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c18927bdfbe23258
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c2411e065c4982ba
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c28829574317dc17
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c29d851f43415707
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c2aab14da938fb36
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c2e16e46f00add68
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c36537e7346b5f40
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c38d579e6bcc3682
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c3f99e41ee18621e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c4c29966b4ded8dc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c4d77fed38065188
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c51fc41fcf31a5c4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c585be06247b2c5c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c5eb0bfb397c690a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c621f6f07c86aabc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c62fa9296d5f48a8
│ │ +-rw-r--r--   0        0        0      126 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c636c884e9869e57
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c6dea64140bb0c66
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c743dd4dc555f2b4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c7f3f568cfc99cba
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c806eed49aa52b9f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c88decd2ff34eed
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c8dba03a2ebe5a73
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c8e87ba254b88605
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c9254953efa94c78
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c99a1553649f3d68
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/c99c32ca5eda310b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ca2040f21d5fc602
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ca9d701e487e2b1f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cad66d828f78a949
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cb4ac30557da1517
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cb63b971e9b90f0f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cbace9752d748c6d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cbc704dc1cbbf22b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cc00f123b1c15732
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cc48995f80382034
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cc4eb0881c82d4c9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cc77d980de2b86de
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ccc7c0d185edc593
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cccc30ab2d75dc13
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ccd07ba397f7603e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ccede4e5c04e270
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cd26bcb14c2da3fe
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ce027e0be7bc0128
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ce585d9498a5863
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ceb59f9550a3ba44
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ceb847a69f894d46
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cee2f24937636b75
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cee323a72f8ad310
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cee34f24ca7578e3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cf4312c4ec8b99e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cf5fb1fbd52c878f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/cfcebc81af1941e6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d01269d2a627aad2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d01c1c377d81bc60
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d055564410823f4f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d07e1fb045d336e8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d0dbe8056d9c5f4a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d0de9ed8b59d541b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d1befc0041416143
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d23a15b962823205
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d259284b030501e1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d2a7eefb65a6649f
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d2e7a70a70743531
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d32c0b5717dd3737
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d3607a664da50e18
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d40d68f52ee32743
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d41057be0024ad28
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d410f1ed282f591d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d4603579a7f5ba29
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d5655af53acfbfcf
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d5831558a76772b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d5ce7e5734e9b9ea
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d5f1e37e24f2a8d3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d619c2fc6b7ac09d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d68a0e9cef6bbbea
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d69fcbdba57dfc96
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d70bbfac822c023e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d7376dd5623201a4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d83558861b5ad4b5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d844d3c1798b1ad3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d88181b5ae1d74a4
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d8e1468a626f3450
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d9143f6c53197102
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d9d23d08662a78de
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/d9fb708b2af00423
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/da4e0fd50d4d2b6a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/daac60c628d724fe
│ │ +-rw-r--r--   0        0        0      188 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/daf35f6a63ca2711
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dafb5b0882636931
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/db0a5b3232e5b1b9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/db0ef6a710e224fb
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/db19967369a3ee8b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/db6d7428b6c54288
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/db8753824fca63c5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dbaa316b31dfb906
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dbb31d558035b533
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dbe412f47e8319ba
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dc033b0f320b288d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dd05d28dbf5f7f00
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/de166e65b5858cf8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/de3044cf520f8cca
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/de6855c5112099ca
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/de7011a743c84348
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ded052bb19d97732
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/df8c3f3de3c2430a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dff43c6678b6b6fc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/dff62ad8ed88590c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e09738d8d6e1d260
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e09d5c42aeb3ba6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e0c62f116809f6bc
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e16002ec7eb80d51
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e1636a128f18bb36
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e1f75e6ff9a654ba
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e25f4c622333a7fd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e2e7237f11b73010
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e32ae50f5d06cbb3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e3865a5351bb2f16
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e3d2e3ccf98a5b52
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e3d53b75f7203ee8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e44b80a34eac2219
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e476d0f756f8cce7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e4d8ae7d8c6e5510
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e53a5477fb3330b5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e5d7f1a32737ba29
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e5df1db699867d66
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e5ec5bbe0b49eb34
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e6052697fedfafef
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e69ecb2f24ae3c95
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e6a78b8b7f74c496
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e6f29c15c5b609f1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e6fa93f75da130cd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e737d732900022b3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e75b9258bddd3148
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e83c85a03b37d778
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e8611bfde3c4eec
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e8d1a5829a349eca
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e8faef6e6e7156fa
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e92390187868f0e5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e96b290ef7d4ac1a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e99ff9bae4649fe3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/e9eb1e19167aaa82
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ea64a92747f8b76e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/eb08c54ac2160f13
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/eb28d7c3eb0eea0c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/eb2979b6145f898c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/eb66574ea00ccd02
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ebcdf00f57d3d41
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ebe8a171474c674a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ebfa5192b1c87c2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ec2c176efbdcab7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ec73ad3f73304f07
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ec821852d334a1c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ecb12fdd41a82510
│ │ +-rw-r--r--   0        0        0      362 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ecb5aef3663405d2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ece3d2d37a230174
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ed1567b30d68695c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ed450ac6a0243041
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ede6f71e990476a9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ee33c25551af8d8
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ee82cb27274370ce
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/eea38e2045e45ab1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/eef6a297e5bccc71
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ef161fdc5048c208
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ef574bbcc71e7
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/efb9afe2b985fccb
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f01445325aed367b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f01e36aecab63eca
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f02a3753b7fa31c6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f0403179fbaceca0
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f076b063f4d8b2fe
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f0da5a882baeada9
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f0f24002d08efaf
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f0fa92bbbe0781df
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f116e9cb1f4b7d02
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f1e4c78d76abc3dd
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f269465b3af853ca
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f28191c753efac07
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f2b9d78b5dd88f89
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f2d7a74e78e244b6
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f3184589d5fa7f92
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f3740c8723d92588
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f385e60cd95b526a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f38c8aa06211f709
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f3b0ccb2c8b0d8ce
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f3b8c255ae55e963
│ │ +-rw-r--r--   0        0        0      274 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f3e848b14388d4c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f405a4800ab367be
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f46986e3b0bbd38c
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f475cc5ac3354fec
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f4f2ed73cfcab49b
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f52566cec306da03
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f5dcaa36cda43091
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f5ee122bd0ed2523
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f6009f24f7005dc3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f66de185b9920743
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f70cca1d2cbd907a
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f7c51a61a5208153
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f826a1a2b6b7422e
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f8727f99b2e81c58
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f9287f7440b05224
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f92c5dd035a8436d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/f9fd5ff5f8eccf64
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fa286127feee84c5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fa748fd7d2a98120
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fa7c75dd709fdc64
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/facc99bf88d8c0c1
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fb13007213533b06
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fbd0879b54270324
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fbed9833dab21a5d
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fca7f0855f129ffe
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fcac9e4a92028d50
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fce4c61bf49fa0db
│ │ +-rw-r--r--   0        0        0      532 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fcf9e0b50a771c04
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fd0c74a1a14f1a18
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fd16cd988d8752e5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fd422aa720684e00
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fd8dc1b4fd2c7130
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fe6c4ca7da5f7409
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fe7073cda26db5b3
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/fe73b42c001857c5
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ff0ef69c7d701ce2
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ff17f4bdc6d63a21
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ff2ad8ed3c0d8b01
│ │ +-rw-r--r--   0        0        0        8 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.ruff_cache/content/ff7fe92f00caac03
│ │ +-rw-r--r--   0        0        0     2078 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/docs/development.md
│ │ +-rw-r--r--   0        0        0     1040 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/docs/gen_ref_pages.py
│ │ +-rw-r--r--   0        0        0     2859 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/docs/index.md
│ │ +-rw-r--r--   0        0        0   483808 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/docs/examples/regression_on_workers_compensation.ipynb
│ │ +-rw-r--r--   0        0        0      399 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/docs/javascripts/mathjax.js
│ │ +-rw-r--r--   0        0        0      515 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/__about__.py
│ │ +-rw-r--r--   0        0        0        0 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/__init__.py
│ │ +-rw-r--r--   0        0        0     4954 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/_utils/_array.py
│ │ +-rw-r--r--   0        0        0     8106 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/_utils/tests/test_array.py
│ │ +-rw-r--r--   0        0        0      236 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/calibration/__init__.py
│ │ +-rw-r--r--   0        0        0    22447 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/calibration/identification.py
│ │ +-rw-r--r--   0        0        0    16504 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/calibration/plots.py
│ │ +-rw-r--r--   0        0        0        0 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/calibration/tests/__init__.py
│ │ +-rw-r--r--   0        0        0    16925 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/calibration/tests/test_identification.py
│ │ +-rw-r--r--   0        0        0    10508 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/calibration/tests/test_plots.py
│ │ +-rw-r--r--   0        0        0      494 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/scoring/__init__.py
│ │ +-rw-r--r--   0        0        0     4927 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/scoring/plots.py
│ │ +-rw-r--r--   0        0        0    25896 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/scoring/scoring.py
│ │ +-rw-r--r--   0        0        0        0 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/scoring/tests/__init__.py
│ │ +-rw-r--r--   0        0        0     3628 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/scoring/tests/test_plots.py
│ │ +-rw-r--r--   0        0        0    13594 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/src/model_diagnostics/scoring/tests/test_scoring.py
│ │ +-rw-r--r--   0        0        0     1840 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/.gitignore
│ │ +-rw-r--r--   0        0        0     1076 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/LICENSE
│ │ +-rw-r--r--   0        0        0     2724 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/README.md
│ │ +-rw-r--r--   0        0        0     5329 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/pyproject.toml
│ │ +-rw-r--r--   0        0        0     4896 2020-02-02 00:00:00.000000 model_diagnostics-0.2.0/PKG-INFO
│ │   --- model_diagnostics-0.1.1/mkdocs.yml
│ ├── +++ model_diagnostics-0.2.0/mkdocs.yml
│ │┄ Files 8% similar despite different names
│ │ @@ -33,14 +33,15 @@
│ │  nav:
│ │    - Home:
│ │      - About: index.md
│ │    - Examples:
│ │      - Regression on Workers' Compensation: examples/regression_on_workers_compensation.ipynb
│ │    - API Reference: reference/  # defer to gen-files + literate-nav
│ │    - Development: development.md
│ │ +  - Release Notes: https://github.com/lorentzenchr/model-diagnostics/releases
│ │  
│ │  watch:
│ │    - src/model_diagnostics/
│ │  
│ │  plugins:
│ │    # Built-in
│ │    - search:
│ │   --- model_diagnostics-0.1.1/untitled.ipynb
│ ├── +++ model_diagnostics-0.2.0/docs/examples/regression_on_workers_compensation.ipynb
│ │┄ Files 22% similar despite different names
│ │ ├── Pretty-printed
│ │ │┄ Similarity: 0.8826065576087492%
│ │ │┄ Differences: {"'cells'": "{2: {'id': 'bdf0fa3a-650d-4ea4-a189-e81e4457fd08', 'metadata': {replace: "
│ │ │┄             "OrderedDict()}, 'source': {insert: [(0, 'import calendar\\n'), (2, 'import pandas as "
│ │ │┄             "pd\\n'), (3, 'from sklearn import set_config\\n'), (4, 'from sklearn.datasets import "
│ │ │┄             "fetch_openml\\n'), (5, 'from sklearn.model_selection import train_test_split\\n'), "
│ │ │┄             '(6, \'\\n\'), (7, \'\\n\'), (8, \'set_config(transform_output="pandas")\')], delete: '
│ │ │┄             "[3, 1, 0]}},  […]
│ │ │ @@ -1,1024 +1,1717 @@
│ │ │  {
│ │ │      "cells": [
│ │ │          {
│ │ │ +            "attachments": {},
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "0635403e-5936-4c7f-ad25-3a52670a1a10",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "# Regression on Workers' Compensation Dataset\n",
│ │ │ +                "This notebook demonstrates model diagnostics on the workers' compensation dataset https://www.openml.org/d/42876.\n",
│ │ │ +                "For details, see https://arxiv.org/abs/2202.12780.\n",
│ │ │ +                "\n",
│ │ │ +                "The modelling goal is to predict the expectation $E(Y|X)$ of $Y=\\text{UltimateIncurredClaimCost}$ conditional on the features $X$.\n",
│ │ │ +                "\n",
│ │ │ +                "The impatient can directly jump to chapter 3 and following where the capability of `model-diagnostics` are shown.\n",
│ │ │ +                "Chapters 1-2 are needed for data preparation and model training."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "476f0984-84d4-493e-85c1-9823f2a47491",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "## 1. Data\n",
│ │ │ +                "### 1.1 Data Load and Preprocessing"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │              "cell_type": "code",
│ │ │              "execution_count": 1,
│ │ │ -            "id": "7925fb82-dcc4-43f7-ae11-d986662fc14b",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ +            "id": "bdf0fa3a-650d-4ea4-a189-e81e4457fd08",
│ │ │ +            "metadata": {},
│ │ │              "outputs": [],
│ │ │              "source": [
│ │ │ -                "import matplotlib.pyplot as plt\n",
│ │ │ -                "from model_diagnostics.calibration import compute_bias, plot_bias, plot_reliability_diagram\n",
│ │ │ +                "import calendar\n",
│ │ │                  "import numpy as np\n",
│ │ │ -                "import polars as pl"
│ │ │ +                "import pandas as pd\n",
│ │ │ +                "from sklearn import set_config\n",
│ │ │ +                "from sklearn.datasets import fetch_openml\n",
│ │ │ +                "from sklearn.model_selection import train_test_split\n",
│ │ │ +                "\n",
│ │ │ +                "\n",
│ │ │ +                "set_config(transform_output=\"pandas\")"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │              "execution_count": 2,
│ │ │ -            "id": "d53361a7-4f0d-4ff3-92d7-0f7f09039139",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ +            "id": "2dcf7ba7-61c1-4ae4-97c7-4968bfc99ee0",
│ │ │ +            "metadata": {},
│ │ │              "outputs": [],
│ │ │              "source": [
│ │ │ -                "y_obs = np.arange(10)\n",
│ │ │ -                "y_pred = pl.DataFrame({\n",
│ │ │ -                "    \"model_1\": np.arange(10) + 0.5,\n",
│ │ │ -                "    \"model_2\": (y_obs - 5)**2,\n",
│ │ │ -                "    \"model_3\": (y_obs - 3)**2,\n",
│ │ │ -                "})\n",
│ │ │ -                "# numerical\n",
│ │ │ -                "feature_num = np.zeros(10)\n",
│ │ │ -                "feature_num[::2] = 1\n",
│ │ │ -                "feature_num[::3] = 2\n",
│ │ │ -                "# string\n",
│ │ │ -                "feature_str = np.full(10, \"a\")\n",
│ │ │ -                "feature_str[::2] = \"b\""
│ │ │ +                "df_original = fetch_openml(data_id=42876, parser=\"auto\").frame"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │              "execution_count": 3,
│ │ │ -            "id": "310e27db-dc50-403a-963e-ee207e25bc75",
│ │ │ +            "id": "afe4ccd8-178e-494b-8404-5091ec470fce",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "name": "stdout",
│ │ │ +                    "output_type": "stream",
│ │ │ +                    "text": [
│ │ │ +                        "The prepared dataset contains 82017 rows.\n"
│ │ │ +                    ]
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "df = df_original.query(\"WeeklyPay >= 200 and HoursWorkedPerWeek >= 20\")\n",
│ │ │ +                "df = df.assign(\n",
│ │ │ +                "    DateTimeOfAccident=lambda x: pd.to_datetime(x[\"DateTimeOfAccident\"]),\n",
│ │ │ +                "    DateOfAccident=lambda x: x.DateTimeOfAccident.dt.date,\n",
│ │ │ +                "    DateReported=lambda x: pd.to_datetime(x.DateReported).dt.date,\n",
│ │ │ +                "    LogDelay=lambda x: np.log1p((x.DateReported - x.DateOfAccident).dt.days),\n",
│ │ │ +                "    HourOfAccident=lambda x: x.DateTimeOfAccident.dt.hour,\n",
│ │ │ +                "    WeekDayOfAccident=lambda x: pd.Categorical.from_codes(\n",
│ │ │ +                "        codes=x.DateTimeOfAccident.dt.weekday,\n",
│ │ │ +                "        dtype=pd.CategoricalDtype(list(calendar.day_name), ordered=True),\n",
│ │ │ +                "    ),\n",
│ │ │ +                "    LogWeeklyPay=lambda x: np.log1p(x.WeeklyPay),\n",
│ │ │ +                "    LogInitial=lambda x: np.log(x.InitialCaseEstimate),\n",
│ │ │ +                "    DependentChildren=lambda x: np.fmin(4, x.DependentChildren),\n",
│ │ │ +                "    HoursWorkedPerWeek=lambda x: np.fmin(60, x.HoursWorkedPerWeek),\n",
│ │ │ +                "    Gender=lambda x: x.Gender.astype(\"category\"),\n",
│ │ │ +                "    MaritalStatus=lambda x: x.MaritalStatus.astype(\"category\"),\n",
│ │ │ +                "    PartTimeFullTime=lambda x: x.PartTimeFullTime.astype(\"category\"),\n",
│ │ │ +                ").rename(columns={\"HoursWorkedPerWeek\": \"HoursPerWeek\"})\n",
│ │ │ +                "\n",
│ │ │ +                "x_continuous = [\n",
│ │ │ +                "    \"Age\",\n",
│ │ │ +                "    \"LogWeeklyPay\",\n",
│ │ │ +                "    \"LogInitial\",\n",
│ │ │ +                "    \"HourOfAccident\",\n",
│ │ │ +                "    \"HoursPerWeek\",\n",
│ │ │ +                "    \"LogDelay\",\n",
│ │ │ +                "]\n",
│ │ │ +                "x_discrete = [\n",
│ │ │ +                "    \"Gender\",\n",
│ │ │ +                "    \"MaritalStatus\",\n",
│ │ │ +                "    \"PartTimeFullTime\",\n",
│ │ │ +                "    \"DependentChildren\",\n",
│ │ │ +                "    \"DaysWorkedPerWeek\",\n",
│ │ │ +                "    \"WeekDayOfAccident\",\n",
│ │ │ +                "]\n",
│ │ │ +                "x_vars = x_continuous + x_discrete\n",
│ │ │ +                "y_var = \"UltimateIncurredClaimCost\"\n",
│ │ │ +                "\n",
│ │ │ +                "print(f\"The prepared dataset contains {df.shape[0]} rows.\")"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 4,
│ │ │ +            "id": "c23fe013-56a4-4616-b344-8af461593b12",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │ +                        "text/html": [
│ │ │ +                            "<div>\n",
│ │ │ +                            "<style scoped>\n",
│ │ │ +                            "    .dataframe tbody tr th:only-of-type {\n",
│ │ │ +                            "        vertical-align: middle;\n",
│ │ │ +                            "    }\n",
│ │ │ +                            "\n",
│ │ │ +                            "    .dataframe tbody tr th {\n",
│ │ │ +                            "        vertical-align: top;\n",
│ │ │ +                            "    }\n",
│ │ │ +                            "\n",
│ │ │ +                            "    .dataframe thead th {\n",
│ │ │ +                            "        text-align: right;\n",
│ │ │ +                            "    }\n",
│ │ │ +                            "</style>\n",
│ │ │ +                            "<table border=\"1\" class=\"dataframe\">\n",
│ │ │ +                            "  <thead>\n",
│ │ │ +                            "    <tr style=\"text-align: right;\">\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th>DateTimeOfAccident</th>\n",
│ │ │ +                            "      <th>DateReported</th>\n",
│ │ │ +                            "      <th>Age</th>\n",
│ │ │ +                            "      <th>Gender</th>\n",
│ │ │ +                            "      <th>MaritalStatus</th>\n",
│ │ │ +                            "      <th>DependentChildren</th>\n",
│ │ │ +                            "      <th>DependentsOther</th>\n",
│ │ │ +                            "      <th>WeeklyPay</th>\n",
│ │ │ +                            "      <th>PartTimeFullTime</th>\n",
│ │ │ +                            "      <th>HoursPerWeek</th>\n",
│ │ │ +                            "      <th>DaysWorkedPerWeek</th>\n",
│ │ │ +                            "      <th>ClaimDescription</th>\n",
│ │ │ +                            "      <th>InitialCaseEstimate</th>\n",
│ │ │ +                            "      <th>UltimateIncurredClaimCost</th>\n",
│ │ │ +                            "      <th>DateOfAccident</th>\n",
│ │ │ +                            "      <th>LogDelay</th>\n",
│ │ │ +                            "      <th>HourOfAccident</th>\n",
│ │ │ +                            "      <th>WeekDayOfAccident</th>\n",
│ │ │ +                            "      <th>LogWeeklyPay</th>\n",
│ │ │ +                            "      <th>LogInitial</th>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "  </thead>\n",
│ │ │ +                            "  <tbody>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>0</th>\n",
│ │ │ +                            "      <td>2005-01-13 09:00:00</td>\n",
│ │ │ +                            "      <td>2005-01-24</td>\n",
│ │ │ +                            "      <td>45</td>\n",
│ │ │ +                            "      <td>M</td>\n",
│ │ │ +                            "      <td>S</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>500</td>\n",
│ │ │ +                            "      <td>F</td>\n",
│ │ │ +                            "      <td>38</td>\n",
│ │ │ +                            "      <td>5</td>\n",
│ │ │ +                            "      <td>MOVING DISC STRAINED RIGHT SHOULDER</td>\n",
│ │ │ +                            "      <td>9500.0</td>\n",
│ │ │ +                            "      <td>102.39</td>\n",
│ │ │ +                            "      <td>2005-01-13</td>\n",
│ │ │ +                            "      <td>2.484907</td>\n",
│ │ │ +                            "      <td>9</td>\n",
│ │ │ +                            "      <td>Thursday</td>\n",
│ │ │ +                            "      <td>6.216606</td>\n",
│ │ │ +                            "      <td>9.159047</td>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>1</th>\n",
│ │ │ +                            "      <td>1994-09-28 15:00:00</td>\n",
│ │ │ +                            "      <td>1994-10-17</td>\n",
│ │ │ +                            "      <td>40</td>\n",
│ │ │ +                            "      <td>M</td>\n",
│ │ │ +                            "      <td>M</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>283</td>\n",
│ │ │ +                            "      <td>F</td>\n",
│ │ │ +                            "      <td>38</td>\n",
│ │ │ +                            "      <td>5</td>\n",
│ │ │ +                            "      <td>BOILING WATER CAME FROM TRUCK STRAIN RIGHT WRIST</td>\n",
│ │ │ +                            "      <td>3000.0</td>\n",
│ │ │ +                            "      <td>1451.00</td>\n",
│ │ │ +                            "      <td>1994-09-28</td>\n",
│ │ │ +                            "      <td>2.995732</td>\n",
│ │ │ +                            "      <td>15</td>\n",
│ │ │ +                            "      <td>Wednesday</td>\n",
│ │ │ +                            "      <td>5.648974</td>\n",
│ │ │ +                            "      <td>8.006368</td>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>5</th>\n",
│ │ │ +                            "      <td>2002-02-28 07:00:00</td>\n",
│ │ │ +                            "      <td>2002-04-08</td>\n",
│ │ │ +                            "      <td>50</td>\n",
│ │ │ +                            "      <td>F</td>\n",
│ │ │ +                            "      <td>S</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>517</td>\n",
│ │ │ +                            "      <td>F</td>\n",
│ │ │ +                            "      <td>38</td>\n",
│ │ │ +                            "      <td>5</td>\n",
│ │ │ +                            "      <td>SPILLED CHEMICAL WELDING IRRITATION LEFT CORNEA</td>\n",
│ │ │ +                            "      <td>1000.0</td>\n",
│ │ │ +                            "      <td>320.28</td>\n",
│ │ │ +                            "      <td>2002-02-28</td>\n",
│ │ │ +                            "      <td>3.688879</td>\n",
│ │ │ +                            "      <td>7</td>\n",
│ │ │ +                            "      <td>Thursday</td>\n",
│ │ │ +                            "      <td>6.249975</td>\n",
│ │ │ +                            "      <td>6.907755</td>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>7</th>\n",
│ │ │ +                            "      <td>1995-04-20 14:00:00</td>\n",
│ │ │ +                            "      <td>1995-05-08</td>\n",
│ │ │ +                            "      <td>19</td>\n",
│ │ │ +                            "      <td>M</td>\n",
│ │ │ +                            "      <td>S</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>200</td>\n",
│ │ │ +                            "      <td>F</td>\n",
│ │ │ +                            "      <td>38</td>\n",
│ │ │ +                            "      <td>5</td>\n",
│ │ │ +                            "      <td>ENTERED GRINDER FOREIGN BODY RIGHT EYE</td>\n",
│ │ │ +                            "      <td>110.0</td>\n",
│ │ │ +                            "      <td>108.00</td>\n",
│ │ │ +                            "      <td>1995-04-20</td>\n",
│ │ │ +                            "      <td>2.944439</td>\n",
│ │ │ +                            "      <td>14</td>\n",
│ │ │ +                            "      <td>Thursday</td>\n",
│ │ │ +                            "      <td>5.303305</td>\n",
│ │ │ +                            "      <td>4.700480</td>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>8</th>\n",
│ │ │ +                            "      <td>2005-01-07 14:00:00</td>\n",
│ │ │ +                            "      <td>2005-01-31</td>\n",
│ │ │ +                            "      <td>19</td>\n",
│ │ │ +                            "      <td>M</td>\n",
│ │ │ +                            "      <td>S</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>0</td>\n",
│ │ │ +                            "      <td>767</td>\n",
│ │ │ +                            "      <td>F</td>\n",
│ │ │ +                            "      <td>40</td>\n",
│ │ │ +                            "      <td>5</td>\n",
│ │ │ +                            "      <td>LIFTING STRAIN LOWER BACK AND</td>\n",
│ │ │ +                            "      <td>9700.0</td>\n",
│ │ │ +                            "      <td>7110.90</td>\n",
│ │ │ +                            "      <td>2005-01-07</td>\n",
│ │ │ +                            "      <td>3.218876</td>\n",
│ │ │ +                            "      <td>14</td>\n",
│ │ │ +                            "      <td>Friday</td>\n",
│ │ │ +                            "      <td>6.643790</td>\n",
│ │ │ +                            "      <td>9.179881</td>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "  </tbody>\n",
│ │ │ +                            "</table>\n",
│ │ │ +                            "</div>"
│ │ │ +                        ],
│ │ │ +                        "text/plain": [
│ │ │ +                            "   DateTimeOfAccident DateReported  Age Gender MaritalStatus  \\\n",
│ │ │ +                            "0 2005-01-13 09:00:00   2005-01-24   45      M             S   \n",
│ │ │ +                            "1 1994-09-28 15:00:00   1994-10-17   40      M             M   \n",
│ │ │ +                            "5 2002-02-28 07:00:00   2002-04-08   50      F             S   \n",
│ │ │ +                            "7 1995-04-20 14:00:00   1995-05-08   19      M             S   \n",
│ │ │ +                            "8 2005-01-07 14:00:00   2005-01-31   19      M             S   \n",
│ │ │ +                            "\n",
│ │ │ +                            "   DependentChildren  DependentsOther  WeeklyPay PartTimeFullTime  \\\n",
│ │ │ +                            "0                  0                0        500                F   \n",
│ │ │ +                            "1                  0                0        283                F   \n",
│ │ │ +                            "5                  0                0        517                F   \n",
│ │ │ +                            "7                  0                0        200                F   \n",
│ │ │ +                            "8                  0                0        767                F   \n",
│ │ │ +                            "\n",
│ │ │ +                            "   HoursPerWeek  DaysWorkedPerWeek  \\\n",
│ │ │ +                            "0            38                  5   \n",
│ │ │ +                            "1            38                  5   \n",
│ │ │ +                            "5            38                  5   \n",
│ │ │ +                            "7            38                  5   \n",
│ │ │ +                            "8            40                  5   \n",
│ │ │ +                            "\n",
│ │ │ +                            "                                   ClaimDescription  InitialCaseEstimate  \\\n",
│ │ │ +                            "0               MOVING DISC STRAINED RIGHT SHOULDER               9500.0   \n",
│ │ │ +                            "1  BOILING WATER CAME FROM TRUCK STRAIN RIGHT WRIST               3000.0   \n",
│ │ │ +                            "5   SPILLED CHEMICAL WELDING IRRITATION LEFT CORNEA               1000.0   \n",
│ │ │ +                            "7            ENTERED GRINDER FOREIGN BODY RIGHT EYE                110.0   \n",
│ │ │ +                            "8                     LIFTING STRAIN LOWER BACK AND               9700.0   \n",
│ │ │ +                            "\n",
│ │ │ +                            "   UltimateIncurredClaimCost DateOfAccident  LogDelay  HourOfAccident  \\\n",
│ │ │ +                            "0                     102.39     2005-01-13  2.484907               9   \n",
│ │ │ +                            "1                    1451.00     1994-09-28  2.995732              15   \n",
│ │ │ +                            "5                     320.28     2002-02-28  3.688879               7   \n",
│ │ │ +                            "7                     108.00     1995-04-20  2.944439              14   \n",
│ │ │ +                            "8                    7110.90     2005-01-07  3.218876              14   \n",
│ │ │ +                            "\n",
│ │ │ +                            "  WeekDayOfAccident  LogWeeklyPay  LogInitial  \n",
│ │ │ +                            "0          Thursday      6.216606    9.159047  \n",
│ │ │ +                            "1         Wednesday      5.648974    8.006368  \n",
│ │ │ +                            "5          Thursday      6.249975    6.907755  \n",
│ │ │ +                            "7          Thursday      5.303305    4.700480  \n",
│ │ │ +                            "8            Friday      6.643790    9.179881  "
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "execution_count": 4,
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "execute_result"
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "df.head()"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "1ddf4302-7c1a-4a90-88b6-a00866ce036a",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "### 1.2 Data Split"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 5,
│ │ │ +            "id": "700e6bbb-0641-4141-9d62-b51c78e4427e",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [],
│ │ │ +            "source": [
│ │ │ +                "df_train, df_test = train_test_split(df, train_size=0.75, random_state=1234321)\n",
│ │ │ +                "df = pd.concat((df_train, df_test), axis=0, keys=(\"train\", \"test\")).reset_index(level=0).rename(columns={\"level_0\": \"split\"})\n",
│ │ │ +                "\n",
│ │ │ +                "y_train, y_test = df_train[y_var], df_test[y_var]\n",
│ │ │ +                "X_train, X_test = df_train[x_vars], df_test[x_vars]"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "8c773b7c-f1cd-4deb-ae19-a0a57e1bc30f",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "We check whether the split results in two about identically distributed samples."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 6,
│ │ │ +            "id": "2c740f0f-a580-4a51-b993-30f78cac2fbc",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │ +                        "text/html": [
│ │ │ +                            "<div>\n",
│ │ │ +                            "<style scoped>\n",
│ │ │ +                            "    .dataframe tbody tr th:only-of-type {\n",
│ │ │ +                            "        vertical-align: middle;\n",
│ │ │ +                            "    }\n",
│ │ │ +                            "\n",
│ │ │ +                            "    .dataframe tbody tr th {\n",
│ │ │ +                            "        vertical-align: top;\n",
│ │ │ +                            "    }\n",
│ │ │ +                            "\n",
│ │ │ +                            "    .dataframe thead th {\n",
│ │ │ +                            "        text-align: right;\n",
│ │ │ +                            "    }\n",
│ │ │ +                            "</style>\n",
│ │ │ +                            "<table border=\"1\" class=\"dataframe\">\n",
│ │ │ +                            "  <thead>\n",
│ │ │ +                            "    <tr style=\"text-align: right;\">\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th>mean</th>\n",
│ │ │ +                            "      <th>q20</th>\n",
│ │ │ +                            "      <th>q40</th>\n",
│ │ │ +                            "      <th>q50</th>\n",
│ │ │ +                            "      <th>q60</th>\n",
│ │ │ +                            "      <th>q80</th>\n",
│ │ │ +                            "      <th>q90</th>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>split</th>\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "      <th></th>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "  </thead>\n",
│ │ │ +                            "  <tbody>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>test</th>\n",
│ │ │ +                            "      <td>13300.958856</td>\n",
│ │ │ +                            "      <td>205.0</td>\n",
│ │ │ +                            "      <td>464.714</td>\n",
│ │ │ +                            "      <td>707.500</td>\n",
│ │ │ +                            "      <td>1135.984</td>\n",
│ │ │ +                            "      <td>4716.426</td>\n",
│ │ │ +                            "      <td>18979.432</td>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "    <tr>\n",
│ │ │ +                            "      <th>train</th>\n",
│ │ │ +                            "      <td>12909.500160</td>\n",
│ │ │ +                            "      <td>203.0</td>\n",
│ │ │ +                            "      <td>459.000</td>\n",
│ │ │ +                            "      <td>691.185</td>\n",
│ │ │ +                            "      <td>1096.230</td>\n",
│ │ │ +                            "      <td>4596.730</td>\n",
│ │ │ +                            "      <td>19030.384</td>\n",
│ │ │ +                            "    </tr>\n",
│ │ │ +                            "  </tbody>\n",
│ │ │ +                            "</table>\n",
│ │ │ +                            "</div>"
│ │ │ +                        ],
│ │ │ +                        "text/plain": [
│ │ │ +                            "               mean    q20      q40      q50       q60       q80        q90\n",
│ │ │ +                            "split                                                                      \n",
│ │ │ +                            "test   13300.958856  205.0  464.714  707.500  1135.984  4716.426  18979.432\n",
│ │ │ +                            "train  12909.500160  203.0  459.000  691.185  1096.230  4596.730  19030.384"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "execution_count": 6,
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "execute_result"
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "df.groupby(\"split\").agg(\n",
│ │ │ +                "    mean=pd.NamedAgg(column=y_var, aggfunc=\"mean\"),\n",
│ │ │ +                "    q20=pd.NamedAgg(column=y_var, aggfunc=lambda x: np.quantile(x, 0.2)),\n",
│ │ │ +                "    q40=pd.NamedAgg(column=y_var, aggfunc=lambda x: np.quantile(x, 0.4)),\n",
│ │ │ +                "    q50=pd.NamedAgg(column=y_var, aggfunc=lambda x: np.quantile(x, 0.5)),\n",
│ │ │ +                "    q60=pd.NamedAgg(column=y_var, aggfunc=lambda x: np.quantile(x, 0.6)),\n",
│ │ │ +                "    q80=pd.NamedAgg(column=y_var, aggfunc=lambda x: np.quantile(x, 0.8)),\n",
│ │ │ +                "    q90=pd.NamedAgg(column=y_var, aggfunc=lambda x: np.quantile(x, 0.9)),\n",
│ │ │ +                ")"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "1e32a519-7ac8-4e94-99a6-f451dc2190ff",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "## 2. Models\n",
│ │ │ +                "We aim at predicting the conditional expectation $E(Y|X)$ and will finally evaluate the models with the Gamma deviance $S(z, y) = 2 \\left(log(\\frac{z}{y}) + \\frac{y}{z} - 1\\right)$.\n",
│ │ │ +                "### 2.1 The trivial model"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 7,
│ │ │ +            "id": "ad0611d6-3f25-4fdd-9ae4-f6f3161233cb",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [],
│ │ │ +            "source": [
│ │ │ +                "from sklearn.dummy import DummyRegressor\n",
│ │ │ +                "\n",
│ │ │ +                "\n",
│ │ │ +                "m_trivial = DummyRegressor(strategy=\"mean\").fit(X_train, y_train)"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "9a176508-87d9-4b45-b9c1-436becc205f3",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "### 2.2 OLS\n",
│ │ │ +                "\n",
│ │ │ +                "Here, we train a Ordinary Least Squares (OLS) model, but on the log transformed target.\n",
│ │ │ +                "`TransformedTargetRegressor` takes care of this transformation and also of the back transformation such that predictions are on the original target UltimateIncurredClaimCost."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 8,
│ │ │ +            "id": "70f55852-de16-4dc6-b35e-ad3dfef93b3e",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [],
│ │ │ +            "source": [
│ │ │ +                "from sklearn.compose import ColumnTransformer, TransformedTargetRegressor\n",
│ │ │ +                "from sklearn.linear_model import LinearRegression\n",
│ │ │ +                "from sklearn.pipeline import Pipeline\n",
│ │ │ +                "from sklearn.preprocessing import OneHotEncoder\n",
│ │ │ +                "\n",
│ │ │ +                "\n",
│ │ │ +                "# ColumnTransformer for linear models\n",
│ │ │ +                "col_trans_linear = ColumnTransformer(\n",
│ │ │ +                "    [\n",
│ │ │ +                "        (\"numeric_features\", \"passthrough\", x_continuous),\n",
│ │ │ +                "        (\"categorical_features\", OneHotEncoder(drop=\"first\", sparse_output=False), x_discrete),\n",
│ │ │ +                "    ]\n",
│ │ │ +                ")\n",
│ │ │ +                "\n",
│ │ │ +                "m_ols = Pipeline(\n",
│ │ │ +                "    [\n",
│ │ │ +                "        (\"column_transformer\", col_trans_linear),\n",
│ │ │ +                "        (\n",
│ │ │ +                "            \"model\",\n",
│ │ │ +                "            TransformedTargetRegressor(\n",
│ │ │ +                "                regressor=LinearRegression(),\n",
│ │ │ +                "                func=np.log,\n",
│ │ │ +                "                inverse_func=np.exp,\n",
│ │ │ +                "            )\n",
│ │ │ +                "        ),\n",
│ │ │ +                "    ]\n",
│ │ │ +                ").fit(X_train, y_train)"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "39651cc8-ae00-4699-9c77-3846e1658c16",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "We expect a high bias due to the transformation. We correct for this bias by a multiplicative constant such that on the training set: $\\sum_i m(x_i) = \\sum_i y_i$."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 9,
│ │ │ +            "id": "b76d3139-c4bd-44ad-ac64-42b8323f51fc",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "name": "stdout",
│ │ │ +                    "output_type": "stream",
│ │ │ +                    "text": [
│ │ │ +                        "The correction factor is 6.6446580674943165\n"
│ │ │ +                    ]
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "ols_corr_factor = np.sum(y_train) / np.sum(m_ols.predict(X_train))\n",
│ │ │ +                "print(f\"The correction factor is {ols_corr_factor}\")\n",
│ │ │ +                "m_ols[-1].regressor_.intercept_ += np.log(ols_corr_factor)"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 10,
│ │ │ +            "id": "658210ee-ddca-4017-9572-a0c5797321d1",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │ +                        "text/plain": [
│ │ │ +                            "1.0000000000000002"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "execution_count": 10,
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "execute_result"
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "np.sum(y_train) / np.sum(m_ols.predict(X_train))"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "27244ec1-67ca-47f4-9820-2caade7386ce",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "### 2.3 Poisson GLM"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 11,
│ │ │ +            "id": "66149c6d-8760-4769-8201-020df64ee75b",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [],
│ │ │ +            "source": [
│ │ │ +                "from sklearn.linear_model import PoissonRegressor\n",
│ │ │ +                "\n",
│ │ │ +                "\n",
│ │ │ +                "m_glm_poisson = Pipeline(\n",
│ │ │ +                "    [\n",
│ │ │ +                "        (\"column_transformer\", col_trans_linear),\n",
│ │ │ +                "        (\"model\", PoissonRegressor(max_iter=10_000, alpha=1e-15, solver=\"newton-cholesky\")),\n",
│ │ │ +                "    ]\n",
│ │ │ +                ").fit(X_train, y_train)"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "82daee1e-b891-4589-8d62-7895d0aa2d8c",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "### 2.4 Gradient Boosted Decision Trees\n",
│ │ │ +                "TODO: We would like to use Gamma deviance as loss, but scikit-learn does not (yet) support it. We could use XGBoost or LightGBM instead, but are content with the Poisson loss at the moment."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 12,
│ │ │ +            "id": "c791a0b8-2218-4c4f-98dc-7e048b3ff76e",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "name": "stdout",
│ │ │ +                    "output_type": "stream",
│ │ │ +                    "text": [
│ │ │ +                        "CPU times: user 11min 10s, sys: 10.4 s, total: 11min 21s\n",
│ │ │ +                        "Wall time: 1min 26s\n"
│ │ │ +                    ]
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "%%time\n",
│ │ │ +                "# Note that this cell might take a little while ~ 2 minutes on my laptop.\n",
│ │ │ +                "from sklearn.ensemble import HistGradientBoostingRegressor\n",
│ │ │ +                "from sklearn.experimental import enable_halving_search_cv\n",
│ │ │ +                "from sklearn.model_selection import HalvingGridSearchCV\n",
│ │ │ +                "from sklearn.preprocessing import OrdinalEncoder\n",
│ │ │ +                "\n",
│ │ │ +                "\n",
│ │ │ +                "# ColumnTransformer for boosted trees\n",
│ │ │ +                "col_trans_bt = ColumnTransformer(\n",
│ │ │ +                "    [\n",
│ │ │ +                "        (\"categorical_features\", OrdinalEncoder(), x_discrete),\n",
│ │ │ +                "        (\"numeric_features\", \"passthrough\", x_continuous),\n",
│ │ │ +                "    ]\n",
│ │ │ +                ")\n",
│ │ │ +                "m_hgbt_poisson_base = Pipeline(\n",
│ │ │ +                "    [\n",
│ │ │ +                "        (\"column_transformer\", col_trans_bt),\n",
│ │ │ +                "        (\n",
│ │ │ +                "            \"model\", HistGradientBoostingRegressor(\n",
│ │ │ +                "                loss=\"poisson\",\n",
│ │ │ +                "                categorical_features=list(range(len(x_discrete))),\n",
│ │ │ +                "                monotonic_cst={\"numeric_features__LogWeeklyPay\": 1},  # set_output API, YES!\n",
│ │ │ +                "                max_iter=200,\n",
│ │ │ +                "                random_state=33,\n",
│ │ │ +                "            )\n",
│ │ │ +                "        ),\n",
│ │ │ +                "    ]\n",
│ │ │ +                ")\n",
│ │ │ +                "\n",
│ │ │ +                "param_grid = {\n",
│ │ │ +                "    \"model__learning_rate\": [0.02, 0.05],\n",
│ │ │ +                "    \"model__min_samples_leaf\": [30, 40, 50],\n",
│ │ │ +                "    \"model__l2_regularization\": [0.1, 1],\n",
│ │ │ +                "    \"model__max_depth\": [None, 3],\n",
│ │ │ +                "}\n",
│ │ │ +                "\n",
│ │ │ +                "\n",
│ │ │ +                "# successive halfing grid search (CV) on the training data\n",
│ │ │ +                "shgs = HalvingGridSearchCV(\n",
│ │ │ +                "    m_hgbt_poisson_base,\n",
│ │ │ +                "    param_grid=param_grid,\n",
│ │ │ +                "    cv=5,\n",
│ │ │ +                "    scoring=\"neg_mean_gamma_deviance\",\n",
│ │ │ +                "    random_state=321,\n",
│ │ │ +                ").fit(X_train, y_train)\n",
│ │ │ +                "m_hgbt_poisson = shgs.best_estimator_"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 13,
│ │ │ +            "id": "3ee2c06c-8e85-40f6-9133-727e2af81cab",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │ +                        "text/plain": [
│ │ │ +                            "({'model__l2_regularization': 1,\n",
│ │ │ +                            "  'model__learning_rate': 0.05,\n",
│ │ │ +                            "  'model__max_depth': 3,\n",
│ │ │ +                            "  'model__min_samples_leaf': 40},\n",
│ │ │ +                            " -3.547907637012485)"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "execution_count": 13,
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "execute_result"
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "shgs.best_params_, shgs.best_score_"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 14,
│ │ │ +            "id": "6dacffc8-9fd8-4b56-bd4e-9a9b71dbbdcb",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │ +                        "text/plain": [
│ │ │ +                            "130"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "execution_count": 14,
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "execute_result"
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "m_hgbt_poisson[-1].n_iter_"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "1a5f12d6-966d-45cc-ac1e-cfd43595a081",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "## 3. Calibration Assessment\n",
│ │ │ +                "To make the code easier, we put together the predictions of all of our models on the test set in a single dataframe."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 15,
│ │ │ +            "id": "4bd40f96-2581-499e-8bc6-2a3bb019de7b",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [],
│ │ │ +            "source": [
│ │ │ +                "df_pred_test = pd.DataFrame(\n",
│ │ │ +                "    {\n",
│ │ │ +                "        \"Trivial\": m_trivial.predict(X_test),\n",
│ │ │ +                "        \"OLS\": m_ols.predict(X_test),\n",
│ │ │ +                "        \"GLM_Poisson\": m_glm_poisson.predict(X_test),\n",
│ │ │ +                "        \"HGBT_Poisson\": m_hgbt_poisson.predict(X_test),\n",
│ │ │ +                "    }\n",
│ │ │ +                ")"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "631c120d-c991-4c51-9a49-0282c21afbf4",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "## 3.1. Reliability Diagrams\n",
│ │ │ +                "A reliability diagram plots an estimation of $E(Y|m(X))$ versus $m(X)$.\n",
│ │ │ +                "A good way to estimate $E(Y|m(X))$ and thereby avoiding manual binning is by isotonic regression.\n",
│ │ │ +                "This is implemented in `plot_reliability_diagram`."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 16,
│ │ │ +            "id": "70fa98bf-2ab2-40fe-a1ca-ce3af33ea261",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [],
│ │ │ +            "source": [
│ │ │ +                "import matplotlib.pyplot as plt\n",
│ │ │ +                "from model_diagnostics.calibration import compute_bias, plot_bias, plot_reliability_diagram"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 17,
│ │ │ +            "id": "f58490f0-9cae-4f2d-bf89-7f7a501d9995",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │ +                        "text/plain": [
│ │ │ +                            "<Axes: title={'center': 'Reliability Diagram HGBT_Poisson'}, xlabel='prediction for E(Y|X)', ylabel='estimated E(Y|prediction)'>"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "execution_count": 17,
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "execute_result"
│ │ │ +                },
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │ +                        "image/png": "",
│ │ │ +                        "text/plain": [
│ │ │ +                            "<Figure size 1200x400 with 3 Axes>"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "display_data"
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "fig, axes = plt.subplots(ncols=3, figsize=(12, 4), sharex=True, sharey=True)\n",
│ │ │ +                "\n",
│ │ │ +                "plot_reliability_diagram(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test[\"OLS\"],\n",
│ │ │ +                "    n_bootstrap=100,\n",
│ │ │ +                "    ax=axes[0],\n",
│ │ │ +                ")\n",
│ │ │ +                "\n",
│ │ │ +                "plot_reliability_diagram(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test[\"GLM_Poisson\"],\n",
│ │ │ +                "    n_bootstrap=100,\n",
│ │ │ +                "    ax=axes[1]\n",
│ │ │ +                ")\n",
│ │ │ +                "\n",
│ │ │ +                "plot_reliability_diagram(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test[\"HGBT_Poisson\"],\n",
│ │ │ +                "    n_bootstrap=100,\n",
│ │ │ +                "    ax=axes[2]\n",
│ │ │ +                ")\n",
│ │ │ +                "#fig.set_layout_engine(layout=\"tight\")"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "1128552f-48fd-4039-8f63-db1df9b069f4",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "For a better visual comparison, we use the `diagram_type=\"bias\"` option to rotate the plots by 45 degrees (and mirror on the horizontal line) and plot all models in one go.\n",
│ │ │ +                "On top, we set the x-axis to a logarithmic scale and we zoom in a little."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 18,
│ │ │ +            "id": "92979f18-d926-4417-9aca-96b58f5e2589",
│ │ │              "metadata": {
│ │ │                  "tags": []
│ │ │              },
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │ +                        "image/png": "",
│ │ │ +                        "text/plain": [
│ │ │ +                            "<Figure size 640x480 with 1 Axes>"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "metadata": {},
│ │ │ +                    "output_type": "display_data"
│ │ │ +                }
│ │ │ +            ],
│ │ │ +            "source": [
│ │ │ +                "ax = plot_reliability_diagram(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test,\n",
│ │ │ +                "    n_bootstrap=100,\n",
│ │ │ +                "    diagram_type=\"bias\",\n",
│ │ │ +                ")\n",
│ │ │ +                "ax.set_xlim(left=1e4, right=3e5)\n",
│ │ │ +                "ax.set_ylim(bottom=-1e5, top=1e5)\n",
│ │ │ +                "ax.set_xscale(\"log\")"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "6e1789fb-b36c-4e37-b764-29ca5e031bee",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "### 3.2 Conditional Bias"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "a77ba53f-dea6-4b54-afd2-2d5fcd39ac77",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "### Unconditional Bias"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "code",
│ │ │ +            "execution_count": 19,
│ │ │ +            "id": "966a21af-8b3e-4d60-a25e-4e1334afeadc",
│ │ │ +            "metadata": {},
│ │ │ +            "outputs": [
│ │ │ +                {
│ │ │ +                    "data": {
│ │ │                          "text/html": [
│ │ │                              "<div>\n",
│ │ │                              "<style>\n",
│ │ │                              ".pl-dataframe > thead > tr > th {\n",
│ │ │                              "  text-align: right;\n",
│ │ │                              "}\n",
│ │ │                              "</style>\n",
│ │ │                              "\n",
│ │ │                              "<table border=\"1\" class=\"dataframe pl-dataframe\">\n",
│ │ │ -                            "<small>shape: (3, 5)</small>\n",
│ │ │ +                            "<small>shape: (4, 6)</small>\n",
│ │ │                              "<thead>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<th>\n",
│ │ │                              "model\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │                              "bias_mean\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │                              "bias_count\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ +                            "bias_weights\n",
│ │ │ +                            "</th>\n",
│ │ │ +                            "<th>\n",
│ │ │                              "bias_stderr\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │                              "p_value\n",
│ │ │                              "</th>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │                              "str\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "i64\n",
│ │ │ +                            "u32\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</thead>\n",
│ │ │                              "<tbody>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_1&quot;\n",
│ │ │ +                            "&quot;Trivial&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.5\n",
│ │ │ +                            "-391.458696\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "10\n",
│ │ │ +                            "20505\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ +                            "20505.0\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "394.427909\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "0.320979\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "</tr>\n",
│ │ │ +                            "<tr>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "&quot;OLS&quot;\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "-158.226277\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "20505\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "20505.0\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "370.470343\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "0.669314\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_2&quot;\n",
│ │ │ +                            "&quot;GLM_Poisson&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4.0\n",
│ │ │ +                            "-142.672362\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "10\n",
│ │ │ +                            "20505\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3.08761\n",
│ │ │ +                            "20505.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.227387\n",
│ │ │ +                            "370.458593\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "0.70015\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_3&quot;\n",
│ │ │ +                            "&quot;HGBT_Poisson&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "6.0\n",
│ │ │ +                            "-94.439905\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "10\n",
│ │ │ +                            "20505\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3.08761\n",
│ │ │ +                            "20505.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.083871\n",
│ │ │ +                            "370.823364\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "0.798976\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</tbody>\n",
│ │ │                              "</table>\n",
│ │ │                              "</div>"
│ │ │                          ],
│ │ │                          "text/plain": [
│ │ │ -                            "shape: (3, 5)\n",
│ │ │ -                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ -                            "\u2502 model   \u2506 bias_mean \u2506 bias_count \u2506 bias_stderr \u2506 p_value  \u2502\n",
│ │ │ -                            "\u2502 ---     \u2506 ---       \u2506 ---        \u2506 ---         \u2506 ---      \u2502\n",
│ │ │ -                            "\u2502 str     \u2506 f64       \u2506 i64        \u2506 f64         \u2506 f64      \u2502\n",
│ │ │ -                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ -                            "\u2502 model_1 \u2506 0.5       \u2506 10         \u2506 0.0         \u2506 NaN      \u2502\n",
│ │ │ -                            "\u2502 model_2 \u2506 4.0       \u2506 10         \u2506 3.08761     \u2506 0.227387 \u2502\n",
│ │ │ -                            "\u2502 model_3 \u2506 6.0       \u2506 10         \u2506 3.08761     \u2506 0.083871 \u2502\n",
│ │ │ -                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │ +                            "shape: (4, 6)\n",
│ │ │ +                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ +                            "\u2502 model        \u2506 bias_mean   \u2506 bias_count \u2506 bias_weights \u2506 bias_stderr \u2506 p_value  \u2502\n",
│ │ │ +                            "\u2502 ---          \u2506 ---         \u2506 ---        \u2506 ---          \u2506 ---         \u2506 ---      \u2502\n",
│ │ │ +                            "\u2502 str          \u2506 f64         \u2506 u32        \u2506 f64          \u2506 f64         \u2506 f64      \u2502\n",
│ │ │ +                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ +                            "\u2502 Trivial      \u2506 -391.458696 \u2506 20505      \u2506 20505.0      \u2506 394.427909  \u2506 0.320979 \u2502\n",
│ │ │ +                            "\u2502 OLS          \u2506 -158.226277 \u2506 20505      \u2506 20505.0      \u2506 370.470343  \u2506 0.669314 \u2502\n",
│ │ │ +                            "\u2502 GLM_Poisson  \u2506 -142.672362 \u2506 20505      \u2506 20505.0      \u2506 370.458593  \u2506 0.70015  \u2502\n",
│ │ │ +                            "\u2502 HGBT_Poisson \u2506 -94.439905  \u2506 20505      \u2506 20505.0      \u2506 370.823364  \u2506 0.798976 \u2502\n",
│ │ │ +                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │                          ]
│ │ │                      },
│ │ │ -                    "execution_count": 3,
│ │ │ +                    "execution_count": 19,
│ │ │                      "metadata": {},
│ │ │                      "output_type": "execute_result"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "compute_bias(y_obs=y_obs, y_pred=y_pred)"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 4,
│ │ │ -            "id": "0f3b709c-7a58-4005-a2dc-90642de6f220",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Plot'}, xlabel='model', ylabel='bias'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 4,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred, with_errorbars=False)"
│ │ │ +                "compute_bias(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test,\n",
│ │ │ +                "    feature=None,\n",
│ │ │ +                ")"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 5,
│ │ │ -            "id": "987f6cff-16e8-456e-ad02-37f47cbf3467",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Plot'}, xlabel='model', ylabel='bias'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 5,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "c828b8d2-1b80-4561-8d1d-0e24e5f6f85c",
│ │ │ +            "metadata": {},
│ │ │              "source": [
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred)"
│ │ │ +                "#### Bias Conditional on Gender"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │ -            "execution_count": 6,
│ │ │ -            "id": "4a636349-636e-48ba-928d-5a13d9bbe0f3",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ +            "execution_count": 20,
│ │ │ +            "id": "bcc0aaf6-8653-4a7d-8c66-c0a4713e700f",
│ │ │ +            "metadata": {},
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │                          "text/html": [
│ │ │                              "<div>\n",
│ │ │                              "<style>\n",
│ │ │                              ".pl-dataframe > thead > tr > th {\n",
│ │ │                              "  text-align: right;\n",
│ │ │                              "}\n",
│ │ │                              "</style>\n",
│ │ │                              "\n",
│ │ │                              "<table border=\"1\" class=\"dataframe pl-dataframe\">\n",
│ │ │ -                            "<small>shape: (9, 6)</small>\n",
│ │ │ +                            "<small>shape: (8, 7)</small>\n",
│ │ │                              "<thead>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<th>\n",
│ │ │                              "model\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "feature\n",
│ │ │ +                            "Gender\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │                              "bias_mean\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │                              "bias_count\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ +                            "bias_weights\n",
│ │ │ +                            "</th>\n",
│ │ │ +                            "<th>\n",
│ │ │                              "bias_stderr\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │                              "p_value\n",
│ │ │                              "</th>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │                              "str\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "f64\n",
│ │ │ +                            "cat\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "u32\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "f64\n",
│ │ │ +                            "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</thead>\n",
│ │ │                              "<tbody>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_1&quot;\n",
│ │ │ +                            "&quot;Trivial&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ +                            "&quot;F&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.5\n",
│ │ │ +                            "-4693.414762\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3\n",
│ │ │ +                            "4441\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ +                            "4441.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "925.511027\n",
│ │ │                              "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_1&quot;\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "0.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "3\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "4.1151e-7\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_1&quot;\n",
│ │ │ +                            "&quot;Trivial&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2.0\n",
│ │ │ +                            "&quot;M&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.5\n",
│ │ │ +                            "797.845767\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4\n",
│ │ │ +                            "16064\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ +                            "16064.0\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "433.155234\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "0.065502\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_2&quot;\n",
│ │ │ +                            "&quot;OLS&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ +                            "&quot;F&quot;\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "-1212.773117\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2.333333\n",
│ │ │ +                            "4441\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3\n",
│ │ │ +                            "4441.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "6.359595\n",
│ │ │ +                            "878.188822\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.748876\n",
│ │ │ +                            "0.16735\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_2&quot;\n",
│ │ │ +                            "&quot;OLS&quot;\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "&quot;M&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "1.0\n",
│ │ │ +                            "133.310235\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "1.666667\n",
│ │ │ +                            "16064\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3\n",
│ │ │ +                            "16064.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2.905933\n",
│ │ │ +                            "405.795301\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.624177\n",
│ │ │ +                            "0.742526\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_2&quot;\n",
│ │ │ +                            "&quot;GLM_Poisson&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2.0\n",
│ │ │ +                            "&quot;F&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "7.0\n",
│ │ │ +                            "-184.995122\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4\n",
│ │ │ +                            "4441\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "6.480741\n",
│ │ │ +                            "4441.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.35918\n",
│ │ │ +                            "878.931176\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "0.833305\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_3&quot;\n",
│ │ │ +                            "&quot;GLM_Poisson&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ +                            "&quot;M&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3.666667\n",
│ │ │ +                            "-130.971952\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3\n",
│ │ │ +                            "16064\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2.905933\n",
│ │ │ +                            "16064.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.33425\n",
│ │ │ +                            "405.685045\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "0.74682\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_3&quot;\n",
│ │ │ +                            "&quot;HGBT_Poisson&quot;\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "&quot;F&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "1.0\n",
│ │ │ +                            "-303.384575\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4.333333\n",
│ │ │ +                            "4441\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "3\n",
│ │ │ +                            "4441.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "6.359595\n",
│ │ │ +                            "875.609671\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.565943\n",
│ │ │ +                            "0.728996\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_3&quot;\n",
│ │ │ +                            "&quot;HGBT_Poisson&quot;\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "&quot;M&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2.0\n",
│ │ │ +                            "-36.675756\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "9.0\n",
│ │ │ +                            "16064\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4\n",
│ │ │ +                            "16064.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "6.480741\n",
│ │ │ +                            "406.774313\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.259057\n",
│ │ │ +                            "0.928159\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</tbody>\n",
│ │ │                              "</table>\n",
│ │ │                              "</div>"
│ │ │                          ],
│ │ │                          "text/plain": [
│ │ │ -                            "shape: (9, 6)\n",
│ │ │ -                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ -                            "\u2502 model   \u2506 feature \u2506 bias_mean \u2506 bias_count \u2506 bias_stderr \u2506 p_value  \u2502\n",
│ │ │ -                            "\u2502 ---     \u2506 ---     \u2506 ---       \u2506 ---        \u2506 ---         \u2506 ---      \u2502\n",
│ │ │ -                            "\u2502 str     \u2506 f64     \u2506 f64       \u2506 u32        \u2506 f64         \u2506 f64      \u2502\n",
│ │ │ -                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ -                            "\u2502 model_1 \u2506 0.0     \u2506 0.5       \u2506 3          \u2506 0.0         \u2506 NaN      \u2502\n",
│ │ │ -                            "\u2502 model_1 \u2506 1.0     \u2506 0.5       \u2506 3          \u2506 0.0         \u2506 NaN      \u2502\n",
│ │ │ -                            "\u2502 model_1 \u2506 2.0     \u2506 0.5       \u2506 4          \u2506 0.0         \u2506 NaN      \u2502\n",
│ │ │ -                            "\u2502 model_2 \u2506 0.0     \u2506 2.333333  \u2506 3          \u2506 6.359595    \u2506 0.748876 \u2502\n",
│ │ │ -                            "\u2502 ...     \u2506 ...     \u2506 ...       \u2506 ...        \u2506 ...         \u2506 ...      \u2502\n",
│ │ │ -                            "\u2502 model_2 \u2506 2.0     \u2506 7.0       \u2506 4          \u2506 6.480741    \u2506 0.35918  \u2502\n",
│ │ │ -                            "\u2502 model_3 \u2506 0.0     \u2506 3.666667  \u2506 3          \u2506 2.905933    \u2506 0.33425  \u2502\n",
│ │ │ -                            "\u2502 model_3 \u2506 1.0     \u2506 4.333333  \u2506 3          \u2506 6.359595    \u2506 0.565943 \u2502\n",
│ │ │ -                            "\u2502 model_3 \u2506 2.0     \u2506 9.0       \u2506 4          \u2506 6.480741    \u2506 0.259057 \u2502\n",
│ │ │ -                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 6,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "compute_bias(y_obs=y_obs, y_pred=y_pred, feature=feature_num)"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 7,
│ │ │ -            "id": "d7fbdb7c-dfd9-4d8a-aec1-e8582965b48b",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Plot'}, xlabel='binned feature', ylabel='bias'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 7,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred, feature=feature_num)"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 8,
│ │ │ -            "id": "1938517e-a355-4d9c-9ab0-61aed82effb0",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Plot'}, xlabel='feature', ylabel='bias'>"
│ │ │ +                            "shape: (8, 7)\n",
│ │ │ +                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ +                            "\u2502 model        \u2506 Gender \u2506 bias_mean    \u2506 bias_count \u2506 bias_weights \u2506 bias_stderr \u2506 p_value   \u2502\n",
│ │ │ +                            "\u2502 ---          \u2506 ---    \u2506 ---          \u2506 ---        \u2506 ---          \u2506 ---         \u2506 ---       \u2502\n",
│ │ │ +                            "\u2502 str          \u2506 cat    \u2506 f64          \u2506 u32        \u2506 f64          \u2506 f64         \u2506 f64       \u2502\n",
│ │ │ +                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ +                            "\u2502 Trivial      \u2506 F      \u2506 -4693.414762 \u2506 4441       \u2506 4441.0       \u2506 925.511027  \u2506 4.1151e-7 \u2502\n",
│ │ │ +                            "\u2502 Trivial      \u2506 M      \u2506 797.845767   \u2506 16064      \u2506 16064.0      \u2506 433.155234  \u2506 0.065502  \u2502\n",
│ │ │ +                            "\u2502 OLS          \u2506 F      \u2506 -1212.773117 \u2506 4441       \u2506 4441.0       \u2506 878.188822  \u2506 0.16735   \u2502\n",
│ │ │ +                            "\u2502 OLS          \u2506 M      \u2506 133.310235   \u2506 16064      \u2506 16064.0      \u2506 405.795301  \u2506 0.742526  \u2502\n",
│ │ │ +                            "\u2502 GLM_Poisson  \u2506 F      \u2506 -184.995122  \u2506 4441       \u2506 4441.0       \u2506 878.931176  \u2506 0.833305  \u2502\n",
│ │ │ +                            "\u2502 GLM_Poisson  \u2506 M      \u2506 -130.971952  \u2506 16064      \u2506 16064.0      \u2506 405.685045  \u2506 0.74682   \u2502\n",
│ │ │ +                            "\u2502 HGBT_Poisson \u2506 F      \u2506 -303.384575  \u2506 4441       \u2506 4441.0       \u2506 875.609671  \u2506 0.728996  \u2502\n",
│ │ │ +                            "\u2502 HGBT_Poisson \u2506 M      \u2506 -36.675756   \u2506 16064      \u2506 16064.0      \u2506 406.774313  \u2506 0.928159  \u2502\n",
│ │ │ +                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │                          ]
│ │ │                      },
│ │ │ -                    "execution_count": 8,
│ │ │ +                    "execution_count": 20,
│ │ │                      "metadata": {},
│ │ │                      "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred, feature=feature_str)"
│ │ │ +                "compute_bias(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test,\n",
│ │ │ +                "    feature=X_test[\"Gender\"],\n",
│ │ │ +                ")"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │ -            "execution_count": 9,
│ │ │ -            "id": "b299294c-05f3-45cf-9594-7a5c982088f8",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ +            "execution_count": 21,
│ │ │ +            "id": "a57d6452-5f93-409b-82e2-36350fa86545",
│ │ │ +            "metadata": {},
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │                          "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Reliability Diagram'}, xlabel='prediction for E(Y|X)', ylabel='estimated E(Y|prediction)'>"
│ │ │ +                            "<Axes: title={'center': 'Bias Plot'}, xlabel='Gender', ylabel='bias'>"
│ │ │                          ]
│ │ │                      },
│ │ │ -                    "execution_count": 9,
│ │ │ +                    "execution_count": 21,
│ │ │                      "metadata": {},
│ │ │                      "output_type": "execute_result"
│ │ │                  },
│ │ │                  {
│ │ │                      "data": {
│ │ │ -                        "image/png": "",
│ │ │ +                        "image/png": "",
│ │ │                          "text/plain": [
│ │ │                              "<Figure size 640x480 with 1 Axes>"
│ │ │                          ]
│ │ │                      },
│ │ │                      "metadata": {},
│ │ │                      "output_type": "display_data"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "plot_reliability_diagram(y_obs=y_obs, y_pred=y_pred, n_bootstrap=10)"
│ │ │ +                "plot_bias(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test,\n",
│ │ │ +                "    feature=X_test[\"Gender\"],\n",
│ │ │ +                ")"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 10,
│ │ │ -            "id": "91d6a8f8-1108-4049-bdcf-044bcdbe2406",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Reliability Diagram'}, xlabel='prediction for E(Y|X)', ylabel='prediction - estimated E(Y|prediction)'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 10,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "1ac67348-f61a-49fe-b807-66b640e0c298",
│ │ │ +            "metadata": {},
│ │ │              "source": [
│ │ │ -                "plot_reliability_diagram(y_obs=y_obs, y_pred=y_pred, n_bootstrap=10, diagram_type=\"bias\")"
│ │ │ +                "#### Bias Conditional on LogWeeklyPay"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │ -            "execution_count": 11,
│ │ │ -            "id": "5a1c74bd-4a08-4799-974d-a72969119d7d",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ +            "execution_count": 22,
│ │ │ +            "id": "8c1eade0-cbc1-4919-8edd-a380491cc03d",
│ │ │ +            "metadata": {},
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │                          "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Plot y_pred'}, xlabel='binned model_3', ylabel='bias'>"
│ │ │ +                            "<Axes: title={'center': 'Bias Plot'}, xlabel='binned LogWeeklyPay', ylabel='bias'>"
│ │ │                          ]
│ │ │                      },
│ │ │ -                    "execution_count": 11,
│ │ │ +                    "execution_count": 22,
│ │ │                      "metadata": {},
│ │ │                      "output_type": "execute_result"
│ │ │                  },
│ │ │                  {
│ │ │                      "data": {
│ │ │ -                        "image/png": "",
│ │ │ +                        "image/png": "",
│ │ │                          "text/plain": [
│ │ │                              "<Figure size 640x480 with 1 Axes>"
│ │ │                          ]
│ │ │                      },
│ │ │                      "metadata": {},
│ │ │                      "output_type": "display_data"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "fig, ax = plt.subplots()\n",
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred[\"model_1\"], feature=y_pred[\"model_1\"], ax=ax)\n",
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred[\"model_2\"], feature=y_pred[\"model_2\"], ax=ax)\n",
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred[\"model_3\"], feature=y_pred[\"model_3\"], ax=ax)"
│ │ │ +                "plot_bias(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test,\n",
│ │ │ +                "    feature=X_test[\"LogWeeklyPay\"],\n",
│ │ │ +                ")"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 12,
│ │ │ -            "id": "4ff5377a-8a1c-4e04-aa93-3bb2ceb92de1",
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "e969d6df-c923-4733-b256-312e08a5ebf3",
│ │ │              "metadata": {},
│ │ │ -            "outputs": [],
│ │ │              "source": [
│ │ │ -                "n_obs = 100\n",
│ │ │ -                "y_obs = np.arange(n_obs)\n",
│ │ │ -                "y_pred = pl.DataFrame({\n",
│ │ │ -                "    \"model_1\": np.arange(n_obs) + 0.5,\n",
│ │ │ -                "    \"model_2\": (y_obs - 5)**2,\n",
│ │ │ -                "    \"model_3\": (y_obs - 3)**2,\n",
│ │ │ -                "})\n",
│ │ │ -                "# string\n",
│ │ │ -                "rng = np.random.default_rng(42)\n",
│ │ │ -                "feature_str = rng.integers(low=0, high=n_obs//2, size=n_obs).astype(str)"
│ │ │ +                "#### Bias Conditional on Age\n",
│ │ │ +                "Age is given as an integer in the data. We can pass `n_bins` to appropriate number to see all integer ages that occur in the test data."
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │ -            "execution_count": 13,
│ │ │ -            "id": "398a5eff-1fa4-4622-8903-575d046274fe",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ +            "execution_count": 23,
│ │ │ +            "id": "ed065707-1d71-41e0-8b4e-f70b4478c7db",
│ │ │ +            "metadata": {},
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Plot'}, xlabel='feature', ylabel='bias'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 13,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ +                        "image/png": "",
│ │ │                          "text/plain": [
│ │ │                              "<Figure size 640x480 with 1 Axes>"
│ │ │                          ]
│ │ │                      },
│ │ │                      "metadata": {},
│ │ │                      "output_type": "display_data"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "plot_bias(y_obs=y_obs, y_pred=y_pred, feature=feature_str)"
│ │ │ +                "ax = plot_bias(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test,\n",
│ │ │ +                "    feature=X_test[\"Age\"],\n",
│ │ │ +                "    n_bins=X_test[\"Age\"].nunique(),\n",
│ │ │ +                ")"
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 63,
│ │ │ -            "id": "184f2eb1-a083-49a5-9572-a7db87ba1479",
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "26e23556",
│ │ │              "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/html": [
│ │ │ -                            "<div>\n",
│ │ │ -                            "<style>\n",
│ │ │ -                            ".pl-dataframe > thead > tr > th {\n",
│ │ │ -                            "  text-align: right;\n",
│ │ │ -                            "}\n",
│ │ │ -                            "</style>\n",
│ │ │ -                            "\n",
│ │ │ -                            "<table border=\"1\" class=\"dataframe pl-dataframe\">\n",
│ │ │ -                            "<small>shape: (6,)</small>\n",
│ │ │ -                            "<thead>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<th>\n",
│ │ │ -                            "\n",
│ │ │ -                            "</th>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "f64\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "</thead>\n",
│ │ │ -                            "<tbody>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "null\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "null\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "22.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "12.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "6.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "</tbody>\n",
│ │ │ -                            "</table>\n",
│ │ │ -                            "</div>"
│ │ │ -                        ],
│ │ │ -                        "text/plain": [
│ │ │ -                            "shape: (6,)\n",
│ │ │ -                            "Series: '' [f64]\n",
│ │ │ -                            "[\n",
│ │ │ -                            "\tnull\n",
│ │ │ -                            "\tnull\n",
│ │ │ -                            "\t22.0\n",
│ │ │ -                            "\t12.0\n",
│ │ │ -                            "\t6.0\n",
│ │ │ -                            "\tNaN\n",
│ │ │ -                            "]"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 63,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                }
│ │ │ -            ],
│ │ │              "source": [
│ │ │ -                "# NaN and Null is not the same!\n",
│ │ │ -                "feature_missing = rng.integers(low=0, high=n_obs//2, size=n_obs).astype(float)\n",
│ │ │ -                "feature_missing[::5] = np.nan\n",
│ │ │ -                "feature_missing = pl.Series(feature_missing).set_at_idx([0, 1], None)\n",
│ │ │ -                "feature_missing.head(6)"
│ │ │ +                "## 4. Predictive Model Performance\n",
│ │ │ +                "### 4.1 Score Decomposition of the Gamma Deviance\n",
│ │ │ +                "We use the [Gamma deviance](https://lorentzenchr.github.io/model-diagnostics/reference/model_diagnostics/scoring/scoring/#model_diagnostics.scoring.scoring.GammaDeviance) and evaluate on the test set.\n",
│ │ │ +                "On top, we additively decompose the scores in terms of miscalibration (smaller is better), discrimination (larger is better) and uncertainty (property of the data, same for all models)."
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │ -            "execution_count": 64,
│ │ │ -            "id": "5a25b7d0-7d39-4d33-ab81-1032d5142e04",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ +            "execution_count": 24,
│ │ │ +            "id": "acd89e59-0f24-4ee4-8582-c19f5ebbc56a",
│ │ │ +            "metadata": {},
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │                          "text/html": [
│ │ │                              "<div>\n",
│ │ │                              "<style>\n",
│ │ │                              ".pl-dataframe > thead > tr > th {\n",
│ │ │                              "  text-align: right;\n",
│ │ │                              "}\n",
│ │ │                              "</style>\n",
│ │ │                              "\n",
│ │ │                              "<table border=\"1\" class=\"dataframe pl-dataframe\">\n",
│ │ │ -                            "<small>shape: (3, 6)</small>\n",
│ │ │ +                            "<small>shape: (4, 5)</small>\n",
│ │ │                              "<thead>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<th>\n",
│ │ │                              "model\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "\n",
│ │ │ +                            "miscalibration\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "bias_mean\n",
│ │ │ +                            "discrimination\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "bias_count\n",
│ │ │ +                            "uncertainty\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "bias_stderr\n",
│ │ │ -                            "</th>\n",
│ │ │ -                            "<th>\n",
│ │ │ -                            "p_value\n",
│ │ │ +                            "score\n",
│ │ │                              "</th>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │                              "str\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "u32\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</thead>\n",
│ │ │                              "<tbody>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_1&quot;\n",
│ │ │ +                            "&quot;Trivial&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "0.000901\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.5\n",
│ │ │ +                            "8.8818e-16\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "100\n",
│ │ │ +                            "5.086002\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "0.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "5.086903\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_2&quot;\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "&quot;OLS&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2764.0\n",
│ │ │ +                            "0.271994\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "100\n",
│ │ │ +                            "1.605604\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "266.059267\n",
│ │ │ +                            "5.086002\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "1.5552e-17\n",
│ │ │ +                            "3.752392\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "&quot;model_3&quot;\n",
│ │ │ +                            "&quot;GLM_Poisson&quot;\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "0.470965\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "1.624191\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "5.086002\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "3.932776\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "</tr>\n",
│ │ │ +                            "<tr>\n",
│ │ │ +                            "<td>\n",
│ │ │ +                            "&quot;HGBT_Poisson&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "2946.0\n",
│ │ │ +                            "0.088114\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "100\n",
│ │ │ +                            "1.696757\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "277.213877\n",
│ │ │ +                            "5.086002\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4.7070e-18\n",
│ │ │ +                            "3.477359\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</tbody>\n",
│ │ │                              "</table>\n",
│ │ │                              "</div>"
│ │ │                          ],
│ │ │                          "text/plain": [
│ │ │ -                            "shape: (3, 6)\n",
│ │ │ -                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ -                            "\u2502 model   \u2506     \u2506 bias_mean \u2506 bias_count \u2506 bias_stderr \u2506 p_value    \u2502\n",
│ │ │ -                            "\u2502 ---     \u2506 --- \u2506 ---       \u2506 ---        \u2506 ---         \u2506 ---        \u2502\n",
│ │ │ -                            "\u2502 str     \u2506 f64 \u2506 f64       \u2506 u32        \u2506 f64         \u2506 f64        \u2502\n",
│ │ │ -                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ -                            "\u2502 model_1 \u2506 NaN \u2506 0.5       \u2506 100        \u2506 0.0         \u2506 NaN        \u2502\n",
│ │ │ -                            "\u2502 model_2 \u2506 NaN \u2506 2764.0    \u2506 100        \u2506 266.059267  \u2506 1.5552e-17 \u2502\n",
│ │ │ -                            "\u2502 model_3 \u2506 NaN \u2506 2946.0    \u2506 100        \u2506 277.213877  \u2506 4.7070e-18 \u2502\n",
│ │ │ -                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │ +                            "shape: (4, 5)\n",
│ │ │ +                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ +                            "\u2502 model        \u2506 miscalibration \u2506 discrimination \u2506 uncertainty \u2506 score    \u2502\n",
│ │ │ +                            "\u2502 ---          \u2506 ---            \u2506 ---            \u2506 ---         \u2506 ---      \u2502\n",
│ │ │ +                            "\u2502 str          \u2506 f64            \u2506 f64            \u2506 f64         \u2506 f64      \u2502\n",
│ │ │ +                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ +                            "\u2502 Trivial      \u2506 0.000901       \u2506 8.8818e-16     \u2506 5.086002    \u2506 5.086903 \u2502\n",
│ │ │ +                            "\u2502 OLS          \u2506 0.271994       \u2506 1.605604       \u2506 5.086002    \u2506 3.752392 \u2502\n",
│ │ │ +                            "\u2502 GLM_Poisson  \u2506 0.470965       \u2506 1.624191       \u2506 5.086002    \u2506 3.932776 \u2502\n",
│ │ │ +                            "\u2502 HGBT_Poisson \u2506 0.088114       \u2506 1.696757       \u2506 5.086002    \u2506 3.477359 \u2502\n",
│ │ │ +                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │                          ]
│ │ │                      },
│ │ │ -                    "execution_count": 64,
│ │ │ +                    "execution_count": 24,
│ │ │                      "metadata": {},
│ │ │                      "output_type": "execute_result"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "compute_bias(y_obs=y_obs, y_pred=y_pred, feature=feature_missing)"
│ │ │ +                "import polars as pl\n",
│ │ │ +                "from model_diagnostics.scoring import GammaDeviance, decompose\n",
│ │ │ +                "\n",
│ │ │ +                "\n",
│ │ │ +                "gamma_deviance = GammaDeviance()\n",
│ │ │ +                "\n",
│ │ │ +                "df_list = []\n",
│ │ │ +                "for model in [\"Trivial\", \"OLS\", \"GLM_Poisson\", \"HGBT_Poisson\"]:\n",
│ │ │ +                "    df = decompose(\n",
│ │ │ +                "        scoring_function=gamma_deviance,\n",
│ │ │ +                "        y_obs=y_test,\n",
│ │ │ +                "        y_pred=df_pred_test[model],\n",
│ │ │ +                "    )\n",
│ │ │ +                "    df = df.with_columns(pl.lit(model).alias(\"model\"))\n",
│ │ │ +                "    df_list.append(df)\n",
│ │ │ +                "df = pl.concat(df_list).select(\n",
│ │ │ +                "    [\"model\", \"miscalibration\", \"discrimination\", \"uncertainty\", \"score\"]\n",
│ │ │ +                ")\n",
│ │ │ +                "df"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "8a34fbe9",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "First, the HGBT model has the best (smallest) overall Gamma deviance in column **score**.\n",
│ │ │ +                "We also see that the uncertainty term is model independent as it is a property of the data and the scoring function only.\n",
│ │ │ +                "Very typical for insurance claims, it is the largest component which shows the insurance claims happen to a large part by chance.\n",
│ │ │ +                "The deciding difference of the scores then stems from the miscalibration term.\n",
│ │ │ +                "Except for the trivial model, the HGBT model has the best (smallest) one.\n",
│ │ │ +                "The discrimination term (larger is better) is quite similar among the non-trivial models."
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "attachments": {},
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "9844e9ae-8bd9-4c91-9582-4051a9c467bc",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "### 4.2 Murphy Diagram\n",
│ │ │ +                "How does the ranking of the model performances change with other scoring functions?\n",
│ │ │ +                "Is one model dominating the others for a wide range of scoring functions?\n",
│ │ │ +                "Such questions can be handily answered by a Murphy diagram.\n",
│ │ │ +                "It plots the mean score for a wide range of elementary scoring functions, parametrized by `eta` on the x-axis.\n",
│ │ │ +                "We explicitly specify the `etas` to zoom into the range where differences can be spotted."
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │ -            "execution_count": 54,
│ │ │ -            "id": "8de61c41-d54d-4481-a014-7601ed177f3b",
│ │ │ +            "execution_count": 25,
│ │ │ +            "id": "2e4fa6e9-45a3-42a4-8035-496d7b2c7837",
│ │ │              "metadata": {
│ │ │                  "tags": []
│ │ │              },
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │ +                        "image/png": "",
│ │ │                          "text/plain": [
│ │ │ -                            "array([3, 0, 0, 3, 1, 3, 1, 0, 1, 0, 3, 0, 1, 3, 2, 3, 2, 3, 0, 3, 3, 2,\n",
│ │ │ -                            "       1, 0, 0, 3, 2, 0, 1, 2, 3, 3, 0, 3, 1, 3, 0, 0, 1, 2, 3, 1, 3, 1,\n",
│ │ │ -                            "       0, 3, 3, 0, 3, 0, 3, 0, 2, 1, 3, 3, 1, 3, 3, 1, 3, 1, 3, 0, 3, 3,\n",
│ │ │ -                            "       2, 0, 3, 0, 3, 1, 1, 1, 0, 3, 0, 2, 1, 2, 3, 3, 2, 3, 2, 3, 2, 0,\n",
│ │ │ -                            "       0, 3, 3, 2, 0, 1, 2, 3, 2, 1, 3, 2])"
│ │ │ +                            "<Figure size 640x480 with 1 Axes>"
│ │ │                          ]
│ │ │                      },
│ │ │ -                    "execution_count": 54,
│ │ │                      "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ +                    "output_type": "display_data"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "n_bins = 4\n",
│ │ │ +                "from model_diagnostics.scoring import SquaredError, plot_murphy_diagram\n",
│ │ │                  "\n",
│ │ │ -                "q = np.nanquantile(\n",
│ │ │ -                "    pl.Series(feature_missing).set_at_idx([0, 1], None),\n",
│ │ │ -                "    q=np.linspace(0 + 1, n_bins - 1, num=n_bins - 1) / n_bins, method=\"inverted_cdf\",\n",
│ │ │ -                ")\n",
│ │ │ -                "q = np.unique(q)\n",
│ │ │ -                "q\n",
│ │ │ -                "f_bin = np.digitize(feature_missing, bins=q, right=True)\n",
│ │ │                  "\n",
│ │ │ -                "pl.Series(f_bin)."
│ │ │ +                "ax = plot_murphy_diagram(\n",
│ │ │ +                "    y_obs=y_test,\n",
│ │ │ +                "    y_pred=df_pred_test.loc[:, [\"OLS\", \"GLM_Poisson\", \"HGBT_Poisson\"]],\n",
│ │ │ +                "    etas=np.linspace(1e4, 0.2e6, 1000),\n",
│ │ │ +                ")"
│ │ │ +            ]
│ │ │ +        },
│ │ │ +        {
│ │ │ +            "attachments": {},
│ │ │ +            "cell_type": "markdown",
│ │ │ +            "id": "d9555b45-baf1-426c-ac7b-9a4748e11e56",
│ │ │ +            "metadata": {},
│ │ │ +            "source": [
│ │ │ +                "We see that there is no clear winner.\n",
│ │ │ +                "Indeed, for other scoring functions like the squared error, the HGBT model is not the best performing one."
│ │ │              ]
│ │ │          },
│ │ │          {
│ │ │              "cell_type": "code",
│ │ │ -            "execution_count": 24,
│ │ │ -            "id": "ff29b135-5697-4add-9b38-8eb0319b06a4",
│ │ │ +            "execution_count": 26,
│ │ │ +            "id": "08a4e467-c3ec-4c98-8df7-5e32a12ba21f",
│ │ │              "metadata": {
│ │ │                  "tags": []
│ │ │              },
│ │ │              "outputs": [
│ │ │                  {
│ │ │                      "data": {
│ │ │                          "text/html": [
│ │ │ @@ -1026,32 +1719,38 @@
│ │ │                              "<style>\n",
│ │ │                              ".pl-dataframe > thead > tr > th {\n",
│ │ │                              "  text-align: right;\n",
│ │ │                              "}\n",
│ │ │                              "</style>\n",
│ │ │                              "\n",
│ │ │                              "<table border=\"1\" class=\"dataframe pl-dataframe\">\n",
│ │ │ -                            "<small>shape: (59, 4)</small>\n",
│ │ │ +                            "<small>shape: (4, 5)</small>\n",
│ │ │                              "<thead>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "feature\n",
│ │ │ +                            "model\n",
│ │ │ +                            "</th>\n",
│ │ │ +                            "<th>\n",
│ │ │ +                            "miscalibration\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "model_1\n",
│ │ │ +                            "discrimination\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "model_2\n",
│ │ │ +                            "uncertainty\n",
│ │ │                              "</th>\n",
│ │ │                              "<th>\n",
│ │ │ -                            "model_3\n",
│ │ │ +                            "score\n",
│ │ │                              "</th>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ +                            "str\n",
│ │ │ +                            "</td>\n",
│ │ │ +                            "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "f64\n",
│ │ │ @@ -1060,687 +1759,115 @@
│ │ │                              "f64\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</thead>\n",
│ │ │                              "<tbody>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "0.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "25.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "9.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "38.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "34.166667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1379.333333\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1498.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "36.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "53.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "3808.666667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "4004.666667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "6.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "43.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "2518.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "2674.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "41.0\n",
│ │ │ +                            "&quot;Trivial&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "5.5\n",
│ │ │ +                            "153239.910611\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │                              "0.0\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "16.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "21.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "372.666667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "440.666667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "25.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "34.166667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1418.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1536.666667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "48.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "28.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "929.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1025.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "42.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "33.833333\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1107.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "1224.333333\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "10.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "25.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "49.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "23.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "26.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "657.666667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "745.666667\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "...\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "...\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "...\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "...\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "65.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "3600.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "3844.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "43.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "67.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "3844.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "4096.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "70.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "4225.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "4489.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "4.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "86.25\n",
│ │ │ +                            "3.1899e9\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "6641.25\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "6968.25\n",
│ │ │ +                            "3.1900e9\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "&quot;OLS&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "75.5\n",
│ │ │ +                            "6.8568e7\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "4900.0\n",
│ │ │ +                            "4.4428e8\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "5184.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "46.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "86.0\n",
│ │ │ +                            "3.1899e9\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "6522.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "6848.5\n",
│ │ │ +                            "2.8142e9\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "&quot;GLM_Poisson&quot;\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "80.5\n",
│ │ │ +                            "3.8145e7\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "5625.0\n",
│ │ │ +                            "4.1404e8\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "5929.0\n",
│ │ │ +                            "3.1899e9\n",
│ │ │                              "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "85.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "6400.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "6724.0\n",
│ │ │ +                            "2.8140e9\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "22.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "88.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "6889.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "7225.0\n",
│ │ │ +                            "&quot;HGBT_Poisson&quot;\n",
│ │ │                              "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ +                            "2.7010e7\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "90.5\n",
│ │ │ +                            "3.9737e8\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "7225.0\n",
│ │ │ +                            "3.1899e9\n",
│ │ │                              "</td>\n",
│ │ │                              "<td>\n",
│ │ │ -                            "7569.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "NaN\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "95.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "8100.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "8464.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "</tr>\n",
│ │ │ -                            "<tr>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "2.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "98.5\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "8649.0\n",
│ │ │ -                            "</td>\n",
│ │ │ -                            "<td>\n",
│ │ │ -                            "9025.0\n",
│ │ │ +                            "2.8195e9\n",
│ │ │                              "</td>\n",
│ │ │                              "</tr>\n",
│ │ │                              "</tbody>\n",
│ │ │                              "</table>\n",
│ │ │                              "</div>"
│ │ │                          ],
│ │ │                          "text/plain": [
│ │ │ -                            "shape: (59, 4)\n",
│ │ │ -                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ -                            "\u2502 feature \u2506 model_1   \u2506 model_2     \u2506 model_3     \u2502\n",
│ │ │ -                            "\u2502 ---     \u2506 ---       \u2506 ---         \u2506 ---         \u2502\n",
│ │ │ -                            "\u2502 f64     \u2506 f64       \u2506 f64         \u2506 f64         \u2502\n",
│ │ │ -                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ -                            "\u2502 NaN     \u2506 0.5       \u2506 25.0        \u2506 9.0         \u2502\n",
│ │ │ -                            "\u2502 38.0    \u2506 34.166667 \u2506 1379.333333 \u2506 1498.0      \u2502\n",
│ │ │ -                            "\u2502 36.0    \u2506 53.5      \u2506 3808.666667 \u2506 4004.666667 \u2502\n",
│ │ │ -                            "\u2502 6.0     \u2506 43.5      \u2506 2518.0      \u2506 2674.0      \u2502\n",
│ │ │ -                            "\u2502 ...     \u2506 ...       \u2506 ...         \u2506 ...         \u2502\n",
│ │ │ -                            "\u2502 22.0    \u2506 88.5      \u2506 6889.0      \u2506 7225.0      \u2502\n",
│ │ │ -                            "\u2502 NaN     \u2506 90.5      \u2506 7225.0      \u2506 7569.0      \u2502\n",
│ │ │ -                            "\u2502 NaN     \u2506 95.5      \u2506 8100.0      \u2506 8464.0      \u2502\n",
│ │ │ -                            "\u2502 2.0     \u2506 98.5      \u2506 8649.0      \u2506 9025.0      \u2502\n",
│ │ │ -                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 24,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "df = y_pred.with_columns(pl.Series(\"feature\", feature_missing))\n",
│ │ │ -                "df.groupby(\"feature\").agg(pl.all().mean())"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 13,
│ │ │ -            "id": "bd8cd5c0-46ae-4a8c-9063-04e0d6d1f950",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/html": [
│ │ │ -                            "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"\u25b8\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"\u25be\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(random_state=0)</pre></div></div></div></div></div>"
│ │ │ -                        ],
│ │ │ -                        "text/plain": [
│ │ │ -                            "LogisticRegression(random_state=0)"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 13,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "import pandas as pd\n",
│ │ │ -                "import pyarrow as pa\n",
│ │ │ -                "from sklearn.datasets import make_classification\n",
│ │ │ -                "from sklearn.model_selection import train_test_split\n",
│ │ │ -                "from sklearn.linear_model import LogisticRegression\n",
│ │ │ -                "from sklearn.calibration import calibration_curve, CalibrationDisplay\n",
│ │ │ -                "\n",
│ │ │ -                "\n",
│ │ │ -                "X, y = make_classification(random_state=0)\n",
│ │ │ -                "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)\n",
│ │ │ -                "clf = LogisticRegression(random_state=0)\n",
│ │ │ -                "clf.fit(X_train, y_train)"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 14,
│ │ │ -            "id": "dd770b2c-030f-4bd4-976f-620743695a06",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<sklearn.calibration.CalibrationDisplay at 0x12e403ac0>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 14,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "y_prob = clf.predict_proba(X_test)[:, 1]\n",
│ │ │ -                "prob_true, prob_pred = calibration_curve(y_test, y_prob, n_bins=10)\n",
│ │ │ -                "disp = CalibrationDisplay(prob_true, prob_pred, y_prob)\n",
│ │ │ -                "disp.plot()"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": null,
│ │ │ -            "id": "809d979e-d27b-4894-a0f9-920b4b19cd3b",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [],
│ │ │ -            "source": [
│ │ │ -                "from model_diagnostics.calibration import plot_reliability_diagram"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 16,
│ │ │ -            "id": "70f3ad03-83ea-4756-83d4-807cbe56d437",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Reliability Diagram'}, xlabel='prediction for E(Y|X)', ylabel='estimated E(Y|prediction)'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 16,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "plot_reliability_diagram(y_test, y_prob)"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 17,
│ │ │ -            "id": "3ddd7979-7e23-4b19-aeee-7177c7531152",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Reliability Diagram'}, xlabel='prediction for E(Y|X)', ylabel='estimated E(Y|prediction)'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 17,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "plot_reliability_diagram(y_test, y_prob, n_bootstrap=100)"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 18,
│ │ │ -            "id": "2ca9e438-f2b3-4a0c-8d73-b98c80136e36",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Reliability Diagram'}, xlabel='prediction for E(Y|X)', ylabel='prediction - estimated E(Y|prediction)'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 18,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "plot_reliability_diagram(y_test, y_prob, n_bootstrap=100, diagram_type=\"bias\")"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 19,
│ │ │ -            "id": "7efeebfa-b37d-46a2-bd31-27a667099f0d",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Reliability Diagram'}, xlabel='prediction for E(Y|X)', ylabel='estimated E(Y|prediction)'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 19,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "X, y = make_classification(n_samples=100_000, random_state=0)\n",
│ │ │ -                "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)\n",
│ │ │ -                "clf = LogisticRegression(random_state=0)\n",
│ │ │ -                "clf.fit(X_train, y_train)\n",
│ │ │ -                "plot_reliability_diagram(y_test, clf.predict_proba(X_test)[:, 1], n_bootstrap=100)"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 20,
│ │ │ -            "id": "bd8b29d7-ef08-4f68-a618-c5fa0defb00d",
│ │ │ -            "metadata": {
│ │ │ -                "tags": []
│ │ │ -            },
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Reliability Diagram'}, xlabel='prediction for E(Y|X)', ylabel='prediction - estimated E(Y|prediction)'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 20,
│ │ │ +                            "shape: (4, 5)\n",
│ │ │ +                            "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n",
│ │ │ +                            "\u2502 model        \u2506 miscalibration \u2506 discrimination \u2506 uncertainty \u2506 score    \u2502\n",
│ │ │ +                            "\u2502 ---          \u2506 ---            \u2506 ---            \u2506 ---         \u2506 ---      \u2502\n",
│ │ │ +                            "\u2502 str          \u2506 f64            \u2506 f64            \u2506 f64         \u2506 f64      \u2502\n",
│ │ │ +                            "\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n",
│ │ │ +                            "\u2502 Trivial      \u2506 153239.910611  \u2506 0.0            \u2506 3.1899e9    \u2506 3.1900e9 \u2502\n",
│ │ │ +                            "\u2502 OLS          \u2506 6.8568e7       \u2506 4.4428e8       \u2506 3.1899e9    \u2506 2.8142e9 \u2502\n",
│ │ │ +                            "\u2502 GLM_Poisson  \u2506 3.8145e7       \u2506 4.1404e8       \u2506 3.1899e9    \u2506 2.8140e9 \u2502\n",
│ │ │ +                            "\u2502 HGBT_Poisson \u2506 2.7010e7       \u2506 3.9737e8       \u2506 3.1899e9    \u2506 2.8195e9 \u2502\n",
│ │ │ +                            "\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"
│ │ │ +                        ]
│ │ │ +                    },
│ │ │ +                    "execution_count": 26,
│ │ │                      "metadata": {},
│ │ │                      "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │                  }
│ │ │              ],
│ │ │              "source": [
│ │ │ -                "plot_reliability_diagram(y_test, clf.predict_proba(X_test)[:, 1], n_bootstrap=100, diagram_type=\"bias\")"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": null,
│ │ │ -            "id": "dab3efc8-43ae-4abf-9a18-09db7ceb4fd7",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [],
│ │ │ -            "source": [
│ │ │ -                "from model_diagnostics.calibration import plot_bias"
│ │ │ +                "df_list = []\n",
│ │ │ +                "for model in [\"Trivial\", \"OLS\", \"GLM_Poisson\", \"HGBT_Poisson\"]:\n",
│ │ │ +                "    df = decompose(\n",
│ │ │ +                "        scoring_function=SquaredError(),\n",
│ │ │ +                "        y_obs=y_test,\n",
│ │ │ +                "        y_pred=df_pred_test[model],\n",
│ │ │ +                "    )\n",
│ │ │ +                "    df = df.with_columns(pl.lit(model).alias(\"model\"))\n",
│ │ │ +                "    df_list.append(df)\n",
│ │ │ +                "pl.concat(df_list)[:, [-1, 0, 1, 2, 3]]"
│ │ │              ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": 22,
│ │ │ -            "id": "3693a2bb-1df8-467c-b0a1-904186effac7",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Axes: title={'center': 'Bias Plot'}, xlabel='binned feature', ylabel='bias'>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "execution_count": 22,
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "execute_result"
│ │ │ -                },
│ │ │ -                {
│ │ │ -                    "data": {
│ │ │ -                        "image/png": "",
│ │ │ -                        "text/plain": [
│ │ │ -                            "<Figure size 640x480 with 1 Axes>"
│ │ │ -                        ]
│ │ │ -                    },
│ │ │ -                    "metadata": {},
│ │ │ -                    "output_type": "display_data"
│ │ │ -                }
│ │ │ -            ],
│ │ │ -            "source": [
│ │ │ -                "plot_bias(\n",
│ │ │ -                "    y_obs=y_test,\n",
│ │ │ -                "    y_pred=clf.predict_proba(X_test)[:, 1],\n",
│ │ │ -                "    feature=X_test[:, 0],\n",
│ │ │ -                ")"
│ │ │ -            ]
│ │ │ -        },
│ │ │ -        {
│ │ │ -            "cell_type": "code",
│ │ │ -            "execution_count": null,
│ │ │ -            "id": "7750eeb3-0ae6-4ff5-8853-4148930e9e4c",
│ │ │ -            "metadata": {},
│ │ │ -            "outputs": [],
│ │ │ -            "source": []
│ │ │          }
│ │ │      ],
│ │ │      "metadata": {
│ │ │          "kernelspec": {
│ │ │              "display_name": "Python 3 (ipykernel)",
│ │ │              "language": "python",
│ │ │              "name": "python3"
│ │ │ @@ -1752,12 +1879,17 @@
│ │ │              },
│ │ │              "file_extension": ".py",
│ │ │              "mimetype": "text/x-python",
│ │ │              "name": "python",
│ │ │              "nbconvert_exporter": "python",
│ │ │              "pygments_lexer": "ipython3",
│ │ │              "version": "3.10.8"
│ │ │ +        },
│ │ │ +        "vscode": {
│ │ │ +            "interpreter": {
│ │ │ +                "hash": "96b0fa0ec69a2f08511d770c35d8e462f16e1f34df81292631ff071c65461c9e"
│ │ │ +            }
│ │ │          }
│ │ │      },
│ │ │      "nbformat": 4,
│ │ │      "nbformat_minor": 5
│ │ │  }
│ │   --- model_diagnostics-0.1.1/.ruff_cache/content/5b39456bcf061686
│ ├── +++ model_diagnostics-0.2.0/.ruff_cache/content/5b39456bcf061686
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/.ruff_cache/content/5d9618642e148b6d
│ ├── +++ model_diagnostics-0.2.0/.ruff_cache/content/5d9618642e148b6d
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/.ruff_cache/content/81412ce5ba721a54
│ ├── +++ model_diagnostics-0.2.0/.ruff_cache/content/81412ce5ba721a54
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/.ruff_cache/content/9311a32d581056da
│ ├── +++ model_diagnostics-0.2.0/.ruff_cache/content/9311a32d581056da
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/.ruff_cache/content/a0d7ef002976fee4
│ ├── +++ model_diagnostics-0.2.0/.ruff_cache/content/a0d7ef002976fee4
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/.ruff_cache/content/b0c9922f8a756096
│ ├── +++ model_diagnostics-0.2.0/.ruff_cache/content/b0c9922f8a756096
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/.ruff_cache/content/fcf9e0b50a771c04
│ ├── +++ model_diagnostics-0.2.0/.ruff_cache/content/fcf9e0b50a771c04
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/docs/development.md
│ ├── +++ model_diagnostics-0.2.0/docs/development.md
│ │┄ Files 10% similar despite different names
│ │ @@ -1,12 +1,13 @@
│ │  # Development
│ │  
│ │  Applied principles are:
│ │  
│ │ -- Test driven development (TDD)
│ │ +- Trunk-based development 
│ │ +- Test driven development (TDD) (in spirit)
│ │  - Open source, community contributions are warmly welcome
│ │  - Continuous integration (CI) automation
│ │  
│ │  ## Tools
│ │  
│ │  We use [hatch](https://hatch.pypa.io) as project management tool.
│ │  Environments and scripts are defined in the file `pyproject.toml`.
│ │ @@ -29,15 +30,15 @@
│ │  This will require credentials for <https://test.pypi.org> and <https://pypi.org>.
│ │  
│ │  - Create a new pull request (PR) and set the new `version` in `__about__.py`.
│ │  - Merge the PR on github and sync locally
│ │    - `git checkout main`
│ │    - `git pull origin main` (origin might be upstream)
│ │  - Create annotated git tag on branch main for the current commit (not needed for release candidates):
│ │ -  `git tag -a v1.4 -m "my version 1.4"`
│ │ +  `git tag -a v1.4.0 -m "Release v1.4.0"`
│ │  - Push the annotated tag: `git push origin <tag_name>`.
│ │    Note that `origin` might be to be replaced by `upstream` depending on your setup.
│ │  - Run `hatch build`.
│ │  - (Optional) Create a github release with the new tag and upload the build artifacts.
│ │  - Publish build artifacts on test.pypi: `hatch publish -r test`
│ │  - Verify the release on test.pypi (best done in some virtual environment):
│ │    `python3 -m pip install --index-url https://test.pypi.org/simple/ --no-deps model-diagnostics`
│ │   --- model_diagnostics-0.1.1/docs/gen_ref_pages.py
│ ├── +++ model_diagnostics-0.2.0/docs/gen_ref_pages.py
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/docs/index.md
│ ├── +++ model_diagnostics-0.2.0/docs/index.md
│ │┄ Files 8% similar despite different names
│ │ @@ -1,27 +1,29 @@
│ │  # model-diagnostics
│ │  
│ │  | | |
│ │  | --- | --- |
│ │ -| CI/CD |[![CI - Test](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml)
│ │ +| CI/CD |[![CI - Test](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml) [![Coverage](https://codecov.io/github/lorentzenchr/model-diagnostics/coverage.svg?branch=main)](https://codecov.io/gh/lorentzenchr/model-diagnostics)
│ │  | Docs | [![Docs](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/docs.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/docs.yml)
│ │  | Package | [![PyPI - Version](https://img.shields.io/pypi/v/model-diagnostics.svg?logo=pypi&label=PyPI&logoColor=gold)](https://pypi.org/project/model-diagnostics/) [![PyPI - Downloads](https://img.shields.io/pypi/dm/model-diagnostics.svg?color=blue&label=Downloads&logo=pypi&logoColor=gold)](https://pypi.org/project/model-diagnostics/) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/model-diagnostics.svg?logo=python&label=Python&logoColor=gold)](https://pypi.org/project/model-diagnostics/) |
│ │  | Meta | [![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch) [![linting - Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v0.json)](https://github.com/charliermarsh/ruff) [![code style - black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![types - Mypy](https://img.shields.io/badge/types-Mypy-blue.svg)](https://github.com/python/mypy) [![License - MIT](https://img.shields.io/badge/license-MIT-9400d3.svg)](https://spdx.org/licenses/)
│ │  
│ │  ## Tools for diagnostics and assessment of (machine learning) models
│ │  
│ │  Highlights:
│ │  
│ │ -- Assess model calibration with identification functions (generalized residuals).
│ │ -- Assess calibration graphically
│ │ -    - reliability diagrams for auto-calibration
│ │ -    - bias plots for conditional calibration
│ │ +- Assess model calibration with [identification functions][model_diagnostics.calibration.identification.identification_function] (generalized residuals).
│ │ +- Assess calibration and bias graphically
│ │ +    - [reliability diagrams][model_diagnostics.calibration.plots.plot_reliability_diagram] for auto-calibration
│ │ +    - [bias plots][model_diagnostics.calibration.plots.plot_bias] for conditional calibration
│ │  - Assess the predictive performance of models
│ │      - strictly consistent, homogeneous scoring functions
│ │ -    - score decomposition into miscalibration, discrimination and uncertainty
│ │ +    - [score decomposition][model_diagnostics.scoring.decompose] into miscalibration, discrimination and uncertainty
│ │ +
│ │ +This package relies on the giant shoulders of, among others, [polars](https://pola.rs/), [matplotlib](https://matplotlib.org), [scipy](https://scipy.org) and [scikit-learn](https://scikit-learn.org).
│ │  
│ │  ## Installation
│ │  
│ │  `pip install model-diagnostics`
│ │  
│ │  ## Contributions
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/__about__.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/__about__.py
│ │┄ Files 2% similar despite different names
│ │ @@ -10,8 +10,8 @@
│ │  #   X.Y.ZbN   # Beta release
│ │  #   X.Y.ZrcN  # Release Candidate
│ │  #   X.Y.Z     # Final release
│ │  #
│ │  # Dev branch marker is: 'X.Y.dev' or 'X.Y.devN' where N is an integer.
│ │  # 'X.Y.dev0' is the canonical version of 'X.Y.dev'
│ │  #
│ │ -__version__ = "0.1.1"
│ │ +__version__ = "0.2.0"
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/_utils/_array.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/_utils/_array.py
│ │┄ Files 5% similar despite different names
│ │ @@ -103,16 +103,16 @@
│ │          name = a.name
│ │      elif hasattr(a, "_name"):
│ │          # pyarrow Array / ChunkedArray
│ │          name = a._name  # noqa: SLF001
│ │      else:
│ │          name = default
│ │  
│ │ -    if name is None:
│ │ -        # The name attribute could be None, at least for pandas.Series.
│ │ +    if name is None or not name:  # not name is same as name == ""
│ │ +        # The name attribute could be None, at least for pandas.Series, or "".
│ │          name = default
│ │  
│ │      return name
│ │  
│ │  
│ │  def get_array_min_max(a: npt.ArrayLike):
│ │      """Get min and max over all elements of ArrayLike.
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/_utils/tests/test_array.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/_utils/tests/test_array.py
│ │┄ Files 4% similar despite different names
│ │ @@ -210,14 +210,21 @@
│ │  def test_array_name_none():
│ │      """Test that array_name gives default if name is None."""
│ │      a = pd.Series([1, 2])  # We dont set name is Series => it is None.
│ │      assert array_name(a, default="default") == "default"
│ │      assert array_name(None, default="default")
│ │  
│ │  
│ │ +def test_array_name_empty_string():
│ │ +    """Test that array_name gives default if name is empty string."""
│ │ +    a = pl.Series(name="", values=[1, 2])
│ │ +    assert array_name(a, default="default") == "default"
│ │ +    assert not array_name(a, default="")  # test for empty string ""
│ │ +
│ │ +
│ │  @pytest.mark.parametrize(
│ │      "a",
│ │      [
│ │          (0, 1, 99),
│ │          [0, 1, 99],
│ │          [[0, 1], [2, 99]],
│ │          np.array([0, 1, 99]),
│ │ @@ -258,9 +265,9 @@
│ │              "model_2": [0, 1],
│ │              "model_3": [1, 1],
│ │              "model_1": [2, 1],
│ │              "": [2, 2],
│ │          }
│ │      )
│ │      names, indices = get_sorted_array_names(y_pred)
│ │ -    assert names == ["model_2", "model_3", "model_1", ""]
│ │ +    assert names == ["model_2", "model_3", "model_1", "3"]
│ │      assert indices == [3, 2, 0, 1]
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/calibration/identification.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/calibration/identification.py
│ │┄ Files 3% similar despite different names
│ │ @@ -78,15 +78,15 @@
│ │      For `level` \(\alpha\).
│ │  
│ │      References
│ │      ----------
│ │      `[Gneiting2011]`
│ │  
│ │      :   T. Gneiting.
│ │ -        "Making and Evaluating Point Forecasts”. (2011)
│ │ +        "Making and Evaluating Point Forecasts". (2011)
│ │          [doi:10.1198/jasa.2011.r10138](https://doi.org/10.1198/jasa.2011.r10138)
│ │          [arxiv:0912.0902](https://arxiv.org/abs/0912.0902)
│ │  
│ │      Examples
│ │      --------
│ │      >>> identification_function(y_obs=[0, 0, 1, 1], y_pred=[-1, 1, 1 , 2])
│ │      array([-1,  1,  0,  1])
│ │ @@ -161,15 +161,16 @@
│ │          The level of the expectile of quantile. (Often called \(\alpha\).)
│ │          It must be `0 < level < 1`.
│ │          `level=0.5` and `functional="expectile"` gives the mean.
│ │          `level=0.5` and `functional="quantile"` gives the median.
│ │      n_bins : int
│ │          The number of bins for numerical features and the maximal number of (most
│ │          frequent) categories shown for categorical features. Due to ties, the effective
│ │ -        number of bins might be smaller than `n_bins`.
│ │ +        number of bins might be smaller than `n_bins`. Null values are always included
│ │ +        in the output, accounting for one bin. NaN values are treated as null values.
│ │  
│ │      Returns
│ │      -------
│ │      df : polars.DataFrame
│ │          The result table contains at least the columns:
│ │  
│ │          - `bias_mean`: Mean of the bias
│ │ @@ -191,25 +192,25 @@
│ │      \(\bar{V} = \frac{1}{n_a}\sum_{i \text{ with }x_i=a} V(m(a), y_i)\) with
│ │      \(n_a=\sum_{i \text{ with }x_i=a}\) and the same with `"b"`.
│ │      With case weights, this reads
│ │      \(\bar{V} = \frac{1}{\sum_i w_i}\sum_i w_i \phi(x_i) V(m(x_i), y_i)\).
│ │      This generalises the classical residual (up to a minus sign) for target functionals
│ │      other than the mean. See `[FLM2022]`.
│ │  
│ │ -    The standard error for \(\bar{V}\) is caluclated in the standard way as
│ │ +    The standard error for \(\bar{V}\) is calculated in the standard way as
│ │      \(\mathrm{SE} = \sqrt{\operatorname{Var}(\bar{V})} = \frac{\sigma}{\sqrt{n}}\) and
│ │      the standard variance estimator for \(\sigma^2 = \operatorname{Var}(\phi(x_i)
│ │      V(m(x_i), y_i))\) with Bessel correction, i.e. division by \(n-1\) instead of
│ │      \(n\).
│ │  
│ │      With case weights, the variance estimator becomes \(\operatorname{Var}(\bar{V})
│ │      = \frac{1}{n-1} \frac{1}{\sum_i w_i} \sum_i w_i (V(m(x_i), y_i) - \bar{V})^2\) with
│ │      the implied relation \(\operatorname{Var}(V(m(x_i), y_i)) \sim \frac{1}{w_i} \).
│ │      If your weights are for repeated observations, so-called frequency weights, then
│ │ -    the above estimate is on the conservative side because it uses \(n - 1\) instead
│ │ +    the above estimate is conservative because it uses \(n - 1\) instead
│ │      of \((\sum_i w_i) - 1\).
│ │  
│ │      References
│ │      ----------
│ │      `[FLM2022]`
│ │  
│ │      :   T. Fissler, C. Lorentzen, and M. Mayer.
│ │ @@ -251,15 +252,14 @@
│ │              raise ValueError(msg)
│ │      else:
│ │          w = np.ones_like(y_obs, dtype=float)
│ │  
│ │      df_list = []
│ │      with pl.StringCache():
│ │          is_categorical = False
│ │ -        is_numeric = False
│ │          is_string = False
│ │  
│ │          if feature is None:
│ │              feature_name = None
│ │          else:
│ │              feature_name = array_name(feature, default="feature")
│ │              # The following statement, i.e. possibly the creation of a pl.Categorical,
│ │ @@ -268,64 +268,77 @@
│ │              validate_same_first_dimension(y_obs, feature)
│ │              if feature.dtype is pl.Categorical:
│ │                  is_categorical = True
│ │              elif feature.dtype in [pl.Utf8, pl.Object]:
│ │                  # We could convert strings to categoricals.
│ │                  is_string = True
│ │              elif feature.is_float():
│ │ -                is_numeric = True
│ │                  # We treat NaN as Null values, numpy will see a Null as a NaN.
│ │                  if feature.is_float():
│ │                      feature = feature.fill_nan(None)
│ │              else:
│ │                  # integers
│ │ -                is_numeric = True
│ │ +                pass
│ │  
│ │              if is_categorical or is_string:
│ │                  # For categorical and string features, knowing the frequency table in
│ │                  # advance makes life easier in order to make results consistent.
│ │                  # Consider
│ │                  #     feature  counts
│ │                  #         "a"      3
│ │                  #         "b"      2
│ │                  #         "c"      2
│ │                  #         "d"      1
│ │                  # with n_bins = 2. As we want the effective number of bins to be at
│ │                  # most n_bins, we want, in the above case, only "a" in the final
│ │                  # result. Therefore, we need to internally decrease n_bins to 1.
│ │ -                value_count = feature.value_counts(sort=True)
│ │ -                if n_bins >= value_count.shape[0]:
│ │ +                if feature.null_count() == 0:
│ │ +                    value_count = feature.value_counts(sort=True)
│ │ +                    n_bins_ef = n_bins
│ │ +                else:
│ │ +                    value_count = feature.drop_nulls().value_counts(sort=True)
│ │ +                    n_bins_ef = n_bins - 1
│ │ +
│ │ +                if n_bins_ef >= value_count.shape[0]:
│ │                      n_bins = value_count.shape[0]
│ │                  else:
│ │ -                    n = value_count["counts"][n_bins]
│ │ +                    n = value_count["counts"][n_bins_ef]
│ │                      n_bins_tmp = value_count.filter(pl.col("counts") >= n).shape[0]
│ │ -                    if n_bins_tmp > n_bins:
│ │ +                    if n_bins_tmp > n_bins_ef:
│ │                          n_bins = value_count.filter(pl.col("counts") > n).shape[0]
│ │                      else:
│ │                          n_bins = n_bins_tmp
│ │ +
│ │ +                if feature.null_count() >= 1:
│ │ +                    n_bins += 1
│ │ +
│ │                  if n_bins == 0:
│ │                      msg = (
│ │                          "Due to ties, the effective number of bins is 0. "
│ │                          f"Consider to increase n_bins>={n_bins_tmp}."
│ │                      )
│ │                      warnings.warn(msg, UserWarning)
│ │              else:
│ │                  # Binning
│ │                  # We use method="inverted_cdf" (same as "lower") instead of the
│ │                  # default "linear" because "linear" produces as many unique values
│ │                  # as before.
│ │ +                # If we have Null values, we should reserve one bin for it and reduce
│ │ +                # the effective number of bins by 1.
│ │ +                n_bins_ef = max(1, n_bins - (feature.null_count() >= 1))
│ │                  q = np.nanquantile(
│ │                      feature,
│ │ -                    # Improved rounding errors by using integers inside linspace.
│ │ -                    q=np.linspace(0 + 1, n_bins - 1, num=n_bins - 1) / n_bins,
│ │ +                    # Improved rounding errors by using integers and dividing at the
│ │ +                    # end as opposed to np.linspace with 1/n_bins step size.
│ │ +                    q=np.arange(1, n_bins_ef) / n_bins_ef,
│ │                      method="inverted_cdf",
│ │ -                )  # type: ignore
│ │ +                )
│ │                  q = np.unique(q)  # Some quantiles might be the same.
│ │                  # We want: bins[i-1] < x <= bins[i]
│ │ -                f_binned = np.digitize(feature, bins=q, right=True)  # type: ignore
│ │ +                f_binned = np.digitize(feature, bins=q, right=True)
│ │                  # Now, we insert Null values again at the original places.
│ │                  f_binned = (
│ │                      pl.LazyFrame(
│ │                          [
│ │                              pl.Series("__f_binned", f_binned, dtype=feature.dtype),
│ │                              feature,
│ │                          ]
│ │ @@ -419,20 +432,28 @@
│ │                              pl.when(pl.col("bias_count") > 1)
│ │                              .then(pl.col("variance") / (pl.col("bias_count") - 1))
│ │                              .otherwise(pl.col("variance"))
│ │                              .sqrt()
│ │                              .alias("bias_stderr"),
│ │                          ]
│ │                      )
│ │ -                    .sort("bias_count", descending=True)
│ │ +                    # With sort and head alone, we could lose the null value, but we
│ │ +                    # want to keep it.
│ │ +                    # .sort("bias_count", descending=True)
│ │ +                    # .head(n_bins)
│ │ +                    .with_columns(
│ │ +                        pl.when(pl.col(feature_name).is_null())
│ │ +                        .then(pl.max("bias_count") + 1)
│ │ +                        .otherwise(pl.col("bias_count"))
│ │ +                        .alias("__priority")
│ │ +                    )
│ │ +                    .sort("__priority", descending=True)
│ │                      .head(n_bins)
│ │                      .sort(feature_name, descending=False)
│ │                  )
│ │ -                if is_numeric:
│ │ -                    df = df.drop("bin")
│ │  
│ │                  df = df.select(
│ │                      [
│ │                          pl.col(feature_name),
│ │                          pl.col("bias_mean"),
│ │                          pl.col("bias_count"),
│ │                          pl.col("bias_weights"),
│ │ @@ -452,14 +473,16 @@
│ │              # Add column with p-value of 2-sided t-test.
│ │              # We explicitly convert "to_numpy", because otherwise we get:
│ │              #   RuntimeWarning: A builtin ctypes object gave a PEP3118 format string
│ │              #   that does not match its itemsize, so a best-guess will be made of the
│ │              #   data type. Newer versions of python may behave correctly.
│ │              stderr_ = df.get_column("bias_stderr")
│ │              p_value = np.full_like(stderr_, fill_value=np.nan)
│ │ +            n = df.get_column("bias_count")
│ │ +            p_value[(n > 1) & (stderr_ == 0)] = 0
│ │              mask = stderr_ > 0
│ │              x = df.get_column("bias_mean").filter(mask).to_numpy()
│ │              n = df.get_column("bias_count").filter(mask).to_numpy()
│ │              stderr = stderr_.filter(mask).to_numpy()
│ │              # t-statistic t (-|t| and factor of 2 because of 2-sided test)
│ │              p_value[mask] = 2 * special.stdtr(
│ │                  n - 1,  # degrees of freedom
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/calibration/plots.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/calibration/plots.py
│ │┄ Files 17% similar despite different names
│ │ @@ -1,7 +1,8 @@
│ │ +import warnings
│ │  from functools import partial
│ │  from typing import Optional
│ │  
│ │  import matplotlib as mpl
│ │  import matplotlib.pyplot as plt
│ │  import numpy as np
│ │  import numpy.typing as npt
│ │ @@ -28,15 +29,15 @@
│ │      n_bootstrap: Optional[str] = None,
│ │      confidence_level: float = 0.9,
│ │      diagram_type: str = "reliability",
│ │      ax: Optional[mpl.axes.Axes] = None,
│ │  ):
│ │      r"""Plot a reliability diagram.
│ │  
│ │ -    A reliability diagram or calibration curve assess auto-calibration. It plots the
│ │ +    A reliability diagram or calibration curve assesses auto-calibration. It plots the
│ │      conditional expectation given the predictions `E(y_obs|y_pred)` (y-axis) vs the
│ │      predictions `y_pred` (x-axis).
│ │      The conditional expectation is estimated via isotonic regression (PAV algorithm)
│ │      of `y_obs` on `y_pred`.
│ │      See Notes for further details.
│ │  
│ │      Parameters
│ │ @@ -211,14 +212,18 @@
│ │  
│ │      This plots the generalised bias (residuals), i.e. the values of the canonical
│ │      identification function, versus a feature. This is a good way to assess whether
│ │      a model is conditionally calibrated or not. Well calibrated models have bias terms
│ │      around zero.
│ │      See Notes for further details.
│ │  
│ │ +    For numerical features, NaN are treated as Null values. Null values are always
│ │ +    plotted as rightmost value on the x-axis and marked with a diamond instead of a
│ │ +    dot.
│ │ +
│ │      Parameters
│ │      ----------
│ │      y_obs : array-like of shape (n_obs)
│ │          Observed values of the response variable.
│ │          For binary classification, y_obs is expected to be in the interval [0, 1].
│ │      y_pred : array-like of shape (n_obs) or (n_obs, n_models)
│ │          Predicted values of the conditional expectation of Y, `E(Y|X)`.
│ │ @@ -254,15 +259,15 @@
│ │      -------
│ │      ax
│ │  
│ │      Notes
│ │      -----
│ │      A model \(m(X)\) is conditionally calibrated iff \(E(V(m(X), Y))=0\) a.s. The
│ │      empirical version, given some data, reads \(\frac{1}{n}\sum_i V(m(x_i), y_i)\).
│ │ -    This generali. See [FLM2022]`.
│ │ +    See [FLM2022]`.
│ │  
│ │      References
│ │      ----------
│ │      `FLM2022`
│ │  
│ │      :   T. Fissler, C. Lorentzen, and M. Mayer.
│ │          "Model Comparison and Calibration Assessment". (2022)
│ │ @@ -277,26 +282,36 @@
│ │          feature=feature,
│ │          weights=weights,
│ │          functional=functional,
│ │          level=level,
│ │          n_bins=n_bins,
│ │      )
│ │  
│ │ +    if df["bias_stderr"].fill_nan(None).null_count() > 0 and with_errorbars:
│ │ +        msg = (
│ │ +            "Some values of 'bias_stderr' are null. Therefore no error bars are "
│ │ +            "shown for that y_pred/model, despite the fact that with_errorbars was "
│ │ +            "set to True."
│ │ +        )
│ │ +        warnings.warn(msg, UserWarning)
│ │ +
│ │      if "model_" in df.columns:
│ │          col_model = "model_"
│ │      elif "model" in df.columns:
│ │          col_model = "model"
│ │      else:
│ │          col_model = None
│ │  
│ │      if feature is None:
│ │          # We treat the predictions from different models as a feature.
│ │          feature_name = col_model
│ │ +        feature_has_nulls = False
│ │      else:
│ │          feature_name = array_name(feature, default="feature")
│ │ +        feature_has_nulls = df[feature_name].null_count() > 0
│ │  
│ │      is_categorical = False
│ │      is_string = False
│ │      if df.get_column(feature_name).dtype is pl.Categorical:
│ │          is_categorical = True
│ │      elif df.get_column(feature_name).dtype in [pl.Utf8, pl.Object]:
│ │          is_string = True
│ │ @@ -309,65 +324,129 @@
│ │      # bias plot
│ │      if feature is None or col_model is None:
│ │          pred_names = [None]
│ │      else:
│ │          # pred_names = df[col_model].unique() this automatically sorts
│ │          pred_names, _ = get_sorted_array_names(y_pred)
│ │      n_models = len(pred_names)
│ │ -    with_label = feature is not None and n_models >= 2
│ │ +    with_label = feature is not None and (n_models >= 2 or feature_has_nulls)
│ │ +
│ │ +    if (is_string or is_categorical) and feature_has_nulls:
│ │ +        # We want the Null values at the end and therefore sort again.
│ │ +        df = df.sort(feature_name, descending=False, nulls_last=True)
│ │  
│ │      for i, m in enumerate(pred_names):
│ │          filter_condition = True if m is None else pl.col(col_model) == m
│ │          df_i = df.filter(filter_condition)
│ │          label = m if with_label else None
│ │  
│ │ -        if df_i["bias_stderr"].null_count() > 0 or with_errorbars is False:
│ │ -            if is_string or is_categorical:
│ │ -                ax.plot(df_i[feature_name], df_i["bias_mean"], "o", label=label)
│ │ -            else:
│ │ -                ax.plot(df_i[feature_name], df_i["bias_mean"], "o-", label=label)
│ │ -        elif is_string or is_categorical:
│ │ +        if df_i["bias_stderr"].null_count() > 0:
│ │ +            with_errorbars_i = False
│ │ +        else:
│ │ +            with_errorbars_i = with_errorbars
│ │ +
│ │ +        if is_string or is_categorical:
│ │ +            df_ii = df_i.filter(pl.col(feature_name).is_not_null())
│ │              # We x-shift a little for a better visual.
│ │              span = (n_x - 1) / n_x / n_models  # length for one cat value and one model
│ │ -            x = np.arange(n_x)
│ │ +            x = np.arange(n_x - feature_has_nulls)
│ │              if n_models > 1:
│ │                  x = x + (i - n_models // 2) * span * 0.5
│ │              ax.errorbar(
│ │                  x,
│ │ -                df_i["bias_mean"],
│ │ -                yerr=df_i["bias_stderr"],
│ │ +                df_ii["bias_mean"],
│ │ +                yerr=df_ii["bias_stderr"] if with_errorbars_i else None,
│ │                  marker="o",
│ │                  linestyle="None",
│ │                  capsize=4,
│ │                  label=label,
│ │              )
│ │          else:
│ │ -            lower = df_i["bias_mean"] - df_i["bias_stderr"]
│ │ -            upper = df_i["bias_mean"] + df_i["bias_stderr"]
│ │ -            ax.fill_between(df_i[feature_name], lower, upper, alpha=0.1)
│ │ +            if with_errorbars_i:
│ │ +                lower = df_i["bias_mean"] - df_i["bias_stderr"]
│ │ +                upper = df_i["bias_mean"] + df_i["bias_stderr"]
│ │ +                ax.fill_between(
│ │ +                    df_i[feature_name],
│ │ +                    lower,
│ │ +                    upper,
│ │ +                    alpha=0.1,
│ │ +                )
│ │              ax.plot(
│ │                  df_i[feature_name],
│ │                  df_i["bias_mean"],
│ │                  linestyle="solid",
│ │                  marker="o",
│ │                  label=label,
│ │              )
│ │  
│ │ +        if df_i[feature_name].null_count() > 0:
│ │ +            color = ax.get_lines()[-1].get_color()  # previous line color
│ │ +            df_i_null = df_i.filter(pl.col(feature_name).is_null())
│ │ +
│ │ +            if is_string or is_categorical:
│ │ +                x_null = np.array([n_x - 1])
│ │ +            else:
│ │ +                x_min = df_i[feature_name].min()
│ │ +                x_max = df_i[feature_name].max()
│ │ +                if n_x == 1:
│ │ +                    # df_i[feature_name] is the null value.
│ │ +                    x_null, span = np.array([0]), 1
│ │ +                elif n_x == 2:
│ │ +                    x_null, span = np.array([2 * x_max]), 0.5 * x_max / n_models
│ │ +                else:
│ │ +                    x_null = np.array([x_max + (x_max - x_min) / n_x])
│ │ +                    span = (x_null - x_max) / n_models
│ │ +
│ │ +            if n_models > 1:
│ │ +                x_null = x_null + (i - n_models // 2) * span * 0.5
│ │ +
│ │ +            ax.errorbar(
│ │ +                x_null,
│ │ +                df_i_null["bias_mean"],
│ │ +                yerr=df_i_null["bias_stderr"] if with_errorbars_i else None,
│ │ +                marker="D",
│ │ +                linestyle="None",
│ │ +                capsize=4,
│ │ +                label=None,
│ │ +                color=color,
│ │ +            )
│ │ +
│ │      if is_categorical or is_string:
│ │ -        ax.set_xticks(np.arange(n_x), df_i[feature_name])
│ │ +        if df_i[feature_name].null_count() > 0:
│ │ +            # print(f"{df_i=}")
│ │ +            # Without cast to pl.Uft8, the following error might occur:
│ │ +            # exceptions.ComputeError: cannot combine categorical under a global string
│ │ +            # cache with a non cached categorical
│ │ +            tick_labels = df_i[feature_name].cast(pl.Utf8).fill_null("Null")
│ │ +        else:
│ │ +            tick_labels = df_i[feature_name]
│ │ +        ax.set_xticks(np.arange(n_x), labels=tick_labels)
│ │          ax.set(xlabel=feature_name, ylabel="bias")
│ │      elif feature_name is not None:
│ │          ax.set(xlabel="binned " + feature_name, ylabel="bias")
│ │  
│ │      if feature is None:
│ │          ax.set_title("Bias Plot")
│ │ -    elif with_label:
│ │ -        ax.set_title("Bias Plot")
│ │ -        ax.legend()
│ │      else:
│ │          model_name = array_name(y_pred, default="")
│ │ -        if model_name == "":
│ │ +        if not model_name:  # test for empty string ""
│ │              ax.set_title("Bias Plot")
│ │          else:
│ │              ax.set_title("Bias Plot " + model_name)
│ │  
│ │ +    if with_label:
│ │ +        if feature_has_nulls:
│ │ +            # Add legend entry for diamonds as Null values.
│ │ +            # Unfortunately, the Null value legend entry often appears first, but we
│ │ +            # want it at the end.
│ │ +            ax.scatter([], [], marker="D", color="grey", label="Null values")
│ │ +            handles, labels = ax.get_legend_handles_labels()
│ │ +            if (labels[-1] != "Null values") and "Null values" in labels:
│ │ +                i = labels.index("Null values")
│ │ +                # i can't be the last index
│ │ +                labels = labels[:i] + labels[i + 1 :] + [labels[i]]
│ │ +                handles = handles[:i] + handles[i + 1 :] + [handles[i]]
│ │ +            ax.legend(handles=handles, labels=labels)
│ │ +        else:
│ │ +            ax.legend()
│ │ +
│ │      return ax
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/calibration/tests/test_identification.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/calibration/tests/test_identification.py
│ │┄ Files 14% similar despite different names
│ │ @@ -1,15 +1,15 @@
│ │  from functools import partial
│ │  
│ │  import numpy as np
│ │  import pandas as pd
│ │  import polars as pl
│ │  import pyarrow as pa
│ │  import pytest
│ │ -from polars.testing import assert_frame_equal
│ │ +from polars.testing import assert_frame_equal, assert_series_equal
│ │  from scipy.special import stdtr
│ │  from scipy.stats import expectile, ttest_1samp
│ │  
│ │  from model_diagnostics.calibration import compute_bias, identification_function
│ │  
│ │  
│ │  @pytest.mark.parametrize(
│ │ @@ -223,14 +223,56 @@
│ │                  for n in range(0, n_obs, n_steps)
│ │              ],
│ │          }
│ │      )
│ │      assert_frame_equal(df_bias, df_expected, check_exact=False)
│ │  
│ │  
│ │ +@pytest.mark.parametrize("n_bins", [2, 10])
│ │ +def test_compute_bias_n_bins_numerical_feature(n_bins):
│ │ +    """Test compute_bias returns right number of bins for a numerical feature."""
│ │ +    n_obs = 10
│ │ +    y_obs = np.linspace(-1, 1, num=n_obs, endpoint=False)
│ │ +    y_pred = y_obs**2
│ │ +    feature = [4, 4, 4, 4, 3, 3, 3, 2, 2, 11]
│ │ +    df_bias = compute_bias(
│ │ +        y_obs=y_obs,
│ │ +        y_pred=y_pred,
│ │ +        feature=feature,
│ │ +        n_bins=n_bins,
│ │ +    )
│ │ +    assert df_bias.shape[0] == np.min([n_bins, 4])
│ │ +    assert df_bias["bias_count"].sum() == n_obs
│ │ +
│ │ +
│ │ +def test_compute_n_bins_string_feature():
│ │ +    """Test compute_bias returns right number of bins and sorted for string feature."""
│ │ +    n_bins = 3
│ │ +    n_obs = 6
│ │ +    y_obs = np.arange(n_obs)
│ │ +    y_pred = pl.Series("model", np.arange(n_obs) + 0.5)
│ │ +    feature = pl.Series("feature", ["a", "a", None, "b", "b", "c"])
│ │ +
│ │ +    df_expected = pl.DataFrame(
│ │ +        {
│ │ +            "feature": [None, "a", "b"],
│ │ +            "bias_mean": 0.5,
│ │ +            "bias_count": pl.Series([1, 2, 2], dtype=pl.UInt32),
│ │ +        }
│ │ +    )
│ │ +    for _i in range(10):
│ │ +        # The default args in polars groupby(..., maintain_order=False) does not does
│ │ +        # return non-deterministic ordering which compute_bias should take care of such
│ │ +        # that compute_bias is deterministic.
│ │ +        df = compute_bias(y_obs=y_obs, y_pred=y_pred, feature=feature, n_bins=n_bins)
│ │ +        assert_frame_equal(
│ │ +            df.select(["feature", "bias_mean", "bias_count"]), df_expected
│ │ +        )
│ │ +
│ │ +
│ │  @pytest.mark.parametrize("feature_type", ["cat", "num", "string"])
│ │  def test_compute_bias_multiple_predictions(feature_type):
│ │      """test compute_bias for multiple predictions."""
│ │      with pl.StringCache():
│ │          n_obs = 10
│ │          y_obs = np.ones(n_obs)
│ │          y_obs[: 10 // 2] = 2
│ │ @@ -255,15 +297,15 @@
│ │              {
│ │                  "model": ["model_1", "model_1", "model_2", "model_2"],
│ │                  "nice_feature": f_expected,
│ │                  "bias_mean": [0.0, -1, 2, 1],
│ │                  "bias_count": pl.Series(values=[5] * 4, dtype=pl.UInt32),
│ │                  "bias_weights": [5.0] * 4,
│ │                  "bias_stderr": [0.0] * 4,
│ │ -                "p_value": [np.nan] * 4,
│ │ +                "p_value": [0.0] * 4,
│ │              }
│ │          )
│ │  
│ │          if feature_type == "cat":
│ │              df_expected = df_expected.replace(
│ │                  "nice_feature",
│ │                  df_expected["nice_feature"].cast(pl.Utf8).cast(pl.Categorical),
│ │ @@ -348,14 +390,58 @@
│ │          df.filter(pl.col("model") == "model_2")["feature"]
│ │      )
│ │      assert set(df.filter(pl.col("model") == "model_1")["feature"]) == set(
│ │          df.filter(pl.col("model") == "model_3")["feature"]
│ │      )
│ │  
│ │  
│ │ +def test_compute_bias_keeps_null_values():
│ │ +    """Test that compute_bias keeps Null values."""
│ │ +    n_obs = 10
│ │ +    y_obs = np.arange(n_obs)
│ │ +    y_pred = (y_obs - 5) ** 2
│ │ +    feature = pl.Series([np.nan, None, 1, 1, 1, 2, 2, 2, 2, 2.0])
│ │ +
│ │ +    df_bias = compute_bias(
│ │ +        y_obs=y_obs,
│ │ +        y_pred=y_pred,
│ │ +        feature=feature,
│ │ +        n_bins=1,
│ │ +    )
│ │ +    assert_series_equal(df_bias["feature"], pl.Series("feature", [None]))
│ │ +    assert_series_equal(
│ │ +        df_bias["bias_count"], pl.Series("bias_count", [2], dtype=pl.UInt32)
│ │ +    )
│ │ +    assert df_bias["bias_count"].sum() == 2
│ │ +
│ │ +    df_bias = compute_bias(
│ │ +        y_obs=y_obs,
│ │ +        y_pred=y_pred,
│ │ +        feature=feature,
│ │ +        n_bins=2,
│ │ +    )
│ │ +    assert_series_equal(df_bias["feature"], pl.Series("feature", [None, 1.625]))
│ │ +    assert_series_equal(
│ │ +        df_bias["bias_count"], pl.Series("bias_count", [2, 8], dtype=pl.UInt32)
│ │ +    )
│ │ +    assert df_bias["bias_count"].sum() == n_obs
│ │ +
│ │ +    df_bias = compute_bias(
│ │ +        y_obs=y_obs,
│ │ +        y_pred=y_pred,
│ │ +        feature=feature,
│ │ +        n_bins=4,
│ │ +    )
│ │ +    assert_series_equal(df_bias["feature"], pl.Series("feature", [None, 1.0, 2.0]))
│ │ +    assert_series_equal(
│ │ +        df_bias["bias_count"], pl.Series("bias_count", [2, 3, 5], dtype=pl.UInt32)
│ │ +    )
│ │ +    assert df_bias["bias_count"].sum() == n_obs
│ │ +
│ │ +
│ │  def test_compute_bias_warning_for_n_bins():
│ │      """Test that compute_bias gives warning for n_bins to small."""
│ │      y_obs = np.arange(6)
│ │      y_pred = y_obs + 1
│ │      feature = ["a", "a", "b", "b", "c", "c"]
│ │  
│ │      with pytest.warns(
│ │ @@ -373,7 +459,32 @@
│ │  
│ │  def test_compute_bias_raises_weights_shape():
│ │      y_obs, y_pred = np.arange(5), np.arange(5)
│ │      weights = np.arange(5)[:, None]
│ │      msg = "The array weights must be 1-dimensional, got weights.ndim=2."
│ │      with pytest.raises(ValueError, match=msg):
│ │          compute_bias(y_obs, y_pred, weights=weights)
│ │ +
│ │ +
│ │ +@pytest.mark.parametrize(
│ │ +    "list2array",
│ │ +    [lambda x: x, np.asarray, pa.array, pd.Series, pl.Series],
│ │ +)
│ │ +def test_compute_bias_1d_array_like(list2array):
│ │ +    """Test that plot_reliability_diagram workds for 1d array-likes."""
│ │ +    y_obs = list2array([0, 1, 2, 3])
│ │ +    y_pred = list2array([-1, 1, 0, 2])
│ │ +    feature = list2array([0, 1, 0, 1])
│ │ +    weights = list2array([1, 1, 1, 1])
│ │ +    df_bias = compute_bias(y_obs=y_obs, y_pred=y_pred, weights=weights, feature=feature)
│ │ +    df_expected = pl.DataFrame(
│ │ +        {
│ │ +            "feature": [0.0, 1.0],
│ │ +            "bias_mean": [-1.5, -0.5],
│ │ +            "bias_count": pl.Series(values=[2, 2], dtype=pl.UInt32),
│ │ +            # For unknown reasons, on Windos this can be int32 instead of int64.
│ │ +            "bias_weights": pl.Series([2, 2], dtype=df_bias["bias_weights"].dtype),
│ │ +            "bias_stderr": [0.5, 0.5],
│ │ +            "p_value": [0.20483276469913345, 0.5],
│ │ +        }
│ │ +    )
│ │ +    assert_frame_equal(df_bias, df_expected, check_exact=False)
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/calibration/tests/test_plots.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/calibration/tests/test_plots.py
│ │┄ Files 13% similar despite different names
│ │ @@ -35,24 +35,24 @@
│ │  
│ │  @pytest.mark.parametrize("diagram_type", ["reliability", "bias"])
│ │  @pytest.mark.parametrize("n_bootstrap", [None, 10])
│ │  @pytest.mark.parametrize("weights", [None, True])
│ │  @pytest.mark.parametrize("ax", [None, plt.subplots()[1]])
│ │  def test_plot_reliability_diagram(diagram_type, n_bootstrap, weights, ax):
│ │      """Test that plot_reliability_diagram works."""
│ │ -    X, y = make_classification(random_state=42)
│ │ +    X, y = make_classification(random_state=42, n_classes=2)
│ │      if weights is None:
│ │          X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)
│ │          w_train, w_test = None, None
│ │      else:
│ │          weights = np.random.default_rng(42).integers(low=0, high=10, size=y.shape)
│ │          X_train, X_test, y_train, y_test, w_train, w_test = train_test_split(
│ │              X, y, weights, random_state=0
│ │          )
│ │ -    clf = LogisticRegression(solver="lbfgs")
│ │ +    clf = LogisticRegression(solver="newton-cholesky")
│ │      clf.fit(X_train, y_train, w_train)
│ │      y_pred = clf.predict_proba(X_test)[:, 1]
│ │      plt_ax = plot_reliability_diagram(
│ │          y_obs=y_test,
│ │          y_pred=y_pred,
│ │          weights=w_test,
│ │          ax=ax,
│ │ @@ -86,14 +86,15 @@
│ │  
│ │  def test_plot_reliability_diagram_multiple_predictions():
│ │      """Test that plot_reliability_diagram works for multiple predictions."""
│ │      n_obs = 10
│ │      y_obs = np.arange(n_obs)
│ │      y_obs[::2] = 0
│ │      y_pred = pd.DataFrame({"model_2": np.ones(n_obs), "model_1": 3 * np.ones(n_obs)})
│ │ +    fig, ax = plt.subplots()
│ │      plt_ax = plot_reliability_diagram(
│ │          y_obs=y_obs,
│ │          y_pred=y_pred,
│ │      )
│ │      assert plt_ax.get_title() == "Reliability Diagram"
│ │      legend_text = plt_ax.get_legend().get_texts()
│ │      assert len(legend_text) == 2
│ │ @@ -147,18 +148,38 @@
│ │  
│ │      with sklearn.config_context(transform_output="pandas"):
│ │          # Without our internal code setting set_output(transform="default"),
│ │          # this test will error.
│ │          plot_reliability_diagram(y_obs=y_obs, y_pred=y_pred, n_bootstrap=10)
│ │  
│ │  
│ │ +def test_plot_bias_warning_for_with_errorbars():
│ │ +    """Test that plot_bias gives warning for when some stderr are Null."""
│ │ +    y_obs = np.arange(3).astype(float)
│ │ +    y_obs[0] = np.nan
│ │ +    y_pred = y_obs + 1
│ │ +    feature = ["a", "a", "b"]
│ │ +
│ │ +    with pytest.warns(
│ │ +        UserWarning,
│ │ +        match="Some values of 'bias_stderr' are null. Therefore no error bars are",
│ │ +    ):
│ │ +        plot_bias(
│ │ +            y_obs=y_obs,
│ │ +            y_pred=y_pred,
│ │ +            feature=feature,
│ │ +            with_errorbars=True,
│ │ +        )
│ │ +
│ │ +
│ │ +@pytest.mark.parametrize("with_null_values", [False, True])
│ │  @pytest.mark.parametrize("feature_type", ["cat", "num", "string"])
│ │  @pytest.mark.parametrize("with_errorbars", [False, True])
│ │  @pytest.mark.parametrize("ax", [None, plt.subplots()[1]])
│ │ -def test_plot_bias(feature_type, with_errorbars, ax):
│ │ +def test_plot_bias(with_null_values, feature_type, with_errorbars, ax):
│ │      """Test that plot_bias works."""
│ │      X, y = make_classification(
│ │          n_samples=100,
│ │          n_features=10,
│ │          random_state=42,
│ │      )
│ │      X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)
│ │ @@ -172,38 +193,54 @@
│ │          feature = pd.Series(
│ │              np.digitize(feature, bins=bins).astype("=U8"), dtype="category"
│ │          )
│ │      elif feature_type == "string":
│ │          bins = np.quantile(feature, [0.2, 0.5, 0.8])
│ │          feature = np.digitize(feature, bins=bins).astype("=U8")
│ │  
│ │ -    plt_ax = plot_bias(
│ │ -        y_obs=y_test,
│ │ -        y_pred=clf.predict_proba(X_test)[:, 1],
│ │ -        feature=feature,
│ │ -        with_errorbars=with_errorbars,
│ │ -        ax=ax,
│ │ -    )
│ │ -
│ │ -    if ax is not None:
│ │ -        assert ax is plt_ax
│ │ -    if feature_type == "num":
│ │ -        assert plt_ax.get_xlabel() == "binned feature"
│ │ -    else:
│ │ -        assert plt_ax.get_xlabel() == "feature"
│ │ -    assert plt_ax.get_ylabel() == "bias"
│ │ -    assert plt_ax.get_title() == "Bias Plot"
│ │ +    with pl.StringCache():
│ │ +        if with_null_values:
│ │ +            if feature_type == "cat":
│ │ +                feature = (
│ │ +                    pl.Series(feature)
│ │ +                    .cast(str)
│ │ +                    .set_at_idx(0, None)
│ │ +                    .cast(pl.Categorical)
│ │ +                )
│ │ +            else:
│ │ +                feature = pl.Series(feature).set_at_idx(0, None)
│ │ +
│ │ +        plt_ax = plot_bias(
│ │ +            y_obs=y_test,
│ │ +            y_pred=clf.predict_proba(X_test)[:, 1],
│ │ +            feature=feature,
│ │ +            with_errorbars=with_errorbars,
│ │ +            ax=ax,
│ │ +        )
│ │  
│ │ -    plt_ax = plot_bias(
│ │ -        y_obs=y_test,
│ │ -        y_pred=pd.Series(clf.predict_proba(X_test)[:, 1], name="simple"),
│ │ -        feature=feature,
│ │ -        with_errorbars=with_errorbars,
│ │ -        ax=ax,
│ │ -    )
│ │ +        if ax is not None:
│ │ +            assert ax is plt_ax
│ │ +        if feature_type == "num":
│ │ +            assert plt_ax.get_xlabel() == "binned feature"
│ │ +        else:
│ │ +            assert plt_ax.get_xlabel() == "feature"
│ │ +        assert plt_ax.get_ylabel() == "bias"
│ │ +        assert plt_ax.get_title() == "Bias Plot"
│ │ +
│ │ +        if with_null_values and feature_type in ["string", "cat"]:
│ │ +            xtick_labels = plt_ax.xaxis.get_ticklabels()
│ │ +            assert xtick_labels[-1].get_text() == "Null"
│ │ +
│ │ +        plt_ax = plot_bias(
│ │ +            y_obs=y_test,
│ │ +            y_pred=pd.Series(clf.predict_proba(X_test)[:, 1], name="simple"),
│ │ +            feature=feature,
│ │ +            with_errorbars=with_errorbars,
│ │ +            ax=ax,
│ │ +        )
│ │      assert plt_ax.get_title() == "Bias Plot simple"
│ │  
│ │  
│ │  def test_plot_bias_feature_none():
│ │      """Test that plot_bias works."""
│ │      y_obs = np.arange(10)
│ │      y_pred = pd.DataFrame(
│ │ @@ -221,40 +258,47 @@
│ │      assert [x.get_text() for x in ax.get_xmajorticklabels()] == [
│ │          "model_1",
│ │          "model_3",
│ │          "model_2",
│ │      ]
│ │  
│ │  
│ │ +@pytest.mark.parametrize("with_null", [False, True])
│ │  @pytest.mark.parametrize("feature_type", ["num", "string"])
│ │ -def test_plot_bias_multiple_predictions(feature_type):
│ │ +@pytest.mark.parametrize("with_errorbars", [False, True])
│ │ +def test_plot_bias_multiple_predictions(with_null, feature_type, with_errorbars):
│ │      """Test that plot_bias works for multiple predictions.
│ │  
│ │      This also tests feature to be a string with many different values
│ │      """
│ │      n_obs = 100
│ │      y_obs = np.arange(n_obs)
│ │      y_pred = pl.DataFrame(
│ │          {
│ │              "model_1": np.arange(n_obs) + 0.5,
│ │              "model_3": (y_obs - 5) ** 2,
│ │              "model_2": (y_obs - 3) ** 2,
│ │          }
│ │      )
│ │ -    # string
│ │      rng = np.random.default_rng(42)
│ │      feature = rng.integers(low=0, high=n_obs // 2, size=n_obs)
│ │      if feature_type == "string":
│ │          feature = feature.astype(str)
│ │  
│ │ +    if with_null:
│ │ +        feature = pl.Series(feature).set_at_idx([0, 5], None)
│ │ +
│ │      fig, ax = plt.subplots()
│ │      ax = plot_bias(
│ │          y_obs=y_obs,
│ │          y_pred=y_pred,
│ │          feature=feature,
│ │ +        with_errorbars=with_errorbars,
│ │      )
│ │      assert ax.get_title() == "Bias Plot"
│ │      legend_text = ax.get_legend().get_texts()
│ │ -    assert len(legend_text) == 3
│ │ +    assert len(legend_text) == 3 + with_null
│ │      assert legend_text[0].get_text() == "model_1"
│ │      assert legend_text[1].get_text() == "model_3"
│ │      assert legend_text[2].get_text() == "model_2"
│ │ +    if with_null:
│ │ +        assert legend_text[3].get_text() == "Null values"
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/scoring/scoring.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/scoring/scoring.py
│ │┄ Files 12% similar despite different names
│ │ @@ -11,14 +11,15 @@
│ │  from scipy import special
│ │  from sklearn.isotonic import IsotonicRegression
│ │  
│ │  from model_diagnostics._utils._array import (
│ │      validate_2_arrays,
│ │      validate_same_first_dimension,
│ │  )
│ │ +from model_diagnostics.calibration import identification_function
│ │  
│ │  
│ │  class _BaseScoringFunction(ABC):
│ │      """A base class for scoring functions."""
│ │  
│ │      @property
│ │      @abstractmethod
│ │ @@ -58,17 +59,17 @@
│ │      ) -> np.ndarray:
│ │          """Score per observation."""
│ │  
│ │  
│ │  class HomogeneousExpectileScore(_BaseScoringFunction):
│ │      r"""Homogeneous scoring function of degree h for expectiles.
│ │  
│ │ -    The smaller the better.
│ │ +    The smaller the better, minimum is zero.
│ │  
│ │ -    Up to a multiplicative constant, these are the only scoring funtions that are
│ │ +    Up to a multiplicative constant, these are the only scoring functions that are
│ │      strictly consistent for expectiles at level alpha and homogeneous functions.
│ │      The possible additive constant is chosen such that the minimal function value
│ │      equals zero.
│ │  
│ │      Note that the 1/2-expectile (level alpha=0.5) equals the mean.
│ │  
│ │      Parameters
│ │ @@ -111,23 +112,23 @@
│ │      - \(h \leq 0\): Only \(y>0\), \(z>0\) are allowed.
│ │  
│ │          Special case \(h=0, \alpha=\frac{1}{2}\) (by taking the limit) equals the Gamma
│ │          deviance \(S(y, z) = 2(\frac{y}{z} -\log\frac{y}{z} - 1)\).
│ │  
│ │      For the common domains, \(S_{\frac{1}{2}}^h\) equals the
│ │      [Tweedie deviance](https://en.wikipedia.org/wiki/Tweedie_distribution) with the
│ │ -    following relation between the degree of homogeneity \(h\) and the with Tweedie
│ │ +    following relation between the degree of homogeneity \(h\) and the Tweedie
│ │      power \(p\): \(h = 2-p\).
│ │  
│ │      References
│ │      ----------
│ │      `[Gneiting2011]`
│ │  
│ │      :   T. Gneiting.
│ │ -        "Making and Evaluating Point Forecasts”. (2011)
│ │ +        "Making and Evaluating Point Forecasts". (2011)
│ │          [doi:10.1198/jasa.2011.r10138](https://doi.org/10.1198/jasa.2011.r10138)
│ │          [arxiv:0912.0902](https://arxiv.org/abs/0912.0902)
│ │  
│ │      Examples
│ │      --------
│ │      >>> hes = HomogeneousExpectileScore(degree=2, level=0.1)
│ │      >>> hes(y_obs=[0, 0, 1, 1], y_pred=[-1, 1, 1 , 2])
│ │ @@ -233,14 +234,16 @@
│ │          else:
│ │              return 2 * np.abs(np.greater_equal(z, y) - self.level) * score
│ │  
│ │  
│ │  class SquaredError(HomogeneousExpectileScore):
│ │      r"""Squared error.
│ │  
│ │ +    The smaller the better, minimum is zero.
│ │ +
│ │      The squared error is strictly consistent for the mean.
│ │      It has a degree of homogeneity of 2.
│ │      In the context of probabilistic classification, it is also known as Brier score.
│ │  
│ │  
│ │      Attributes
│ │      ----------
│ │ @@ -261,14 +264,16 @@
│ │      def __init__(self) -> None:
│ │          super().__init__(degree=2, level=0.5)
│ │  
│ │  
│ │  class PoissonDeviance(HomogeneousExpectileScore):
│ │      r"""Poisson deviance.
│ │  
│ │ +    The smaller the better, minimum is zero.
│ │ +
│ │      The Poisson deviance is strictly consistent for the mean.
│ │      It has a degree of homogeneity of 1.
│ │  
│ │      Attributes
│ │      ----------
│ │      functional: str
│ │          "mean"
│ │ @@ -287,14 +292,16 @@
│ │      def __init__(self) -> None:
│ │          super().__init__(degree=1, level=0.5)
│ │  
│ │  
│ │  class GammaDeviance(HomogeneousExpectileScore):
│ │      r"""Gamma deviance.
│ │  
│ │ +    The smaller the better, minimum is zero.
│ │ +
│ │      The Gamma deviance is strictly consistent for the mean.
│ │      It has a degree of homogeneity of 0 and is therefore insensitive to a change of
│ │      units or multiplication of `y_obs` and `y_pred` by the same positive constant.
│ │  
│ │      Attributes
│ │      ----------
│ │      functional: str
│ │ @@ -314,19 +321,21 @@
│ │      def __init__(self) -> None:
│ │          super().__init__(degree=0, level=0.5)
│ │  
│ │  
│ │  class LogLoss(_BaseScoringFunction):
│ │      r"""Log loss.
│ │  
│ │ -    The log loss is a strictly consistent scoring function for the mean for the
│ │ +    The smaller the better, minimum is zero.
│ │ +
│ │ +    The log loss is a strictly consistent scoring function for the mean for
│ │      observations and predictions in the range 0 to 1.
│ │ -    It is also referred to as Bernoulli deviance, Binomial log-likelihood, logistic
│ │ -    loss and binary cross-entropy.
│ │ -    It's minimal function value is zero.
│ │ +    It is also referred to as (half the) Bernoulli deviance,
│ │ +    (half the) Binomial log-likelihood, logistic loss and binary cross-entropy.
│ │ +    Its minimal function value is zero.
│ │  
│ │      Attributes
│ │      ----------
│ │      functional: str
│ │          "mean"
│ │  
│ │      Notes
│ │ @@ -383,15 +392,15 @@
│ │              score += special.xlogy(y, y) + special.xlogy(1 - y, 1 - y)
│ │          return score
│ │  
│ │  
│ │  class HomogeneousQuantileScore(_BaseScoringFunction):
│ │      r"""Homogeneous scoring function of degree h for quantiles.
│ │  
│ │ -    The smaller the better.
│ │ +    The smaller the better, minimum is zero.
│ │  
│ │      Up to a multiplicative constant, these are the only scoring funtions that are
│ │      strictly consistent for quantiles at level alpha and homogeneous functions.
│ │      The possible additive constant is chosen such that the minimal function value
│ │      equals zero.
│ │  
│ │      Note that the 1/2-quantile (level alpha=0.5) equals the median.
│ │ @@ -433,15 +442,15 @@
│ │          \(S(y, z) = |\mathbf{1}\{z \ge y\} - \alpha| \log\frac{z}{y}\).
│ │  
│ │      References
│ │      ----------
│ │      `[Gneiting2011]`
│ │  
│ │      :   T. Gneiting.
│ │ -        "Making and Evaluating Point Forecasts”. (2011)
│ │ +        "Making and Evaluating Point Forecasts". (2011)
│ │          [doi:10.1198/jasa.2011.r10138](https://doi.org/10.1198/jasa.2011.r10138)
│ │          [arxiv:0912.0902](https://arxiv.org/abs/0912.0902)
│ │  
│ │      Examples
│ │      --------
│ │      >>> hqs = HomogeneousQuantileScore(degree=3, level=0.1)
│ │      >>> hqs(y_obs=[0, 0, 1, 1], y_pred=[-1, 1, 1 , 2])
│ │ @@ -513,14 +522,18 @@
│ │          else:
│ │              return (np.greater_equal(z, y) - self.level) * score
│ │  
│ │  
│ │  class PinballLoss(HomogeneousQuantileScore):
│ │      r"""Pinball loss.
│ │  
│ │ +    The smaller the better, minimum is zero.
│ │ +
│ │ +    The pinball loss is strictly consistent for quantiles.
│ │ +
│ │      Parameters
│ │      ----------
│ │      level : float
│ │          The level of the quantile. (Often called \(\alpha\).)
│ │          It must be `0 < level < 1`.
│ │          `level=0.5` gives the median.
│ │  
│ │ @@ -547,14 +560,131 @@
│ │      0.275
│ │      """
│ │  
│ │      def __init__(self, level: float = 0.5) -> None:
│ │          super().__init__(degree=1, level=level)
│ │  
│ │  
│ │ +class ElementaryScore(_BaseScoringFunction):
│ │ +    r"""Elementary scoring function.
│ │ +
│ │ +    The smaller the better.
│ │ +
│ │ +    The elementary scoring function is consistent for the specified `functional` for
│ │ +    all values of `eta` and is the main ingredient for Murphy diagrams.
│ │ +    See Notes for further details.
│ │ +
│ │ +    Parameters
│ │ +    ----------
│ │ +    eta : float
│ │ +        Free parameter.
│ │ +    functional : str
│ │ +        The functional that is induced by the identification function `V`. Options are:
│ │ +        - `"mean"`. Argument `level` is neglected.
│ │ +        - `"median"`. Argument `level` is neglected.
│ │ +        - `"expectile"`
│ │ +        - `"quantile"`
│ │ +    level : float
│ │ +        The level of the expectile of quantile. (Often called \(\alpha\).)
│ │ +        It must be `0 < level < 1`.
│ │ +        `level=0.5` and `functional="expectile"` gives the mean.
│ │ +        `level=0.5` and `functional="quantile"` gives the median.
│ │ +
│ │ +    Notes
│ │ +    -----
│ │ +    The elementary scoring or loss function is given by
│ │ +
│ │ +    \[
│ │ +    S_\eta^h(y, z) = (\mathbf{1}\{\eta \le z\} - \mathbf{1}\{\eta \le y\})
│ │ +    V(y, \eta)
│ │ +    \]
│ │ +
│ │ +    with [identification functions]
│ │ +    [model_diagnostics.calibration.identification_function]
│ │ +    \(V\) for the given `functional` \(T\) . If allows for the mixture or Choquet
│ │ +    representation
│ │ +
│ │ +    \[
│ │ +    S(y, z) = \int S_\eta(y, z) \,dH(\eta)
│ │ +    \]
│ │ +
│ │ +    for some locally finite measure \(H\). It follows that the scoring function \(S\)
│ │ +    is consistent for \(T\).
│ │ +
│ │ +    References
│ │ +    ----------
│ │ +    `[Jordan2022]`
│ │ +
│ │ +    :   A.I. Jordan, A. Mühlemann, J.F. Ziegel.
│ │ +        "Characterizing the optimal solutions to the isotonic regression problem for
│ │ +        identifiable functionals". (2022)
│ │ +        [doi:10.1007/s10463-021-00808-0](https://doi.org/10.1007/s10463-021-00808-0)
│ │ +
│ │ +    `[GneitingResin2022]`
│ │ +
│ │ +    :   T. Gneiting, J. Resin.
│ │ +        "Regression Diagnostics meets Forecast Evaluation: Conditional Calibration,
│ │ +        Reliability Diagrams, and Coefficient of Determination".
│ │ +        [arxiv:2108.03210](https://arxiv.org/abs/2108.03210)
│ │ +
│ │ +    Examples
│ │ +    --------
│ │ +    >>> el_score = ElementaryScore(eta=2, functional="mean")
│ │ +    >>> el_score(y_obs=[1, 2, 2, 1], y_pred=[4, 1, 2, 3])
│ │ +    0.5
│ │ +    """
│ │ +
│ │ +    def __init__(
│ │ +        self, eta: float, functional: str = "mean", level: float = 0.5
│ │ +    ) -> None:
│ │ +        self.eta = eta
│ │ +        self._functional = functional
│ │ +        if level <= 0 or level >= 1:
│ │ +            msg = f"Argument level must fulfil 0 < level < 1, got {level}."
│ │ +            raise ValueError(msg)
│ │ +        self.level = level
│ │ +
│ │ +    @property
│ │ +    def functional(self):
│ │ +        return self._functional
│ │ +
│ │ +    def score_per_obs(
│ │ +        self,
│ │ +        y_obs: npt.ArrayLike,
│ │ +        y_pred: npt.ArrayLike,
│ │ +    ) -> np.ndarray:
│ │ +        """Score per observation.
│ │ +
│ │ +        Parameters
│ │ +        ----------
│ │ +        y_obs : array-like of shape (n_obs)
│ │ +            Observed values of the response variable.
│ │ +        y_pred : array-like of shape (n_obs)
│ │ +            Predicted values of the `functional` of interest, e.g. the conditional
│ │ +            expectation of the response, `E(Y|X)`.
│ │ +
│ │ +        Returns
│ │ +        -------
│ │ +        score_per_obs : ndarray
│ │ +            Values of the scoring function for each observation.
│ │ +        """
│ │ +        y: np.ndarray
│ │ +        z: np.ndarray
│ │ +        y, z = validate_2_arrays(y_obs, y_pred)
│ │ +
│ │ +        eta = self.eta
│ │ +        eta_term = np.less_equal(eta, z).astype(float) - np.less_equal(eta, y)
│ │ +        return eta_term * identification_function(
│ │ +            y_obs=y_obs,
│ │ +            y_pred=np.full(y.shape, fill_value=float(eta)),
│ │ +            functional=self.functional,
│ │ +            level=self.level,
│ │ +        )
│ │ +
│ │ +
│ │  def decompose(
│ │      scoring_function: Callable[..., Any],  # TODO: make type hint stricter
│ │      y_obs: npt.ArrayLike,
│ │      y_pred: npt.ArrayLike,
│ │      weights: Optional[npt.ArrayLike] = None,
│ │      functional: Optional[str] = None,
│ │      level: Optional[float] = None,
│ │ @@ -573,15 +703,15 @@
│ │          Observed values of the response variable.
│ │      y_pred : array-like of shape (n_obs)
│ │          Predicted values of the `functional` of interest, e.g. the conditional
│ │          expectation of the response, `E(Y|X)`.
│ │      weights : array-like of shape (n_obs) or None
│ │          Case weights.
│ │      functional : str or None
│ │ -        The target functionl which `y_pred` aims to predict.
│ │ +        The target functional which `y_pred` aims to predict.
│ │          If `None`, then it will be inferred from `scoring_function.functional`.
│ │      level : float or None
│ │          Functionals like expectiles and quantiles have a level (often called alpha).
│ │          If `None`, then it will be inferred from `scoring_function.level`.
│ │  
│ │      Returns
│ │      -------
│ │ @@ -594,15 +724,15 @@
│ │          - `score`: the average score
│ │  
│ │      Notes
│ │      -----
│ │      To be precise, this function returns the decomposition of the score in terms of
│ │      auto-miscalibration, auto-discrimination (or resolution) and uncertainy (or
│ │      entropy), see `[FLM2022]` and references therein.
│ │ -    The key element is to esimate the recalibrated predictions, i.e. \(T(Y|m(X))\) for
│ │ +    The key element is to estimate the recalibrated predictions, i.e. \(T(Y|m(X))\) for
│ │      the target functional \(T\) and model predictions \(m(X)\).
│ │      This is accomplished by isotonic regression, `[Dimitriadis2021]` and
│ │      `[Gneiting2021]`.
│ │  
│ │      References
│ │      ----------
│ │      `[FLM2022]`
│ │   --- model_diagnostics-0.1.1/src/model_diagnostics/scoring/tests/test_scoring.py
│ ├── +++ model_diagnostics-0.2.0/src/model_diagnostics/scoring/tests/test_scoring.py
│ │┄ Files 8% similar despite different names
│ │ @@ -4,14 +4,15 @@
│ │  import polars as pl
│ │  import pytest
│ │  import scipy.stats
│ │  from numpy.testing import assert_allclose
│ │  from polars.testing import assert_frame_equal
│ │  
│ │  from model_diagnostics.scoring import (
│ │ +    ElementaryScore,
│ │      GammaDeviance,
│ │      HomogeneousExpectileScore,
│ │      HomogeneousQuantileScore,
│ │      LogLoss,
│ │      PinballLoss,
│ │      PoissonDeviance,
│ │      SquaredError,
│ │ @@ -61,14 +62,17 @@
│ │      HQS(degree=2, level=0.2),
│ │      HQS(degree=2, level=0.5),
│ │      HQS(degree=2, level=0.99),
│ │      HQS(degree=3, level=0.2),
│ │      HQS(degree=3, level=0.5),
│ │      HQS(degree=3, level=0.99),
│ │      LogLoss(),
│ │ +    ElementaryScore(eta=0, functional="mean"),
│ │ +    ElementaryScore(eta=0, functional="expectile", level=0.2),
│ │ +    ElementaryScore(eta=0, functional="quantile", level=0.8),
│ │  ]
│ │  
│ │  
│ │  def sf_name(sf):
│ │      """Return name of a scoring function for id in pytest."""
│ │      if isinstance(sf, HomogeneousExpectileScore):
│ │          return f"HomogeneousExpectileScore(degree={sf.degree}, level={sf.level})"
│ │ @@ -76,28 +80,32 @@
│ │          return sf.__class__.__name__
│ │      elif hasattr(sf, "__name__"):
│ │          return sf.__name__
│ │      else:
│ │          return sf
│ │  
│ │  
│ │ -@pytest.mark.parametrize("sf", [HES, HQS])
│ │ +@pytest.mark.parametrize("sf", [HES, HQS, ElementaryScore])
│ │  @pytest.mark.parametrize(
│ │      ("level", "msg"),
│ │      [
│ │          (-1, "Argument level must fulfil 0 < level < 1"),
│ │          (0, "Argument level must fulfil 0 < level < 1"),
│ │          (1, "Argument level must fulfil 0 < level < 1"),
│ │          (1.1, "Argument level must fulfil 0 < level < 1"),
│ │      ],
│ │  )
│ │  def test_scoring_function_raises(sf, level, msg):
│ │      """Test that scoring function raises error for invalid input."""
│ │ -    with pytest.raises(ValueError, match=msg):
│ │ -        sf(level=level)
│ │ +    if sf is ElementaryScore:
│ │ +        with pytest.raises(ValueError, match=msg):
│ │ +            sf(eta=0, functional="quantile", level=level)
│ │ +    else:
│ │ +        with pytest.raises(ValueError, match=msg):
│ │ +            sf(level=level)
│ │  
│ │  
│ │  @pytest.mark.parametrize(
│ │      ("sf", "y_obs", "y_pred", "msg"),
│ │      [
│ │          (HES(degree=1.1), -1, -2, None),
│ │          (HES(degree=1), 0, 1, None),
│ │ @@ -175,15 +183,15 @@
│ │      )
│ │  
│ │      assert sf_below == pytest.approx(sf_exact, rel=1e-5)
│ │      assert sf_above == pytest.approx(sf_exact, rel=1e-5)
│ │  
│ │  
│ │  def test_homogeneous_scoring_function_against_precomputed_values():
│ │ -    """Test scoring function close to degree = 0, 1 and 2."""
│ │ +    """Test scoring function for precomputed values."""
│ │      y_obs = [1, 2]
│ │      y_pred = [4, 1]
│ │  
│ │      sf = HomogeneousExpectileScore(degree=2, level=0.5)
│ │      se = SquaredError()
│ │      precomputed = (9 + 1) / 2
│ │      assert sf(y_obs=y_obs, y_pred=y_pred) == pytest.approx(precomputed)
│ │ @@ -209,29 +217,60 @@
│ │  
│ │      sf = HomogeneousQuantileScore(degree=2, level=1 / 4)
│ │      precomputed = (3 / 4 * 15 / 2 + 1 / 4 * 3 / 2) / 2
│ │      assert sf(y_obs=y_obs, y_pred=y_pred) == pytest.approx(precomputed)
│ │  
│ │  
│ │  def test_log_loss_against_precomputed_values():
│ │ -    """Test scoring function close to degree = 0, 1 and 2."""
│ │ +    """Test log loss for precomputed values."""
│ │      log05 = np.log(0.5)
│ │      log15 = np.log(1.5)
│ │      y_obs = [0, 0, 0.5, 0.5, 1, 1]
│ │      y_pred = [0, 0.5, 0.5, 0.25, 0.5, 1]
│ │      sf = LogLoss()
│ │      precomputed = [0, -log05, 0, -0.5 * log05 - 0.5 * log15, -log05, 0]
│ │      assert_allclose(sf.score_per_obs(y_obs=y_obs, y_pred=y_pred), precomputed)
│ │  
│ │      # bernoulli.logpmf can only handle y_obs in {0, 1}
│ │      y_obs = [0, 0, 0, 1, 1, 1]
│ │      precomputed = -scipy.stats.bernoulli.logpmf(y_obs, y_pred)
│ │      assert_allclose(sf.score_per_obs(y_obs=y_obs, y_pred=y_pred), precomputed)
│ │  
│ │  
│ │ +def test_elemantary_scoring_function_against_precomputed_values():
│ │ +    """Test elementary scoring function for precomputed values."""
│ │ +    y_obs = [1, 2]
│ │ +    y_pred = [4, 1]
│ │ +
│ │ +    for functional in ("mean", "expectile", "quantile"):
│ │ +        sf = ElementaryScore(eta=0, functional=functional)
│ │ +        precomputed = 0
│ │ +        assert sf(y_obs=y_obs, y_pred=y_pred) == pytest.approx(precomputed)
│ │ +
│ │ +    sf = ElementaryScore(eta=2, functional="mean")
│ │ +    precomputed = 7 - 2
│ │ +    assert sf(y_obs=[7], y_pred=[-1]) == pytest.approx(precomputed)
│ │ +
│ │ +    sf = ElementaryScore(eta=2, functional="mean")
│ │ +    precomputed = (1 + 0) / 2
│ │ +    assert sf(y_obs=y_obs, y_pred=y_pred) == pytest.approx(precomputed)
│ │ +
│ │ +    sf = ElementaryScore(eta=1.75, functional="mean")
│ │ +    precomputed = (0.75 + 0.25) / 2
│ │ +    assert sf(y_obs=y_obs, y_pred=y_pred) == pytest.approx(precomputed)
│ │ +
│ │ +    sf = ElementaryScore(eta=1.75, functional="expectile", level=0.2)
│ │ +    precomputed = 2 * ((1 - 0.2) * 0.75 + 0.2 * 0.25) / 2
│ │ +    assert sf(y_obs=y_obs, y_pred=y_pred) == pytest.approx(precomputed)
│ │ +
│ │ +    sf = ElementaryScore(eta=1.75, functional="quantile", level=0.2)
│ │ +    precomputed = ((1 - 0.2) + 0.2) / 2
│ │ +    assert sf(y_obs=y_obs, y_pred=y_pred) == pytest.approx(precomputed)
│ │ +
│ │ +
│ │  def test_scoring_function_functional():
│ │      """Test that scoring function returns the right functional."""
│ │      sf = HomogeneousExpectileScore(level=0.5)
│ │      assert sf.functional == "mean"
│ │      sf = HomogeneousExpectileScore(level=0.5001)
│ │      assert sf.functional == "expectile"
│ │      sf = HomogeneousQuantileScore()
│ │   --- model_diagnostics-0.1.1/.gitignore
│ ├── +++ model_diagnostics-0.2.0/.gitignore
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/LICENSE
│ ├── +++ model_diagnostics-0.2.0/LICENSE
│ │┄ Files identical despite different names
│ │   --- model_diagnostics-0.1.1/README.md
│ ├── +++ model_diagnostics-0.2.0/README.md
│ │┄ Files 14% similar despite different names
│ │ @@ -1,20 +1,32 @@
│ │  # model-diagnostics
│ │  
│ │  | | |
│ │  | --- | --- |
│ │ -| CI/CD |[![CI - Test](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml)
│ │ +| CI/CD |[![CI - Test](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml) [![Coverage](https://codecov.io/github/lorentzenchr/model-diagnostics/coverage.svg?branch=main)](https://codecov.io/gh/lorentzenchr/model-diagnostics)
│ │  | Docs | [![Docs](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/docs.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/docs.yml)
│ │  | Package | [![PyPI - Version](https://img.shields.io/pypi/v/model-diagnostics.svg?logo=pypi&label=PyPI&logoColor=gold)](https://pypi.org/project/model-diagnostics/) [![PyPI - Downloads](https://img.shields.io/pypi/dm/model-diagnostics.svg?color=blue&label=Downloads&logo=pypi&logoColor=gold)](https://pypi.org/project/model-diagnostics/) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/model-diagnostics.svg?logo=python&label=Python&logoColor=gold)](https://pypi.org/project/model-diagnostics/) |
│ │  | Meta | [![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch) [![linting - Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v0.json)](https://github.com/charliermarsh/ruff) [![code style - black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![types - Mypy](https://img.shields.io/badge/types-Mypy-blue.svg)](https://github.com/python/mypy) [![License - MIT](https://img.shields.io/badge/license-MIT-9400d3.svg)](https://spdx.org/licenses/)
│ │  
│ │  **Tools for diagnostics and assessment of (machine learning) models**
│ │  
│ │ +Highlights:
│ │ +
│ │ +- Assess model calibration with identification functions (generalized residuals).
│ │ +- Assess calibration and bias graphically
│ │ +    - reliability diagrams for auto-calibration
│ │ +    - bias plots for conditional calibration
│ │ +- Assess the predictive performance of models
│ │ +    - strictly consistent, homogeneous scoring functions
│ │ +    - score decomposition into miscalibration, discrimination and uncertainty
│ │ +
│ │  Read more in the [documentation](https://lorentzenchr.github.io/model-diagnostics/).
│ │  
│ │ +This package relies on the giant shoulders of, among others, [polars](https://pola.rs/), [matplotlib](https://matplotlib.org), [scipy](https://scipy.org) and [scikit-learn](https://scikit-learn.org).
│ │ +
│ │  **Installation**
│ │  
│ │  `pip install model-diagnostics`
│ │  
│ │  **Contributions**
│ │  
│ │  Contributions are warmly welcome!
│ │   --- model_diagnostics-0.1.1/pyproject.toml
│ ├── +++ model_diagnostics-0.2.0/pyproject.toml
│ │┄ Files 1% similar despite different names
│ │ @@ -93,14 +93,15 @@
│ │    "TID",  # flake8-tidy-imports
│ │    "TRY",  # tryceratops
│ │    "UP",  # pyupgrade
│ │    "W",  # pycodestyle
│ │    "YTT",  # flake8-2020
│ │  ]
│ │  ignore = [
│ │ +  "C901",
│ │    "PD901",
│ │    "PLR0912",
│ │    "PLR0913",
│ │    "PLR0915",
│ │    "PLR2004",
│ │    "ERA001",
│ │  ]
│ │ @@ -184,15 +185,15 @@
│ │  
│ │  [tool.hatch.envs.lint]
│ │  detached = true
│ │  dependencies = [
│ │    "black>=22.8.0",
│ │    "mypy>=0.971",
│ │    "numpy>=1.22",
│ │ -  "ruff>=0.0.243",
│ │ +  "ruff==0.0.256",
│ │  ]
│ │  
│ │  [tool.hatch.envs.lint.scripts]
│ │  # typing = "mypy --install-types --non-interactive {args:backend/src/hatchling src/hatch tests}"
│ │  typing = "mypy --install-types --non-interactive {args:src/model_diagnostics}"
│ │  style = [
│ │    "ruff {args:.}",
│ │   --- model_diagnostics-0.1.1/PKG-INFO
│ ├── +++ model_diagnostics-0.2.0/PKG-INFO
│ │┄ Files 12% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: model-diagnostics
│ │ -Version: 0.1.1
│ │ +Version: 0.2.0
│ │  Summary: Tools for diagnostics and assessment of (machine learning) models
│ │  Project-URL: Homepage, https://lorentzenchr.github.io/model-diagnostics/
│ │  Project-URL: Source, https://github.com/lorentzenchr/model-diagnostics
│ │  Project-URL: Tracker, https://github.com/lorentzenchr/model-diagnostics/issues
│ │  Author-email: Christian Lorentzen <lorentzen.ch@gmail.com>
│ │  License: MIT License
│ │          
│ │ @@ -41,23 +41,35 @@
│ │  Requires-Dist: scikit-learn>=1.2.0
│ │  Description-Content-Type: text/markdown
│ │  
│ │  # model-diagnostics
│ │  
│ │  | | |
│ │  | --- | --- |
│ │ -| CI/CD |[![CI - Test](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml)
│ │ +| CI/CD |[![CI - Test](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/test.yml) [![Coverage](https://codecov.io/github/lorentzenchr/model-diagnostics/coverage.svg?branch=main)](https://codecov.io/gh/lorentzenchr/model-diagnostics)
│ │  | Docs | [![Docs](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/docs.yml/badge.svg)](https://github.com/lorentzenchr/model-diagnostics/actions/workflows/docs.yml)
│ │  | Package | [![PyPI - Version](https://img.shields.io/pypi/v/model-diagnostics.svg?logo=pypi&label=PyPI&logoColor=gold)](https://pypi.org/project/model-diagnostics/) [![PyPI - Downloads](https://img.shields.io/pypi/dm/model-diagnostics.svg?color=blue&label=Downloads&logo=pypi&logoColor=gold)](https://pypi.org/project/model-diagnostics/) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/model-diagnostics.svg?logo=python&label=Python&logoColor=gold)](https://pypi.org/project/model-diagnostics/) |
│ │  | Meta | [![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch) [![linting - Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v0.json)](https://github.com/charliermarsh/ruff) [![code style - black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![types - Mypy](https://img.shields.io/badge/types-Mypy-blue.svg)](https://github.com/python/mypy) [![License - MIT](https://img.shields.io/badge/license-MIT-9400d3.svg)](https://spdx.org/licenses/)
│ │  
│ │  **Tools for diagnostics and assessment of (machine learning) models**
│ │  
│ │ +Highlights:
│ │ +
│ │ +- Assess model calibration with identification functions (generalized residuals).
│ │ +- Assess calibration and bias graphically
│ │ +    - reliability diagrams for auto-calibration
│ │ +    - bias plots for conditional calibration
│ │ +- Assess the predictive performance of models
│ │ +    - strictly consistent, homogeneous scoring functions
│ │ +    - score decomposition into miscalibration, discrimination and uncertainty
│ │ +
│ │  Read more in the [documentation](https://lorentzenchr.github.io/model-diagnostics/).
│ │  
│ │ +This package relies on the giant shoulders of, among others, [polars](https://pola.rs/), [matplotlib](https://matplotlib.org), [scipy](https://scipy.org) and [scikit-learn](https://scikit-learn.org).
│ │ +
│ │  **Installation**
│ │  
│ │  `pip install model-diagnostics`
│ │  
│ │  **Contributions**
│ │  
│ │  Contributions are warmly welcome!
