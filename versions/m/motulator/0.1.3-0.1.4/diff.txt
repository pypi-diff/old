--- tmp/motulator-0.1.3.tar.gz
+++ tmp/motulator-0.1.4.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "motulator-0.1.3.tar", last modified: Thu Apr  6 21:26:08 2023, max compression
│ +gzip compressed data, was "motulator-0.1.4.tar", last modified: Fri Apr  7 10:01:04 2023, max compression
│   --- motulator-0.1.3.tar
├── +++ motulator-0.1.4.tar
│ ├── file list
│ │ @@ -1,36 +1,36 @@
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 21:26:08.271854 motulator-0.1.3/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1078 2023-04-06 21:25:53.000000 motulator-0.1.3/LICENSE
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8471 2023-04-06 21:26:08.275854 motulator-0.1.3/PKG-INFO
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7936 2023-04-06 21:25:53.000000 motulator-0.1.3/README.md
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 21:26:08.271854 motulator-0.1.3/motulator/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2074 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/__init__.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 21:26:08.271854 motulator-0.1.3/motulator/control/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)       99 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10014 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/common.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8143 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/im_obs_vhz.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    15938 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/im_vector.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5664 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/im_vhz.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7263 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/sm_flux_vector.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9447 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/sm_obs_vhz.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7021 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/sm_signal_inj.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    19488 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/sm_torque.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13687 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/control/sm_vector.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6772 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/helpers.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 21:26:08.271854 motulator-0.1.3/motulator/model/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      109 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4071 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/converter.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6881 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/im.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9364 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/im_drive.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4992 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/mech.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10079 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/sm.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6194 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/sm_drive.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8057 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/model/sm_flux_maps.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7514 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/plots.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8255 2023-04-06 21:25:53.000000 motulator-0.1.3/motulator/simulation.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-06 21:26:08.271854 motulator-0.1.3/motulator.egg-info/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8471 2023-04-06 21:26:08.000000 motulator-0.1.3/motulator.egg-info/PKG-INFO
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      787 2023-04-06 21:26:08.000000 motulator-0.1.3/motulator.egg-info/SOURCES.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)        1 2023-04-06 21:26:08.000000 motulator-0.1.3/motulator.egg-info/dependency_links.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)       10 2023-04-06 21:26:08.000000 motulator-0.1.3/motulator.egg-info/top_level.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      377 2023-04-06 21:25:53.000000 motulator-0.1.3/pyproject.toml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      601 2023-04-06 21:26:08.275854 motulator-0.1.3/setup.cfg
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 10:01:04.301172 motulator-0.1.4/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1078 2023-04-07 10:00:43.000000 motulator-0.1.4/LICENSE
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8540 2023-04-07 10:01:04.301172 motulator-0.1.4/PKG-INFO
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8005 2023-04-07 10:00:43.000000 motulator-0.1.4/README.md
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 10:01:04.297172 motulator-0.1.4/motulator/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2074 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/__init__.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 10:01:04.301172 motulator-0.1.4/motulator/control/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)       99 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10014 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/common.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8143 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/im_obs_vhz.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15938 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/im_vector.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5664 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/im_vhz.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7263 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/sm_flux_vector.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9447 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/sm_obs_vhz.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7021 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/sm_signal_inj.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    19488 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/sm_torque.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13687 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/control/sm_vector.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6772 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/helpers.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 10:01:04.301172 motulator-0.1.4/motulator/model/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      109 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4071 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/converter.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6881 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/im.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9364 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/im_drive.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5017 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/mech.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10079 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/sm.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6194 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/sm_drive.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8057 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/model/sm_flux_maps.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7514 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/plots.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8255 2023-04-07 10:00:43.000000 motulator-0.1.4/motulator/simulation.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 10:01:04.297172 motulator-0.1.4/motulator.egg-info/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8540 2023-04-07 10:01:04.000000 motulator-0.1.4/motulator.egg-info/PKG-INFO
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      787 2023-04-07 10:01:04.000000 motulator-0.1.4/motulator.egg-info/SOURCES.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)        1 2023-04-07 10:01:04.000000 motulator-0.1.4/motulator.egg-info/dependency_links.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)       10 2023-04-07 10:01:04.000000 motulator-0.1.4/motulator.egg-info/top_level.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      377 2023-04-07 10:00:43.000000 motulator-0.1.4/pyproject.toml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      601 2023-04-07 10:01:04.301172 motulator-0.1.4/setup.cfg
│ │   --- motulator-0.1.3/LICENSE
│ ├── +++ motulator-0.1.4/LICENSE
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/PKG-INFO
│ ├── +++ motulator-0.1.4/PKG-INFO
│ │┄ Files 2% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: motulator
│ │ -Version: 0.1.3
│ │ +Version: 0.1.4
│ │  Summary: Motor Drive Simulator in Python
│ │  Home-page: https://github.com/Aalto-Electric-Drives/motulator
│ │  Author: Marko Hinkkanen
│ │  Author-email: marko.hinkkanen@aalto.fi
│ │  Project-URL: Bug Tracker, https://github.com/Aalto-Electric-Drives/motulator/issues
│ │  Classifier: Programming Language :: Python :: 3
│ │  Classifier: License :: OSI Approved :: MIT License
│ │ @@ -28,15 +28,17 @@
│ │  Installation
│ │  ------------
│ │  This software can be installed using pip: 
│ │  
│ │  ```bash
│ │  pip install motulator
│ │  ```
│ │ -Alternatively, the repository can be cloned.
│ │ +Alternatively, the repository can be cloned:
│ │ +
│ │ +https://aalto-electric-drives.github.io/motulator/installation.html
│ │  
│ │  Usage
│ │  -----
│ │  The following example shows how to create a continuous-time system model, a discrete-time controller, and a simulation object:
│ │  ```python3
│ │  import motulator as mt
│ │ ├── html2text {}
│ │ │ @@ -1,8 +1,8 @@
│ │ │ -Metadata-Version: 2.1 Name: motulator Version: 0.1.3 Summary: Motor Drive
│ │ │ +Metadata-Version: 2.1 Name: motulator Version: 0.1.4 Summary: Motor Drive
│ │ │  Simulator in Python Home-page: https://github.com/Aalto-Electric-Drives/
│ │ │  motulator Author: Marko Hinkkanen Author-email: marko.hinkkanen@aalto.fi
│ │ │  Project-URL: Bug Tracker, https://github.com/Aalto-Electric-Drives/motulator/
│ │ │  issues Classifier: Programming Language :: Python :: 3 Classifier: License ::
│ │ │  OSI Approved :: MIT License Classifier: Operating System :: OS Independent
│ │ │  Requires-Python: >=3.6 Description-Content-Type: text/markdown License-File:
│ │ │  LICENSE # *motulator:* Motor Drive Simulator in Python [![Build Status](https:/
│ │ │ @@ -18,15 +18,16 @@
│ │ │  synchronous reluctance motor, and a permanent-magnet synchronous motor. The
│ │ │  motor models are simulated in the continuous-time domain while the control
│ │ │  algorithms run in discrete time. The default solver is the explicit Runge-Kutta
│ │ │  method of order 5(4) from scipy.integrate.solve_ivp. Simple control algorithms
│ │ │  are provided as examples. The documentation is available here: https://aalto-
│ │ │  electric-drives.github.io/motulator/ Installation ------------ This software
│ │ │  can be installed using pip: ```bash pip install motulator ``` Alternatively,
│ │ │ -the repository can be cloned. Usage ----- The following example shows how to
│ │ │ +the repository can be cloned: https://aalto-electric-drives.github.io/
│ │ │ +motulator/installation.html Usage ----- The following example shows how to
│ │ │  create a continuous-time system model, a discrete-time controller, and a
│ │ │  simulation object: ```python3 import motulator as mt # Continuous-time model
│ │ │  for the drive system motor = mt.InductionMotor() # Motor model mech =
│ │ │  mt.Mechanics() # Mechanics model conv = mt.Inverter() # Converter model mdl =
│ │ │  mt.InductionMotorDrive(motor, mech, conv) # Discrete-time controller pars =
│ │ │  mt.InductionMotorVectorCtrlPars() # Dataclass of control parameters ctrl =
│ │ │  mt.InductionMotorVectorCtrl(pars) # Sensorless controller # Create a simulation
│ │   --- motulator-0.1.3/README.md
│ ├── +++ motulator-0.1.4/README.md
│ │┄ Files 1% similar despite different names
│ │ @@ -13,15 +13,17 @@
│ │  Installation
│ │  ------------
│ │  This software can be installed using pip: 
│ │  
│ │  ```bash
│ │  pip install motulator
│ │  ```
│ │ -Alternatively, the repository can be cloned.
│ │ +Alternatively, the repository can be cloned:
│ │ +
│ │ +https://aalto-electric-drives.github.io/motulator/installation.html
│ │  
│ │  Usage
│ │  -----
│ │  The following example shows how to create a continuous-time system model, a discrete-time controller, and a simulation object:
│ │  ```python3
│ │  import motulator as mt
│ │ ├── html2text {}
│ │ │ @@ -11,15 +11,16 @@
│ │ │  synchronous reluctance motor, and a permanent-magnet synchronous motor. The
│ │ │  motor models are simulated in the continuous-time domain while the control
│ │ │  algorithms run in discrete time. The default solver is the explicit Runge-Kutta
│ │ │  method of order 5(4) from scipy.integrate.solve_ivp. Simple control algorithms
│ │ │  are provided as examples. The documentation is available here: https://aalto-
│ │ │  electric-drives.github.io/motulator/ Installation ------------ This software
│ │ │  can be installed using pip: ```bash pip install motulator ``` Alternatively,
│ │ │ -the repository can be cloned. Usage ----- The following example shows how to
│ │ │ +the repository can be cloned: https://aalto-electric-drives.github.io/
│ │ │ +motulator/installation.html Usage ----- The following example shows how to
│ │ │  create a continuous-time system model, a discrete-time controller, and a
│ │ │  simulation object: ```python3 import motulator as mt # Continuous-time model
│ │ │  for the drive system motor = mt.InductionMotor() # Motor model mech =
│ │ │  mt.Mechanics() # Mechanics model conv = mt.Inverter() # Converter model mdl =
│ │ │  mt.InductionMotorDrive(motor, mech, conv) # Discrete-time controller pars =
│ │ │  mt.InductionMotorVectorCtrlPars() # Dataclass of control parameters ctrl =
│ │ │  mt.InductionMotorVectorCtrl(pars) # Sensorless controller # Create a simulation
│ │   --- motulator-0.1.3/motulator/__init__.py
│ ├── +++ motulator-0.1.4/motulator/__init__.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/common.py
│ ├── +++ motulator-0.1.4/motulator/control/common.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/im_obs_vhz.py
│ ├── +++ motulator-0.1.4/motulator/control/im_obs_vhz.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/im_vector.py
│ ├── +++ motulator-0.1.4/motulator/control/im_vector.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/im_vhz.py
│ ├── +++ motulator-0.1.4/motulator/control/im_vhz.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/sm_flux_vector.py
│ ├── +++ motulator-0.1.4/motulator/control/sm_flux_vector.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/sm_obs_vhz.py
│ ├── +++ motulator-0.1.4/motulator/control/sm_obs_vhz.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/sm_signal_inj.py
│ ├── +++ motulator-0.1.4/motulator/control/sm_signal_inj.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/sm_torque.py
│ ├── +++ motulator-0.1.4/motulator/control/sm_torque.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/control/sm_vector.py
│ ├── +++ motulator-0.1.4/motulator/control/sm_vector.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/helpers.py
│ ├── +++ motulator-0.1.4/motulator/helpers.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/model/converter.py
│ ├── +++ motulator-0.1.4/motulator/model/converter.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/model/im.py
│ ├── +++ motulator-0.1.4/motulator/model/im.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/model/im_drive.py
│ ├── +++ motulator-0.1.4/motulator/model/im_drive.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/model/mech.py
│ ├── +++ motulator-0.1.4/motulator/model/mech.py
│ │┄ Files 2% similar despite different names
│ │ @@ -16,15 +16,16 @@
│ │          Load torque as function of speed, `tau_L_w(w_M)`. For example,
│ │          tau_L_w = b*w_M, where b is the viscous friction coefficient.
│ │      tau_L_t : function
│ │          Load torque as a function of time, `tau_L_t(t)`.
│ │  
│ │      """
│ │  
│ │ -    def __init__(self, J=.015, tau_L_w=lambda w_M: 0, tau_L_t=lambda t: 0):
│ │ +    def __init__(
│ │ +            self, J=.015, tau_L_w=lambda w_M: 0*w_M, tau_L_t=lambda t: 0*t):
│ │          self.J = J
│ │          self.tau_L_t = tau_L_t
│ │          self.tau_L_w = tau_L_w
│ │          # Initial values
│ │          self.w_M0, self.theta_M0 = 0, 0
│ │  
│ │      def f(self, t, w_M, tau_M):
│ │ @@ -112,16 +113,16 @@
│ │      # pylint: disable=too-many-instance-attributes
│ │      def __init__(
│ │              self,
│ │              J_M=.005,
│ │              J_L=.005,
│ │              K_S=700.,
│ │              C_S=.13,
│ │ -            tau_L_w=lambda w_M: 0,
│ │ -            tau_L_t=lambda t: 0):
│ │ +            tau_L_w=lambda w_M: 0*w_M,
│ │ +            tau_L_t=lambda t: 0*t):
│ │          # pylint: disable=too-many-arguments
│ │          # pylint: disable=super-init-not-called
│ │          self.J_M = J_M
│ │          self.J_L = J_L
│ │          self.K_S = K_S
│ │          self.C_S = C_S
│ │          self.tau_L_t = tau_L_t
│ │   --- motulator-0.1.3/motulator/model/sm.py
│ ├── +++ motulator-0.1.4/motulator/model/sm.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/model/sm_drive.py
│ ├── +++ motulator-0.1.4/motulator/model/sm_drive.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/model/sm_flux_maps.py
│ ├── +++ motulator-0.1.4/motulator/model/sm_flux_maps.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/plots.py
│ ├── +++ motulator-0.1.4/motulator/plots.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator/simulation.py
│ ├── +++ motulator-0.1.4/motulator/simulation.py
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/motulator.egg-info/PKG-INFO
│ ├── +++ motulator-0.1.4/motulator.egg-info/PKG-INFO
│ │┄ Files 2% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: motulator
│ │ -Version: 0.1.3
│ │ +Version: 0.1.4
│ │  Summary: Motor Drive Simulator in Python
│ │  Home-page: https://github.com/Aalto-Electric-Drives/motulator
│ │  Author: Marko Hinkkanen
│ │  Author-email: marko.hinkkanen@aalto.fi
│ │  Project-URL: Bug Tracker, https://github.com/Aalto-Electric-Drives/motulator/issues
│ │  Classifier: Programming Language :: Python :: 3
│ │  Classifier: License :: OSI Approved :: MIT License
│ │ @@ -28,15 +28,17 @@
│ │  Installation
│ │  ------------
│ │  This software can be installed using pip: 
│ │  
│ │  ```bash
│ │  pip install motulator
│ │  ```
│ │ -Alternatively, the repository can be cloned.
│ │ +Alternatively, the repository can be cloned:
│ │ +
│ │ +https://aalto-electric-drives.github.io/motulator/installation.html
│ │  
│ │  Usage
│ │  -----
│ │  The following example shows how to create a continuous-time system model, a discrete-time controller, and a simulation object:
│ │  ```python3
│ │  import motulator as mt
│ │ ├── html2text {}
│ │ │ @@ -1,8 +1,8 @@
│ │ │ -Metadata-Version: 2.1 Name: motulator Version: 0.1.3 Summary: Motor Drive
│ │ │ +Metadata-Version: 2.1 Name: motulator Version: 0.1.4 Summary: Motor Drive
│ │ │  Simulator in Python Home-page: https://github.com/Aalto-Electric-Drives/
│ │ │  motulator Author: Marko Hinkkanen Author-email: marko.hinkkanen@aalto.fi
│ │ │  Project-URL: Bug Tracker, https://github.com/Aalto-Electric-Drives/motulator/
│ │ │  issues Classifier: Programming Language :: Python :: 3 Classifier: License ::
│ │ │  OSI Approved :: MIT License Classifier: Operating System :: OS Independent
│ │ │  Requires-Python: >=3.6 Description-Content-Type: text/markdown License-File:
│ │ │  LICENSE # *motulator:* Motor Drive Simulator in Python [![Build Status](https:/
│ │ │ @@ -18,15 +18,16 @@
│ │ │  synchronous reluctance motor, and a permanent-magnet synchronous motor. The
│ │ │  motor models are simulated in the continuous-time domain while the control
│ │ │  algorithms run in discrete time. The default solver is the explicit Runge-Kutta
│ │ │  method of order 5(4) from scipy.integrate.solve_ivp. Simple control algorithms
│ │ │  are provided as examples. The documentation is available here: https://aalto-
│ │ │  electric-drives.github.io/motulator/ Installation ------------ This software
│ │ │  can be installed using pip: ```bash pip install motulator ``` Alternatively,
│ │ │ -the repository can be cloned. Usage ----- The following example shows how to
│ │ │ +the repository can be cloned: https://aalto-electric-drives.github.io/
│ │ │ +motulator/installation.html Usage ----- The following example shows how to
│ │ │  create a continuous-time system model, a discrete-time controller, and a
│ │ │  simulation object: ```python3 import motulator as mt # Continuous-time model
│ │ │  for the drive system motor = mt.InductionMotor() # Motor model mech =
│ │ │  mt.Mechanics() # Mechanics model conv = mt.Inverter() # Converter model mdl =
│ │ │  mt.InductionMotorDrive(motor, mech, conv) # Discrete-time controller pars =
│ │ │  mt.InductionMotorVectorCtrlPars() # Dataclass of control parameters ctrl =
│ │ │  mt.InductionMotorVectorCtrl(pars) # Sensorless controller # Create a simulation
│ │   --- motulator-0.1.3/motulator.egg-info/SOURCES.txt
│ ├── +++ motulator-0.1.4/motulator.egg-info/SOURCES.txt
│ │┄ Files identical despite different names
│ │   --- motulator-0.1.3/setup.cfg
│ ├── +++ motulator-0.1.4/setup.cfg
│ │┄ Files 0% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  [metadata]
│ │  name = motulator
│ │ -version = 0.1.3
│ │ +version = 0.1.4
│ │  author = Marko Hinkkanen
│ │  author_email = marko.hinkkanen@aalto.fi
│ │  description = Motor Drive Simulator in Python
│ │  long_description = file: README.md
│ │  long_description_content_type = text/markdown
│ │  url = https://github.com/Aalto-Electric-Drives/motulator
│ │  project_urls =
