--- tmp/msticpy-2.3.1.tar.gz
+++ tmp/msticpy-2.4.0.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "msticpy-2.3.1.tar", last modified: Fri Feb 24 02:06:04 2023, max compression
│ +gzip compressed data, was "msticpy-2.4.0.tar", last modified: Fri Apr  7 02:24:49 2023, max compression
│   --- msticpy-2.3.1.tar
├── +++ msticpy-2.4.0.tar
│ ├── file list
│ │ @@ -1,402 +1,405 @@
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.082494 msticpy-2.3.1/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1106 2023-02-24 02:05:53.000000 msticpy-2.3.1/LICENSE
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      236 2023-02-24 02:05:53.000000 msticpy-2.3.1/MANIFEST.in
│ │ --rw-r--r--   0 runner    (1001) docker     (123)   487752 2023-02-24 02:05:53.000000 msticpy-2.3.1/NOTICE.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    17413 2023-02-24 02:06:04.082494 msticpy-2.3.1/PKG-INFO
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    15938 2023-02-24 02:05:53.000000 msticpy-2.3.1/README.md
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.038494 msticpy-2.3.1/msticpy/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5473 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)       38 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/_version.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.042494 msticpy-2.3.1/msticpy/analysis/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      743 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/__init__.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.042494 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      414 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8125 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/anomalous.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    29469 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/model.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7992 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/sessionize.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.042494 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      419 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10732 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/cmds_only.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    15670 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/cmds_params_only.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    21586 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/cmds_params_values.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3807 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/data_structures.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4828 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/laplace_smooth.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6404 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/probabilities.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2889 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/cluster_auditd.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1919 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/code_cleanup.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    23201 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/eventcluster.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7202 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/observationlist.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5000 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/outliers.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9898 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/syslog_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    16714 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/analysis/timeseries.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.042494 msticpy-2.3.1/msticpy/auth/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      584 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5502 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/azure_auth.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14849 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/azure_auth_core.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8002 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/cloud_mappings.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2887 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/cred_wrapper.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3763 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/keyring_client.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    18679 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/keyvault_client.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8007 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/keyvault_settings.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4815 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/msal_auth.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9352 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/auth/secret_settings.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.046494 msticpy-2.3.1/msticpy/common/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      875 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      863 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/azure_auth.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1872 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/check_version.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2663 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/data_types.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2272 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/data_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    17918 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/exceptions.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    17430 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/pkg_config.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10832 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/provider_settings.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6386 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/timespan.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.046494 msticpy-2.3.1/msticpy/common/utility/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      838 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/utility/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3623 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/utility/format.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4623 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/utility/ipython.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9031 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/utility/package.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10757 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/utility/types.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14556 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/common/wsconfig.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.046494 msticpy-2.3.1/msticpy/config/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      642 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1800 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_azure.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    12625 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_azure_sentinel.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    12029 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_common.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4851 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_data_providers.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1517 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_keyvault.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      945 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_other_providers.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9086 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_provider_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2740 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_simple_settings.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      966 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_ti_providers.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11988 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/ce_user_defaults.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    12385 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/comp_edit.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    19231 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/compound_ctrls.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6829 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/file_browser.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    24855 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/mp_config_control.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7089 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/mp_config_edit.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    18380 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/config/mp_config_file.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.050494 msticpy-2.3.1/msticpy/context/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      815 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/__init__.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.050494 msticpy-2.3.1/msticpy/context/azure/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      444 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    34998 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/azure_data.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11305 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_analytics.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5407 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_bookmarks.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11923 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_core.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13240 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_dynamic_summary.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    22734 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_dynamic_summary_types.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    16945 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_incidents.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4816 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_search.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    15863 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_ti.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10791 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9880 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_watchlists.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    12290 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/azure/sentinel_workspaces.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8405 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/contextlookup.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.050494 msticpy-2.3.1/msticpy/context/contextproviders/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      273 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/contextproviders/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10638 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/contextproviders/context_provider_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4357 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/contextproviders/http_context_provider.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8887 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/contextproviders/servicenow.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11325 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/domain_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    33013 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/geoip.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9262 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/http_provider.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    25638 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/ip_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    26852 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/lookup.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      737 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/lookup_result.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10669 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/preprocess_observable.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14327 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/provider_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8495 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tilookup.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.054494 msticpy-2.3.1/msticpy/context/tiproviders/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1032 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4490 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/alienvault_otx.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4892 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/azure_sent_byoti.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3843 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/greynoise.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5525 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/ibm_xforce.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5009 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/intsights.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14334 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/kql_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6095 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/mblookup.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9223 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/open_page_rank.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2308 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/result_severity.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13914 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/riskiq.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4571 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/ti_http_provider.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10303 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/ti_provider_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5506 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/tor_exit_nodes.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5515 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/tiproviders/virustotal.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.054494 msticpy-2.3.1/msticpy/context/vtlookupv3/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      959 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/vtlookupv3/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14897 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/vtlookupv3/vtfile_behavior.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    29818 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/vtlookupv3/vtlookup.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    32429 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/context/vtlookupv3/vtlookupv3.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.054494 msticpy-2.3.1/msticpy/data/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1136 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/__init__.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.054494 msticpy-2.3.1/msticpy/data/azure/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      952 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/azure/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      919 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/azure/azure_blob_storage.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      897 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/azure/azure_data.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      816 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/azure_blob_storage.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      769 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/azure_data.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      819 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/azure_sentinel.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.054494 msticpy-2.3.1/msticpy/data/core/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      341 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    29568 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/data_providers.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3790 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/data_query_reader.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3791 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/param_extractor.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1348 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/query_container.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3902 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/query_defns.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    19982 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/query_source.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    12426 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/core/query_store.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14411 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/data_obfus.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      893 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/data_providers.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.058494 msticpy-2.3.1/msticpy/data/drivers/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2130 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    15319 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/cybereason_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6530 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/driver_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6719 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/elastic_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    23245 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/kql_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11853 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/kusto_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4780 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/local_data_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4434 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/mdatp_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    29011 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/mordor_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13507 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/odata_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6202 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/resource_graph_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2410 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/security_graph_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14395 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/splunk_driver.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    22155 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/drivers/sumologic_driver.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.038494 msticpy-2.3.1/msticpy/data/queries/
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.058494 msticpy-2.3.1/msticpy/data/queries/cybereason/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2654 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/cybereason/cybereason_connections.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1730 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/cybereason/cybereason_hosts.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4255 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/cybereason/cybereason_processes.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.058494 msticpy-2.3.1/msticpy/data/queries/localdata/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1916 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/localdata/local_data.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.058494 msticpy-2.3.1/msticpy/data/queries/m365d/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7724 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_alerts.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1959 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_file.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    29648 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_hunting.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2668 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_network.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2508 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_process.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2272 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_user.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.058494 msticpy-2.3.1/msticpy/data/queries/mde/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2505 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_alerts.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1943 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_file.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    29235 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_hunting.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2599 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_network.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2973 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_process.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2668 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_user.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.058494 msticpy-2.3.1/msticpy/data/queries/msgraph/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6360 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/msgraph/graph_alerts.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.062494 msticpy-2.3.1/msticpy/data/queries/mssentinel/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7726 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_alert.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2151 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_az_dns.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2723 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_az_network.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8789 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_azure.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6810 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_azuresentinel.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2033 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_heartbeat_info.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1745 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxauditd.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5532 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_activity.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2317 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_apps.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11627 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_logon.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5593 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_sysmon.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11661 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_net.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2592 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_o365.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5779 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_threatintel.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5959 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_timeseries.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7725 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_winevent.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6990 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_winevent_logon.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11686 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_winevent_proc.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.062494 msticpy-2.3.1/msticpy/data/queries/resourcegraph/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3480 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/resourcegraph/resource_graph_queries.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2711 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/resourcegraph/sentinel_resources.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.062494 msticpy-2.3.1/msticpy/data/queries/splunk/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2347 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/splunk/splunk_alert_queries.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2533 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/splunk/splunk_authentication_queries.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3123 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/splunk/splunk_queries.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.062494 msticpy-2.3.1/msticpy/data/queries/sumologic/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1405 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/queries/sumologic/sumologic_queries.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      897 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/query_container.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      881 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/query_defns.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    20260 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/sql_to_kql.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.062494 msticpy-2.3.1/msticpy/data/storage/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      501 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/storage/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8915 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/storage/azure_blob_storage.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.066494 msticpy-2.3.1/msticpy/data/uploaders/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      593 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/uploaders/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7588 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/uploaders/loganalytics_uploader.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9005 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/uploaders/splunk_uploader.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2345 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/data/uploaders/uploader_base.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.066494 msticpy-2.3.1/msticpy/datamodel/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)       66 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/__init__.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.070494 msticpy-2.3.1/msticpy/datamodel/entities/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4194 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6847 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/account.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14897 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/alert.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3293 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/azure_resource.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2134 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/cloud_application.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2758 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/cloud_logon_session.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2725 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/dns.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    22029 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/entity.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2141 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/entity_enums.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2511 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/entity_graph.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6182 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/file.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2434 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/file_hash.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2972 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/geo_location.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2419 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/graph_property.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4978 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/host.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3445 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/host_logon_session.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3625 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/iot_device.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3637 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/ip_address.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4858 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/mail_cluster.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7051 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/mail_message.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3007 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/mailbox.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2456 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/malware.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3138 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/network_connection.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6650 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/process.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2298 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/registry_key.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2638 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/registry_value.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2250 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/security_group.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3108 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/submission_mail.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2462 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/threat_intelligence.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1430 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/unknown_entity.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3270 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/entities/url.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      719 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/pivot.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.070494 msticpy-2.3.1/msticpy/datamodel/soc/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      435 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/soc/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6164 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/soc/incident.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4791 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/datamodel/soc/sentinel_alert.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.070494 msticpy-2.3.1/msticpy/init/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      514 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    15434 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/azure_ml_tools.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    17419 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/azure_synapse_tools.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8481 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/mp_pandas_accessors.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    30599 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/nbinit.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6073 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/nbmagics.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13591 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.070494 msticpy-2.3.1/msticpy/init/pivot_core/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      352 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9063 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/pivot_browser.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1357 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/pivot_container.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3279 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/pivot_magic_core.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    15811 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/pivot_pd_accessor.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10435 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/pivot_pipeline.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    19763 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/pivot_register.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7431 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_core/pivot_register_reader.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.070494 msticpy-2.3.1/msticpy/init/pivot_init/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      469 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_init/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    26934 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_init/pivot_data_queries.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5511 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_init/pivot_ti_provider.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6164 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/pivot_init/vt_pivot.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9341 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/init/user_config.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      507 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/msticpyconfig.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.074494 msticpy-2.3.1/msticpy/nbtools/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1760 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      869 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/data_viewer.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      553 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/entityschema.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      861 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/foliummap.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      873 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/morph_charts.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      861 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/nbdisplay.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      867 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/nbwidgets.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      900 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/observationlist.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1254 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/process_tree.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7868 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/security_alert.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11227 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/security_alert_graph.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    18315 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/security_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3565 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/security_event.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      865 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/ti_browser.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      857 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/timeline.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      893 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/timeline_duration.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      905 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/timeline_pd_accessor.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      865 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/timeseries.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      763 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/utility.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      707 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbtools/wsconfig.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.074494 msticpy-2.3.1/msticpy/nbwidgets/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      976 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5862 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/core.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3596 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/get_environment_key.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2464 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/get_text.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     3826 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/lookback.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5689 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/option_buttons.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2810 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/progress.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14485 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/query_time.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11759 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/select_alert.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10931 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/select_item.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6858 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/nbwidgets/select_subset.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.074494 msticpy-2.3.1/msticpy/resources/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)   104245 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/resources/WinSecurityEvent.json
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      188 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/resources/cmd_line_rules.json
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6899 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/resources/mp_pivot_reg.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8502 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/resources/mpconfig_defaults.yaml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1641 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/resources/obfuscation_cols.yaml
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.078494 msticpy-2.3.1/msticpy/sectools/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1665 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      895 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/auditdextract.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      891 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/base64unpack.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      875 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/cmd_line.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      886 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/domain_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      888 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/eventcluster.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      858 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/geoip.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      883 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/iocextract.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      870 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/ip_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      919 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/proc_tree_build_mde.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      927 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/proc_tree_build_winlx.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      911 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/proc_tree_builder.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      907 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/proc_tree_schema.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      915 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/proc_tree_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      737 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/sectools_magics.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      888 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/syslog_utils.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      869 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/tilookup.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.078494 msticpy-2.3.1/msticpy/sectools/tiproviders/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      436 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/tiproviders/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1025 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/tiproviders/ti_provider_base.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      902 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/vtlookup.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.078494 msticpy-2.3.1/msticpy/sectools/vtlookupv3/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      702 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/vtlookupv3/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      939 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/vtlookupv3/vtfile_behavior.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      912 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/vtlookupv3/vtlookupv3.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      913 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/sectools/vtlookupv3/vtobject_browser.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.078494 msticpy-2.3.1/msticpy/transform/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      506 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    16277 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/auditdextract.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    30712 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/base64unpack.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5612 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/cmd_line.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    26354 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/iocextract.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4748 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/network.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13044 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/proc_tree_build_mde.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    12671 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/proc_tree_build_winlx.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6510 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/proc_tree_builder.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     7615 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/proc_tree_schema.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9935 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/transform/process_tree_utils.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.082494 msticpy-2.3.1/msticpy/vis/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1055 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/__init__.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2863 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/code_view.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    18199 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/data_viewer.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    16852 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/entity_graph_tools.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    33234 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/foliummap.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10153 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/matrix_plot.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    14939 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/mordor_browser.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     5521 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/morph_charts.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    23583 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/mp_pandas_plot.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     9180 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/nbdisplay.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10088 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/network_plot.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    21655 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/process_tree.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2888 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/query_browser.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     6445 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/ti_browser.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    17499 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/timeline.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13204 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/timeline_common.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8594 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/timeline_duration.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    10655 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/timeline_pd_accessor.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    11747 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/timeline_values.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     8572 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/timeseries.py
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4503 2023-02-24 02:05:53.000000 msticpy-2.3.1/msticpy/vis/vtobject_browser.py
│ │ -drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-02-24 02:06:04.042494 msticpy-2.3.1/msticpy.egg-info/
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    17413 2023-02-24 02:06:04.000000 msticpy-2.3.1/msticpy.egg-info/PKG-INFO
│ │ --rw-r--r--   0 runner    (1001) docker     (123)    13372 2023-02-24 02:06:04.000000 msticpy-2.3.1/msticpy.egg-info/SOURCES.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)        1 2023-02-24 02:06:04.000000 msticpy-2.3.1/msticpy.egg-info/dependency_links.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)        1 2023-02-24 02:06:03.000000 msticpy-2.3.1/msticpy.egg-info/not-zip-safe
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     4883 2023-02-24 02:06:04.000000 msticpy-2.3.1/msticpy.egg-info/requires.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)        8 2023-02-24 02:06:04.000000 msticpy-2.3.1/msticpy.egg-info/top_level.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      209 2023-02-24 02:05:53.000000 msticpy-2.3.1/pyproject.toml
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1299 2023-02-24 02:05:53.000000 msticpy-2.3.1/requirements-all.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      607 2023-02-24 02:05:53.000000 msticpy-2.3.1/requirements-dev.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)      805 2023-02-24 02:05:53.000000 msticpy-2.3.1/requirements.txt
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     1646 2023-02-24 02:06:04.082494 msticpy-2.3.1/setup.cfg
│ │ --rw-r--r--   0 runner    (1001) docker     (123)     2617 2023-02-24 02:05:53.000000 msticpy-2.3.1/setup.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.049796 msticpy-2.4.0/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1106 2023-04-07 02:24:33.000000 msticpy-2.4.0/LICENSE
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      236 2023-04-07 02:24:33.000000 msticpy-2.4.0/MANIFEST.in
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)   487752 2023-04-07 02:24:33.000000 msticpy-2.4.0/NOTICE.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    17435 2023-04-07 02:24:49.049796 msticpy-2.4.0/PKG-INFO
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15960 2023-04-07 02:24:33.000000 msticpy-2.4.0/README.md
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.953795 msticpy-2.4.0/msticpy/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5549 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)       38 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/_version.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.957795 msticpy-2.4.0/msticpy/analysis/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      743 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/__init__.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.957795 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      414 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8125 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/anomalous.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    29469 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/model.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7992 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/sessionize.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.957795 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      419 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10732 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/cmds_only.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15670 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/cmds_params_only.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    21586 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/cmds_params_values.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3807 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/data_structures.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4828 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/laplace_smooth.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6404 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/probabilities.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2889 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/cluster_auditd.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1919 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/code_cleanup.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    23201 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/eventcluster.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7202 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/observationlist.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5000 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/outliers.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9898 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/syslog_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    16714 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/analysis/timeseries.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.961795 msticpy-2.4.0/msticpy/auth/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      584 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5502 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/azure_auth.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15662 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/azure_auth_core.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8006 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/cloud_mappings.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2887 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/cred_wrapper.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3763 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/keyring_client.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    18623 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/keyvault_client.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8007 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/keyvault_settings.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4815 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/msal_auth.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9358 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/auth/secret_settings.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.965795 msticpy-2.4.0/msticpy/common/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      875 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      863 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/azure_auth.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1872 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/check_version.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2663 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/data_types.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2272 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/data_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    17918 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/exceptions.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    18898 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/pkg_config.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10798 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/provider_settings.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6386 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/timespan.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.965795 msticpy-2.4.0/msticpy/common/utility/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      838 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/utility/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3623 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/utility/format.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6074 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/utility/ipython.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9031 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/utility/package.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10757 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/utility/types.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14549 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/common/wsconfig.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.969795 msticpy-2.4.0/msticpy/config/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      642 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1800 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_azure.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    12625 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_azure_sentinel.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    12029 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_common.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4851 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_data_providers.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1517 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_keyvault.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      945 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_other_providers.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9086 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_provider_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2740 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_simple_settings.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      966 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_ti_providers.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11988 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/ce_user_defaults.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    12385 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/comp_edit.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    19231 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/compound_ctrls.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6829 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/file_browser.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    24855 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/mp_config_control.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7089 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/mp_config_edit.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    18380 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/config/mp_config_file.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.973795 msticpy-2.4.0/msticpy/context/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      815 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/__init__.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.977795 msticpy-2.4.0/msticpy/context/azure/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      444 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    34998 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/azure_data.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11305 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_analytics.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5407 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_bookmarks.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11912 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_core.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14990 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_dynamic_summary.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    25652 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_dynamic_summary_types.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    16945 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_incidents.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4816 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_search.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15863 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_ti.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10791 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9880 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_watchlists.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    12290 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/azure/sentinel_workspaces.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8405 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/contextlookup.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.977795 msticpy-2.4.0/msticpy/context/contextproviders/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      273 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/contextproviders/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10638 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/contextproviders/context_provider_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4357 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/contextproviders/http_context_provider.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8887 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/contextproviders/servicenow.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11266 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/domain_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    33053 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/geoip.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9262 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/http_provider.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    25638 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/ip_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    26852 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/lookup.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      797 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/lookup_result.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10684 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/preprocess_observable.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14327 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/provider_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8513 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tilookup.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.981795 msticpy-2.4.0/msticpy/context/tiproviders/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1077 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4490 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/alienvault_otx.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4892 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/azure_sent_byoti.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3843 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/greynoise.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5525 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/ibm_xforce.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5009 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/intsights.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14334 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/kql_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6095 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/mblookup.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9223 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/open_page_rank.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11441 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/pulsedive.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2513 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/result_severity.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13914 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/riskiq.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4571 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/ti_http_provider.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10303 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/ti_provider_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5506 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/tor_exit_nodes.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5515 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/tiproviders/virustotal.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.985795 msticpy-2.4.0/msticpy/context/vtlookupv3/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      959 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/vtlookupv3/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15011 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/vtlookupv3/vtfile_behavior.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    29926 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/vtlookupv3/vtlookup.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    32429 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/context/vtlookupv3/vtlookupv3.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.985795 msticpy-2.4.0/msticpy/data/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1136 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/__init__.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.989796 msticpy-2.4.0/msticpy/data/azure/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      952 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/azure/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      919 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/azure/azure_blob_storage.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      897 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/azure/azure_data.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      816 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/azure_blob_storage.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      769 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/azure_data.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      819 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/azure_sentinel.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.989796 msticpy-2.4.0/msticpy/data/core/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      341 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    29510 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/data_providers.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3896 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/data_query_reader.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3791 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/param_extractor.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1348 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/query_container.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3902 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/query_defns.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    19982 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/query_source.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    12426 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/core/query_store.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14411 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/data_obfus.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      893 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/data_providers.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.993795 msticpy-2.4.0/msticpy/data/drivers/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2130 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15319 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/cybereason_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6530 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/driver_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6719 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/elastic_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    23215 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/kql_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11853 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/kusto_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4754 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/local_data_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4434 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/mdatp_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    29077 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/mordor_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13497 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/odata_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6202 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/resource_graph_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2410 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/security_graph_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14395 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/splunk_driver.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    22155 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/drivers/sumologic_driver.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.945795 msticpy-2.4.0/msticpy/data/queries/
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.997795 msticpy-2.4.0/msticpy/data/queries/cybereason/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2654 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/cybereason/cybereason_connections.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1730 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/cybereason/cybereason_hosts.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4255 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/cybereason/cybereason_processes.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.997795 msticpy-2.4.0/msticpy/data/queries/localdata/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1916 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/localdata/local_data.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.997795 msticpy-2.4.0/msticpy/data/queries/m365d/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7724 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_alerts.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1959 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_file.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    29648 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_hunting.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2668 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_network.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2508 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_process.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2272 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_user.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.001796 msticpy-2.4.0/msticpy/data/queries/mde/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2505 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_alerts.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1943 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_file.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    29235 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_hunting.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2599 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_network.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2973 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_process.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2668 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_user.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.001796 msticpy-2.4.0/msticpy/data/queries/msgraph/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6360 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/msgraph/graph_alerts.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.005796 msticpy-2.4.0/msticpy/data/queries/mssentinel/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7726 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_alert.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2151 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_az_dns.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2723 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_az_network.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8789 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_azure.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6810 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_azuresentinel.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2033 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_heartbeat_info.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1745 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxauditd.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5532 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_activity.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2317 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_apps.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11627 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_logon.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5593 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_sysmon.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11661 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_net.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2592 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_o365.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5779 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_threatintel.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5959 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_timeseries.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7725 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_winevent.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6990 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_winevent_logon.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11686 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_winevent_proc.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.005796 msticpy-2.4.0/msticpy/data/queries/resourcegraph/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3480 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/resourcegraph/resource_graph_queries.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2711 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/resourcegraph/sentinel_resources.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.009796 msticpy-2.4.0/msticpy/data/queries/splunk/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2347 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/splunk/splunk_alert_queries.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2533 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/splunk/splunk_authentication_queries.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3123 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/splunk/splunk_queries.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.009796 msticpy-2.4.0/msticpy/data/queries/sumologic/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1405 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/queries/sumologic/sumologic_queries.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      897 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/query_container.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      881 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/query_defns.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    20260 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/sql_to_kql.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.009796 msticpy-2.4.0/msticpy/data/storage/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      501 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/storage/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8915 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/storage/azure_blob_storage.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.009796 msticpy-2.4.0/msticpy/data/uploaders/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      593 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/uploaders/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7515 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/uploaders/loganalytics_uploader.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9005 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/uploaders/splunk_uploader.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2345 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/data/uploaders/uploader_base.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.009796 msticpy-2.4.0/msticpy/datamodel/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)       66 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/__init__.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.021796 msticpy-2.4.0/msticpy/datamodel/entities/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4194 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6847 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/account.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14897 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/alert.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3293 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/azure_resource.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2134 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/cloud_application.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2758 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/cloud_logon_session.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2725 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/dns.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    22029 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/entity.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2141 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/entity_enums.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2511 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/entity_graph.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6182 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/file.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2434 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/file_hash.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2972 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/geo_location.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2419 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/graph_property.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4978 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/host.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3445 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/host_logon_session.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3625 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/iot_device.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3637 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/ip_address.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4858 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/mail_cluster.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7051 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/mail_message.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3007 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/mailbox.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2456 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/malware.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3138 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/network_connection.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6852 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/process.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2298 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/registry_key.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2638 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/registry_value.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2250 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/security_group.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3108 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/submission_mail.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2462 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/threat_intelligence.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1430 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/unknown_entity.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3270 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/entities/url.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      719 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/pivot.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.021796 msticpy-2.4.0/msticpy/datamodel/soc/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      435 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/soc/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6164 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/soc/incident.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4791 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/datamodel/soc/sentinel_alert.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.021796 msticpy-2.4.0/msticpy/init/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      514 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15537 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/azure_ml_tools.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    19979 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/azure_synapse_tools.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2423 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/logging.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8481 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/mp_pandas_accessors.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    32679 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/nbinit.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7014 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/nbmagics.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13591 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.025796 msticpy-2.4.0/msticpy/init/pivot_core/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      352 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9063 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/pivot_browser.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1357 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/pivot_container.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3279 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/pivot_magic_core.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    15811 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/pivot_pd_accessor.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10435 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/pivot_pipeline.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    19763 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/pivot_register.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7457 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_core/pivot_register_reader.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.025796 msticpy-2.4.0/msticpy/init/pivot_init/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      469 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_init/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    26897 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_init/pivot_data_queries.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5537 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_init/pivot_ti_provider.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6164 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/pivot_init/vt_pivot.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9345 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/init/user_config.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      507 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/msticpyconfig.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.029796 msticpy-2.4.0/msticpy/nbtools/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1760 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      869 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/data_viewer.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      553 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/entityschema.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      861 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/foliummap.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      873 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/morph_charts.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      861 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/nbdisplay.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      867 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/nbwidgets.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      900 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/observationlist.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1254 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/process_tree.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     7868 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/security_alert.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11227 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/security_alert_graph.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    18315 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/security_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3565 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/security_event.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      865 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/ti_browser.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      857 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/timeline.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      893 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/timeline_duration.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      905 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/timeline_pd_accessor.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      865 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/timeseries.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      763 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/utility.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      707 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbtools/wsconfig.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.033796 msticpy-2.4.0/msticpy/nbwidgets/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      976 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5862 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/core.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3596 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/get_environment_key.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2464 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/get_text.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     3826 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/lookback.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5689 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/option_buttons.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2810 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/progress.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14485 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/query_time.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    11759 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/select_alert.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10931 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/select_item.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6858 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/nbwidgets/select_subset.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.033796 msticpy-2.4.0/msticpy/resources/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)   104245 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/resources/WinSecurityEvent.json
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      188 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/resources/cmd_line_rules.json
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6899 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/resources/mp_pivot_reg.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8502 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/resources/mpconfig_defaults.yaml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1641 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/resources/obfuscation_cols.yaml
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.037796 msticpy-2.4.0/msticpy/sectools/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1665 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      895 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/auditdextract.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      891 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/base64unpack.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      875 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/cmd_line.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      886 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/domain_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      888 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/eventcluster.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      858 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/geoip.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      883 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/iocextract.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      870 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/ip_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      919 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/proc_tree_build_mde.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      927 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/proc_tree_build_winlx.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      911 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/proc_tree_builder.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      907 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/proc_tree_schema.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      915 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/proc_tree_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      737 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/sectools_magics.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      888 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/syslog_utils.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      869 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/tilookup.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.037796 msticpy-2.4.0/msticpy/sectools/tiproviders/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      436 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/tiproviders/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1025 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/tiproviders/ti_provider_base.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      902 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/vtlookup.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.041796 msticpy-2.4.0/msticpy/sectools/vtlookupv3/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      702 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/vtlookupv3/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      939 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/vtlookupv3/vtfile_behavior.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      912 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/vtlookupv3/vtlookupv3.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      913 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/sectools/vtlookupv3/vtobject_browser.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.041796 msticpy-2.4.0/msticpy/transform/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      506 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    16277 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/auditdextract.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    30712 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/base64unpack.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5612 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/cmd_line.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    26354 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/iocextract.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4748 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/network.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13044 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/proc_tree_build_mde.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    12671 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/proc_tree_build_winlx.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6823 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/proc_tree_builder.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8073 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/proc_tree_schema.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13847 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/transform/process_tree_utils.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:49.049796 msticpy-2.4.0/msticpy/vis/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1055 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/__init__.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2863 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/code_view.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    18229 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/data_viewer.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    17731 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/entity_graph_tools.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2337 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/figure_dimension.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    33234 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/foliummap.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10309 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/matrix_plot.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    14928 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/mordor_browser.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     5521 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/morph_charts.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    23583 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/mp_pandas_plot.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     9180 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/nbdisplay.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10997 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/network_plot.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    22523 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/process_tree.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2888 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/query_browser.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     6445 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/ti_browser.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    17827 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/timeline.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13654 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/timeline_common.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8776 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/timeline_duration.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    10655 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/timeline_pd_accessor.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    12034 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/timeline_values.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     8771 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/timeseries.py
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4503 2023-04-07 02:24:34.000000 msticpy-2.4.0/msticpy/vis/vtobject_browser.py
│ │ +drwxr-xr-x   0 runner    (1001) docker     (123)        0 2023-04-07 02:24:48.953795 msticpy-2.4.0/msticpy.egg-info/
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    17435 2023-04-07 02:24:48.000000 msticpy-2.4.0/msticpy.egg-info/PKG-INFO
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)    13469 2023-04-07 02:24:48.000000 msticpy-2.4.0/msticpy.egg-info/SOURCES.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)        1 2023-04-07 02:24:48.000000 msticpy-2.4.0/msticpy.egg-info/dependency_links.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)        1 2023-04-07 02:24:48.000000 msticpy-2.4.0/msticpy.egg-info/not-zip-safe
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     4881 2023-04-07 02:24:48.000000 msticpy-2.4.0/msticpy.egg-info/requires.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)        8 2023-04-07 02:24:48.000000 msticpy-2.4.0/msticpy.egg-info/top_level.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      209 2023-04-07 02:24:34.000000 msticpy-2.4.0/pyproject.toml
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1299 2023-04-07 02:24:34.000000 msticpy-2.4.0/requirements-all.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      607 2023-04-07 02:24:34.000000 msticpy-2.4.0/requirements-dev.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)      806 2023-04-07 02:24:34.000000 msticpy-2.4.0/requirements.txt
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     1646 2023-04-07 02:24:49.049796 msticpy-2.4.0/setup.cfg
│ │ +-rw-r--r--   0 runner    (1001) docker     (123)     2616 2023-04-07 02:24:34.000000 msticpy-2.4.0/setup.py
│ │   --- msticpy-2.3.1/LICENSE
│ ├── +++ msticpy-2.4.0/LICENSE
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/NOTICE.txt
│ ├── +++ msticpy-2.4.0/NOTICE.txt
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/PKG-INFO
│ ├── +++ msticpy-2.4.0/PKG-INFO
│ │┄ Files 1% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: msticpy
│ │ -Version: 2.3.1
│ │ +Version: 2.4.0
│ │  Summary: MSTIC Security Tools
│ │  Home-page: https://github.com/microsoft/msticpy
│ │  Author: Ian Hellen
│ │  Author-email: ianhelle@microsoft.com
│ │  Maintainer: Pete Bryan
│ │  Maintainer-email: peter.bryan@microsoft.com
│ │  License: MIT License
│ │ @@ -131,15 +131,15 @@
│ │  [docs/notebooks](https://github.com/microsoft/msticpy/blob/master/docs/notebooks)
│ │  folder and accompanying notebooks.
│ │  
│ │  You can also browse through the sample notebooks referenced at the end of this document
│ │  to see some of the functionality used in context. You can play with some of the package
│ │  functions in this interactive demo on mybinder.org.
│ │  
│ │ -[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Azure/Azure-Sentinel-Notebooks/master?filepath=%2Fnbdemo%2Fmsticpy%20demo.ipynb)
│ │ +[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Azure/Azure-Sentinel-Notebooks/master?filepath=A%20Tour%20of%20Cybersec%20notebook%20features.ipynb)
│ │  
│ │  ---
│ │  
│ │  ## Log Data Acquisition
│ │  
│ │  QueryProvider is an extensible query library targeting Azure Sentinel/Log Analytics,
│ │  Splunk, OData
│ │ @@ -172,15 +172,15 @@
│ │  
│ │  The GeoIP lookup classes allow you to match the geo-locations of IP addresses
│ │  using either:
│ │  
│ │  - GeoLiteLookup - Maxmind Geolite (see <https://www.maxmind.com>)
│ │  - IPStackLookup  - IPStack (see <https://ipstack.com>)
│ │  
│ │ -<img src="./docs/source/visualization/_static/FoliumMap-01.png"
│ │ +<img src="./docs/source/visualization/_static/folium_sf_zoom.png"
│ │    alt="Folium map"
│ │    title="Plotting Geo IP Location" height="200" />
│ │  
│ │  [GeoIP Lookup](https://msticpy.readthedocs.io/en/latest/data_acquisition/GeoIPLookups.html)
│ │  and
│ │  [GeoIP Notebook](https://github.com/microsoft/msticpy/blob/master/docs/notebooks/GeoIPLookups.ipynb)
│ │   --- msticpy-2.3.1/README.md
│ ├── +++ msticpy-2.4.0/README.md
│ │┄ Files 1% similar despite different names
│ │ @@ -80,15 +80,15 @@
│ │  [docs/notebooks](https://github.com/microsoft/msticpy/blob/master/docs/notebooks)
│ │  folder and accompanying notebooks.
│ │  
│ │  You can also browse through the sample notebooks referenced at the end of this document
│ │  to see some of the functionality used in context. You can play with some of the package
│ │  functions in this interactive demo on mybinder.org.
│ │  
│ │ -[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Azure/Azure-Sentinel-Notebooks/master?filepath=%2Fnbdemo%2Fmsticpy%20demo.ipynb)
│ │ +[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Azure/Azure-Sentinel-Notebooks/master?filepath=A%20Tour%20of%20Cybersec%20notebook%20features.ipynb)
│ │  
│ │  ---
│ │  
│ │  ## Log Data Acquisition
│ │  
│ │  QueryProvider is an extensible query library targeting Azure Sentinel/Log Analytics,
│ │  Splunk, OData
│ │ @@ -121,15 +121,15 @@
│ │  
│ │  The GeoIP lookup classes allow you to match the geo-locations of IP addresses
│ │  using either:
│ │  
│ │  - GeoLiteLookup - Maxmind Geolite (see <https://www.maxmind.com>)
│ │  - IPStackLookup  - IPStack (see <https://ipstack.com>)
│ │  
│ │ -<img src="./docs/source/visualization/_static/FoliumMap-01.png"
│ │ +<img src="./docs/source/visualization/_static/folium_sf_zoom.png"
│ │    alt="Folium map"
│ │    title="Plotting Geo IP Location" height="200" />
│ │  
│ │  [GeoIP Lookup](https://msticpy.readthedocs.io/en/latest/data_acquisition/GeoIPLookups.html)
│ │  and
│ │  [GeoIP Notebook](https://github.com/microsoft/msticpy/blob/master/docs/notebooks/GeoIPLookups.ipynb)
│ │   --- msticpy-2.3.1/msticpy/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/__init__.py
│ │┄ Files 2% similar despite different names
│ │ @@ -95,14 +95,15 @@
│ │  Running the nbinit function performs a number of functions
│ │  that allow you start working in a notebook more quickly:
│ │  
│ │  >>> import msticpy as mp
│ │  >>> mp.init_notebook()
│ │  
│ │  This module performs several steps to initialize MSTICPy:
│ │ +
│ │  - imports a number of standard packages (e.g. pandas) into the notebook
│ │  - imports a number of modules and functions from msticpy
│ │  - checks the version of MSTICPy
│ │  - checks for presence and validates msticpyconfig.yaml
│ │  - imports entities and initialized pivot functions
│ │  - initializes pandas with the .mp and .mp_plot accessors that
│ │    give you quick access to many MSTICPy functions from a pandas
│ │ @@ -120,19 +121,21 @@
│ │  from . import nbwidgets
│ │  
│ │  # flake8: noqa: F403
│ │  from ._version import VERSION
│ │  from .common import pkg_config as settings
│ │  from .common.check_version import check_version
│ │  from .common.utility import search_name as search
│ │ +from .init.logging import set_logging_level, setup_logging
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen, Pete Bryan, Ashwin Patil"
│ │  
│ │  refresh_config = settings.refresh_config
│ │ +setup_logging()
│ │  
│ │  if not os.environ.get("KQLMAGIC_EXTRAS_REQUIRES"):
│ │      os.environ["KQLMAGIC_EXTRAS_REQUIRES"] = "jupyter-basic"
│ │  
│ │  _STATIC_ATTRIBS = list(locals().keys())
│ │  
│ │  _DEFAULT_IMPORTS = {
│ │   --- msticpy-2.3.1/msticpy/analysis/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/anomalous.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/anomalous.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/model.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/model.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/sessionize.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/sessionize.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/cmds_only.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/cmds_only.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/cmds_params_only.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/cmds_params_only.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/cmds_params_values.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/cmds_params_values.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/data_structures.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/data_structures.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/laplace_smooth.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/laplace_smooth.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/anomalous_sequence/utils/probabilities.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/anomalous_sequence/utils/probabilities.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/cluster_auditd.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/cluster_auditd.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/code_cleanup.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/code_cleanup.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/eventcluster.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/eventcluster.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/observationlist.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/observationlist.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/outliers.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/outliers.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/syslog_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/syslog_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/analysis/timeseries.py
│ ├── +++ msticpy-2.4.0/msticpy/analysis/timeseries.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/auth/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/auth/azure_auth.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/azure_auth.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/auth/azure_auth_core.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/azure_auth_core.py
│ │┄ Files 5% similar despite different names
│ │ @@ -10,15 +10,14 @@
│ │  import sys
│ │  from collections import namedtuple
│ │  from datetime import datetime
│ │  from enum import Enum
│ │  from typing import List, Optional, Tuple, Union
│ │  
│ │  from azure.common.credentials import get_cli_profile
│ │ -from azure.common.exceptions import CloudError
│ │  from azure.identity import (
│ │      AzureCliCredential,
│ │      AzurePowerShellCredential,
│ │      CertificateCredential,
│ │      ChainedTokenCredential,
│ │      ClientSecretCredential,
│ │      DeviceCodeCredential,
│ │ @@ -35,17 +34,23 @@
│ │  # pylint: disable=unused-import
│ │  from .cloud_mappings import AzureCloudConfig, default_auth_methods  # noqa: F401
│ │  from .cred_wrapper import CredentialWrapper
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Pete Bryan"
│ │  
│ │ +logger = logging.getLogger(__name__)
│ │  
│ │  AzCredentials = namedtuple("AzCredentials", ["legacy", "modern"])
│ │  
│ │ +_HELP_URI = (
│ │ +    "https://msticpy.readthedocs.io/en/latest/"
│ │ +    "getting_started/AzureAuthentication.html"
│ │ +)
│ │ +
│ │  
│ │  # pylint: disable=too-few-public-methods
│ │  class AzureCredEnvNames:
│ │      """Enumeration of Azure environment credential names."""
│ │  
│ │      AZURE_CLIENT_ID = "AZURE_CLIENT_ID"  # The app ID for the service principal
│ │      AZURE_TENANT_ID = "AZURE_TENANT_ID"  # The service principal's Azure AD tenant ID
│ │ @@ -60,14 +65,15 @@
│ │      """Build a credential from environment variables."""
│ │      del kwargs
│ │      if (
│ │          AzureCredEnvNames.AZURE_CLIENT_ID not in os.environ
│ │          and AzureCredEnvNames.AZURE_CLIENT_SECRET not in os.environ
│ │      ):
│ │          # avoid creating env credential if require envs not set.
│ │ +        logger.info("'env' credential requested but required env vars not set")
│ │          return None
│ │      return EnvironmentCredential(authority=aad_uri)  # type: ignore
│ │  
│ │  
│ │  def _build_cli_client(**kwargs) -> AzureCliCredential:
│ │      """Build a credential from Azure CLI."""
│ │      del kwargs
│ │ @@ -109,36 +115,40 @@
│ │  ) -> DeviceCodeCredential:
│ │      """Build a credential from Device Code."""
│ │      return DeviceCodeCredential(authority=aad_uri, tenant_id=tenant_id, **kwargs)
│ │  
│ │  
│ │  def _build_client_secret_client(
│ │      tenant_id: Optional[str] = None, aad_uri: Optional[str] = None, **kwargs
│ │ -) -> ClientSecretCredential:
│ │ +) -> Optional[ClientSecretCredential]:
│ │      """Build a credential from Client Secret."""
│ │      client_id = kwargs.pop("client_id", None)
│ │      client_secret = kwargs.pop("client_secret", None)
│ │      if not client_secret or not client_id:
│ │ -        raise MsticpyAzureConfigError("Client secret and client id are required.")
│ │ +        logger.info("'clientsecret' credential requested but no params supplied")
│ │ +        return None
│ │      return ClientSecretCredential(
│ │          authority=aad_uri,
│ │          tenant_id=tenant_id,  # type: ignore
│ │          client_id=client_id,
│ │          client_secret=client_secret,
│ │          **kwargs,
│ │      )
│ │  
│ │  
│ │  def _build_certificate_client(
│ │      tenant_id: Optional[str] = None, aad_uri: Optional[str] = None, **kwargs
│ │ -) -> CertificateCredential:
│ │ +) -> Optional[CertificateCredential]:
│ │      """Build a credential from Certificate."""
│ │      client_id = kwargs.pop("client_id", None)
│ │      if not client_id:
│ │ -        raise MsticpyAzureConfigError("Client id required.")
│ │ +        logger.info(
│ │ +            "'certificate' credential requested but client_id param not supplied"
│ │ +        )
│ │ +        return None
│ │      return CertificateCredential(
│ │          authority=aad_uri, tenant_id=tenant_id, client_id=client_id, **kwargs  # type: ignore
│ │      )
│ │  
│ │  
│ │  def _build_powershell_client(**kwargs) -> AzurePowerShellCredential:
│ │      """Build a credential from PowerShell logon session."""
│ │ @@ -209,65 +219,84 @@
│ │      AzCredentials
│ │                  Named tuple of:
│ │          - legacy (ADAL) credentials
│ │          - modern (MSAL) credentials
│ │  
│ │      Raises
│ │      ------
│ │ -    CloudError
│ │ +    MsticpyAzureConfigError
│ │          If chained token credential creation fails.
│ │  
│ │      See Also
│ │      --------
│ │      list_auth_methods
│ │  
│ │      Notes
│ │      -----
│ │      The function tries to obtain credentials from the following
│ │      sources:
│ │      - Azure Auth Environment variables
│ │      - Azure CLI (if an active session is logged on)
│ │      - Managed Service Identity
│ │      - Interactive browser logon
│ │ +    - and others - see list_auth_methods for full list.
│ │      If the authentication is successful both ADAL (legacy) and
│ │      MSAL (modern) credential types are returned.
│ │  
│ │      """
│ │      # Create the auth methods with the specified cloud region
│ │      cloud = cloud or kwargs.pop("region", AzureCloudConfig().cloud)
│ │      az_config = AzureCloudConfig(cloud)
│ │      aad_uri = az_config.endpoints.active_directory
│ │ -    tenant_id = tenant_id or AzureCloudConfig().tenant_id
│ │ +    logger.info("az_connect_core - using %s cloud and endpoint: %s", cloud, aad_uri)
│ │ +
│ │ +    tenant_id = tenant_id or az_config.tenant_id
│ │ +    auth_methods = auth_methods or az_config.auth_methods
│ │ +    logger.info(
│ │ +        "TenantId:  %s, requested auth methods: %s",
│ │ +        tenant_id,
│ │ +        ", ".join(auth_methods or ["none"]),
│ │ +    )
│ │      creds = kwargs.pop("credential", None)
│ │      if not creds:
│ │          creds = _build_chained_creds(
│ │              aad_uri=aad_uri,
│ │              requested_clients=auth_methods,
│ │              tenant_id=tenant_id,
│ │              **kwargs,
│ │          )
│ │  
│ │      # Filter and replace error message when credentials not found
│ │ +    azure_identity_logger = logging.getLogger("azure.identity")
│ │      handler = logging.StreamHandler(sys.stdout)
│ │      if silent:
│ │          handler.addFilter(_filter_all_warnings)
│ │      else:
│ │          handler.addFilter(_filter_credential_warning)
│ │ -    logging.basicConfig(level=logging.WARNING, handlers=[handler])
│ │ +    azure_identity_logger.setLevel(logging.WARNING)
│ │ +    azure_identity_logger.handlers = [handler]
│ │  
│ │      # Connect to the subscription client to validate
│ │      legacy_creds = CredentialWrapper(
│ │          creds, resource_id=AzureCloudConfig(cloud).token_uri
│ │      )
│ │      if not creds:
│ │ -        raise CloudError("Could not obtain credentials.")
│ │ +        raise MsticpyAzureConfigError(
│ │ +            "Cannot authenticate with specified credential types.",
│ │ +            "At least one valid authentication method required.",
│ │ +            help_uri=_HELP_URI,
│ │ +            title="Authentication failure",
│ │ +        )
│ │  
│ │      return AzCredentials(legacy_creds, creds)
│ │  
│ │  
│ │ +az_connect_core = _az_connect_core
│ │ +
│ │ +
│ │  def _build_chained_creds(
│ │      aad_uri,
│ │      requested_clients: Union[List[str], None] = None,
│ │      tenant_id: Optional[str] = None,
│ │      **kwargs,
│ │  ) -> ChainedTokenCredential:
│ │      """
│ │ @@ -285,80 +314,65 @@
│ │      Returns
│ │      -------
│ │      ChainedTokenCredential
│ │          A chained token credential.
│ │  
│ │      Raises
│ │      ------
│ │ -    CloudError
│ │ +    MsticpyAzureConfigError
│ │          If the chained credential creation fails.
│ │  
│ │      """
│ │      # Create the chained credential
│ │      if not requested_clients:
│ │          requested_clients = ["env", "cli", "msi", "interactive"]
│ │ -    clients = [
│ │ -        _CLIENTS[client](tenant_id=tenant_id, aad_uri=aad_uri, **kwargs)  # type: ignore
│ │ -        for client in requested_clients
│ │ -    ]
│ │ -    if not clients:
│ │ -        raise MsticpyAzureConfigError(
│ │ -            "At least one valid authentication method required."
│ │ +        logger.info("No auth methods requested defaulting to: %s", requested_clients)
│ │ +    cred_list = []
│ │ +    invalid_cred_types: List[str] = []
│ │ +    unusable_cred_type: List[str] = []
│ │ +    for cred_type in requested_clients:  # type: ignore[union-attr]
│ │ +        if cred_type not in _CLIENTS:
│ │ +            invalid_cred_types.append(cred_type)
│ │ +            logger.info("Unknown authentication type requested: %s", cred_type)
│ │ +            continue
│ │ +        cred_client = _CLIENTS[cred_type](  # type: ignore[operator]
│ │ +            tenant_id=tenant_id, aad_uri=aad_uri, **kwargs
│ │          )
│ │ -    return ChainedTokenCredential(*clients)  # type: ignore
│ │ -
│ │ -
│ │ -class _AzCachedConnect:
│ │ -    """Singleton class caching Azure credentials."""
│ │ -
│ │ -    _instance = None
│ │ -
│ │ -    def __new__(cls):
│ │ -        """Override new to check and return existing instance."""
│ │ -        if cls._instance is None:
│ │ -            cls._instance = super(_AzCachedConnect, cls).__new__(cls)
│ │ -            cls.connect.__doc__ = _az_connect_core.__doc__
│ │ -        return cls._instance
│ │ -
│ │ -    def __init__(self):
│ │ -        """Initialize the class."""
│ │ -        self.az_credentials: Optional[AzCredentials] = None
│ │ -        self.cred_cloud: str = self.current_cloud
│ │ -
│ │ -    @property
│ │ -    def current_cloud(self) -> str:
│ │ -        """Return current cloud."""
│ │ -        return AzureCloudConfig().cloud
│ │ -
│ │ -    def connect(self, *args, **kwargs):
│ │ -        """Call az_connect_core if token is not present or expired."""
│ │ -        if self.az_credentials is None:
│ │ -            self.az_credentials = _az_connect_core(*args, **kwargs)
│ │ -            return self.az_credentials
│ │ -        # Check expiry
│ │ -        if (
│ │ -            datetime.utcfromtimestamp(
│ │ -                self.az_credentials.modern.get_token(
│ │ -                    AzureCloudConfig().token_uri
│ │ -                ).expires_on
│ │ +        if cred_client is not None:
│ │ +            cred_list.append(cred_client)
│ │ +        else:
│ │ +            unusable_cred_type.append(cred_type)
│ │ +    logger.info(
│ │ +        "Cred types added to chained credential: %s",
│ │ +        ", ".join(cred.__class__.__name__ for cred in cred_list if cred is not None),
│ │ +    )
│ │ +    if not cred_list:
│ │ +        exception_args = [
│ │ +            "Cannot authenticate - no valid credential types.",
│ │ +            "At least one valid authentication method required.",
│ │ +            f"Configured auth_types: {','.join(requested_clients)}",
│ │ +        ]
│ │ +        if invalid_cred_types:
│ │ +            exception_args.append(
│ │ +                f"Unrecognized auth_types: {','.join(invalid_cred_types)}",
│ │              )
│ │ -            <= datetime.utcnow()
│ │ -        ):
│ │ -            self.az_credentials = _az_connect_core(*args, **kwargs)
│ │ -        # Check changed cloud
│ │ -        if self.cred_cloud != kwargs.get(
│ │ -            "cloud", kwargs.get("region", self.current_cloud)
│ │ -        ):
│ │ -            self.az_credentials = _az_connect_core(*args, **kwargs)
│ │ -        return self.az_credentials
│ │ -
│ │ -
│ │ -# externally callable function using the class above
│ │ -# _AZ_CACHED_CONNECT = _AzCachedConnect()
│ │ -az_connect_core = _az_connect_core
│ │ +        if unusable_cred_type:
│ │ +            exception_args.extend(
│ │ +                [
│ │ +                    "The following auth types could not be used due to",
│ │ +                    "missing parameters or environment variables:",
│ │ +                    ",".join(invalid_cred_types),
│ │ +                ]
│ │ +            )
│ │ +        raise MsticpyAzureConfigError(
│ │ +            *exception_args,
│ │ +            help_uri=_HELP_URI,
│ │ +            title="Authentication failure",
│ │ +        )
│ │ +    return ChainedTokenCredential(*cred_list)
│ │  
│ │  
│ │  def only_interactive_cred(chained_cred: ChainedTokenCredential):
│ │      """Return True if only interactive browser credentials available."""
│ │      return len(chained_cred.credentials) == 1 and isinstance(
│ │          chained_cred.credentials[0], InteractiveBrowserCredential
│ │      )
│ │ @@ -419,15 +433,15 @@
│ │              ):
│ │                  raise ValueError("AADSTS70043: The refresh token has expired")
│ │  
│ │          return AzureCliStatus.CLI_OK, "Azure CLI credentials available."
│ │      except ImportError:
│ │          # Azure CLI not installed
│ │          return AzureCliStatus.CLI_NOT_INSTALLED, None
│ │ -    except Exception as ex:  # pylint: disable=broad-except
│ │ +    except Exception as ex:  # pylint: disable=broad-except, broad-exception-caught
│ │          if "AADSTS70043: The refresh token has expired" in str(ex):
│ │              message = (
│ │                  "Azure CLI was detected but the token has expired. "
│ │                  "For Azure CLI single sign-on, please sign in using '!az login'."
│ │              )
│ │              return AzureCliStatus.CLI_TOKEN_EXPIRED, message
│ │          if "Please run 'az login' to setup account" in str(ex):
│ │   --- msticpy-2.3.1/msticpy/auth/cloud_mappings.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/cloud_mappings.py
│ │┄ Files 0% similar despite different names
│ │ @@ -146,15 +146,15 @@
│ │          ) from cloud_err
│ │      return endpoints
│ │  
│ │  
│ │  def get_azure_config_value(key, default):
│ │      """Get a config value from Azure section."""
│ │      with contextlib.suppress(KeyError):
│ │ -        az_settings = config.get_config("Azure")
│ │ +        az_settings = config.get_config("Azure", {})
│ │          if az_settings and key in az_settings:
│ │              return az_settings[key]
│ │      return default
│ │  
│ │  
│ │  def default_auth_methods() -> List[str]:
│ │      """Get the default (all) authentication options."""
│ │   --- msticpy-2.3.1/msticpy/auth/cred_wrapper.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/cred_wrapper.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/auth/keyring_client.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/keyring_client.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/auth/keyvault_client.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/keyvault_client.py
│ │┄ Files 2% similar despite different names
│ │ @@ -303,20 +303,18 @@
│ │  
│ │          """
│ │          if self.debug:
│ │              print(f"Storing {secret_name} in {self.vault_uri}")
│ │          return self.kv_client.set_secret(name=secret_name, value=value)
│ │  
│ │  
│ │ -# pylint: disable=too-many-instance-attributes
│ │  @export
│ │  class BHKeyVaultMgmtClient:
│ │      """Core KeyVault Management client."""
│ │  
│ │ -    # pylint: disable=too-many-arguments
│ │      def __init__(
│ │          self,
│ │          tenant_id: str = None,
│ │          subscription_id: str = None,
│ │          resource_group: str = None,
│ │          azure_region: str = None,
│ │          settings: KeyVaultSettings = None,
│ │ @@ -373,27 +371,27 @@
│ │                  title="no Azure Management URI for national cloud",
│ │              )
│ │  
│ │          self.auth_client = az_connect_core()
│ │          self.resource_group = resource_group or self.settings.get("resourcegroup")
│ │          self.azure_region = azure_region or self.settings.get("azureregion")
│ │  
│ │ -    # pylint: enable=too-many-arguments
│ │ -
│ │      def list_vaults(self) -> List[str]:
│ │          """
│ │          Return a list of vaults for the subscription.
│ │  
│ │          Returns
│ │          -------
│ │          List[str]
│ │              Vault names
│ │  
│ │          """
│ │ -        mgmt = KeyVaultManagementClient(self.auth_client.legacy, self.subscription_id)
│ │ +        mgmt = KeyVaultManagementClient(self.auth_client.modern, self.subscription_id)
│ │ +        # vaults.list does not require api_version or filter parameters
│ │ +        # pylint: disable=no-value-for-parameter
│ │          return [v.name for v in mgmt.vaults.list()]
│ │  
│ │      def get_vault_uri(self, vault_name: str) -> str:
│ │          """
│ │          Return the URI for a vault name.
│ │  
│ │          Parameters
│ │ @@ -403,15 +401,15 @@
│ │  
│ │          Returns
│ │          -------
│ │          str
│ │              Vault URI.
│ │  
│ │          """
│ │ -        mgmt = KeyVaultManagementClient(self.auth_client.legacy, self.subscription_id)
│ │ +        mgmt = KeyVaultManagementClient(self.auth_client.modern, self.subscription_id)
│ │          try:
│ │              vault = mgmt.vaults.get(self.resource_group, vault_name)
│ │          except (CloudError, ResourceNotFoundError) as cloud_err:
│ │              raise MsticpyKeyVaultConfigError(
│ │                  "Check that you have specified the right value for VaultName"
│ │                  + " in your configuration",
│ │                  f"Error returned from provider was {cloud_err}",
│ │ @@ -443,15 +441,15 @@
│ │          parameters = self._get_params()
│ │          if not self.resource_group:
│ │              raise MsticpyKeyVaultConfigError(
│ │                  "Could not get Azure resource group in which to create the vault.",
│ │                  "Please add ResourceGroup to the KeyVault section of msticpyconfig.yaml",
│ │                  title="missing ResourceGroup value.",
│ │              )
│ │ -        mgmt = KeyVaultManagementClient(self.auth_client.legacy, self.subscription_id)
│ │ +        mgmt = KeyVaultManagementClient(self.auth_client.modern, self.subscription_id)
│ │          return mgmt.vaults.create_or_update(
│ │              self.resource_group, vault_name, parameters
│ │          ).result()
│ │  
│ │      def _get_params(self):
│ │          """Build the vault parameters block."""
│ │          oid = _user_oid(self.auth_client.legacy.token)
│ │ @@ -477,17 +475,14 @@
│ │          )
│ │          parameters.properties.enabled_for_deployment = True
│ │          parameters.properties.enabled_for_disk_encryption = True
│ │          parameters.properties.enabled_for_template_deployment = True
│ │          return parameters
│ │  
│ │  
│ │ -# pylint: enable=too-many-instance-attributes
│ │ -
│ │ -
│ │  def _user_oid(token) -> str:
│ │      """
│ │      Return the user Object ID.
│ │  
│ │      Returns
│ │      -------
│ │      str
│ │   --- msticpy-2.3.1/msticpy/auth/keyvault_settings.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/keyvault_settings.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/auth/msal_auth.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/msal_auth.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/auth/secret_settings.py
│ ├── +++ msticpy-2.4.0/msticpy/auth/secret_settings.py
│ │┄ Files 0% similar despite different names
│ │ @@ -139,15 +139,15 @@
│ │          """Return normalized name for use as a KeyVault secret name."""
│ │          return re.sub("[^0-9a-zA-Z-]", "-", setting_path)
│ │  
│ │      def _get_kv_vault_and_name(
│ │          self, setting_path: str
│ │      ) -> Tuple[Optional[str], Optional[str]]:
│ │          """Return the vault and secret name for a config path."""
│ │ -        setting_item = config.get_config(setting_path)
│ │ +        setting_item = config.get_config(setting_path, None)
│ │  
│ │          if not isinstance(setting_item, dict):
│ │              return None, str(setting_item)
│ │          if "KeyVault" in setting_item:
│ │              kv_val = setting_item.get("KeyVault")
│ │              def_vault_name = self._kv_settings.get("VaultName")
│ │              if not kv_val or kv_val.casefold() == "default":
│ │   --- msticpy-2.3.1/msticpy/common/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/common/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/azure_auth.py
│ ├── +++ msticpy-2.4.0/msticpy/common/azure_auth.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/check_version.py
│ ├── +++ msticpy-2.4.0/msticpy/common/check_version.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/data_types.py
│ ├── +++ msticpy-2.4.0/msticpy/common/data_types.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/data_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/common/data_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/exceptions.py
│ ├── +++ msticpy-2.4.0/msticpy/common/exceptions.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/pkg_config.py
│ ├── +++ msticpy-2.4.0/msticpy/common/pkg_config.py
│ │┄ Files 10% similar despite different names
│ │ @@ -7,19 +7,16 @@
│ │  Package configuration reader.
│ │  
│ │  Reads default configuration from package file `msticpyconfig.yaml`.
│ │  Optionally reads custom configuration from file specified in environment
│ │  variable `MSTICPYCONFIG`. If this is not defined the package will look for
│ │  a file `msticpyconfig.yaml` in the current directory.
│ │  
│ │ -Default settings are accessible as an attribute `default_settings`.
│ │ -Custom settings are accessible as an attribute `custom_settings`.
│ │ -Consolidated settings are accessible as an attribute `settings`.
│ │ -
│ │  """
│ │ +import contextlib
│ │  import numbers
│ │  import os
│ │  from importlib.util import find_spec
│ │  from pathlib import Path
│ │  from typing import Any, Callable, Dict, Optional, Union
│ │  
│ │  import httpx
│ │ @@ -39,17 +36,17 @@
│ │  _CONFIG_ENV_VAR: str = "MSTICPYCONFIG"
│ │  _DP_KEY = "DataProviders"
│ │  _AZ_SENTINEL = "AzureSentinel"
│ │  _AZ_CLI = "AzureCLI"
│ │  _HOME_PATH = "~/.msticpy/"
│ │  
│ │  # pylint: disable=invalid-name
│ │ -default_settings: Dict[str, Any] = {}
│ │ -custom_settings: Dict[str, Any] = {}
│ │ -settings: Dict[str, Any] = {}
│ │ +_default_settings: Dict[str, Any] = {}
│ │ +_custom_settings: Dict[str, Any] = {}
│ │ +_settings: Dict[str, Any] = {}
│ │  
│ │  
│ │  def _get_current_config() -> Callable[[Any], Optional[str]]:
│ │      """Closure for holding path of config file."""
│ │      _current_conf_file: Optional[str] = None
│ │  
│ │      def _current_config(file_path: Optional[str] = None) -> Optional[str]:
│ │ @@ -73,91 +70,149 @@
│ │      Optional[str]
│ │          path of the current config file
│ │  
│ │      """
│ │      return _CURRENT_CONF_FILE(None)
│ │  
│ │  
│ │ +def get_settings():
│ │ +    """Return the current settings."""
│ │ +    return _settings
│ │ +
│ │ +
│ │  def refresh_config():
│ │      """Re-read the config settings."""
│ │      # pylint: disable=global-statement
│ │ -    global default_settings, custom_settings, settings
│ │ -    default_settings = _get_default_config()
│ │ -    custom_settings = _get_custom_config()
│ │ -    custom_settings = _create_data_providers(custom_settings)
│ │ -    settings = _consolidate_configs(default_settings, custom_settings)
│ │ +    global _default_settings, _custom_settings, _settings
│ │ +    _default_settings = _get_default_config()
│ │ +    _custom_settings = _get_custom_config()
│ │ +    _custom_settings = _create_data_providers(_custom_settings)
│ │ +    _settings = _consolidate_configs(_default_settings, _custom_settings)
│ │ +
│ │ +
│ │ +def has_config(setting_path: str) -> bool:
│ │ +    """Return True if a settings path exists."""
│ │ +    try:
│ │ +        _get_config(setting_path=setting_path, settings_dict=_settings)
│ │ +        return True
│ │ +    except KeyError:
│ │ +        return False
│ │  
│ │  
│ │ -def get_config(setting_path: str) -> Any:
│ │ +_DEFAULT_SENTINEL = "@@@NO-DEFAULT-VALUE@@@"
│ │ +
│ │ +
│ │ +def get_config(
│ │ +    setting_path: Optional[str] = None, default: Any = _DEFAULT_SENTINEL
│ │ +) -> Any:
│ │      """
│ │      Return setting item for path.
│ │  
│ │      Parameters
│ │      ----------
│ │      setting_path : str
│ │          Path to setting item expressed as dot-separated
│ │          string
│ │ +    default : Any
│ │ +        Default value to return if setting does not exist.
│ │  
│ │      Returns
│ │      -------
│ │      Any
│ │          The item at the path location.
│ │  
│ │ +    Exceptions
│ │ +    ----------
│ │ +    KeyError : if path not found and no default provided.
│ │ +
│ │      """
│ │ -    return _get_config(setting_path, settings)
│ │ +    if setting_path is None:
│ │ +        return _settings
│ │ +    try:
│ │ +        return _get_config(setting_path, _settings)
│ │ +    except KeyError:
│ │ +        if default != _DEFAULT_SENTINEL:
│ │ +            return default
│ │ +        raise
│ │  
│ │  
│ │  def _get_config(setting_path: str, settings_dict: Dict[str, Any]) -> Any:
│ │      """Return value from setting_path."""
│ │      path_elems = setting_path.split(".")
│ │      cur_node = settings_dict
│ │      for elem in path_elems:
│ │          cur_node = cur_node.get(elem, None)
│ │          if cur_node is None:
│ │              raise KeyError(f"{elem} value of {setting_path} is not a valid path")
│ │      return cur_node
│ │  
│ │  
│ │ -def set_config(setting_path: str, value: Any):
│ │ +def set_config(setting_path: str, value: Any, create_path: bool = False):
│ │      """
│ │      Set setting value for path.
│ │  
│ │      Parameters
│ │      ----------
│ │      setting_path : str
│ │          Path to setting item expressed as dot-separated
│ │          string
│ │      value : Any
│ │          The value to set.
│ │ +    create_path : bool
│ │ +        If True create any missing elements in the settings
│ │ +        path.
│ │ +
│ │ +    Returns
│ │ +    -------
│ │ +    Any :
│ │ +        The current settings node with new value.
│ │ +
│ │ +    Exceptions
│ │ +    ----------
│ │ +    KeyError : if not found and no default provided.
│ │  
│ │      """
│ │ -    return _set_config(setting_path, settings, value)
│ │ +    return _set_config(setting_path, _settings, value, create_path)
│ │  
│ │  
│ │ -def _set_config(setting_path: str, settings_dict, value: Any) -> Any:
│ │ +def _set_config(
│ │ +    setting_path: str, settings_dict: Dict[str, Any], value: Any, create_path: bool
│ │ +) -> Any:
│ │      """Set `setting_path` in `settings_dict` to `value`."""
│ │      path_elems = setting_path.split(".")
│ │ +    parent_path = ".".join(path_elems[:-1])
│ │ +    key_name = path_elems[-1]
│ │ +    with contextlib.suppress(KeyError):
│ │ +        parent_node = _get_config(parent_path, settings_dict)
│ │ +        parent_node[key_name] = value
│ │ +        return parent_node[key_name]
│ │      cur_node = settings_dict
│ │ -    for elem in path_elems:
│ │ -        if elem in cur_node:
│ │ -            cur_node[elem] = value
│ │ -            break
│ │ -        cur_node = cur_node.get(elem, None)
│ │ -        if cur_node is None:
│ │ +    # if there are any intermediate missing paths
│ │ +    # and create_path is true, add these.
│ │ +    for elem in path_elems[:-1]:
│ │ +        next_node = cur_node.get(elem)
│ │ +        if next_node is None:
│ │ +            if create_path:
│ │ +                cur_node[elem] = {}
│ │ +                cur_node = cur_node[elem]
│ │ +                continue
│ │              raise KeyError(f"{elem} value of {setting_path} is not a valid path")
│ │ -    return cur_node
│ │ +        cur_node = next_node
│ │ +    # set the current node's value
│ │ +    cur_node[key_name] = value
│ │ +    return cur_node[key_name]
│ │  
│ │  
│ │  def _del_config(setting_path: str, settings_dict) -> Any:
│ │      """Delete `setting_path` from `settings_dict`."""
│ │      path_elems = setting_path.split(".")
│ │      cur_node = settings_dict
│ │      current_value = None
│ │ -    for elem in path_elems:
│ │ -        if elem in cur_node:
│ │ +    for idx, elem in enumerate(path_elems):
│ │ +        if idx == len(path_elems) - 1:
│ │              current_value = cur_node[elem]
│ │              del cur_node[elem]
│ │              break
│ │          cur_node = cur_node.get(elem, None)
│ │          if cur_node is None:
│ │              raise KeyError(f"{elem} value of {setting_path} is not a valid path")
│ │      return current_value
│ │ @@ -281,25 +336,25 @@
│ │  
│ │  def _translate_legacy_settings(
│ │      mp_config: Dict[str, Any], translate: Dict[str, str]
│ │  ) -> Dict[str, Any]:
│ │      """Map legacy settings to new location."""
│ │      for src, target in translate.items():
│ │          src_value = _get_config(src, mp_config)
│ │ -        _set_config(target, mp_config, src_value)
│ │ +        _set_config(target, mp_config, src_value, True)
│ │          _del_config(src, mp_config)
│ │      return mp_config
│ │  
│ │  
│ │  def get_http_timeout(
│ │      **kwargs,
│ │  ) -> httpx.Timeout:
│ │      """Return timeout from settings or overridden in `kwargs`."""
│ │      timeout_params = kwargs.get(
│ │ -        "timeout", kwargs.get("def_timeout", settings.get("http_timeout", None))  # type: ignore
│ │ +        "timeout", kwargs.get("def_timeout", get_config("http_timeout", None))  # type: ignore
│ │      )  # type: ignore
│ │      if isinstance(timeout_params, dict):
│ │          timeout_params = {
│ │              name: _valid_timeout(val) for name, val in timeout_params.items()
│ │          }
│ │          return httpx.Timeout(**timeout_params)
│ │      if isinstance(timeout_params, httpx.Timeout):
│ │ @@ -338,15 +393,15 @@
│ │      config_file : str
│ │          path to config file to check, by default None
│ │  
│ │      """
│ │      if config_file:
│ │          mp_config = _read_config_file(config_file)
│ │      if not (mp_config or config_file):
│ │ -        mp_config = settings
│ │ +        mp_config = _settings
│ │  
│ │      if not isinstance(mp_config, dict):
│ │          raise TypeError("Unknown format for configuration settings.")
│ │  
│ │      mp_errors, mp_warn = _validate_azure_sentinel(mp_config=mp_config)
│ │  
│ │      auth_key_providers = [
│ │   --- msticpy-2.3.1/msticpy/common/provider_settings.py
│ ├── +++ msticpy-2.4.0/msticpy/common/provider_settings.py
│ │┄ Files 2% similar despite different names
│ │ @@ -9,16 +9,16 @@
│ │  from collections import UserDict
│ │  from typing import Any, Callable, Dict, List, Optional, Union
│ │  
│ │  import attr
│ │  from attr import Factory
│ │  
│ │  from .._version import VERSION
│ │ -from . import pkg_config as config
│ │  from .exceptions import MsticpyImportExtraError
│ │ +from .pkg_config import get_config, refresh_config
│ │  
│ │  try:
│ │      from ..auth.secret_settings import SecretsClient
│ │  
│ │      _SECRETS_ENABLED = True
│ │  except ImportError:
│ │      _SECRETS_ENABLED = False
│ │ @@ -105,15 +105,15 @@
│ │  _SECRETS_CLIENT: Any = None
│ │  # Create the secrets client closure
│ │  _SET_SECRETS_CLIENT: Callable[
│ │      ..., Optional["SecretsClient"]
│ │  ] = get_secrets_client_func()
│ │  # Create secrets client instance if SecretsClient can be imported
│ │  # and config has KeyVault settings.
│ │ -if "KeyVault" in config.settings and config.settings["KeyVault"] and _SECRETS_ENABLED:
│ │ +if get_config("KeyVault", None) and _SECRETS_ENABLED:
│ │      _SECRETS_CLIENT = _SET_SECRETS_CLIENT()
│ │  
│ │  
│ │  def get_provider_settings(config_section="TIProviders") -> Dict[str, ProviderSettings]:
│ │      """
│ │      Read Provider settings from package config.
│ │  
│ │ @@ -127,30 +127,30 @@
│ │      Dict[str, ProviderSettings]
│ │          Provider settings indexed by provider name.
│ │  
│ │      """
│ │      # pylint: disable=global-statement
│ │      global _SECRETS_CLIENT
│ │      # pylint: enable=global-statement
│ │ -    if "KeyVault" in config.settings and config.settings["KeyVault"]:
│ │ +    if get_config("KeyVault", None):
│ │          if _SECRETS_CLIENT is None and _SECRETS_ENABLED:
│ │              print(
│ │                  "KeyVault enabled. Secrets access may require additional authentication."
│ │              )
│ │              _SECRETS_CLIENT = _SET_SECRETS_CLIENT()
│ │      else:
│ │          _SECRETS_CLIENT = None
│ │ -    section_settings = config.settings.get(config_section)
│ │ +    section_settings = get_config(config_section, None)
│ │      if not section_settings:
│ │          return {}
│ │  
│ │      settings = {}
│ │      for provider, item_settings in section_settings.items():
│ │          prov_args = item_settings.get("Args")
│ │ -        prov_settings = ProviderSettings(
│ │ +        prov_settings = ProviderSettings(  # type: ignore[call-arg]
│ │              name=provider,
│ │              description=item_settings.get("Description"),
│ │              args=_get_setting_args(
│ │                  config_section=config_section,
│ │                  provider_name=provider,
│ │                  prov_args=prov_args,
│ │              ),
│ │ @@ -160,15 +160,15 @@
│ │          settings[provider] = prov_settings
│ │  
│ │      return settings
│ │  
│ │  
│ │  def reload_settings():
│ │      """Reload settings from config files."""
│ │ -    config.refresh_config()
│ │ +    refresh_config()
│ │  
│ │  
│ │  def refresh_keyring():
│ │      """Refresh local keyring secrets cache from Key Vault."""
│ │      if _secrets_enabled():
│ │          _SECRETS_CLIENT.refresh_keyring()
│ │  
│ │ @@ -330,12 +330,12 @@
│ │          if not _SECRETS_CLIENT:
│ │              warnings.warn(
│ │                  "Cannot use a KeyVault configuration setting without"
│ │                  + "a KeyVault configuration section in msticpyconfig.yaml"
│ │                  + f" (provider {provider_name})"
│ │              )
│ │              return None
│ │ -        config_path = [config_section, provider_name, "Args", arg_name]
│ │ +        config_path = (config_section, provider_name, "Args", arg_name)
│ │          return _SECRETS_CLIENT.get_secret_accessor(  # type:ignore
│ │              ".".join(config_path)
│ │          )
│ │      return None
│ │   --- msticpy-2.3.1/msticpy/common/timespan.py
│ ├── +++ msticpy-2.4.0/msticpy/common/timespan.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/utility/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/common/utility/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/utility/format.py
│ ├── +++ msticpy-2.4.0/msticpy/common/utility/format.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/utility/package.py
│ ├── +++ msticpy-2.4.0/msticpy/common/utility/package.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/utility/types.py
│ ├── +++ msticpy-2.4.0/msticpy/common/utility/types.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/common/wsconfig.py
│ ├── +++ msticpy-2.4.0/msticpy/common/wsconfig.py
│ │┄ Files 2% similar despite different names
│ │ @@ -12,16 +12,16 @@
│ │  from pathlib import Path
│ │  from typing import Any, Dict, Optional
│ │  
│ │  import ipywidgets as widgets
│ │  from IPython.display import display
│ │  
│ │  from .._version import VERSION
│ │ -from . import pkg_config
│ │  from .exceptions import MsticpyUserConfigError
│ │ +from .pkg_config import get_config, refresh_config
│ │  from .utility import export, is_valid_uuid, md, md_warn
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │  _RESOURCES = [
│ │ @@ -238,15 +238,15 @@
│ │  
│ │          Returns
│ │          -------
│ │          Dict
│ │              Dictionary of workspaces with workspace and tenantIds.
│ │  
│ │          """
│ │ -        ws_settings = pkg_config.settings.get("AzureSentinel", {}).get("Workspaces")
│ │ +        ws_settings = get_config("AzureSentinel", {}).get("Workspaces")
│ │          return (
│ │              {
│ │                  ws_name: {
│ │                      cls.PKG_CONF_WS_KEY: ws.get(cls.PKG_CONF_WS_KEY),
│ │                      cls.PKG_CONF_TENANT_KEY: ws.get(cls.PKG_CONF_TENANT_KEY),
│ │                  }
│ │                  for ws_name, ws in ws_settings.items()
│ │ @@ -308,15 +308,15 @@
│ │              self._config_file = os.environ.get("MSTICPYCONFIG")
│ │          elif Path("./msticpyconfig.yaml").exists():
│ │              self._config_file = "./msticpyconfig.yaml"
│ │          else:
│ │              self._config_file = self._search_for_file("**/msticpyconfig.yaml")
│ │          if self._config_file:
│ │              os.environ["MSTICPYCONFIG"] = self._config_file
│ │ -            pkg_config.refresh_config()
│ │ +            refresh_config()
│ │              self._read_pkg_config_values(workspace_name=workspace)
│ │              return
│ │          # Finally, throw an exception (unless non-interactive)
│ │          if self._interactive:
│ │              # If we've arrived here after searching current folder and parent
│ │              # then we give up. (We create but don't raise an actual exception)
│ │              display(
│ │ @@ -324,15 +324,15 @@
│ │                      *_NO_CONFIG_ERR,
│ │                      title="Workspace configuration missing.",
│ │                      **{f"nb_{idx}_uri": res for idx, res in enumerate(_RESOURCES)},
│ │                  )
│ │              )
│ │  
│ │      def _read_pkg_config_values(self, workspace_name: str = None):
│ │ -        as_settings = pkg_config.settings.get("AzureSentinel")
│ │ +        as_settings = get_config("AzureSentinel", {})
│ │          if not as_settings:
│ │              return {}
│ │          ws_settings = as_settings.get("Workspaces")  # type: ignore
│ │          if not ws_settings:
│ │              return {}
│ │          if workspace_name and workspace_name in ws_settings:
│ │              selected_workspace = ws_settings[workspace_name]
│ │   --- msticpy-2.3.1/msticpy/config/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/config/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_azure.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_azure.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_azure_sentinel.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_azure_sentinel.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_common.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_common.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_data_providers.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_data_providers.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_keyvault.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_keyvault.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_other_providers.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_other_providers.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_provider_base.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_provider_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_simple_settings.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_simple_settings.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_ti_providers.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_ti_providers.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/ce_user_defaults.py
│ ├── +++ msticpy-2.4.0/msticpy/config/ce_user_defaults.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/comp_edit.py
│ ├── +++ msticpy-2.4.0/msticpy/config/comp_edit.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/compound_ctrls.py
│ ├── +++ msticpy-2.4.0/msticpy/config/compound_ctrls.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/file_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/config/file_browser.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/mp_config_control.py
│ ├── +++ msticpy-2.4.0/msticpy/config/mp_config_control.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/mp_config_edit.py
│ ├── +++ msticpy-2.4.0/msticpy/config/mp_config_edit.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/config/mp_config_file.py
│ ├── +++ msticpy-2.4.0/msticpy/config/mp_config_file.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/context/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/azure_data.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/azure_data.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_analytics.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_analytics.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_bookmarks.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_bookmarks.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_core.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_core.py
│ │┄ Files 1% similar despite different names
│ │ @@ -83,15 +83,15 @@
│ │              If not specifying a resource ID, the Workspace name of the
│ │              Sentinel Workspace, by default None
│ │          workspace : str, optional
│ │              Alias of ws_name
│ │  
│ │          """
│ │          self.user_cloud = cloud
│ │ -        super().__init__(connect=connect or False, cloud=self.user_cloud)
│ │ +        super().__init__(connect=False, cloud=self.user_cloud)
│ │          self.base_url = self.endpoints.resource_manager
│ │          self.default_subscription: Optional[str] = None
│ │          self._resource_id = res_id
│ │          self._default_resource_group: Optional[str] = None
│ │          self.sent_urls: Dict[str, str] = {}
│ │          self.sent_data_query: Optional[SentinelQueryProvider] = None  # type: ignore
│ │          self.url: Optional[str] = None
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_dynamic_summary.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_dynamic_summary.py
│ │┄ Files 8% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  # -------------------------------------------------------------------------
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Sentinel Dynamic Summary Mixin class."""
│ │ -
│ │ +import logging
│ │  from datetime import datetime
│ │  from functools import singledispatchmethod
│ │  from typing import Optional
│ │  
│ │  import httpx
│ │  import pandas as pd
│ │  
│ │ @@ -26,14 +26,16 @@
│ │  )
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  _DYN_SUM_API_VERSION = "2023-03-01-preview"
│ │  
│ │ +logger = logging.getLogger(__name__)
│ │ +
│ │  
│ │  class SentinelDynamicSummaryMixin:
│ │      """Mixin class with Sentinel Dynamic Summary integrations."""
│ │  
│ │      # expose these methods as members of the Sentinel class.
│ │      df_to_dynamic_summary = DynamicSummary.df_to_dynamic_summary
│ │      df_to_dynamic_summaries = DynamicSummary.df_to_dynamic_summaries
│ │ @@ -94,38 +96,49 @@
│ │              If API returns an error.
│ │  
│ │          """
│ │          if summary_items:
│ │              if not self.sent_data_query:  # type: ignore
│ │                  try:
│ │                      self.sent_data_query = SentinelQueryProvider(
│ │ -                        self.default_workspace_name  # type: ignore
│ │ +                        self.default_workspace_name  # type: ignore[attr-defined]
│ │ +                    )
│ │ +                    logger.info(
│ │ +                        "Created sentinel query provider for %s",
│ │ +                        self.default_workspace_name,  # type: ignore[attr-defined]
│ │                      )
│ │                  except LookupError:
│ │                      print(
│ │                          "Unable to find default workspace.",
│ │                          "Use 'sentinel.set_default_workspace(workspace='my_ws_name'",
│ │                          "and retry.",
│ │                      )
│ │              if self.sent_data_query:
│ │ +                logger.info("Query dynamic summary for %s", summary_id)
│ │                  return df_to_dynamic_summary(
│ │                      self.sent_data_query.get_dynamic_summary(summary_id)
│ │                  )
│ │  
│ │          dyn_sum_url = self.sent_urls["dynamic_summary"] + f"/{summary_id}"  # type: ignore
│ │  
│ │          params = {"api-version": _DYN_SUM_API_VERSION}
│ │          response = httpx.get(
│ │              dyn_sum_url,
│ │              headers=get_api_headers(self.token),  # type: ignore
│ │              params=params,
│ │              timeout=get_http_timeout(),
│ │          )
│ │          if response.status_code == 200:
│ │ +            logger.info("Query API for summary id %s", summary_id)
│ │              return DynamicSummary.from_json(response.json())
│ │ +        logger.info(
│ │ +            "API query unsuccessful - status %d, response: %s",
│ │ +            response.status_code,
│ │ +            response.content.decode("utf-8"),
│ │ +        )
│ │          raise MsticpyAzureConnectionError(response.json())
│ │  
│ │      def create_dynamic_summary(
│ │          self,
│ │          summary: Optional[DynamicSummary] = None,
│ │          name: Optional[str] = None,
│ │          description: Optional[str] = None,
│ │ @@ -165,14 +178,15 @@
│ │                  )
│ │              return self._create_dynamic_summary(summary)
│ │          # pylint: disable=unexpected-keyword-arg
│ │          if not name:
│ │              raise MsticpyParameterError(
│ │                  "DynamicSummary must have unique name", parameters="name"
│ │              )
│ │ +        logger.info("create_dynamic_summary %s (%s)", name, description)
│ │          return self._create_dynamic_summary(
│ │              name, description=description, data=data, **kwargs
│ │          )
│ │  
│ │      @singledispatchmethod
│ │      def _create_dynamic_summary(
│ │          self,
│ │ @@ -206,17 +220,24 @@
│ │          response = httpx.put(
│ │              dyn_sum_url,
│ │              headers=get_api_headers(self.token),  # type: ignore
│ │              params=params,
│ │              content=summary.to_json_api(),
│ │              timeout=get_http_timeout(),
│ │          )
│ │ +        logger.info(
│ │ +            "_create_dynamic_summary (DynamicSummary) status %d", response.status_code
│ │ +        )
│ │          if response.status_code in (200, 201):
│ │              print("Dynamic summary created/updated.")
│ │              return response.json().get("name")
│ │ +        logger.warning(
│ │ +            "_create_dynamic_summary (DynamicSummary) failure %s",
│ │ +            response.content.decode("utf-8"),
│ │ +        )
│ │          raise MsticpyAzureConnectionError(
│ │              (
│ │                  "Dynamic summary create/update failed with status",
│ │                  str(response.status_code),
│ │              ),
│ │              "Text response:",
│ │              response.text,
│ │ @@ -270,14 +291,18 @@
│ │          self.check_connected()  # type: ignore
│ │          summary = DynamicSummary(
│ │              summary_name=name,
│ │              summary_description=description,
│ │              summary_items=data,
│ │              **kwargs,
│ │          )
│ │ +        logger.info(
│ │ +            "_create_dynamic_summary (DF) rows: %d",
│ │ +            len(data) if data is not None else 0,
│ │ +        )
│ │          return self.create_dynamic_summary(summary)
│ │  
│ │      def delete_dynamic_summary(
│ │          self,
│ │          summary_id: str,
│ │      ):
│ │          """
│ │ @@ -300,17 +325,24 @@
│ │          params = {"api-version": _DYN_SUM_API_VERSION}
│ │          response = httpx.delete(
│ │              dyn_sum_url,
│ │              headers=get_api_headers(self.token),  # type: ignore
│ │              params=params,
│ │              timeout=get_http_timeout(),
│ │          )
│ │ +        logger.info(
│ │ +            "delete_dynamic_summary %s - status %d", summary_id, response.status_code
│ │ +        )
│ │          if response.status_code == 200:
│ │              print("Dynamic summary deleted.")
│ │              return response.json().get("name")
│ │ +        logger.warning(
│ │ +            "delete_dynamic_summary failure %s",
│ │ +            response.content.decode("utf-8"),
│ │ +        )
│ │          raise MsticpyAzureConnectionError(
│ │              f"Dynamic summary deletion failed with status {response.status_code}",
│ │              "Text response:",
│ │              response.text,
│ │          )
│ │  
│ │      def update_dynamic_summary(
│ │ @@ -369,14 +401,19 @@
│ │          """
│ │          if (summary and not summary.summary_id) or (
│ │              data is not None and not summary_id
│ │          ):
│ │              raise MsticpyParameterError(
│ │                  "You must supply a summary ID to update", parameters="summary_id"
│ │              )
│ │ +        logger.info(
│ │ +            "update_dynamic_summary summary %s, df %s",
│ │ +            summary is not None,
│ │ +            data is not None,
│ │ +        )
│ │          return self.create_dynamic_summary(
│ │              summary=summary, data=data, summary_id=summary_id, **kwargs
│ │          )
│ │  
│ │  
│ │  class SentinelQueryProvider:
│ │      """Class to encapsulate MS Sentinel data queries."""
│ │ @@ -385,31 +422,38 @@
│ │      DynamicSummary
│ │      | where SummaryId == "{summary_id}"
│ │      | where SummaryStatus == "Active" or SummaryDataType == "SummaryItem"
│ │      """
│ │  
│ │      def __init__(self, workspace: str):
│ │          """Initialize Sentinel Provider."""
│ │ -        workspaces = get_config("AzureSentinel.Workspaces")
│ │ +        workspaces = get_config("AzureSentinel.Workspaces", {})
│ │          self.workspace_config = ""
│ │          self.workspace_alias = ""
│ │          for ws_name, workspace_conf in workspaces.items():
│ │              if workspace.casefold() in [
│ │                  ws_name.casefold(),
│ │                  workspace_conf.get("WorkspaceName", "").casefold(),
│ │              ]:
│ │                  self.workspace_config = workspace_conf
│ │                  self.workspace_alias = ws_name
│ │ +                logger.info("Found workspace config %s", ws_name)
│ │                  break
│ │          else:
│ │              raise LookupError(f"Cannot find workspace configuration for {workspace}")
│ │  
│ │          self.qry_prov = QueryProvider("MSSentinel")
│ │          self.qry_prov.connect(workspace=self.workspace_alias)
│ │  
│ │      def get_dynamic_summary(self, summary_id) -> pd.DataFrame:
│ │          """Retrieve dynamic summary from MS Sentinel table."""
│ │ +        logger.info("Dynamic summary query for %s", summary_id)
│ │          return self.qry_prov.MSSentinel.get_dynamic_summary_by_id(summary_id=summary_id)
│ │  
│ │      def get_dynamic_summaries(self, start: datetime, end: datetime) -> pd.DataFrame:
│ │          """Return dynamic summaries for date range."""
│ │ +        logger.info(
│ │ +            "Dynamic summary query for dynamic summaries from %s to %s",
│ │ +            start.isoformat(),
│ │ +            end.isoformat(),
│ │ +        )
│ │          return self.qry_prov.MSSentinel.list_dynamic_summaries(start=start, end=end)
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_dynamic_summary_types.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_dynamic_summary_types.py
│ │┄ Files 8% similar despite different names
│ │ @@ -2,27 +2,47 @@
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Sentinel Dynamic Summary classes."""
│ │  import dataclasses
│ │  import json
│ │ +import logging
│ │  import uuid
│ │  from datetime import datetime
│ │  from functools import singledispatchmethod
│ │ -from typing import Any, ClassVar, Dict, Iterable, List, Optional, Union, cast
│ │ +from typing import Any, Callable, ClassVar, Dict, Iterable, List, Optional, Union, cast
│ │  
│ │ +import numpy as np
│ │  import pandas as pd
│ │  
│ │  from ..._version import VERSION
│ │  from ...common.exceptions import MsticpyUserError
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │ +_TACTICS = (
│ │ +    "Reconnaissance",
│ │ +    "ResourceDevelopment",
│ │ +    "InitialAccess",
│ │ +    "Execution",
│ │ +    "Persistence",
│ │ +    "PrivilegeEscalation",
│ │ +    "DefenseEvasion",
│ │ +    "CredentialAccess",
│ │ +    "Discovery",
│ │ +    "LateralMovement",
│ │ +    "Collection",
│ │ +    "Exfiltration",
│ │ +    "CommandAndControl",
│ │ +    "Impact",
│ │ +)
│ │ +_TACTICS_DICT = {tactic.casefold(): tactic for tactic in _TACTICS}
│ │ +
│ │  _CLS_TO_API_MAP = {
│ │      "summary_id": "summaryId",
│ │      "summary_name": "summaryName",
│ │      "azure_tenant_id": "azureTenantId",
│ │      "tenant_id": "tenantId",
│ │      "summary_description": "summaryDescription",
│ │      "relation_name": "relationName",
│ │ @@ -36,14 +56,16 @@
│ │      "observable_value": "observableValue",
│ │      "packed_content": "packedContent",
│ │      "summary_items": "rawContent",
│ │      "summary_item_id": "summaryItemId",
│ │  }
│ │  _API_TO_CLS_MAP = {val: key for key, val in _CLS_TO_API_MAP.items()}
│ │  
│ │ +logger = logging.getLogger(__name__)
│ │ +
│ │  
│ │  class FieldList:
│ │      """Class to hold field names."""
│ │  
│ │      def __init__(self, fieldnames: Iterable[str]):
│ │          """Add fields to field mapping."""
│ │          self.__dict__.update({field.upper(): field for field in fieldnames})
│ │ @@ -102,50 +124,33 @@
│ │      packed_content: Dict[str, Any] = dataclasses.field(default_factory=dict)
│ │  
│ │      def __post_init__(self):
│ │          """Initialize item ID if was not set explicitly."""
│ │          self.summary_item_id = self.summary_item_id or str(uuid.uuid4())
│ │          if isinstance(self.tactics, str):
│ │              self.tactics = [self.tactics]
│ │ +        self.tactics = _match_tactics(self.tactics)
│ │          if isinstance(self.techniques, str):
│ │              self.techniques = [self.techniques]
│ │  
│ │      def to_api_dict(self):
│ │          """Return attributes as a JSON-serializable dictionary."""
│ │          return {
│ │ -            _CLS_TO_API_MAP.get(name, name): _to_datetime_utc_str(value)
│ │ -            if isinstance(value, datetime)
│ │ -            else _dict_dates_to_str(value)
│ │ -            if isinstance(value, dict)
│ │ -            else value
│ │ +            _CLS_TO_API_MAP.get(name, name): _convert_data_types(value)
│ │              for name, value in dataclasses.asdict(self).items()
│ │              if value is not None
│ │          }
│ │  
│ │  
│ │  # Add helper class attribute for field names.
│ │  DynamicSummaryItem.fields = FieldList(
│ │      [field.name for field in dataclasses.fields(DynamicSummaryItem)]
│ │  )
│ │  
│ │  
│ │ -def _to_datetime_utc_str(date_time):
│ │ -    if not isinstance(date_time, datetime):
│ │ -        return date_time
│ │ -    dt_str = date_time.isoformat()
│ │ -    return dt_str.replace("+00:00", "Z") if "+00:00" in dt_str else f"{dt_str}Z"
│ │ -
│ │ -
│ │ -def _dict_dates_to_str(input_dict: Dict[Any, Any]) -> Dict[Any, Any]:
│ │ -    return {
│ │ -        name: value.isoformat() if isinstance(value, datetime) else value
│ │ -        for name, value in input_dict.items()
│ │ -    }
│ │ -
│ │ -
│ │  class DynamicSummary:
│ │      """Dynamic Summary class."""
│ │  
│ │      fields = FieldList(
│ │          ["summary_id", "summary_name", "summary_description"]
│ │          + ["tenant_id", "relation_name", "relation_id"]  # noqa: W503
│ │          + ["search_key", "tactics", "techniques", "source_info"]  # noqa: W503
│ │ @@ -167,42 +172,57 @@
│ │          tenant_id : str, optional
│ │              Azure tenant ID, by default None
│ │          relation_name : str, optional
│ │              The relation name, by default None
│ │          relation_id : str, optional
│ │              The relation ID, by default None
│ │          search_key : str, optional
│ │ -            Search key for the entire summary, by default None
│ │ +            Search key column for the summarized data, by default None
│ │          tactics : Union[str, List[str], None], optional
│ │              Relevant MITRE tactics, by default None
│ │          techniques : Union[str, List[str], None], optional
│ │              Relevant MITRE techniques, by default None
│ │ -        source_info : str, optional
│ │ -            Summary source info, by default None
│ │ +        source_info : Dict[str, Any], optional
│ │ +            Summary source info dictionary, by default None
│ │          summary_items : Union[pd, DataFrame, Iterable[DynamicSummaryItem],
│ │          List[Dict[str, Any]]], optional
│ │              Collection of summary items, by default None
│ │  
│ │          """
│ │          self.summary_id: str = summary_id or str(uuid.uuid4())
│ │          self.summary_name: str = kwargs.pop("summary_name", None)
│ │          self.summary_description: str = kwargs.pop("summary_description", None)
│ │          self.tenant_id: str = kwargs.pop(
│ │              "azure_tenant_id", kwargs.pop("tenant_id", None)
│ │          )
│ │ +
│ │ +        self.search_key = kwargs.pop("search_key", None)
│ │          tactics = kwargs.pop("tactics", [])
│ │ -        self.tactics = [tactics] if isinstance(tactics, str) else tactics
│ │ +        self.tactics = _match_tactics(
│ │ +            [tactics] if isinstance(tactics, str) else tactics
│ │ +        )
│ │          techniques = kwargs.pop("techniques", [])
│ │          self.techniques = [techniques] if isinstance(techniques, str) else techniques
│ │          self.summary_items: List[DynamicSummaryItem] = []
│ │          summary_items = kwargs.pop("summary_items", None)
│ │          if summary_items is not None:
│ │              self.add_summary_items(summary_items)
│ │ +        source_info = kwargs.pop("source_info", {})
│ │ +        self.source_info = (
│ │ +            source_info
│ │ +            if isinstance(source_info, dict)
│ │ +            else {"user_source": source_info}
│ │ +        )
│ │ +        self.source_info["source_pkg"] = f"MSTICPy {VERSION}"
│ │ +
│ │          # Add other kwargs as instance attributes
│ │          self.__dict__.update(kwargs)
│ │ +        logger.info(
│ │ +            "Dynamic summary created %s", summary_id or f"auto({self.summary_id})"
│ │ +        )
│ │  
│ │      def __repr__(self) -> str:
│ │          """Return simple representation of instance."""
│ │          attributes = {
│ │              key: f"'{val}'" if isinstance(val, str) else val
│ │              for key, val in vars(self).items()
│ │              if key != "summary_items" and val not in (None, pd.NaT, "", [])
│ │ @@ -382,14 +402,18 @@
│ │          ----------
│ │          data : Union[Iterable[DynamicSummaryItem], Iterable[Dict[str, Any]]]
│ │              Iterable of DynamicSummary Items.
│ │  
│ │          """
│ │          del kwargs
│ │          if isinstance(next(iter(data)), DynamicSummaryItem):
│ │ +            logger.info(
│ │ +                "_add_summary_items (list(DynamicSummaryItem)) items %d",
│ │ +                len(data) if data else 0,
│ │ +            )
│ │              self.summary_items = list(data)
│ │          else:
│ │              self._add_summary_items_dict(data)
│ │  
│ │      @_add_summary_items.register
│ │      def _(
│ │          self,
│ │ @@ -411,14 +435,15 @@
│ │  
│ │          See Also
│ │          --------
│ │          DynamicSummaryItem
│ │  
│ │          """
│ │          summary_fields = kwargs.pop("summary_fields", None)
│ │ +        logger.info("_add_summary_items (df) rows %d", len(data))
│ │          for row in data.to_dict(orient="records"):
│ │              summary_params = {}
│ │              if summary_fields:
│ │                  # if summary fields to map to dynamic summary item properties
│ │                  # extract these from the row dictionary first
│ │                  summary_params = {
│ │                      field_name: row.get(column_name)
│ │ @@ -426,18 +451,23 @@
│ │                  }
│ │              # if event time not in summary_fields, try to get from
│ │              # kwargs or from data
│ │              if "event_time_utc" not in summary_params:
│ │                  summary_params["event_time_utc"] = kwargs.pop(
│ │                      "event_time_utc", row.get("TimeGenerated")
│ │                  )
│ │ +            search_key_value = row.get(self.search_key) if self.search_key else None
│ │ +            if search_key_value and "search_key" not in kwargs:
│ │ +                kwargs["search_key"] = search_key_value
│ │              # Create DynamicSummaryItem instance for each row
│ │              self.summary_items.append(
│ │                  DynamicSummaryItem(
│ │ -                    packed_content=row,  # type: ignore
│ │ +                    packed_content={
│ │ +                        key: _convert_data_types(value) for key, value in row.items()
│ │ +                    },
│ │                      **summary_params,
│ │                      **kwargs,  # pass remaining kwargs as summary item properties
│ │                  )
│ │              )
│ │  
│ │      def _add_summary_items_dict(self, data: Iterable[Dict[str, Any]]):
│ │          """
│ │ @@ -446,15 +476,32 @@
│ │          Parameters
│ │          ----------
│ │          data : Iterable[Dict[str, Any]]
│ │              Iterable of dictionaries containing summary item
│ │              properties.
│ │  
│ │          """
│ │ -        self.summary_items = [DynamicSummaryItem(**properties) for properties in data]
│ │ +        logger.info(
│ │ +            "_add_summary_items (list(dict)) rows %d", len(list(data)) if data else 0
│ │ +        )
│ │ +        summary_items = []
│ │ +        for properties in data:
│ │ +            # if search key specified, try to extract from packed_content field
│ │ +            if (
│ │ +                self.search_key
│ │ +                and "search_key" not in properties
│ │ +                and self.search_key in properties.get("packed_content", {})
│ │ +            ):
│ │ +                search_key_value = properties.get("packed_content", {}).get(
│ │ +                    self.search_key
│ │ +                )
│ │ +                if search_key_value:
│ │ +                    properties["search_key"] = search_key_value
│ │ +            summary_items.append(DynamicSummaryItem(**properties))
│ │ +        self.summary_items = summary_items
│ │  
│ │      def append_summary_items(
│ │          self,
│ │          data: Union[
│ │              Iterable[DynamicSummaryItem], Iterable[Dict[str, Any]], pd.DataFrame
│ │          ],
│ │          **kwargs,
│ │ @@ -478,14 +525,15 @@
│ │          DynamicSummaryItem
│ │  
│ │          """
│ │          current_items = self.summary_items
│ │          self.add_summary_items(data, **kwargs)
│ │          new_items = self.summary_items
│ │          self.summary_items = current_items + new_items
│ │ +        logger.info("append_summary_items %s", type(data))
│ │  
│ │      def to_json(self):
│ │          """Return JSON representation of DynamicSummary."""
│ │          summary_properties = {
│ │              _CLS_TO_API_MAP.get(prop_name, prop_name): prop_value
│ │              for prop_name, prop_value in self.__dict__.items()
│ │              if prop_name in _CLS_TO_API_MAP and prop_value is not None
│ │ @@ -676,7 +724,45 @@
│ │          # pylint: disable=no-value-for-parameter
│ │          # "fields" attrib is a ClassVar
│ │          ds_item = DynamicSummaryItem()
│ │          ds_item.__dict__.update(item)  # type: ignore
│ │          items.append(ds_item)
│ │      dyn_summary.add_summary_items(items)
│ │      return dyn_summary
│ │ +
│ │ +
│ │ +def _to_datetime_utc_str(date_time):
│ │ +    """Convert datetime to ISO date string."""
│ │ +    if not isinstance(date_time, datetime):
│ │ +        return date_time
│ │ +    dt_str = date_time.isoformat()
│ │ +    return dt_str.replace("+00:00", "Z") if "+00:00" in dt_str else f"{dt_str}Z"
│ │ +
│ │ +
│ │ +def _convert_dict_types(input_dict: Dict[Any, Any]) -> Dict[Any, Any]:
│ │ +    """Convert data types in dictionary members."""
│ │ +    return {name: _convert_data_types(value) for name, value in input_dict.items()}
│ │ +
│ │ +
│ │ +_TYPE_CONVERTER = {
│ │ +    np.ndarray: list,
│ │ +    datetime: _to_datetime_utc_str,
│ │ +    pd.Timestamp: _to_datetime_utc_str,
│ │ +    dict: _convert_dict_types,
│ │ +}
│ │ +
│ │ +
│ │ +def _convert_data_types(value: Any, type_convert: Dict[type, Callable] = None) -> Any:
│ │ +    """Convert a type based on dictionary of converters."""
│ │ +    type_convert = type_convert or {}
│ │ +    type_convert.update(_TYPE_CONVERTER)
│ │ +    converter = type_convert.get(type(value))
│ │ +    return converter(value) if converter else value
│ │ +
│ │ +
│ │ +def _match_tactics(tactics: Iterable[str]) -> List[str]:
│ │ +    """Return case-insensitive matches for tactics list."""
│ │ +    return [
│ │ +        _TACTICS_DICT[tactic.casefold()]
│ │ +        for tactic in tactics
│ │ +        if tactic in _TACTICS_DICT
│ │ +    ]
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_incidents.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_incidents.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_search.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_search.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_ti.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_ti.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_watchlists.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_watchlists.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/azure/sentinel_workspaces.py
│ ├── +++ msticpy-2.4.0/msticpy/context/azure/sentinel_workspaces.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/contextlookup.py
│ ├── +++ msticpy-2.4.0/msticpy/context/contextlookup.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/contextproviders/context_provider_base.py
│ ├── +++ msticpy-2.4.0/msticpy/context/contextproviders/context_provider_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/contextproviders/http_context_provider.py
│ ├── +++ msticpy-2.4.0/msticpy/context/contextproviders/http_context_provider.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/contextproviders/servicenow.py
│ ├── +++ msticpy-2.4.0/msticpy/context/contextproviders/servicenow.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/domain_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/context/domain_utils.py
│ │┄ Files 3% similar despite different names
│ │ @@ -27,16 +27,16 @@
│ │  from dns.resolver import Resolver
│ │  from IPython import display
│ │  from ipywidgets import IntProgress
│ │  from urllib3.exceptions import LocationParseError
│ │  from urllib3.util import parse_url
│ │  
│ │  from .._version import VERSION
│ │ -from ..common import pkg_config as config
│ │  from ..common.exceptions import MsticpyUserConfigError
│ │ +from ..common.pkg_config import get_config, get_http_timeout
│ │  from ..common.utility import export, mp_ua_header
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Pete Bryan"
│ │  
│ │  
│ │  @export
│ │ @@ -57,17 +57,15 @@
│ │          The final screenshot request response data.
│ │  
│ │      """
│ │      # Get Browshot API key from kwargs or config
│ │      if api_key is not None:
│ │          bs_api_key: Optional[str] = api_key
│ │      else:
│ │ -        bs_conf = config.settings.get("DataProviders", {}).get(
│ │ -            "Browshot"
│ │ -        ) or config.settings.get("Browshot")
│ │ +        bs_conf = get_config("DataProviders.Browshot", {}) or get_config("Browshot", {})
│ │          bs_api_key = None
│ │          if bs_conf is not None:
│ │              bs_api_key = bs_conf.get("Args", {}).get("AuthKey")  # type: ignore
│ │  
│ │      if bs_api_key is None:
│ │          raise MsticpyUserConfigError(
│ │              "No configuration found for Browshot",
│ │ @@ -81,17 +79,15 @@
│ │          )
│ │  
│ │      # Request screenshot from Browshot and get request ID
│ │      id_string = (
│ │          f"https://api.browshot.com/api/v1/screenshot/create?url={url}/"
│ │          f"&instance_id=26&size=screen&cache=0&key={bs_api_key}"
│ │      )
│ │ -    id_data = httpx.get(
│ │ -        id_string, timeout=config.get_http_timeout(), headers=mp_ua_header()
│ │ -    )
│ │ +    id_data = httpx.get(id_string, timeout=get_http_timeout(), headers=mp_ua_header())
│ │      bs_id = json.loads(id_data.content)["id"]
│ │      status_string = (
│ │          f"https://api.browshot.com/api/v1/screenshot/info?id={bs_id}&key={bs_api_key}"
│ │      )
│ │      image_string = (
│ │          f"https://api.browshot.com/api/v1/screenshot/thumbnail?id={bs_id}"
│ │          f"&zoom=50&key={bs_api_key}"
│ │ @@ -100,25 +96,25 @@
│ │      print("Getting screenshot")
│ │      progress = IntProgress(min=0, max=100)
│ │      display.display(progress)
│ │      ready = False
│ │      while not ready and progress.value < 100:
│ │          progress.value += 1
│ │          status_data = httpx.get(
│ │ -            status_string, timeout=config.get_http_timeout(), headers=mp_ua_header()
│ │ +            status_string, timeout=get_http_timeout(), headers=mp_ua_header()
│ │          )
│ │          status = json.loads(status_data.content)["status"]
│ │          if status == "finished":
│ │              ready = True
│ │          else:
│ │              time.sleep(0.05)
│ │      progress.value = 100
│ │  
│ │      # Once ready or timed out get the screenshot
│ │ -    image_data = httpx.get(image_string, timeout=config.get_http_timeout())
│ │ +    image_data = httpx.get(image_string, timeout=get_http_timeout())
│ │  
│ │      if image_data.status_code != 200:
│ │          print(
│ │              "There was a problem with the request, please check the status code for details"
│ │          )
│ │  
│ │      return image_data
│ │   --- msticpy-2.3.1/msticpy/context/geoip.py
│ ├── +++ msticpy-2.4.0/msticpy/context/geoip.py
│ │┄ Files 0% similar despite different names
│ │ @@ -825,15 +825,17 @@
│ │      ProviderSettings
│ │          Settings for the provider.
│ │  
│ │      """
│ │      settings = get_provider_settings(config_section="OtherProviders")
│ │      if provider_name in settings:
│ │          return settings[provider_name]
│ │ -    return ProviderSettings(name=provider_name, description="Not found.")
│ │ +    return ProviderSettings(  # type: ignore[call-arg]
│ │ +        name=provider_name, description="Not found."
│ │ +    )
│ │  
│ │  
│ │  @export
│ │  def entity_distance(ip_src: IpAddress, ip_dest: IpAddress) -> float:
│ │      """
│ │      Return distance between two IP Entities.
│ │   --- msticpy-2.3.1/msticpy/context/http_provider.py
│ ├── +++ msticpy-2.4.0/msticpy/context/http_provider.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/ip_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/context/ip_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/lookup.py
│ ├── +++ msticpy-2.4.0/msticpy/context/lookup.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/lookup_result.py
│ ├── +++ msticpy-2.4.0/msticpy/context/lookup_result.py
│ │┄ Files 17% similar despite different names
│ │ @@ -1,23 +1,27 @@
│ │  # -------------------------------------------------------------------------
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Lookup Status class."""
│ │ -from collections import namedtuple
│ │  from enum import Enum
│ │ +from typing import NamedTuple, Optional
│ │  
│ │  from .._version import VERSION
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │ -SanitizedObservable = namedtuple("SanitizedObservable", ["observable", "status"])
│ │ +class SanitizedObservable(NamedTuple):
│ │ +    """Encoded version of observable."""
│ │ +
│ │ +    observable: Optional[str]
│ │ +    status: Optional[str]
│ │  
│ │  
│ │  class LookupStatus(Enum):
│ │      """Threat intelligence lookup status."""
│ │  
│ │      OK = 0
│ │      NOT_SUPPORTED = 1
│ │   --- msticpy-2.3.1/msticpy/context/preprocess_observable.py
│ ├── +++ msticpy-2.4.0/msticpy/context/preprocess_observable.py
│ │┄ Files 1% similar despite different names
│ │ @@ -263,15 +263,15 @@
│ │  
│ │              1. observable - with the pre-processed result,
│ │                 This is set to None if a check fails.
│ │              2. status - this is set to "ok" if the checks completed.
│ │                 Otherwise, it has an error message.
│ │  
│ │          """
│ │ -        proc_value = value.strip()
│ │ +        proc_value: Optional[str] = value.strip()
│ │          result = SanitizedObservable(proc_value, "ok")
│ │          for processor in self._processors.get(value_type, []):
│ │              if processor == self._TYPE_CHECK:
│ │                  result = _validate_ioc_type(proc_value, value_type)
│ │              else:
│ │                  result = processor(proc_value, **kwargs)
│ │              proc_value = result.observable
│ │   --- msticpy-2.3.1/msticpy/context/provider_base.py
│ ├── +++ msticpy-2.4.0/msticpy/context/provider_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tilookup.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tilookup.py
│ │┄ Files 2% similar despite different names
│ │ @@ -44,30 +44,31 @@
│ │  
│ │      PROVIDERS = TI_PROVIDERS
│ │      PACKAGE = "tiproviders"
│ │  
│ │      # pylint: disable=too-many-arguments
│ │      def lookup_ioc(
│ │          self,
│ │ -        ioc: str,
│ │ +        ioc: Optional[str] = None,
│ │          ioc_type: Optional[str] = None,
│ │          ioc_query_type: Optional[str] = None,
│ │          providers: Optional[List[str]] = None,
│ │          default_providers: Optional[List[str]] = None,
│ │          prov_scope: str = "primary",
│ │          **kwargs,
│ │      ) -> pd.DataFrame:
│ │          """
│ │          Lookup single IoC in active providers.
│ │  
│ │          Parameters
│ │          ----------
│ │          ioc : str
│ │              IoC observable
│ │ -            (`ioc` is also an alias for observable)
│ │ +        observable : str
│ │ +            alias for `ioc`
│ │          ioc_type : str, optional
│ │              One of IoCExtract.IoCType, by default None
│ │              If none, the IoC type will be inferred
│ │          ioc_query_type: str, optional
│ │              The ioc query type (e.g. rep, info, malware)
│ │          providers: List[str]
│ │              Explicit list of providers to use
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/__init__.py
│ │┄ Files 7% similar despite different names
│ │ @@ -19,8 +19,9 @@
│ │      "GreyNoise": ("greynoise", "GreyNoise"),
│ │      "XForce": ("ibm_xforce", "XForce"),
│ │      "IntSights": ("intsights", "IntSights"),
│ │      "OPR": ("open_page_rank", "OPR"),
│ │      "Tor": ("tor_exit_nodes", "Tor"),
│ │      "VirusTotal": ("virustotal", "VirusTotal"),
│ │      "RiskIQ": ("riskiq", "RiskIQ"),
│ │ +    "Pulsedive": ("pulsedive", "Pulsedive"),
│ │  }
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/alienvault_otx.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/alienvault_otx.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/azure_sent_byoti.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/azure_sent_byoti.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/greynoise.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/greynoise.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/ibm_xforce.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/ibm_xforce.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/intsights.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/intsights.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/kql_base.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/kql_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/mblookup.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/mblookup.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/open_page_rank.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/open_page_rank.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/result_severity.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/result_severity.py
│ │┄ Files 13% similar despite different names
│ │ @@ -2,14 +2,15 @@
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Result Severity enumeration."""
│ │  from enum import Enum
│ │  from functools import total_ordering
│ │ +from typing import Any, Dict, NamedTuple
│ │  
│ │  from ..._version import VERSION
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │ @@ -84,7 +85,15 @@
│ │          -------
│ │          bool
│ │              If severities are equal
│ │  
│ │          """
│ │          other_sev = ResultSeverity.parse(other)
│ │          return self.value > other_sev.value
│ │ +
│ │ +
│ │ +class LookupResult(NamedTuple):
│ │ +    """Return value from TI Provider parse_results."""
│ │ +
│ │ +    status: bool
│ │ +    severity: ResultSeverity
│ │ +    details: Dict[str, Any]
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/riskiq.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/riskiq.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/ti_http_provider.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/ti_http_provider.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/ti_provider_base.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/ti_provider_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/tor_exit_nodes.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/tor_exit_nodes.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/tiproviders/virustotal.py
│ ├── +++ msticpy-2.4.0/msticpy/context/tiproviders/virustotal.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/vtlookupv3/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/context/vtlookupv3/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/context/vtlookupv3/vtfile_behavior.py
│ ├── +++ msticpy-2.4.0/msticpy/context/vtlookupv3/vtfile_behavior.py
│ │┄ Files 2% similar despite different names
│ │ @@ -2,15 +2,15 @@
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """VirusTotal File Behavior functions."""
│ │  import re
│ │  from copy import deepcopy
│ │ -from datetime import datetime
│ │ +from datetime import datetime, timezone
│ │  from pathlib import Path
│ │  from pprint import pformat
│ │  from typing import Any, Dict, List, Optional, Union
│ │  
│ │  import attr
│ │  import ipywidgets as widgets
│ │  import numpy as np
│ │ @@ -414,24 +414,26 @@
│ │          )
│ │      return procs_cmd
│ │  
│ │  
│ │  def _fill_missing_proc_tree_values(process_df: pd.DataFrame) -> pd.DataFrame:
│ │      # Define a schema to map Df names on to internal ProcSchema
│ │      process_df["path"] = np.nan
│ │ -    process_df.loc[process_df.IsRoot, "path"] = process_df[
│ │ -        process_df.IsRoot
│ │ -    ].index.astype("str")
│ │ +    process_df.loc[process_df.IsRoot, "path"] = pd.Series(
│ │ +        process_df[process_df.IsRoot].index.astype("str")
│ │ +    ).apply(lambda x: x.zfill(5))
│ │  
│ │      # Fill in some required fields with placeholder data
│ │ -    process_df["time_stamp"] = datetime.utcnow()
│ │ +    process_df["time_stamp"] = datetime.now(tz=timezone.utc)
│ │      process_df["host"] = "sandbox"
│ │      process_df["logon_id"] = "na"
│ │      process_df["event_id"] = "na"
│ │ -    process_df["source_index"] = process_df.index.astype("str")
│ │ +    process_df["source_index"] = pd.Series(process_df.index.astype("str")).apply(
│ │ +        lambda x: x.zfill(5)
│ │ +    )
│ │  
│ │      proc_tree = process_df.set_index("proc_key")
│ │  
│ │      first_unique = proc_tree.index.duplicated()
│ │      proc_tree = proc_tree[~first_unique]
│ │      # msticpy function to build the tree
│ │      return build_proc_tree(proc_tree)
│ │   --- msticpy-2.3.1/msticpy/context/vtlookupv3/vtlookup.py
│ ├── +++ msticpy-2.4.0/msticpy/context/vtlookupv3/vtlookup.py
│ │┄ Files 1% similar despite different names
│ │ @@ -298,16 +298,16 @@
│ │              observable is None
│ │              or observable.strip() is None
│ │              or ioc_type is None
│ │              or ioc_type.strip() is None
│ │          ):
│ │              raise SyntaxError("Invalid value for observable or ioc_type")
│ │  
│ │ -        observable, status = preprocess_observable(observable, ioc_type)
│ │ -        if observable is None:
│ │ +        pp_observable, status = preprocess_observable(observable, ioc_type)
│ │ +        if pp_observable is None:
│ │              raise SyntaxError(f"{status} for observable value {observable}")
│ │  
│ │          if ioc_type not in self._VT_TYPE_MAP:
│ │              raise LookupError(
│ │                  f"IoC Type {ioc_type} not recognized.",
│ │                  f"Valid types are [{', '.join(self.supported_ioc_types)}]",
│ │              )
│ │ @@ -321,16 +321,16 @@
│ │                  f"Valid types are [{'', ''.join(vt_types)}]",
│ │              )
│ │              raise LookupError(err)
│ │  
│ │          # do the submission
│ │          vt_api_type = self._VT_TYPE_MAP[ioc_type]
│ │          vt_param = self._VT_API_TYPES[vt_api_type]
│ │ -        results, _ = self._vt_submit_request(observable, vt_param)
│ │ -        self._parse_vt_results(results, observable, ioc_type)
│ │ +        results, _ = self._vt_submit_request(pp_observable, vt_param)
│ │ +        self._parse_vt_results(results, pp_observable, ioc_type)
│ │  
│ │          # return as a list of dictionaries or a DataFrame
│ │          if output == "dict":
│ │              list_res = self.results.apply(lambda x: x.to_dict(), axis=1).tolist()
│ │              return list_res[0] if len(list_res) == 1 else list_res
│ │  
│ │          return self.results
│ │ @@ -649,15 +649,18 @@
│ │              return SanitizedObservable(None, status)
│ │  
│ │          # Check that observable is of the correct format for this type
│ │          # and do any cleaning up required
│ │          pp_observable = preprocess_observable(observable, ioc_type)
│ │          if pp_observable.observable is None:
│ │              self._add_invalid_input_result(
│ │ -                observable, ioc_type, pp_observable.status, idx
│ │ +                observable,
│ │ +                ioc_type,
│ │ +                pp_observable.status or "Unknown status from preprocess_observable",
│ │ +                idx,
│ │              )
│ │              self._print_status(
│ │                  (
│ │                      f'Invalid observable format: "{observable}", '
│ │                      + f'type "{ioc_type}", '
│ │                      + f"status: {pp_observable.status} "
│ │                      + f"- skipping. (Source index {idx})"
│ │   --- msticpy-2.3.1/msticpy/context/vtlookupv3/vtlookupv3.py
│ ├── +++ msticpy-2.4.0/msticpy/context/vtlookupv3/vtlookupv3.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/data/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/azure/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/data/azure/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/azure/azure_blob_storage.py
│ ├── +++ msticpy-2.4.0/msticpy/data/azure/azure_blob_storage.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/azure/azure_data.py
│ ├── +++ msticpy-2.4.0/msticpy/data/azure/azure_data.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/azure_blob_storage.py
│ ├── +++ msticpy-2.4.0/msticpy/data/azure_blob_storage.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/azure_data.py
│ ├── +++ msticpy-2.4.0/msticpy/data/azure_data.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/azure_sentinel.py
│ ├── +++ msticpy-2.4.0/msticpy/data/azure_sentinel.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/core/data_providers.py
│ ├── +++ msticpy-2.4.0/msticpy/data/core/data_providers.py
│ │┄ Files 0% similar despite different names
│ │ @@ -12,16 +12,16 @@
│ │  from pathlib import Path
│ │  from typing import Any, Dict, Iterable, List, NamedTuple, Optional, Pattern, Union
│ │  
│ │  import pandas as pd
│ │  from tqdm.auto import tqdm
│ │  
│ │  from ..._version import VERSION
│ │ -from ...common import pkg_config as config
│ │  from ...common.exceptions import MsticpyDataQueryError
│ │ +from ...common.pkg_config import get_config
│ │  from ...common.utility import export, valid_pyname
│ │  from ...nbwidgets import QueryTime
│ │  from ..drivers import DriverBase, import_driver
│ │  from .param_extractor import extract_query_params
│ │  from .query_container import QueryContainer
│ │  from .query_defns import DataEnvironment
│ │  from .query_source import QuerySource
│ │ @@ -639,17 +639,15 @@
│ │          return [
│ │              _resolve_package_path(root_path).joinpath(data_env.casefold())
│ │              for data_env in data_envs
│ │          ]
│ │  
│ │      def _read_queries_from_paths(self, query_paths) -> Dict[str, QueryStore]:
│ │          """Fetch queries from YAML files in specified paths."""
│ │ -        settings: Dict[str, Any] = config.settings.get(  # type: ignore
│ │ -            "QueryDefinitions"
│ │ -        )  # type: ignore
│ │ +        settings: Dict[str, Any] = get_config("QueryDefinitions", {})
│ │          all_query_paths: List[Union[Path, str]] = []
│ │          for def_qry_path in settings.get("Default"):  # type: ignore
│ │              # only read queries from environment folder
│ │              builtin_qry_paths = self._get_query_folder_for_env(
│ │                  def_qry_path, self.environment
│ │              )
│ │              all_query_paths.extend(
│ │   --- msticpy-2.3.1/msticpy/data/core/data_query_reader.py
│ ├── +++ msticpy-2.4.0/msticpy/data/core/data_query_reader.py
│ │┄ Files 4% similar despite different names
│ │ @@ -1,13 +1,14 @@
│ │  # -------------------------------------------------------------------------
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Data query definition reader."""
│ │ +from itertools import chain
│ │  from pathlib import Path
│ │  from typing import Any, Dict, Iterable, Tuple
│ │  
│ │  import yaml
│ │  
│ │  from ..._version import VERSION
│ │  from .query_defns import DataEnvironment
│ │ @@ -27,33 +28,36 @@
│ │      recursive : bool, optional
│ │          Whether to recurse through subfolders.
│ │          By default False
│ │  
│ │      Returns
│ │      -------
│ │      Iterable[str]
│ │ -        File paths of yanl files found.
│ │ +        File paths of yaml files found.
│ │  
│ │      """
│ │      recurse_pfx = "**/" if recursive else ""
│ │ -    file_glob = Path(source_path).glob(f"{recurse_pfx}*.yaml")
│ │ +    file_glob = chain(
│ │ +        Path(source_path).glob(f"{recurse_pfx}*.yaml"),
│ │ +        Path(source_path).glob(f"{recurse_pfx}*.yml"),
│ │ +    )
│ │      for file_path in file_glob:
│ │          if not file_path.is_file():
│ │              continue
│ │          yield file_path
│ │  
│ │  
│ │  def read_query_def_file(query_file: str) -> Tuple[Dict, Dict, Dict]:
│ │      """
│ │      Read a yaml data query definition file.
│ │  
│ │      Parameters
│ │      ----------
│ │      query_file : str
│ │ -        Path to yaml query defintion file
│ │ +        Path to yaml query definition file
│ │  
│ │      Returns
│ │      -------
│ │      Tuple[Dict, Dict, Dict]
│ │          Tuple of dictionaries.
│ │          sources - dictionary of query definitions
│ │          defaults - the default parameters from the file
│ │   --- msticpy-2.3.1/msticpy/data/core/param_extractor.py
│ ├── +++ msticpy-2.4.0/msticpy/data/core/param_extractor.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/core/query_container.py
│ ├── +++ msticpy-2.4.0/msticpy/data/core/query_container.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/core/query_defns.py
│ ├── +++ msticpy-2.4.0/msticpy/data/core/query_defns.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/core/query_source.py
│ ├── +++ msticpy-2.4.0/msticpy/data/core/query_source.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/core/query_store.py
│ ├── +++ msticpy-2.4.0/msticpy/data/core/query_store.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/data_obfus.py
│ ├── +++ msticpy-2.4.0/msticpy/data/data_obfus.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/data_providers.py
│ ├── +++ msticpy-2.4.0/msticpy/data/data_providers.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/cybereason_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/cybereason_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/driver_base.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/driver_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/elastic_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/elastic_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/kql_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/kql_driver.py
│ │┄ Files 1% similar despite different names
│ │ @@ -416,23 +416,21 @@
│ │              kql_exec("--config short_errors=True")
│ │          return result
│ │  
│ │      @staticmethod
│ │      def _set_kql_env_option(option, value):
│ │          """Set an item in the KqlMagic main config environment variable."""
│ │          kql_config = os.environ.get(_KQL_ENV_OPTS, "")
│ │ -        print(kql_config)
│ │          current_opts = {
│ │              opt.split("=")[0].strip(): opt.split("=")[1]
│ │              for opt in kql_config.split(";")
│ │          }
│ │ -        print(current_opts)
│ │          current_opts[option] = value
│ │          kql_config = ";".join(f"{opt}={val}" for opt, val in current_opts.items())
│ │ -        print(kql_config)
│ │ +        # print(kql_config) - replace with logger
│ │          os.environ[_KQL_ENV_OPTS] = kql_config
│ │  
│ │      @staticmethod
│ │      def _get_kql_current_connection():
│ │          """Get the current connection Workspace ID from KQLMagic."""
│ │          connections = kql_exec("--conn")
│ │          current_connection = [conn for conn in connections if conn.startswith(" * ")]
│ │   --- msticpy-2.3.1/msticpy/data/drivers/kusto_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/kusto_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/local_data_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/local_data_driver.py
│ │┄ Files 2% similar despite different names
│ │ @@ -6,15 +6,15 @@
│ │  """Local Data Driver class - for testing and demos."""
│ │  from pathlib import Path
│ │  from typing import Any, Dict, List, Optional, Union
│ │  
│ │  import pandas as pd
│ │  
│ │  from ..._version import VERSION
│ │ -from ...common.pkg_config import settings
│ │ +from ...common.pkg_config import get_config, has_config
│ │  from ...common.utility import export
│ │  from .driver_base import DriverBase, QuerySource
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │ @@ -34,21 +34,19 @@
│ │              Paths from which to load data files
│ │  
│ │          """
│ │          del connection_str
│ │          self._debug = kwargs.get("debug", False)
│ │          super().__init__(**kwargs)
│ │  
│ │ -        # If data paths specified, use these
│ │ -        data_paths = kwargs.get("data_paths")
│ │          self._paths: List[str] = ["."]
│ │ -        if data_paths:
│ │ +        if data_paths := kwargs.get("data_paths"):
│ │              self._paths = [path.strip() for path in data_paths]
│ │ -        elif "LocalData" in settings:
│ │ -            self._paths = settings.get("LocalData", {}).get("data_paths")
│ │ +        elif has_config("DataProviders.LocalData"):
│ │ +            self._paths = get_config("LocalData.data_paths", self._paths)
│ │  
│ │          self.data_files: Dict[str, str] = self._get_data_paths()
│ │          self._schema: Dict[str, Any] = {}
│ │          self._loaded = True
│ │          self._connected = True
│ │          self.current_connection = "; ".join(self._paths)
│ │  
│ │ @@ -135,15 +133,15 @@
│ │          if file_path.endswith("csv"):
│ │              try:
│ │                  return pd.read_csv(
│ │                      file_path, infer_datetime_format=True, parse_dates=["TimeGenerated"]
│ │                  )
│ │              except ValueError:
│ │                  return pd.read_csv(file_path)
│ │ -        data_df = pd.read_pickle(file_path)
│ │ +        data_df = pd.read_pickle(file_path)  # nosec
│ │          if isinstance(data_df, pd.DataFrame):
│ │              return data_df
│ │          return f"{query} is not a DataFrame ({file_path})."
│ │  
│ │      def query_with_results(self, query, **kwargs):
│ │          """Return query with fake results."""
│ │          return self.query(query, **kwargs), "OK"
│ │   --- msticpy-2.3.1/msticpy/data/drivers/mdatp_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/mdatp_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/mordor_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/mordor_driver.py
│ │┄ Files 1% similar despite different names
│ │ @@ -17,15 +17,15 @@
│ │  import httpx
│ │  import pandas as pd
│ │  import yaml
│ │  from tqdm.auto import tqdm
│ │  
│ │  from ..._version import VERSION
│ │  from ...common.exceptions import MsticpyUserError
│ │ -from ...common.pkg_config import settings
│ │ +from ...common.pkg_config import get_config
│ │  from ...common.utility import mp_ua_header
│ │  from ..core.query_source import QuerySource
│ │  from .driver_base import DriverBase
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │ @@ -63,15 +63,15 @@
│ │          self.mitre_techniques: pd.DataFrame
│ │          self.mitre_tactics: pd.DataFrame
│ │          self.mordor_data: Dict[str, MordorEntry]
│ │          self.mdr_idx_tech: Dict[str, Set[str]]
│ │          self.mdr_idx_tact: Dict[str, Set[str]]
│ │          self._driver_queries: List[Dict[str, Any]] = []
│ │  
│ │ -        mdr_settings = settings.get("DataProviders", {}).get("Mordor", {})
│ │ +        mdr_settings = get_config("DataProviders.Mordor", {})
│ │          self.use_cached = kwargs.pop(
│ │              "used_cached", mdr_settings.get("used_cached", True)
│ │          )
│ │          self.save_folder = kwargs.pop(
│ │              "save_folder", mdr_settings.get("save_folder", ".")
│ │          )
│ │          self.save_folder = _resolve_cache_folder(self.save_folder)
│ │ @@ -899,16 +899,17 @@
│ │  
│ │      """
│ │      if cache_folder:
│ │          tech_cache = Path(cache_folder).joinpath(_MITRE_TECH_CACHE)
│ │          tactics_cache = Path(cache_folder).joinpath(_MITRE_TACTICS_CACHE)
│ │          if _valid_cache(tech_cache) and _valid_cache(tactics_cache):
│ │              try:
│ │ -                tech_df = pd.read_pickle(tech_cache)
│ │ -                tactics_df = pd.read_pickle(tactics_cache)
│ │ +                # caching location only used if sepcified.
│ │ +                tech_df = pd.read_pickle(tech_cache)  # nosec
│ │ +                tactics_df = pd.read_pickle(tactics_cache)  # nosec
│ │                  return tech_df, tactics_df
│ │              except pickle.PickleError:
│ │                  pass
│ │      resp = httpx.get(_MITRE_JSON_URL, timeout=_HTTP_TIMEOUT, headers=mp_ua_header())
│ │      mitre = pd.json_normalize(resp.json()["objects"])
│ │  
│ │      # remove deprecated items
│ │   --- msticpy-2.3.1/msticpy/data/drivers/odata_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/odata_driver.py
│ │┄ Files 2% similar despite different names
│ │ @@ -10,16 +10,16 @@
│ │  from typing import Any, Dict, Iterable, Optional, Tuple, Union
│ │  
│ │  import httpx
│ │  import pandas as pd
│ │  
│ │  from ..._version import VERSION
│ │  from ...auth.msal_auth import MSALDelegatedAuth
│ │ -from ...common import pkg_config as config
│ │  from ...common.exceptions import MsticpyConnectionError, MsticpyUserConfigError
│ │ +from ...common.pkg_config import get_config
│ │  from ...common.provider_settings import get_provider_settings
│ │  from ...common.utility import mp_ua_header
│ │  from .driver_base import DriverBase, QuerySource
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Pete Bryan"
│ │  
│ │ @@ -28,15 +28,15 @@
│ │      "/DataProviders.html#connecting-to-an-odata-source"
│ │  )
│ │  
│ │  # pylint: disable=too-many-instance-attributes
│ │  
│ │  
│ │  class OData(DriverBase):
│ │ -    """Parent class to retreive date from an oauth based API."""
│ │ +    """Parent class to retrieve date from an oauth based API."""
│ │  
│ │      CONFIG_NAME = ""
│ │      _ALT_CONFIG_NAMES: Iterable[str] = []
│ │  
│ │      def __init__(self, **kwargs):
│ │          """
│ │          Instantiate OData driver and optionally connect.
│ │ @@ -360,15 +360,15 @@
│ │      app_config: Dict[str, str] = {}
│ │      if drv_config:
│ │          app_config = dict(drv_config.args)
│ │      else:
│ │          # Otherwise fall back on legacy settings location
│ │          for alt_name in alt_names:
│ │              alt_key = f"{alt_name}-{instance}" if instance else alt_name
│ │ -            app_config = config.settings.get(alt_key, {}).get("Args")
│ │ +            app_config = get_config(f"{alt_key}.Args", {})
│ │              if app_config:
│ │                  break
│ │  
│ │      if not app_config:
│ │          return {}
│ │      # map names to allow for different spellings
│ │      return _map_config_dict_name(app_config)
│ │   --- msticpy-2.3.1/msticpy/data/drivers/resource_graph_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/resource_graph_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/security_graph_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/security_graph_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/splunk_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/splunk_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/drivers/sumologic_driver.py
│ ├── +++ msticpy-2.4.0/msticpy/data/drivers/sumologic_driver.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/cybereason/cybereason_connections.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/cybereason/cybereason_connections.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/cybereason/cybereason_hosts.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/cybereason/cybereason_hosts.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/cybereason/cybereason_processes.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/cybereason/cybereason_processes.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/localdata/local_data.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/localdata/local_data.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_alerts.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_alerts.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_file.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_file.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_hunting.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_hunting.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_network.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_network.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_process.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_process.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/m365d/kql_mdatp_user.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/m365d/kql_mdatp_user.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_alerts.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_alerts.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_file.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_file.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_hunting.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_hunting.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_network.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_network.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_process.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_process.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mde/kql_mdatp_user.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mde/kql_mdatp_user.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/msgraph/graph_alerts.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/msgraph/graph_alerts.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_alert.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_alert.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_az_dns.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_az_dns.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_az_network.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_az_network.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_azure.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_azure.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_azuresentinel.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_azuresentinel.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_heartbeat_info.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_heartbeat_info.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxauditd.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxauditd.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_activity.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_activity.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_apps.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_apps.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_logon.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_logon.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_sysmon.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_lxsyslog_sysmon.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_net.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_net.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_o365.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_o365.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_threatintel.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_threatintel.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_timeseries.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_timeseries.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_winevent.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_winevent.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_winevent_logon.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_winevent_logon.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/mssentinel/kql_sent_winevent_proc.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/mssentinel/kql_sent_winevent_proc.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/resourcegraph/resource_graph_queries.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/resourcegraph/resource_graph_queries.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/resourcegraph/sentinel_resources.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/resourcegraph/sentinel_resources.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/splunk/splunk_alert_queries.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/splunk/splunk_alert_queries.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/splunk/splunk_authentication_queries.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/splunk/splunk_authentication_queries.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/splunk/splunk_queries.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/splunk/splunk_queries.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/queries/sumologic/sumologic_queries.yaml
│ ├── +++ msticpy-2.4.0/msticpy/data/queries/sumologic/sumologic_queries.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/query_container.py
│ ├── +++ msticpy-2.4.0/msticpy/data/query_container.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/query_defns.py
│ ├── +++ msticpy-2.4.0/msticpy/data/query_defns.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/sql_to_kql.py
│ ├── +++ msticpy-2.4.0/msticpy/data/sql_to_kql.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/storage/azure_blob_storage.py
│ ├── +++ msticpy-2.4.0/msticpy/data/storage/azure_blob_storage.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/uploaders/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/data/uploaders/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/uploaders/loganalytics_uploader.py
│ ├── +++ msticpy-2.4.0/msticpy/data/uploaders/loganalytics_uploader.py
│ │┄ Files 9% similar despite different names
│ │ @@ -1,20 +1,19 @@
│ │  # -------------------------------------------------------------------------
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │ -"""LogAnayltics Uploader class."""
│ │ +"""LogAnalytics Uploader class."""
│ │  import base64
│ │  import datetime
│ │  import hashlib
│ │  import hmac
│ │  import json
│ │  import re
│ │ -import sys
│ │  from pathlib import Path
│ │  from typing import Any
│ │  
│ │  import httpx
│ │  import pandas as pd
│ │  from tqdm.notebook import tqdm
│ │  
│ │ @@ -54,41 +53,40 @@
│ │      ) -> str:
│ │          """
│ │          Build authentication authentication string to pass to LA API.
│ │  
│ │          Parameters
│ │          ----------
│ │          date : str
│ │ -            datetime of authencation session.
│ │ +            datetime of authentication session.
│ │          content_length : int
│ │ -            lenght of content to be passed to the api.
│ │ +            length of content to be passed to the api.
│ │          method : str
│ │              HTTP method being used.
│ │          content_type : str
│ │              Type of content being passed to the API.
│ │          resource : str
│ │ -            The API endpoint being targetted.
│ │ +            The API endpoint being targeted.
│ │  
│ │          Returns
│ │          -------
│ │          str
│ │              The encoded authorization string.
│ │  
│ │          """
│ │ -        x_headers = "x-ms-date:" + date
│ │ +        x_headers = f"x-ms-date:{date}"
│ │          string_to_hash = "\n".join(
│ │              [method, str(content_length), content_type, x_headers, resource]
│ │          )
│ │          bytes_to_hash = bytes(string_to_hash, encoding="utf-8")
│ │          decoded_key = base64.b64decode(self.workspace_secret)
│ │          encoded_hash = base64.b64encode(
│ │              hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()
│ │          ).decode()
│ │ -        authorization = f"SharedKey {self.workspace}:{encoded_hash}"
│ │ -        return authorization
│ │ +        return f"SharedKey {self.workspace}:{encoded_hash}"
│ │  
│ │      def _post_data(self, body: str, table_name: str):
│ │          """
│ │          Write data to Log Analytics Workspace.
│ │  
│ │          Parameters
│ │          ----------
│ │ @@ -103,15 +101,17 @@
│ │              Raised when response code indicates failure.
│ │  
│ │          """
│ │          table_name = re.sub("[^A-Za-z0-9_]+", "", table_name)
│ │  
│ │          resource = "/api/logs"
│ │          content_type = "application/json"
│ │ -        rfc1123date = datetime.datetime.utcnow().strftime("%a, %d %b %Y %H:%M:%S GMT")
│ │ +        rfc1123date = datetime.datetime.now(datetime.timezone.utc).strftime(
│ │ +            "%a, %d %b %Y %H:%M:%S GMT"
│ │ +        )
│ │          content_length = len(body)
│ │          signature = self._build_signature(
│ │              rfc1123date, content_length, "POST", content_type, resource
│ │          )
│ │          uri = (
│ │              "https://"
│ │              + self.workspace
│ │ @@ -150,31 +150,27 @@
│ │  
│ │          Parameters
│ │          ----------
│ │          data : pd.DataFrame
│ │              Pandas DataFrame to upload.
│ │          table_name : str
│ │              Custom table name to upload the data to.
│ │ -
│ │ +        batch_size : int
│ │ +            Custom number of rows to batch.
│ │          """
│ │ +        batch_size = kwargs.get("batch_size", 10000)  # Set a default batch size
│ │          events = []
│ │ -        for row in data.iterrows():
│ │ +        for i, row in enumerate(data.iterrows()):
│ │              events.append(row[1].astype(str).to_dict())
│ │ -            # Due to 30MB limit if data is larger than 25Mb upload that chunk then continue
│ │ -            if sys.getsizeof(json.dumps(events)) > 26214400:
│ │ -                if self._debug is True:
│ │ -                    print("Data larger than 25MB spliting data requests.")
│ │ +            if (i + 1) % batch_size == 0 or i == len(data) - 1:
│ │                  body = json.dumps(events)
│ │                  self._post_data(body, table_name)
│ │                  events = []
│ │ -
│ │ -        if events:
│ │ -            body = json.dumps(events)
│ │ -            self._post_data(body, table_name)
│ │ -
│ │ +                if self._debug:
│ │ +                    print(f"Uploaded batch {i // batch_size + 1}")
│ │          if self._debug:
│ │              print(f"Upload to {table_name} complete")
│ │  
│ │      def upload_file(
│ │          self, file_path: str, table_name: str = None, delim: str = ",", **kwargs
│ │      ):
│ │          """
│ │ @@ -213,17 +209,17 @@
│ │  
│ │          """
│ │          glob_pat = kwargs.get("glob", "*")
│ │          ext = glob_pat
│ │          t_name = bool(table_name)
│ │          input_files = Path(folder_path).glob(ext)
│ │          # pylint: disable=unnecessary-comprehension
│ │ -        input_files = [path for path in input_files]  # type: ignore
│ │ +        input_files = list(input_files)  # type: ignore
│ │          # pylint: enable=unnecessary-comprehension
│ │          progress = tqdm(total=len(list(input_files)), desc="Files", position=0)
│ │          for path in input_files:
│ │              data = pd.read_csv(path, delimiter=delim)
│ │ -            if t_name is False:
│ │ +            if not t_name:
│ │                  table_name = path.stem
│ │              self.upload_df(data, table_name)
│ │              progress.update(1)
│ │          progress.close()
│ │   --- msticpy-2.3.1/msticpy/data/uploaders/splunk_uploader.py
│ ├── +++ msticpy-2.4.0/msticpy/data/uploaders/splunk_uploader.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/data/uploaders/uploader_base.py
│ ├── +++ msticpy-2.4.0/msticpy/data/uploaders/uploader_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/account.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/account.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/alert.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/alert.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/azure_resource.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/azure_resource.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/cloud_application.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/cloud_application.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/cloud_logon_session.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/cloud_logon_session.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/dns.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/dns.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/entity.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/entity.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/entity_enums.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/entity_enums.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/entity_graph.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/entity_graph.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/file.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/file.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/file_hash.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/file_hash.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/geo_location.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/geo_location.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/graph_property.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/graph_property.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/host.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/host.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/host_logon_session.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/host_logon_session.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/iot_device.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/iot_device.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/ip_address.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/ip_address.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/mail_cluster.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/mail_cluster.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/mail_message.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/mail_message.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/mailbox.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/mailbox.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/malware.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/malware.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/network_connection.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/network_connection.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/process.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/process.py
│ │┄ Files 5% similar despite different names
│ │ @@ -148,15 +148,19 @@
│ │              return f"{self.ProcessFilePath}: {self.CommandLine}"
│ │          return self.__class__.__name__
│ │  
│ │      @property
│ │      def name_str(self) -> str:
│ │          """Return Entity Name."""
│ │          if self.ImageFile:
│ │ -            return f"{self.ImageFile.name_str}[pid:{self.ProcessId}]"
│ │ +            if isinstance(self.ImageFile, str):
│ │ +                return f"{self.ImageFile}[pid:{self.ProcessId}]"
│ │ +            if isinstance(self.ImageFile, File):
│ │ +                return f"{self.ImageFile.name_str}[pid:{self.ProcessId}]"
│ │ +            return super().name_str
│ │          return self.ImageFile.name_str if self.ImageFile else super().name_str
│ │  
│ │      _entity_schema = {
│ │          # ProcessId (type System.String)
│ │          "ProcessId": None,
│ │          # CommandLine (type System.String)
│ │          "CommandLine": None,
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/registry_key.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/registry_key.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/registry_value.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/registry_value.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/security_group.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/security_group.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/submission_mail.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/submission_mail.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/threat_intelligence.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/threat_intelligence.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/unknown_entity.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/unknown_entity.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/entities/url.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/entities/url.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/pivot.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/pivot.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/soc/incident.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/soc/incident.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/datamodel/soc/sentinel_alert.py
│ ├── +++ msticpy-2.4.0/msticpy/datamodel/soc/sentinel_alert.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/init/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/azure_ml_tools.py
│ ├── +++ msticpy-2.4.0/msticpy/init/azure_ml_tools.py
│ │┄ Files 2% similar despite different names
│ │ @@ -1,13 +1,14 @@
│ │  # -------------------------------------------------------------------------
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Checker functions for Azure ML notebooks."""
│ │ +import logging
│ │  import os
│ │  import sys
│ │  from pathlib import Path
│ │  from typing import Any, List, Mapping, Optional, Tuple, Union
│ │  
│ │  import yaml
│ │  from IPython import get_ipython
│ │ @@ -22,14 +23,16 @@
│ │  from .._version import VERSION
│ │  from ..common.pkg_config import _HOME_PATH, refresh_config
│ │  from ..common.utility import search_for_file
│ │  from ..config import MpConfigFile
│ │  
│ │  __version__ = VERSION
│ │  
│ │ +logger = logging.getLogger(__name__)
│ │ +
│ │  AZ_GET_STARTED = (
│ │      "https://github.com/Azure/Azure-Sentinel-Notebooks/blob/master/A%20Getting"
│ │      "%20Started%20Guide%20For%20Azure%20Sentinel%20ML%20Notebooks.ipynb"
│ │  )
│ │  TROUBLE_SHOOTING = (
│ │      "https://github.com/Azure/Azure-Sentinel-Notebooks/blob/master/"
│ │      "TroubleShootingNotebooks.ipynb"
│ │ @@ -230,32 +233,35 @@
│ │      def_azs_settings = next(
│ │          iter(azs_settings.get("AzureSentinel", {}).get("Workspaces", {}).values())
│ │      )
│ │      if def_azs_settings:
│ │          mp_config_convert.settings["AzureSentinel"]["Workspaces"][
│ │              "Default"
│ │          ] = def_azs_settings.copy()
│ │ -    mssg = (
│ │ -        f"Created '{mp_path}' with Microsoft Sentinel settings"
│ │ -        f" imported from {config_json}."
│ │ -    )
│ │ +
│ │      if Path(mp_path).exists():
│ │          # If there is an existing file read it in
│ │          mp_config_text = Path(mp_path).read_text(encoding="utf-8")
│ │          mp_config_settings = yaml.safe_load(mp_config_text)
│ │          # update exist settings with the AzSent settings from config.json
│ │          mp_config_settings.update(mp_config_convert.settings)
│ │          # update MpConfigFile with the merged settings
│ │          mp_config_convert.settings = mp_config_settings
│ │          mssg = (
│ │              f"Updated '{mp_path}' with Microsoft Sentinel settings"
│ │              f" imported from {config_json}."
│ │          )
│ │ +    else:
│ │ +        mssg = (
│ │ +            f"Created '{mp_path}' with Microsoft Sentinel settings"
│ │ +            f" imported from {config_json}."
│ │ +        )
│ │      # Save the file
│ │      mp_config_convert.save_to_file(mp_path, backup=True)
│ │ +    logger.info(mssg)
│ │      return mssg
│ │  
│ │  
│ │  def _check_mp_install(
│ │      min_mp_ver: Union[str, Tuple],
│ │      mp_release: Optional[str],
│ │      extras: Optional[List[str]],
│ │ @@ -330,15 +336,15 @@
│ │  
│ │  def _set_mpconfig_var():
│ │      """Set MSTICPYCONFIG to file in user directory if no other found."""
│ │      mp_path_val = os.environ.get(MP_ENV_VAR)
│ │      if (
│ │          # If a valid MSTICPYCONFIG value is found - return
│ │          (mp_path_val and Path(mp_path_val).is_file())
│ │ -        # Or if there is a msticpconfig in the current folder.
│ │ +        # Or if there is a msticpyconfig in the current folder.
│ │          or Path(".").joinpath(MP_FILE).is_file()
│ │      ):
│ │          return
│ │      # Otherwise check the user's root folder
│ │      user_dir = get_aml_user_folder()
│ │      if user_dir:
│ │          mp_path = Path(user_dir).joinpath(MP_FILE)
│ │   --- msticpy-2.3.1/msticpy/init/azure_synapse_tools.py
│ ├── +++ msticpy-2.4.0/msticpy/init/azure_synapse_tools.py
│ │┄ Files 13% similar despite different names
│ │ @@ -1,28 +1,30 @@
│ │  # -------------------------------------------------------------------------
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Help functions for Synapse pipelines notebooks."""
│ │ +import logging
│ │  import os
│ │  import re
│ │  from pathlib import Path
│ │  from typing import Dict, List, Literal, Optional, Union
│ │  
│ │  import httpx
│ │  import jwt
│ │  
│ │  from .._version import VERSION
│ │  from ..auth.azure_auth import AzureCredEnvNames, az_connect
│ │ -from ..common import pkg_config as config
│ │ -from ..common.pkg_config import get_http_timeout
│ │ +from ..common.pkg_config import get_config, get_http_timeout, refresh_config, set_config
│ │  from ..common.provider_settings import get_provider_settings
│ │  from ..common.utility import mp_ua_header
│ │  
│ │ +logger = logging.getLogger(__name__)
│ │ +
│ │  
│ │  class SparkUtilsPlaceHolder:
│ │      """Placeholder for non-spark environments."""
│ │  
│ │      def __getattr__(self, attrib):
│ │          """Raise not implemented error."""
│ │          raise NotImplementedError(
│ │ @@ -85,61 +87,72 @@
│ │          Could not mount configuration data container.
│ │          Could not authenticate to Azure.
│ │          Could not retrieve secret from Key Vault.
│ │  
│ │      """
│ │      if not is_in_synapse():
│ │          print("Not running in Azure Synapse environment.")
│ │ +        logger.info("Not running in Azure Synapse environment.")
│ │          return
│ │      mp_spark = MPSparkUtils()
│ │      storage_svc = mp_spark.get_storage_service(storage_svc_name)
│ │      if not storage_svc:
│ │ +        logger.error("No suitable linked storage service found.")
│ │          raise RuntimeError("No suitable linked storage service found.")
│ │      print(f"Using linked storage service {storage_svc.name}")
│ │ -
│ │ +    logger.info("Using linked storage service %s", storage_svc.name)
│ │      print("Mounting storage...", end=" ")
│ │      stor_acct_match = re.match(_AZ_NAME_PATTERN, storage_svc.url)
│ │      mount_success = mount_container(
│ │          store_acct_name=stor_acct_match["name"] if stor_acct_match else "",
│ │          container=mp_spark.container,
│ │          mount_path=mp_spark.mount_point,
│ │          linked_service=storage_svc.name,
│ │      )
│ │      if not mount_success:
│ │          raise RuntimeError("Could not mount configuration data container.")
│ │      print(f"Mounted {storage_svc.url}/{mp_spark.container} at {mp_spark.config_path}")
│ │ +    logger.info(
│ │ +        "Mounted %s/%s at %s", storage_svc.url, mp_spark.container, mp_spark.config_path
│ │ +    )
│ │  
│ │      # Set msticpy settings
│ │      print("Configuring msticpy...", end=" ")
│ │      _configure_mp_settings(mp_spark)
│ │ +    logger.info("msticpyconfig settings updated")
│ │      print("settings,", end=" ")
│ │  
│ │      # Set up authentication parameters
│ │      if identity_type == "managed":
│ │          _set_mp_azure_settings(auth_method="msi", cloud=cloud)
│ │          _set_msi_client_id(mp_spark=mp_spark, tenant_id=tenant_id)
│ │          print("using managed identity,", end=" ")
│ │ +        logger.info("Using managed identity")
│ │      else:
│ │          # Publish SP creds from KeyVault
│ │          _set_mp_azure_settings(auth_method="env", cloud=cloud)
│ │          _set_azure_env_creds(mp_spark=mp_spark, tenant_id=tenant_id)
│ │          print("using service principal,", end=" ")
│ │ +        logger.info("Using service principal")
│ │      print()
│ │  
│ │      # authenticate with MSI or SP to linked KV
│ │      creds = az_connect()
│ │      if not creds:
│ │ +        logger.error("Could not authenticate to Azure.")
│ │          raise RuntimeError("Could not authenticate to Azure.")
│ │      print("Testing authentication...", end=" ")
│ │  
│ │      # check key retrieval
│ │      if not _check_kv_key_retrieval():
│ │ +        logger.error("Could not retrieve secret from Key Vault.")
│ │          raise RuntimeError("Could not retrieve secret from Key Vault.")
│ │      print("Key Vault success.")
│ │      print("Synapse initialization successful")
│ │ +    logger.info("Synapse initialization successful")
│ │  
│ │  
│ │  def current_mounts() -> Dict[str, str]:
│ │      """Return dictionary of current Synapse mount points."""
│ │      return {mnt.mountPoint: mnt.source for mnt in mssparkutils.fs.mounts()}
│ │  
│ │  
│ │ @@ -188,14 +201,15 @@
│ │      mount_path = mount_path if mount_path.startswith("/") else f"/{mount_path}"
│ │      existing_mounts = current_mounts()
│ │  
│ │      storage_root = "dfs.core.windows.net/"
│ │      folder = f"{folder}/" if folder else ""
│ │  
│ │      storage_url = f"abfss://{container}@{store_acct_name}.{storage_root}{folder}"
│ │ +    logger.info("Mounting %s as %s", storage_url, mount_path)
│ │      if mount_path in existing_mounts:
│ │          print(f"path '{mount_path}' already mounted to {existing_mounts[mount_path]}")
│ │          return existing_mounts[mount_path] == storage_url
│ │  
│ │      return mssparkutils.fs.mount(
│ │          storage_url, mount_path, {"linkedService": linked_service}
│ │      )
│ │ @@ -335,24 +349,22 @@
│ │  
│ │          Returns
│ │          -------
│ │          Optional[LinkedService]
│ │              LinkedService instance for the `svc_type`.
│ │  
│ │          """
│ │ -        try:
│ │ -            return next(
│ │ -                iter(
│ │ -                    lnk_svc
│ │ -                    for lnk_svc in self.linked_services
│ │ -                    if lnk_svc.svc_type == svc_type
│ │ -                )
│ │ -            )
│ │ -        except StopIteration:
│ │ -            return None
│ │ +        return next(
│ │ +            iter(
│ │ +                lnk_svc
│ │ +                for lnk_svc in self.linked_services
│ │ +                if lnk_svc.svc_type == svc_type
│ │ +            ),
│ │ +            None,
│ │ +        )
│ │  
│ │      def get_all_services_of_type(self, svc_type) -> List[LinkedService]:
│ │          """
│ │          Return list of Linked services of `svc_type`.
│ │  
│ │          Parameters
│ │          ----------
│ │ @@ -446,14 +458,21 @@
│ │          decoded_token = jwt.decode(
│ │              ws_token, algorithms=[alg], options={"verify_signature": False}
│ │          )
│ │          self.application_id = decoded_token["appid"]
│ │          self.tenant_id = decoded_token["tid"]
│ │          self.object_id = decoded_token["oid"]
│ │          self.resource_id = decoded_token.get("xms_mirid")
│ │ +        logger.info(
│ │ +            "Workspace IDs retrieved: app_id: %s, tenant_id: %s, obj_id: %s, res_id: %s",
│ │ +            self.application_id,
│ │ +            self.tenant_id,
│ │ +            self.object_id,
│ │ +            self.resource_id,
│ │ +        )
│ │  
│ │  
│ │  def _fetch_linked_services(ws_name: str):
│ │      """Fetch list of linked services via Azure Synapse API."""
│ │      token = mssparkutils.credentials.getToken("Synapse")
│ │      req_headers = {"Authorization": f"Bearer {token}", **mp_ua_header()}
│ │  
│ │ @@ -464,63 +483,104 @@
│ │      )
│ │      return resp.json().get("value")
│ │  
│ │  
│ │  def _set_azure_env_creds(mp_spark: MPSparkUtils, tenant_id: Optional[str] = None):
│ │      """Publish Service Principal credentials to environment variables."""
│ │      os.environ[AzureCredEnvNames.AZURE_TENANT_ID] = tenant_id or mp_spark.tenant_id
│ │ -    os.environ[AzureCredEnvNames.AZURE_CLIENT_ID] = mp_spark.get_kv_secret(
│ │ -        SynapseName.sp_client_id_name
│ │ +    client_id = mp_spark.get_kv_secret(SynapseName.sp_client_id_name)
│ │ +    if not client_id:
│ │ +        raise LookupError("Could not obtain client_id from Key Vault.")
│ │ +    os.environ[AzureCredEnvNames.AZURE_CLIENT_ID] = client_id
│ │ +    client_secret = mp_spark.get_kv_secret(SynapseName.sp_client_sec_name)
│ │ +    if not client_secret:
│ │ +        raise LookupError("Could not obtain client_secret from Key Vault.")
│ │ +    os.environ[AzureCredEnvNames.AZURE_CLIENT_SECRET] = client_secret
│ │ +    logger.info(
│ │ +        "Setting authentication env var %s=%s",
│ │ +        AzureCredEnvNames.AZURE_TENANT_ID,
│ │ +        tenant_id or mp_spark.tenant_id,
│ │ +    )
│ │ +    logger.info(
│ │ +        "Setting authentication env var %s=%s",
│ │ +        AzureCredEnvNames.AZURE_CLIENT_ID,
│ │ +        client_id,
│ │      )
│ │ -    os.environ[AzureCredEnvNames.AZURE_CLIENT_SECRET] = mp_spark.get_kv_secret(
│ │ -        SynapseName.sp_client_sec_name
│ │ +    logger.info(
│ │ +        "Setting authentication env var %s=%s",
│ │ +        AzureCredEnvNames.AZURE_CLIENT_SECRET,
│ │ +        "*" * len(client_secret),
│ │      )
│ │  
│ │  
│ │  def _set_msi_client_id(mp_spark: MPSparkUtils, tenant_id: Optional[str] = None):
│ │      """Publish Service Principal credentials to environment variables."""
│ │      os.environ[AzureCredEnvNames.AZURE_TENANT_ID] = tenant_id or mp_spark.tenant_id
│ │      os.environ[AzureCredEnvNames.AZURE_CLIENT_ID] = mp_spark.application_id
│ │ +    logger.info(
│ │ +        "Setting authentication env var %s=%s",
│ │ +        AzureCredEnvNames.AZURE_TENANT_ID,
│ │ +        tenant_id or mp_spark.tenant_id,
│ │ +    )
│ │ +    logger.info(
│ │ +        "Setting authentication env var %s=%s",
│ │ +        AzureCredEnvNames.AZURE_CLIENT_ID,
│ │ +        mp_spark.application_id,
│ │ +    )
│ │  
│ │  
│ │  def _set_mp_azure_settings(auth_method: str, cloud: str = "global"):
│ │      """Configure in-memory settings for MP Azure authn_methods."""
│ │ -    az_settings = config.settings.get("Azure")
│ │ +    az_settings = get_config("Azure", {})
│ │      if not az_settings:
│ │ -        config.settings["Azure"] = {
│ │ -            "auth_methods": [auth_method],
│ │ -            "cloud": cloud,
│ │ -        }
│ │ +        set_config(
│ │ +            "Azure",
│ │ +            {
│ │ +                "auth_methods": [auth_method],
│ │ +                "cloud": cloud,
│ │ +            },
│ │ +        )
│ │ +        logger.info("Added Azure configuration to config.")
│ │      else:
│ │          curr_methods = az_settings.get("auth_methods", [])
│ │          if auth_method in curr_methods:
│ │              curr_methods.remove(auth_method)
│ │          az_settings["auth_methods"] = [auth_method, *curr_methods]
│ │ +        logger.info("Added Azure configuration authentication methods.")
│ │  
│ │  
│ │  def _check_kv_key_retrieval() -> bool:
│ │      """Check that we are able to get a key from Key Vault."""
│ │      ti_settings = get_provider_settings("TIProviders")
│ │      prov_settings = next(
│ │          iter(
│ │              settings
│ │              for settings in ti_settings.values()
│ │              if settings.args and "AuthKey" in settings.args
│ │ -        )
│ │ +        ),
│ │ +        None,
│ │      )
│ │ +    if prov_settings is None:
│ │ +        logger.warning("No provider settings to test Key Vault connection.")
│ │ +        return False
│ │      value = prov_settings.args.get("AuthKey")
│ │      return value is not None
│ │  
│ │  
│ │  def _configure_mp_settings(mp_spark: MPSparkUtils):
│ │      """Set msticpyconfig and GeoIPLite dbfolder paths."""
│ │ -    os.environ["MSTICPYCONFIG"] = str(
│ │ -        mp_spark.config_path.joinpath("msticpyconfig.yaml")
│ │ -    )
│ │ +    mp_path = mp_spark.config_path.joinpath("msticpyconfig.yaml")
│ │ +    if not mp_path.is_file():
│ │ +        raise RuntimeError("No msticpyconfig.yaml found at", str(mp_spark.config_path))
│ │ +    os.environ["MSTICPYCONFIG"] = str(mp_path)
│ │      os.environ["MSTICPYHOME"] = str(mp_spark.config_path)
│ │ -    config.refresh_config()
│ │ -
│ │ -    geolite_settings = (
│ │ -        config.settings.get("OtherProviders", {}).get("GeoIPLite", {}).get("Args")
│ │ -    )
│ │ +    before_config_keys = len(get_config())
│ │ +    refresh_config()
│ │ +    if len(get_config()) > before_config_keys:
│ │ +        sections = ", ".join(get_config().keys())
│ │ +        logger.warning(
│ │ +            "Possible problem loading msticpyconfig. Sections loaded: %s",
│ │ +            sections,
│ │ +        )
│ │ +    geolite_settings = get_config("OtherProviders.GeoIPLite.Args", None)
│ │      if geolite_settings:
│ │ -        geolite_settings["DBFolder"] = str(mp_spark.config_path)
│ │ +        set_config("OtherProviders.GeoIPLite.Args.DBFolder", str(mp_spark.config_path))
│ │   --- msticpy-2.3.1/msticpy/init/mp_pandas_accessors.py
│ ├── +++ msticpy-2.4.0/msticpy/init/mp_pandas_accessors.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/nbinit.py
│ ├── +++ msticpy-2.4.0/msticpy/init/nbinit.py
│ │┄ Files 3% similar despite different names
│ │ @@ -40,22 +40,23 @@
│ │  
│ │  Configuring your environment notebook
│ │  https://github.com/Azure/Azure-Sentinel-Notebooks/blob/master/ConfiguringNotebookEnvironment.ipynb
│ │  
│ │  """
│ │  import importlib
│ │  import io
│ │ +import logging
│ │  import os
│ │  import sys
│ │  import traceback
│ │  import warnings
│ │  from contextlib import redirect_stdout
│ │  from functools import wraps
│ │  from pathlib import Path
│ │ -from typing import Any, Callable, Dict, List, Optional, Tuple
│ │ +from typing import Any, Callable, Dict, List, Literal, Optional, Tuple
│ │  
│ │  import ipywidgets as widgets
│ │  import pandas as pd
│ │  from IPython import get_ipython
│ │  from IPython.core.interactiveshell import InteractiveShell
│ │  from IPython.display import HTML, display
│ │  from matplotlib import MatplotlibDeprecationWarning
│ │ @@ -84,14 +85,16 @@
│ │  from .pivot import Pivot
│ │  from .user_config import load_user_defaults
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │ +logger = logging.getLogger(__name__)
│ │ +
│ │  _IMPORT_ERR_MSSG = """
│ │  <h2><font color='red'>One or more missing packages detected</h2>
│ │  Please correct these by installing the required packages, restart
│ │  the kernel and re-run the notebook.</font>
│ │  <i>Package error: {err}</i><br>
│ │  """
│ │  
│ │ @@ -321,21 +324,30 @@
│ │          are displayed but do not produce a stack trace, etc.
│ │          Defaults to system/user settings if no value is supplied.
│ │      verbose : Union[int, bool], optional
│ │          Controls amount if status output, by default 1
│ │          0 = No output
│ │          1 or False = Brief output (default)
│ │          2 or True = Detailed output
│ │ +    verbosity : int, optional
│ │ +        alias for `verbose`
│ │      config : Optional[str]
│ │          Use this path to load a msticpyconfig.yaml.
│ │          Defaults are MSTICPYCONFIG env variable, home folder (~/.msticpy),
│ │          current working directory.
│ │      no_config_check : bool, optional
│ │          Skip the check for valid configuration. Default is False.
│ │ -    verbosity : int, optional
│ │ +    detect_env : Union[bool, List[str]], optional
│ │ +        By default init_notebook tries to detect environments and makes
│ │ +        additional configuration changes if it finds one of the supported
│ │ +        notebook environments.
│ │ +        Passing `False` for this parameter disables environment detection.
│ │ +        Alternatively, you can pass a list of environments that you
│ │ +        want to detect. Current supported environments are 'aml' (Azure
│ │ +        Machine Learning) and 'synapse' (Azure Synapse).
│ │  
│ │      Raises
│ │      ------
│ │      MsticpyException
│ │          If extra_imports data format is incorrect.
│ │          If package with required version check has no version
│ │          information.
│ │ @@ -406,38 +418,43 @@
│ │      no_config_check: bool = kwargs.pop("no_config_check", False)
│ │      if "config" in kwargs:
│ │          _use_custom_config(kwargs.pop("config", None))
│ │  
│ │      _set_verbosity(**kwargs)
│ │  
│ │      _pr_output("<hr><h4>Starting Notebook initialization...</h4>")
│ │ +    logger.info("Starting Notebook initialization")
│ │      # Check Azure ML environment
│ │ -    if is_in_aml():
│ │ +    if _detect_env("aml", **kwargs) and is_in_aml():
│ │          check_versions_aml(*_get_aml_globals(namespace))
│ │      else:
│ │          # If not in AML check and print version status
│ │          stdout_cap = io.StringIO()
│ │          with redirect_stdout(stdout_cap):
│ │              check_version()
│ │ -            _pr_output(stdout_cap.getvalue())
│ │ +            output = stdout_cap.getvalue()
│ │ +            _pr_output(output)
│ │ +            logger.info(output)
│ │  
│ │ -    if is_in_synapse():
│ │ +    if _detect_env("synapse", **kwargs) and is_in_synapse():
│ │          synapse_params = {
│ │              key: val for key, val in kwargs.items() if key in _SYNAPSE_KWARGS
│ │          }
│ │          init_synapse(**synapse_params)
│ │  
│ │      # Handle required packages and imports
│ │      _pr_output("Processing imports....")
│ │      stdout_cap = io.StringIO()
│ │      with redirect_stdout(stdout_cap):
│ │          imp_ok = _global_imports(
│ │              namespace, additional_packages, user_install, extra_imports, def_imports
│ │          )
│ │ -        _pr_output(stdout_cap.getvalue())
│ │ +        output = stdout_cap.getvalue()
│ │ +        _pr_output(output)
│ │ +        logger.info(output)
│ │  
│ │      # Configuration check
│ │      if no_config_check:
│ │          conf_ok = True
│ │      else:
│ │          _pr_output("Checking configuration....")
│ │          conf_ok = _get_or_create_config()
│ │ @@ -445,44 +462,49 @@
│ │  
│ │      # Notebook options
│ │      _pr_output("Setting notebook options....")
│ │      _set_nb_options(namespace)
│ │  
│ │      # Set friendly exceptions
│ │      if friendly_exceptions is None:
│ │ -        friendly_exceptions = get_config("msticpy.FriendlyExceptions")
│ │ +        friendly_exceptions = get_config("msticpy.FriendlyExceptions", None)
│ │      if friendly_exceptions:
│ │          if _VERBOSITY() == 2:  # type: ignore
│ │              _pr_output("Friendly exceptions enabled.")
│ │          InteractiveShell.showtraceback = _hook_ipython_exceptions(  # type: ignore
│ │              InteractiveShell.showtraceback
│ │          )
│ │  
│ │      # load pivots
│ │      stdout_cap = io.StringIO()
│ │      with redirect_stdout(stdout_cap):
│ │          _pr_output("Loading pivots.")
│ │          _load_pivots(namespace=namespace)
│ │ -        _pr_output(stdout_cap.getvalue())
│ │ +        output = stdout_cap.getvalue()
│ │ +        _pr_output(output)
│ │ +        logger.info(output)
│ │  
│ │      # User defaults
│ │      stdout_cap = io.StringIO()
│ │      with redirect_stdout(stdout_cap):
│ │          _pr_output("Loading user defaults.")
│ │          prov_dict = load_user_defaults()
│ │ -        _pr_output(stdout_cap.getvalue())
│ │ +        output = stdout_cap.getvalue()
│ │ +        _pr_output(output)
│ │ +        logger.info(output)
│ │  
│ │      if prov_dict:
│ │          namespace.update(prov_dict)
│ │          current_providers = prov_dict
│ │          _pr_output("Auto-loaded components:", ", ".join(prov_dict.keys()))
│ │  
│ │      # show any warnings
│ │      _show_init_warnings(imp_ok, conf_ok)
│ │      _pr_output("<h4>Notebook initialization complete</h4>")
│ │ +    logger.info("Notebook initialization complete")
│ │  
│ │  
│ │  def _show_init_warnings(imp_ok, conf_ok):
│ │      if imp_ok and conf_ok:
│ │          return True
│ │      md("<font color='orange'><h3>Notebook setup completed with some warnings.</h3>")
│ │      if not imp_ok:
│ │ @@ -505,27 +527,36 @@
│ │      if isinstance(verb_param, bool):
│ │          verbosity = 2 if verb_param else 0
│ │      elif isinstance(verb_param, int):
│ │          verbosity = min(2, max(0, verb_param))
│ │      _VERBOSITY(verbosity)
│ │  
│ │  
│ │ +def _detect_env(env_name: Literal["aml", "synapse"], **kwargs):
│ │ +    """Return true if an environment should be detected."""
│ │ +    detect_opt = kwargs.get("detect_env", True)
│ │ +    if isinstance(detect_opt, bool):
│ │ +        return detect_opt
│ │ +    return env_name in detect_opt if isinstance(detect_opt, list) else True
│ │ +
│ │ +
│ │  def list_default_imports():
│ │      """List the default imports for `init_notebook`."""
│ │      for imp_group in (_NB_IMPORTS, _MP_IMPORTS):
│ │          for imp_item in imp_group:
│ │              if "tgt" in imp_item:
│ │                  import_line = f"from {imp_item['pkg']} import {imp_item['tgt']}"
│ │              else:
│ │                  import_line = f"import {imp_item['pkg']}"
│ │              if "alias" in imp_item:
│ │                  import_line += f" as {imp_item['alias']}"
│ │              _pr_output(import_line)
│ │      for imp_item in _MP_IMPORT_ALL:
│ │          _pr_output(f"from {imp_item['module_name']} import *")
│ │ +        logger.info("from %s import *", imp_item["module_name"])
│ │  
│ │  
│ │  def _extract_pkg_name(
│ │      imp_pkg: Optional[Dict[str, str]] = None,
│ │      pkg: str = None,
│ │      tgt: str = None,
│ │      alias: str = None,
│ │ @@ -560,45 +591,51 @@
│ │      user_install: bool = False,
│ │      extra_imports: List[str] = None,
│ │      def_imports: str = "all",
│ │  ):
│ │      import_list = []
│ │      imports, imports_all = _build_import_list(def_imports)
│ │  
│ │ -    try:
│ │ -        for imp_pkg in imports:
│ │ +    for imp_pkg in imports:
│ │ +        try:
│ │              _imp_from_package(nm_spc=namespace, **imp_pkg)
│ │              import_list.append(_extract_pkg_name(imp_pkg))
│ │ -        for imp_pkg in imports_all:
│ │ +        except ImportError as imp_err:
│ │ +            display(HTML(_IMPORT_ERR_MSSG.format(err=imp_err)))
│ │ +            logger.exception("Import failure")
│ │ +    for imp_pkg in imports_all:
│ │ +        try:
│ │              _imp_module_all(nm_spc=namespace, **imp_pkg)
│ │              import_list.append(_extract_pkg_name(imp_pkg))
│ │ -        _check_and_reload_pkg(namespace, pd, _PANDAS_REQ_VERSION, "pd")
│ │ -
│ │ -        if additional_packages:
│ │ -            pkg_success = check_and_install_missing_packages(
│ │ -                additional_packages, user=user_install
│ │ -            )
│ │ -            if not pkg_success:
│ │ -                _err_output("One or more packages failed to install.")
│ │ -                _err_output(
│ │ -                    "Please re-run init_notebook() with the parameter user_install=True."
│ │ -                )
│ │ -            # We want to force import lib to see anything that we've
│ │ -            # just installed.
│ │ -            importlib.invalidate_caches()
│ │ -        if extra_imports:
│ │ -            import_list.extend(
│ │ -                _import_extras(nm_spc=namespace, extra_imports=extra_imports)
│ │ +        except ImportError as imp_err:
│ │ +            display(HTML(_IMPORT_ERR_MSSG.format(err=imp_err)))
│ │ +            logger.exception("Import failure")
│ │ +    _check_and_reload_pkg(namespace, pd, _PANDAS_REQ_VERSION, "pd")
│ │ +
│ │ +    if additional_packages:
│ │ +        pkg_success = check_and_install_missing_packages(
│ │ +            additional_packages, user=user_install
│ │ +        )
│ │ +        if not pkg_success:
│ │ +            _err_output("One or more packages failed to install.")
│ │ +            _err_output(
│ │ +                "Please re-run init_notebook() with the parameter user_install=True."
│ │              )
│ │ +        # We want to force import lib to see anything that we've
│ │ +        # just installed.
│ │ +        importlib.invalidate_caches()
│ │ +    if extra_imports:
│ │ +        import_list.extend(
│ │ +            _import_extras(nm_spc=namespace, extra_imports=extra_imports)
│ │ +        )
│ │  
│ │ -        _pr_output("Imported:", ", ".join(imp for imp in import_list if imp))
│ │ -        return True
│ │ -    except ImportError as imp_err:
│ │ -        display(HTML(_IMPORT_ERR_MSSG.format(err=imp_err)))
│ │ -        return False
│ │ +    imported_items = f"Imported:{', '.join(imp for imp in import_list if imp)}"
│ │ +    _pr_output(imported_items)
│ │ +    logger.info(imported_items)
│ │ +    return True
│ │  
│ │  
│ │  def _build_import_list(
│ │      def_imports: str,
│ │  ) -> Tuple[List[Dict[str, str]], List[Dict[str, str]]]:
│ │      imports = []
│ │      imports_all = []
│ │ @@ -639,37 +676,42 @@
│ │      # 4. if file and check_file_contents -> return ok
│ │      # 5. search_for_file(config.json)
│ │      # 6. If aml user try to import config.json into mpconfig and save
│ │      # 7. Error - no Microsoft Sentinel config
│ │      mp_path = os.environ.get("MSTICPYCONFIG")
│ │      if mp_path and not Path(mp_path).is_file():
│ │          _err_output(_MISSING_MPCONFIG_ENV_ERR)
│ │ +        logger.warning("MSTICPYCONFIG set to %s but no file found", mp_path)
│ │      if not mp_path or not Path(mp_path).is_file():
│ │          mp_path = search_for_file("msticpyconfig.yaml", paths=[".", _HOME_PATH])
│ │  
│ │      if mp_path:
│ │ +        logger.info("msticpyconfig found %s", mp_path)
│ │          errs: List[str] = []
│ │          try:
│ │              std_out_cap = io.StringIO()
│ │              with redirect_stdout(std_out_cap):
│ │                  errs, _ = validate_config(config_file=mp_path)
│ │              if errs:
│ │                  _pr_output(std_out_cap.getvalue())
│ │ +                for err in errs:
│ │ +                    logger.warning("config validation error %s", err)
│ │              if _verify_no_azs_errors(errs):
│ │                  # If the mpconfig has a Microsoft Sentinel config, return here
│ │                  return True
│ │          # pylint: disable=broad-except
│ │          except Exception as err:
│ │              errs.append(f"Exception while checking configuration:\n{err}")
│ │              _pr_output(f"Exception while checking configuration:\n{type(err)} - {err}")
│ │              _pr_output("\n".join(traceback.format_tb(err.__traceback__)))
│ │              _pr_output("Please report this to msticpy@microsoft.com")
│ │          # pylint: enable=broad-except
│ │  
│ │      _pr_output("Could not find msticpyconfig.yaml in standard search.")
│ │ +    logger.warning("Could not find msticpyconfig.yaml in standard search.")
│ │      if is_in_aml():
│ │          _pr_output(
│ │              "AML environment detected.",
│ │              "Attempting to import settings from config.json to msticpyconfig.yaml.",
│ │          )
│ │          status = populate_config_to_mp_config(mp_path)
│ │          if status:
│ │ @@ -716,27 +758,34 @@
│ │          setattr(msticpy, "pivot", pivot)
│ │  
│ │  
│ │  def _import_extras(nm_spc: Dict[str, Any], extra_imports: List[str]):
│ │      added_imports = []
│ │      if isinstance(extra_imports, str):
│ │          extra_imports = [extra_imports]
│ │ +    params: List[Optional[str]]
│ │      for imp_spec in extra_imports:
│ │ -        params: List[Optional[str]] = [None, None, None]
│ │ +        params = [None, None, None]
│ │          for idx, param in enumerate(imp_spec.split(",")):
│ │              params[idx] = param.strip() or None
│ │  
│ │          if params[0] is None:
│ │              raise MsticpyException(
│ │                  f"First parameter in extra_imports is mandatory: {imp_spec}"
│ │              )
│ │ -        _imp_from_package(nm_spc=nm_spc, pkg=params[0], tgt=params[1], alias=params[2])
│ │ -        added_imports.append(
│ │ -            _extract_pkg_name(pkg=params[0], tgt=params[1], alias=params[2])
│ │ -        )
│ │ +        try:
│ │ +            _imp_from_package(
│ │ +                nm_spc=nm_spc, pkg=params[0], tgt=params[1], alias=params[2]
│ │ +            )
│ │ +            added_imports.append(
│ │ +                _extract_pkg_name(pkg=params[0], tgt=params[1], alias=params[2])
│ │ +            )
│ │ +        except ImportError as imp_err:
│ │ +            display(HTML(_IMPORT_ERR_MSSG.format(err=imp_err)))
│ │ +            logger.exception("Import failure")
│ │      return added_imports
│ │  
│ │  
│ │  def _imp_module(nm_spc: Dict[str, Any], module_name: str, alias: str = None):
│ │      """Import named module and assign to global alias."""
│ │      try:
│ │          mod = importlib.import_module(module_name)
│ │   --- msticpy-2.3.1/msticpy/init/nbmagics.py
│ ├── +++ msticpy-2.4.0/msticpy/init/nbmagics.py
│ │┄ Files 14% similar despite different names
│ │ @@ -16,27 +16,29 @@
│ │  from IPython.core import magic_arguments
│ │  from IPython.core.magic import (
│ │      Magics,
│ │      line_cell_magic,
│ │      magics_class,
│ │      needs_local_scope,
│ │      register_line_cell_magic,
│ │ +    register_line_magic,
│ │  )
│ │  
│ │  from ..init.pivot_core.pivot_magic_core import run_txt2df
│ │  
│ │  try:
│ │      from bs4 import BeautifulSoup
│ │  
│ │      _BS_AVAILABLE = True
│ │  except ImportError:
│ │      _BS_AVAILABLE = False
│ │  
│ │  from .._version import VERSION
│ │  from ..common.utility import is_ipython
│ │ +from ..common.utility.ipython import save_obj_to_cell
│ │  from ..transform import base64unpack as base64
│ │  from ..transform.iocextract import IoCExtract
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │ @@ -192,7 +194,38 @@
│ │          keepna : bool
│ │              Don't drop columns that are all NA, The default is to drop
│ │              them, which is useful for data with trailing delimiters)
│ │              `--keepna` or `-k`
│ │  
│ │          """
│ │          return run_txt2df(line, cell, local_ns)
│ │ +
│ │ +    @register_line_magic
│ │ +    @magic_arguments.magic_arguments()
│ │ +    @magic_arguments.argument(
│ │ +        "--var_name",
│ │ +        "-v",
│ │ +        help="The variable to return the results in.",
│ │ +    )
│ │ +    @magic_arguments.argument(
│ │ +        "--object",
│ │ +        "-o",
│ │ +        help="The object name to store.",
│ │ +    )
│ │ +    @needs_local_scope
│ │ +    def save_to_cell(line: str, local_ns: dict):
│ │ +        """
│ │ +        Msticpy SaveToCell IPython magic extension.
│ │ +
│ │ +        Parameters
│ │ +        ----------
│ │ +        line : str, optional
│ │ +            Line contents, by default ""
│ │ +
│ │ +        """
│ │ +        args = magic_arguments.parse_argstring(save_to_cell, line)
│ │ +        print(args)
│ │ +        print(type(args.object))
│ │ +        obj = local_ns.get(args.object)
│ │ +        if obj is None:
│ │ +            raise ValueError(f"Variable '{args.object}' not found.")
│ │ +        save_obj_to_cell(obj, args.var_name)
│ │   --- msticpy-2.3.1/msticpy/init/pivot.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/pivot_core/pivot_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_core/pivot_browser.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/pivot_core/pivot_container.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_core/pivot_container.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/pivot_core/pivot_magic_core.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_core/pivot_magic_core.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/pivot_core/pivot_pd_accessor.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_core/pivot_pd_accessor.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/pivot_core/pivot_pipeline.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_core/pivot_pipeline.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/pivot_core/pivot_register.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_core/pivot_register.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/pivot_core/pivot_register_reader.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_core/pivot_register_reader.py
│ │┄ Files 1% similar despite different names
│ │ @@ -144,15 +144,15 @@
│ │      """Read the yaml file and return generator of PivotRegistrations."""
│ │      with open(file_path, "r", encoding="utf-8") as f_handle:
│ │          # use safe_load instead load
│ │          pivot_regs = yaml.safe_load(f_handle)
│ │  
│ │      for entry_name, settings in pivot_regs.get("pivot_providers").items():
│ │          try:
│ │ -            yield PivotRegistration(
│ │ +            yield PivotRegistration(  # type: ignore[call-arg]
│ │                  src_config_path=file_path, src_config_entry=entry_name, **settings
│ │              )
│ │          except TypeError as err:
│ │              raise MsticpyUserConfigError(
│ │                  "One or more missing fields found in pivot defintion.",
│ │                  f"Source file: {file_path}",
│ │                  title=f"Error importing pivot definition {entry_name}",
│ │   --- msticpy-2.3.1/msticpy/init/pivot_init/pivot_data_queries.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_init/pivot_data_queries.py
│ │┄ Files 1% similar despite different names
│ │ @@ -9,15 +9,15 @@
│ │  from collections import abc, defaultdict, namedtuple
│ │  from functools import wraps
│ │  from typing import Any, Callable, Dict, Iterable, List, Optional, Tuple, Type
│ │  
│ │  import pandas as pd
│ │  
│ │  from ..._version import VERSION
│ │ -from ...common.pkg_config import settings
│ │ +from ...common.pkg_config import get_config
│ │  from ...common.timespan import TimeSpan
│ │  from ...datamodel import entities
│ │  from ..pivot_core.pivot_container import PivotContainer
│ │  from ..pivot_core.pivot_register import get_join_params, join_result
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │ @@ -32,24 +32,24 @@
│ │  )
│ │  
│ │  _DEF_IGNORE_PARAM = {"start", "end"}
│ │  
│ │  
│ │  # Settings retrieval
│ │  def _use_v1_query_naming() -> bool:
│ │ -    return settings.get("Pivots", {}).get("UseV1QueryNames", False)
│ │ +    return get_config("Pivots.UseV1QueryNames", False)
│ │  
│ │  
│ │  def _use_query_family_prefix() -> bool:
│ │ -    return settings.get("Pivots", {}).get("UseQueryFamily", False)
│ │ +    return get_config("Pivots.UseQueryFamily", False)
│ │  
│ │  
│ │  def _use_pivot_time() -> bool:
│ │      """If user setting specifies use QP time setting."""
│ │ -    return not settings.get("Pivots", {}).get("UseQueryProviderTimeSpans", False)
│ │ +    return not get_config("Pivots.UseQueryProviderTimeSpans", False)
│ │  
│ │  
│ │  _V1_TABLE_SHORT_NAMES = {
│ │      "SecurityEvent": "wevt",
│ │      "Syslog": "lxsys",
│ │      "SecurityAlert": "",
│ │      "SigninLogs": "aad",
│ │   --- msticpy-2.3.1/msticpy/init/pivot_init/pivot_ti_provider.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_init/pivot_ti_provider.py
│ │┄ Files 2% similar despite different names
│ │ @@ -100,15 +100,15 @@
│ │      short_func_name = f"lookup{suffix}"
│ │      func_name = f"{short_func_name}_{ioc_name}"
│ │      params_dict = {"default_providers": providers}
│ │  
│ │      # use IoC name if ioc_type is None
│ │      entity_cls, entity_attr = TI_ENTITY_ATTRIBS[ioc or ioc_name]
│ │  
│ │ -    pivot_reg = PivotRegistration(
│ │ +    pivot_reg = PivotRegistration(  # type: ignore[call-arg]
│ │          src_func_name=ti_lookup.lookup_iocs.__name__,
│ │          input_type="dataframe",
│ │          entity_map={entity_cls.__name__: entity_attr},
│ │          func_df_param_name="data",
│ │          func_df_col_param_name="ioc_col",
│ │          func_out_column_name="Ioc",
│ │          func_static_params=params_dict,
│ │   --- msticpy-2.3.1/msticpy/init/pivot_init/vt_pivot.py
│ ├── +++ msticpy-2.4.0/msticpy/init/pivot_init/vt_pivot.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/init/user_config.py
│ ├── +++ msticpy-2.4.0/msticpy/init/user_config.py
│ │┄ Files 1% similar despite different names
│ │ @@ -46,15 +46,15 @@
│ │  """
│ │  import textwrap
│ │  from contextlib import redirect_stdout
│ │  from io import StringIO
│ │  from typing import Any, Dict, Tuple
│ │  
│ │  from .._version import VERSION
│ │ -from ..common.pkg_config import settings
│ │ +from ..common.pkg_config import get_config
│ │  from ..common.wsconfig import WorkspaceConfig
│ │  from ..data.core.data_providers import QueryProvider
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │ @@ -64,15 +64,15 @@
│ │  
│ │      Returns
│ │      -------
│ │      Dict[str, object]
│ │          Dict of object name and provider instances.
│ │  
│ │      """
│ │ -    user_defaults = settings.get("UserDefaults")
│ │ +    user_defaults = get_config("UserDefaults", {})
│ │      if not user_defaults:
│ │          return {}
│ │      prov_dict = _load_query_providers(user_defaults)
│ │      prov_dict.update(_load_components(user_defaults, namespace=prov_dict))
│ │  
│ │      return prov_dict
│ │   --- msticpy-2.3.1/msticpy/nbtools/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/data_viewer.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/data_viewer.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/entityschema.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/entityschema.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/foliummap.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/foliummap.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/morph_charts.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/morph_charts.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/nbdisplay.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/nbdisplay.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/nbwidgets.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/nbwidgets.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/observationlist.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/observationlist.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/process_tree.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/process_tree.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/security_alert.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/security_alert.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/security_alert_graph.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/security_alert_graph.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/security_base.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/security_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/security_event.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/security_event.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/ti_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/ti_browser.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/timeline.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/timeline.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/timeline_duration.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/timeline_duration.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/timeline_pd_accessor.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/timeline_pd_accessor.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/timeseries.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/timeseries.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/utility.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/utility.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbtools/wsconfig.py
│ ├── +++ msticpy-2.4.0/msticpy/nbtools/wsconfig.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/core.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/core.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/get_environment_key.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/get_environment_key.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/get_text.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/get_text.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/lookback.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/lookback.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/option_buttons.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/option_buttons.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/progress.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/progress.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/query_time.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/query_time.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/select_alert.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/select_alert.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/select_item.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/select_item.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/nbwidgets/select_subset.py
│ ├── +++ msticpy-2.4.0/msticpy/nbwidgets/select_subset.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/resources/WinSecurityEvent.json
│ ├── +++ msticpy-2.4.0/msticpy/resources/WinSecurityEvent.json
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/resources/mp_pivot_reg.yaml
│ ├── +++ msticpy-2.4.0/msticpy/resources/mp_pivot_reg.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/resources/mpconfig_defaults.yaml
│ ├── +++ msticpy-2.4.0/msticpy/resources/mpconfig_defaults.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/resources/obfuscation_cols.yaml
│ ├── +++ msticpy-2.4.0/msticpy/resources/obfuscation_cols.yaml
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/auditdextract.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/auditdextract.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/base64unpack.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/base64unpack.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/cmd_line.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/cmd_line.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/domain_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/domain_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/eventcluster.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/eventcluster.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/geoip.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/geoip.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/iocextract.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/iocextract.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/ip_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/ip_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/proc_tree_build_mde.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/proc_tree_build_mde.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/proc_tree_build_winlx.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/proc_tree_build_winlx.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/proc_tree_builder.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/proc_tree_builder.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/proc_tree_schema.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/proc_tree_schema.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/proc_tree_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/proc_tree_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/sectools_magics.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/sectools_magics.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/syslog_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/syslog_utils.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/tilookup.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/tilookup.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/tiproviders/ti_provider_base.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/tiproviders/ti_provider_base.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/vtlookup.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/vtlookup.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/vtlookupv3/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/vtlookupv3/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/vtlookupv3/vtfile_behavior.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/vtlookupv3/vtfile_behavior.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/vtlookupv3/vtlookupv3.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/vtlookupv3/vtlookupv3.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/sectools/vtlookupv3/vtobject_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/sectools/vtlookupv3/vtobject_browser.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/auditdextract.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/auditdextract.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/base64unpack.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/base64unpack.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/cmd_line.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/cmd_line.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/iocextract.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/iocextract.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/network.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/network.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/proc_tree_build_mde.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/proc_tree_build_mde.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/proc_tree_build_winlx.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/proc_tree_build_winlx.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/transform/proc_tree_builder.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/proc_tree_builder.py
│ │┄ Files 6% similar despite different names
│ │ @@ -11,14 +11,15 @@
│ │  from .._version import VERSION
│ │  from . import proc_tree_build_mde as mde
│ │  from . import proc_tree_build_winlx as winlx
│ │  
│ │  # pylint: disable=unused-import
│ │  from .proc_tree_schema import ProcSchema  # noqa: F401
│ │  from .proc_tree_schema import (  # noqa: F401
│ │ +    HX_PROCESSEVENT_SCH,
│ │      LX_EVENT_SCH,
│ │      MDE_EVENT_SCH,
│ │      MDE_INT_EVENT_SCH,
│ │      SUPPORTED_SCHEMAS,
│ │      SYSMON_PROCESS_CREATE_EVENT_SCH,
│ │      WIN_EVENT_SCH,
│ │  )
│ │ @@ -131,16 +132,25 @@
│ │  
│ │      is_root = proc_tree[Col.parent_key].isna()
│ │      has_child = proc_tree[Col.proc_key].isin(ppids.index)
│ │      proc_tree.loc[is_root, "IsRoot"] = True
│ │      proc_tree.loc[~has_child, "IsLeaf"] = True
│ │      proc_tree.loc[~is_root & has_child, "IsBranch"] = True
│ │  
│ │ -    # Save the current numeric index as "source_index" converting to string
│ │ -    proc_tree[Col.source_index] = proc_tree.index.astype(str)
│ │ +    # ensure index is numeric/unique
│ │ +    if (
│ │ +        not proc_tree.index.is_unique
│ │ +        and not proc_tree.index.is_monotonic_increasing
│ │ +        and not proc_tree.index.is_integer()
│ │ +    ):
│ │ +        proc_tree = proc_tree.reset_index()
│ │ +    # Save the numeric index as "source_index" converting to string
│ │ +    proc_tree[Col.source_index] = pd.Series(proc_tree.index.astype(str)).apply(
│ │ +        lambda x: x.zfill(5)
│ │ +    )
│ │      # Set the index of the output frame to be the proc_key
│ │      proc_tree = proc_tree.set_index(Col.proc_key)
│ │  
│ │      first_unique = proc_tree.index.duplicated()
│ │      proc_tree = proc_tree[~first_unique]
│ │      return proc_tree
│ │  
│ │ @@ -158,15 +168,15 @@
│ │  
│ │      Returns
│ │      -------
│ │      pd.DataFrame
│ │          DataFrame with ordered paths for each process.
│ │  
│ │      """
│ │ -    # set default path == current process ID
│ │ +    # set default path == current process row index
│ │      input_tree["path"] = input_tree[Col.source_index]
│ │      # input_tree["parent_index"] = np.nan
│ │  
│ │      cur_level = input_tree[input_tree["IsRoot"]]
│ │      remaining_procs = input_tree[~input_tree["IsRoot"]]
│ │  
│ │      cur_level_num = 0
│ │   --- msticpy-2.3.1/msticpy/transform/proc_tree_schema.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/proc_tree_schema.py
│ │┄ Files 7% similar despite different names
│ │ @@ -238,20 +238,36 @@
│ │      user_name="User",
│ │      path_separator="\\",
│ │      event_id_column="EventID",
│ │      event_id_identifier=1,
│ │      host_name_column="Computer",
│ │  )
│ │  
│ │ +# FireEye HX processEvent from 'stateagentinspector' or 'eventbuffer' audits
│ │ +HX_PROCESSEVENT_SCH = ProcSchema(
│ │ +    time_stamp="starttime",
│ │ +    process_name="process",
│ │ +    process_id="pid",
│ │ +    parent_name="parentprocess",
│ │ +    parent_id="parentpid",
│ │ +    cmd_line="processcmdline",
│ │ +    user_name="username",
│ │ +    path_separator="\\",
│ │ +    event_id_column="eventtype",
│ │ +    event_id_identifier="start",
│ │ +    host_name_column="hostname",
│ │ +)
│ │ +
│ │  SUPPORTED_SCHEMAS = (
│ │      WIN_EVENT_SCH,
│ │      LX_EVENT_SCH,
│ │      MDE_INT_EVENT_SCH,
│ │      MDE_EVENT_SCH,
│ │      SYSMON_PROCESS_CREATE_EVENT_SCH,
│ │ +    HX_PROCESSEVENT_SCH,
│ │  )
│ │  
│ │  
│ │  # pylint: disable=too-few-public-methods
│ │  class ColNames:
│ │      """Class to hold constant column names."""
│ │   --- msticpy-2.3.1/msticpy/transform/process_tree_utils.py
│ ├── +++ msticpy-2.4.0/msticpy/transform/process_tree_utils.py
│ │┄ Files 27% similar despite different names
│ │ @@ -1,19 +1,22 @@
│ │  # -------------------------------------------------------------------------
│ │  # Copyright (c) Microsoft Corporation. All rights reserved.
│ │  # Licensed under the MIT License. See License.txt in the project root for
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Process Tree Visualization."""
│ │ -from typing import Any, Dict, Optional, Union
│ │ +import textwrap
│ │ +from collections import Counter
│ │ +from typing import Any, Dict, List, NamedTuple, Optional, Tuple, Union
│ │  
│ │  import pandas as pd
│ │  
│ │  from .._version import VERSION
│ │  from .proc_tree_schema import ColNames as Col
│ │ +from .proc_tree_schema import ProcSchema
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  
│ │  def get_process_key(procs: pd.DataFrame, source_index: int) -> str:
│ │      """
│ │ @@ -361,7 +364,130 @@
│ │      summary["Processes"] = len(procs)
│ │      summary["RootProcesses"] = len(procs[procs["IsRoot"]])
│ │      summary["LeafProcesses"] = len(procs[procs["IsLeaf"]])
│ │      summary["BranchProcesses"] = len(procs[procs["IsBranch"]])
│ │      summary["IsolatedProcesses"] = len(procs[(procs["IsRoot"]) & (procs["IsLeaf"])])
│ │      summary["LargestTreeDepth"] = procs["path"].str.count("/").max() + 1
│ │      return summary
│ │ +
│ │ +
│ │ +class TemplateLine(NamedTuple):
│ │ +    """
│ │ +    Template definition for a line in text process tree.
│ │ +
│ │ +    Notes
│ │ +    -----
│ │ +    The items attribute must be a list of tuples, where each
│ │ +    tuple is (<display_name>, <column_name>).
│ │ +
│ │ +    """
│ │ +
│ │ +    items: List[Tuple[str, str]] = []
│ │ +    wrap: int = 80
│ │ +
│ │ +
│ │ +def tree_to_text(
│ │ +    procs: pd.DataFrame,
│ │ +    schema: Optional[Union[ProcSchema, Dict[str, str]]] = None,
│ │ +    template: Optional[List[TemplateLine]] = None,
│ │ +    sort_column: str = "path",
│ │ +    wrap_column: int = 0,
│ │ +) -> str:
│ │ +    """
│ │ +    Return text rendering of process tree.
│ │ +
│ │ +    Parameters
│ │ +    ----------
│ │ +    procs : pd.DataFrame
│ │ +        The process tree DataFrame.
│ │ +    schema : Optional[Union[ProcSchema, Dict[str, str]]], optional
│ │ +        The schema to use for mapping the DataFrame column
│ │ +        names, by default None
│ │ +    template : Optional[List[TemplateLine]], optional
│ │ +        A manually created template to use to create the node
│ │ +        formatting, by default None
│ │ +    sort_column : str, optional
│ │ +        The column to sort the DataFrame by, by default "path"
│ │ +    wrap_column : int, optional
│ │ +        Override any template-specified wrap limit, by default 0
│ │ +
│ │ +    Returns
│ │ +    -------
│ │ +    str
│ │ +        The formatted process tree string.
│ │ +
│ │ +    Raises
│ │ +    ------
│ │ +    ValueError
│ │ +        If neither of
│ │ +    """
│ │ +    if not schema and not template:
│ │ +        raise ValueError(
│ │ +            "One of 'schema' and 'template' must be supplied", "as parameters."
│ │ +        )
│ │ +    template = template or _create_proctree_template(schema)  # type: ignore
│ │ +    output: List[str] = []
│ │ +    for _, row in procs.sort_values(sort_column).iterrows():
│ │ +        depth_count = Counter(row.path).get("/", 0)
│ │ +        header = _node_header(depth_count)
│ │ +
│ │ +        # handle first row separately since it needs a header
│ │ +        tmplt_line = template[0]
│ │ +        out_line = "  ".join(
│ │ +            f"{name}: {row[col]}" if name else f"{row[col]}"
│ │ +            for name, col in tmplt_line.items
│ │ +        )
│ │ +        indent = " " * len(header) + " "
│ │ +        out_line = "\n".join(
│ │ +            textwrap.wrap(
│ │ +                out_line,
│ │ +                width=wrap_column or tmplt_line.wrap,
│ │ +                subsequent_indent=indent,
│ │ +            )
│ │ +        )
│ │ +        output.append(f"{header} {out_line}\n")
│ │ +
│ │ +        # process subsequent rows
│ │ +        for tmplt_line in template[1:]:
│ │ +            out_line = "  ".join(
│ │ +                f"{name}: {row[col]}" for name, col in tmplt_line.items
│ │ +            )
│ │ +            out_line = "\n".join(
│ │ +                textwrap.wrap(
│ │ +                    out_line,
│ │ +                    width=wrap_column or tmplt_line.wrap,
│ │ +                    initial_indent=indent,
│ │ +                    subsequent_indent=indent + "   ",
│ │ +                )
│ │ +            )
│ │ +            output.extend([out_line, "\n"])
│ │ +
│ │ +    return "".join(output)
│ │ +
│ │ +
│ │ +def _create_proctree_template(
│ │ +    schema: Union[ProcSchema, Dict[str, str]]
│ │ +) -> List[TemplateLine]:
│ │ +    """Create a template from the schema."""
│ │ +    if isinstance(schema, dict):
│ │ +        schema = ProcSchema(**schema)
│ │ +    template_lines: List[TemplateLine] = [
│ │ +        TemplateLine(
│ │ +            items=[("Process", schema.process_name), ("PID", schema.process_id)]
│ │ +        ),
│ │ +        TemplateLine(items=[("Time", schema.time_stamp)]),
│ │ +    ]
│ │ +    if schema.cmd_line:
│ │ +        template_lines.append(TemplateLine(items=[("Cmdline", schema.cmd_line)]))
│ │ +    acct_items = []
│ │ +    if schema.user_id:
│ │ +        acct_items.append(("Account", schema.user_id))
│ │ +    if schema.logon_id:
│ │ +        acct_items.append(("Account", schema.logon_id))
│ │ +    if acct_items:
│ │ +        template_lines.append(TemplateLine(items=acct_items))
│ │ +    return template_lines
│ │ +
│ │ +
│ │ +def _node_header(depth_count):
│ │ +    """Return text tree node header given tree depth."""
│ │ +    return "+ " if depth_count == 0 else "   " * depth_count + "+-- "
│ │   --- msticpy-2.3.1/msticpy/vis/__init__.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/__init__.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/code_view.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/code_view.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/data_viewer.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/data_viewer.py
│ │┄ Files 1% similar despite different names
│ │ @@ -6,15 +6,15 @@
│ │  """Dataframe viewer."""
│ │  from collections import namedtuple
│ │  from typing import Dict, List, Union
│ │  
│ │  import ipywidgets as widgets
│ │  import pandas as pd
│ │  from bokeh.io import output_notebook, push_notebook, show
│ │ -from bokeh.models import (
│ │ +from bokeh.models import (  # type: ignore[attr-defined]
│ │      BooleanFilter,
│ │      CDSView,
│ │      ColumnDataSource,
│ │      DataTable,
│ │      DateFormatter,
│ │      TableColumn,
│ │  )
│ │   --- msticpy-2.3.1/msticpy/vis/entity_graph_tools.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/entity_graph_tools.py
│ │┄ Files 5% similar despite different names
│ │ @@ -8,33 +8,37 @@
│ │  from typing import List, Optional, Union
│ │  
│ │  import networkx as nx
│ │  import numpy as np
│ │  import pandas as pd
│ │  from bokeh.io import output_notebook, show
│ │  from bokeh.layouts import column
│ │ -from bokeh.models import Circle, HoverTool, Label, LayoutDOM
│ │ +from bokeh.models import Circle, HoverTool, Label, LayoutDOM  # type: ignore
│ │  from bokeh.plotting import figure, from_networkx
│ │  
│ │  from .._version import VERSION
│ │  from ..common.exceptions import MsticpyUserError
│ │  from ..common.utility import export
│ │  from ..datamodel.entities import Entity
│ │  from ..datamodel.entities.alert import Alert
│ │  from ..datamodel.soc.incident import Incident
│ │  from ..nbtools.security_alert import SecurityAlert
│ │  from ..vis.timeline import display_timeline
│ │  from ..vis.timeline_duration import display_timeline_duration
│ │ +from .figure_dimension import bokeh_figure
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Pete Bryan"
│ │  
│ │  req_alert_cols = ["DisplayName", "Severity", "AlertType"]
│ │  req_inc_cols = ["id", "name", "properties.severity"]
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  @export
│ │  class EntityGraph:
│ │      """Create a graph for visualizing and tracking links between entities."""
│ │  
│ │      def __init__(
│ │          self,
│ │ @@ -343,15 +347,15 @@
│ │                  "StartTime": starttimes,
│ │              }
│ │          )
│ │          tl_df.replace("None", np.NaN, inplace=True)
│ │          return tl_df
│ │  
│ │      def _add_incident_or_alert_node(self, incident: Union[Incident, Alert, None]):
│ │ -        """Check what type of entity is passed in and creates relevent graph."""
│ │ +        """Check what type of entity is passed in and creates relevant graph."""
│ │          if isinstance(incident, Incident):
│ │              self._add_incident_node(incident)
│ │          elif isinstance(incident, Alert):
│ │              self._add_alert_node(incident)
│ │  
│ │      def _add_entity_node(self, ent, attached_to=None):
│ │          """Add an Entity to the graph."""
│ │ @@ -481,32 +485,51 @@
│ │                  ("Name", "@Name"),
│ │                  ("Description", "@Description"),
│ │                  ("Type", "@Type"),
│ │              ]
│ │          )
│ │      )
│ │  
│ │ +    entity_graph_for_plotting = nx.Graph()
│ │ +    index_node = 0
│ │ +    rev_index = {}
│ │ +    fwd_index = {}
│ │ +    node_attributes = {}
│ │ +    for node_key in entity_graph.nodes:
│ │ +        entity_graph_for_plotting.add_node(index_node)
│ │ +        rev_index[node_key] = index_node
│ │ +        fwd_index[index_node] = node_key
│ │ +        node_attributes[index_node] = entity_graph.nodes[node_key]
│ │ +        index_node += 1
│ │ +
│ │ +    nx.set_node_attributes(entity_graph_for_plotting, node_attributes)
│ │ +
│ │ +    for source_node, target_node in entity_graph.edges:
│ │ +        entity_graph_for_plotting.add_edge(
│ │ +            rev_index[source_node], rev_index[target_node]
│ │ +        )
│ │ +
│ │      graph_renderer = from_networkx(
│ │ -        entity_graph, nx.spring_layout, scale=scale, center=(0, 0)
│ │ +        entity_graph_for_plotting, nx.spring_layout, scale=scale, center=(0, 0)
│ │      )
│ │  
│ │      graph_renderer.node_renderer.glyph = Circle(
│ │          size=node_size, fill_color="node_color", fill_alpha=0.5
│ │      )
│ │      # pylint: disable=no-member
│ │ -    plot.renderers.append(graph_renderer)
│ │ +    plot.renderers.append(graph_renderer)  # type: ignore[attr-defined]
│ │  
│ │      # Create labels
│ │ -    for name, pos in graph_renderer.layout_provider.graph_layout.items():
│ │ +    for index, pos in graph_renderer.layout_provider.graph_layout.items():
│ │          label = Label(
│ │              x=pos[0],
│ │              y=pos[1],
│ │              x_offset=5,
│ │              y_offset=5,
│ │ -            text=name,
│ │ +            text=fwd_index[int(index)],
│ │              text_font_size=font_pnt,
│ │          )
│ │          plot.add_layout(label)
│ │      # pylint: enable=no-member
│ │      if not hide:
│ │          show(plot)
│ │      return plot
│ │   --- msticpy-2.3.1/msticpy/vis/foliummap.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/foliummap.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/matrix_plot.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/matrix_plot.py
│ │┄ Files 2% similar despite different names
│ │ @@ -12,18 +12,22 @@
│ │  import pandas as pd
│ │  from bokeh.io import output_notebook, reset_output, show
│ │  from bokeh.models import ColumnDataSource, HoverTool, LayoutDOM
│ │  from bokeh.plotting import figure
│ │  
│ │  from .._version import VERSION
│ │  from ..common.utility import check_kwargs
│ │ +from .figure_dimension import bokeh_figure
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  @attr.s(auto_attribs=True)
│ │  class PlotParams:
│ │      """Plot params for time_duration."""
│ │  
│ │      title: Optional[str] = "Interaction Plot"
│ │      x: Optional[str] = None
│ │ @@ -163,20 +167,20 @@
│ │      # Rescale the size so that it matches the graph
│ │      max_size = plot_data["size"].max()
│ │      plot_data["plt_size"] = plot_data["size"] * 10 / max_size
│ │      source = ColumnDataSource(data=plot_data)
│ │  
│ │      plot = figure(
│ │          title=param.title,
│ │ -        plot_width=param.width,
│ │ -        plot_height=param.height,
│ │          x_range=x_range,
│ │          y_range=y_range,
│ │          tools=["wheel_zoom", "box_zoom", "pan", "reset", "save"],
│ │          toolbar_location="above",
│ │ +        width=param.width,
│ │ +        height=param.height,
│ │      )
│ │  
│ │      tool_tips = [
│ │          (param.x_column, f"@{param.x_column}"),
│ │          (param.y_column, f"@{param.y_column}"),
│ │          ("value", "@size"),
│ │      ]
│ │   --- msticpy-2.3.1/msticpy/vis/mordor_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/mordor_browser.py
│ │┄ Files 0% similar despite different names
│ │ @@ -9,15 +9,15 @@
│ │  
│ │  import ipywidgets as widgets
│ │  import pandas as pd
│ │  from IPython.display import HTML, display
│ │  
│ │  from .._version import VERSION
│ │  from ..common.exceptions import MsticpyException
│ │ -from ..common.pkg_config import settings
│ │ +from ..common.pkg_config import get_config
│ │  from ..data.drivers.mordor_driver import (
│ │      MordorDriver,
│ │      MordorEntry,
│ │      download_mdr_file,
│ │      search_mdr_data,
│ │  )
│ │  
│ │ @@ -38,15 +38,15 @@
│ │              Folder to save downloaded files, by default reads the value
│ │              from settings or defaults to "."
│ │          use_cached : bool, optional
│ │              If true, downloaded files are not deleted after
│ │              download and are used as a local cache, by default True
│ │  
│ │          """
│ │ -        mdr_settings = settings.get("DataProviders", {}).get("Mordor", {})
│ │ +        mdr_settings = get_config("DataProviders.Mordor", {})
│ │          self._save_folder = save_folder or mdr_settings.get("save_folder", ".")
│ │  
│ │          self._use_cached = use_cached
│ │          self.mordor_driver = MordorDriver()
│ │          self.mordor_driver.connect()
│ │          self.mdr_metadata = self.mordor_driver.mordor_data
│ │          self._df_disp = None
│ │   --- msticpy-2.3.1/msticpy/vis/morph_charts.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/morph_charts.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/mp_pandas_plot.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/mp_pandas_plot.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/nbdisplay.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/nbdisplay.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/network_plot.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/network_plot.py
│ │┄ Files 4% similar despite different names
│ │ @@ -4,15 +4,15 @@
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Module for common display functions."""
│ │  from typing import Any, Callable, Dict, Iterable, List, Optional, Tuple, Union
│ │  
│ │  import networkx as nx
│ │  from bokeh.io import output_notebook
│ │ -from bokeh.models import (
│ │ +from bokeh.models import (  # type: ignore[attr-defined]
│ │      BoxSelectTool,
│ │      Circle,
│ │      EdgesAndLinkedNodes,
│ │      HoverTool,
│ │      Label,
│ │      MultiLine,
│ │      NodesAndLinkedEdges,
│ │ @@ -21,18 +21,22 @@
│ │      WheelZoomTool,
│ │  )
│ │  from bokeh.palettes import Spectral4
│ │  from bokeh.plotting import figure, from_networkx, show
│ │  from typing_extensions import Literal
│ │  
│ │  from .._version import VERSION
│ │ +from .figure_dimension import bokeh_figure
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  GraphLayout = Union[
│ │      Callable[[Any], Dict[str, Tuple[float, float]]],
│ │      Literal[
│ │          "spring",
│ │          "bipartite",
│ │          "circular",
│ │ @@ -138,41 +142,62 @@
│ │          title=title,
│ │          x_range=(-3, 3),
│ │          y_range=(-3, 3),
│ │          width=width,
│ │          height=height,
│ │      )
│ │  
│ │ -    graph_layout = _get_graph_layout(nx_graph, layout, **kwargs)
│ │ -    graph_renderer = from_networkx(nx_graph, graph_layout, scale=scale, center=(0, 0))
│ │ +    nx_graph_for_plotting = nx.Graph()
│ │ +    index_node = 0
│ │ +    rev_index = {}
│ │ +    fwd_index = {}
│ │ +    node_attributes = {}
│ │ +    for node_key in nx_graph.nodes:
│ │ +        nx_graph_for_plotting.add_node(index_node)
│ │ +        rev_index[node_key] = index_node
│ │ +        fwd_index[index_node] = node_key
│ │ +        node_attributes[index_node] = nx_graph.nodes[node_key]
│ │ +        index_node += 1
│ │ +
│ │ +    nx.set_node_attributes(nx_graph_for_plotting, node_attributes)
│ │ +
│ │ +    for source_node, target_node in nx_graph.edges:
│ │ +        nx_graph_for_plotting.add_edge(rev_index[source_node], rev_index[target_node])
│ │ +
│ │ +    graph_layout = _get_graph_layout(nx_graph_for_plotting, layout, **kwargs)
│ │ +
│ │ +    graph_renderer = from_networkx(
│ │ +        nx_graph_for_plotting, graph_layout, scale=scale, center=(0, 0)
│ │ +    )
│ │      _create_edge_renderer(graph_renderer, edge_color=edge_color)
│ │      _create_node_renderer(graph_renderer, node_size, "node_color")
│ │  
│ │      graph_renderer.selection_policy = NodesAndLinkedEdges()
│ │      graph_renderer.inspection_policy = EdgesAndLinkedNodes()
│ │ -    plot.renderers.append(graph_renderer)  # pylint: disable=no-member
│ │ +    # pylint: disable=no-member
│ │ +    plot.renderers.append(graph_renderer)  # type: ignore[attr-defined]
│ │  
│ │      hover_tools = [
│ │          _create_node_hover(source_attrs, target_attrs, [graph_renderer.node_renderer])
│ │      ]
│ │      if edge_attrs:
│ │          hover_tools.append(
│ │              _create_edge_hover(edge_attrs, [graph_renderer.edge_renderer])
│ │          )
│ │      plot.add_tools(*hover_tools, WheelZoomTool(), TapTool(), BoxSelectTool())
│ │  
│ │      # Create labels
│ │      # pylint: disable=no-member
│ │ -    for name, pos in graph_renderer.layout_provider.graph_layout.items():
│ │ +    for index, pos in graph_renderer.layout_provider.graph_layout.items():
│ │          label = Label(
│ │              x=pos[0],
│ │              y=pos[1],
│ │              x_offset=5,
│ │              y_offset=5,
│ │ -            text=name,
│ │ +            text=fwd_index[int(index)],
│ │              text_font_size=font_pnt,
│ │          )
│ │          plot.add_layout(label)
│ │      if not hide:
│ │          show(plot)
│ │      return plot
│ │  
│ │ @@ -303,24 +328,24 @@
│ │      graph_renderer = from_networkx(
│ │          entity_graph, nx.spring_layout, scale=scale, center=(0, 0)
│ │      )
│ │      graph_renderer.node_renderer.glyph = Circle(
│ │          size=node_size, fill_color="node_color", fill_alpha=0.5
│ │      )
│ │      # pylint: disable=no-member
│ │ -    plot.renderers.append(graph_renderer)
│ │ +    plot.renderers.append(graph_renderer)  # type: ignore[attr-defined]
│ │  
│ │      # Create labels
│ │      for name, pos in graph_renderer.layout_provider.graph_layout.items():
│ │          label = Label(
│ │              x=pos[0],
│ │              y=pos[1],
│ │              x_offset=5,
│ │              y_offset=5,
│ │ -            text=name,
│ │ +            text=str(name),
│ │              text_font_size=font_pnt,
│ │          )
│ │          plot.add_layout(label)
│ │      # pylint: enable=no-member
│ │      if not hide:
│ │          show(plot)
│ │      return plot
│ │   --- msticpy-2.3.1/msticpy/vis/process_tree.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/process_tree.py
│ │┄ Files 6% similar despite different names
│ │ @@ -8,20 +8,25 @@
│ │  from typing import Any, Dict, NamedTuple, Optional, Tuple, Union
│ │  
│ │  import numpy as np
│ │  import pandas as pd
│ │  from bokeh.io import output_notebook, reset_output, show
│ │  
│ │  # pylint: enable=no-name-in-module
│ │ +try:
│ │ +    from bokeh.core.property.vectorization import Field
│ │ +except ImportError:
│ │ +    Field = dict  # type: ignore
│ │  from bokeh.layouts import column, row
│ │ -from bokeh.models import (
│ │ +from bokeh.models import (  # type: ignore[attr-defined]
│ │      BoxSelectTool,
│ │      ColorBar,
│ │      ColumnDataSource,
│ │      CustomJS,
│ │ +    GestureTool,
│ │      HoverTool,
│ │      LayoutDOM,
│ │      RangeTool,
│ │  )
│ │  from bokeh.models.widgets import DataTable, DateFormatter, TableColumn
│ │  
│ │  # pylint: disable=no-name-in-module
│ │ @@ -48,23 +53,26 @@
│ │      get_root,
│ │      get_root_tree,
│ │      get_roots,
│ │      get_siblings,
│ │      get_summary_info,
│ │      get_tree_depth,
│ │  )
│ │ +from .figure_dimension import bokeh_figure
│ │  
│ │  # pylint: enable=unused-import
│ │  
│ │ -
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  _DEFAULT_KWARGS = ["height", "title", "width", "hide_legend", "pid_fmt"]
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  @export
│ │  def build_and_show_process_tree(
│ │      data: pd.DataFrame,
│ │      schema: Union[ProcSchema, Dict[str, Any]] = None,
│ │      output_var: str = None,
│ │      legend_col: str = None,
│ │ @@ -218,31 +226,31 @@
│ │  
│ │      if color_bar:
│ │          title += " (color bar = {legend_col})"
│ │      visible_range = int(plot_height / 35)
│ │      y_start_range = (n_rows - visible_range, n_rows + 1)
│ │      b_plot = figure(
│ │          title=title,
│ │ -        plot_width=plot_width,
│ │ -        plot_height=plot_height,
│ │          x_range=(min_level, max_level),
│ │          y_range=y_start_range,
│ │          tools=["reset", "save", "tap", "ywheel_pan"],
│ │          toolbar_location="above",
│ │          active_scroll="ywheel_pan",
│ │ +        width=plot_width,
│ │ +        height=plot_height,
│ │      )
│ │  
│ │      hover = HoverTool(
│ │          tooltips=_get_tool_tips(schema),
│ │          formatters={f"@{schema.time_stamp}": "datetime"},
│ │      )
│ │      b_plot.add_tools(hover)
│ │  
│ │      # dodge to align rectangle with grid
│ │ -    rect_x = dodge("Level", 1.75, range=b_plot.x_range)
│ │ +    rect_x = dodge("Level", 1.75, range=b_plot.x_range)  # type: ignore
│ │      rect_plot_params = {
│ │          "width": 3.5,
│ │          "height": 0.95,
│ │          "source": source,
│ │          "fill_alpha": 0.4,
│ │          "fill_color": fill_map,
│ │      }
│ │ @@ -308,19 +316,19 @@
│ │          plot_range=b_plot.y_range,
│ │          width=90,
│ │          height=plot_height,
│ │          x_col="Level",
│ │          y_col="Row",
│ │          fill_map=fill_map,
│ │      )
│ │ -    plot_elems = row(b_plot, range_tool)
│ │ +    plot_elems: LayoutDOM = row(b_plot, range_tool)  # type: ignore
│ │      if show_table:
│ │          data_table = _create_data_table(source, schema, legend_col)
│ │          plot_elems = column(plot_elems, data_table)
│ │ -    show(plot_elems)
│ │ +    show(plot_elems)  # type: ignore
│ │      return b_plot, plot_elems
│ │  
│ │  
│ │  # pylint: enable=too-many-locals, too-many-statements
│ │  
│ │  
│ │  class TreeResult(NamedTuple):
│ │ @@ -349,14 +357,17 @@
│ │      if schema is None:
│ │          schema = infer_schema(proc_tree)
│ │      if schema is None:
│ │          return TreeResult(proc_tree, None, None, 0)
│ │  
│ │      _validate_plot_schema(proc_tree, schema)
│ │  
│ │ +    # kludgy fix to prevent NaNs making it into the data - Bokeh 3.0
│ │ +    # is very sensitive to this in some places.
│ │ +    proc_tree = proc_tree.fillna("NA")
│ │      proc_tree = proc_tree.sort_values(
│ │          by=["path", schema.time_stamp], ascending=True
│ │      ).reset_index()
│ │      n_rows = len(proc_tree)
│ │      proc_tree["Row"] = proc_tree.index
│ │      proc_tree["Row"] = n_rows - proc_tree["Row"]
│ │      proc_tree["Level"] = proc_tree["path"].str.count("/") + 1
│ │ @@ -388,20 +399,33 @@
│ │      proc_tree.loc[~long_cmd, "__cmd_line$$"] = proc_tree[~long_cmd][
│ │          schema.cmd_line
│ │      ].fillna("cmdline unknown")
│ │      return TreeResult(proc_tree=proc_tree, schema=schema, levels=levels, n_rows=n_rows)
│ │  
│ │  
│ │  def _pid_fmt(pid, pid_fmt):
│ │ +    """Format process ID in required string format."""
│ │ +    if pid == np.nan:
│ │ +        pid = ""
│ │      if pid_fmt == "hex":
│ │ -        return f"PID: {pid}" if str(pid).startswith("0x") else f"PID: 0x{int(pid):x}"
│ │ +        return (
│ │ +            f"PID: {pid}"
│ │ +            if str(pid).startswith("0x")
│ │ +            else f"PID: 0x{int(pid):x}"
│ │ +            if isinstance(pid, int)
│ │ +            else "NA"
│ │ +        )
│ │      if pid_fmt == "guid":
│ │          return f"GUID: {pid}"
│ │      return (
│ │ -        f"PID: {pid}" if not str(pid).startswith("0x") else f"PID: {int(pid, base=16)}"
│ │ +        f"PID: {pid}"
│ │ +        if not str(pid).startswith("0x")
│ │ +        else f"PID: {int(pid, base=16)}"
│ │ +        if isinstance(pid, int)
│ │ +        else "NA"
│ │      )
│ │  
│ │  
│ │  def _validate_plot_schema(proc_tree: pd.DataFrame, schema):
│ │      """Validate that we have the required columns."""
│ │      required_cols = {"path", schema.process_name, schema.process_id}
│ │      proc_cols = set(proc_tree.columns)
│ │ @@ -460,21 +484,21 @@
│ │          args={"source": source, "itemkey": Col.proc_key, "output_var": result_var},
│ │          code=ret_var_js,
│ │      )
│ │  
│ │  
│ │  def _create_fill_map(
│ │      source: ColumnDataSource, source_column: str = None
│ │ -) -> Tuple[Union[factor_cmap, linear_cmap], Optional[ColorBar]]:
│ │ +) -> Tuple[Union[Field, str], Optional[ColorBar]]:
│ │      """Create factor map or linear map based on `source_column`."""
│ │ -    fill_map = "navy"
│ │ +    fill_map: Union[str, Field] = "navy"
│ │      color_bar = None
│ │      key_column = source_column or "Level"
│ │  
│ │ -    col_kind = source.data[key_column].dtype.kind
│ │ +    col_kind = source.data[key_column].dtype.kind  # type: ignore[union-attr]
│ │      if col_kind in ["b", "O"]:
│ │          s_values = set(source.data[key_column])
│ │          if np.nan in s_values:
│ │              s_values.remove(np.nan)
│ │          values = list(s_values)
│ │          fill_map = factor_cmap(
│ │              key_column, palette=viridis(max(3, len(values))), factors=values
│ │ @@ -497,18 +521,18 @@
│ │  
│ │  # pylint: disable=too-many-arguments
│ │  def _create_vert_range_tool(
│ │      data, min_y, max_y, plot_range, width, height, x_col, y_col, fill_map="navy"
│ │  ):
│ │      """Return vertical range too for plot."""
│ │      rng_select = figure(
│ │ -        plot_width=width,
│ │ -        plot_height=height,
│ │          y_range=(min_y - 1, max_y + 1),
│ │          toolbar_location=None,
│ │ +        width=width,
│ │ +        height=height,
│ │      )
│ │  
│ │      x_dodge = dodge(x_col, -0.5)
│ │      rng_select.rect(
│ │          x=x_dodge,
│ │          y=y_col,
│ │          width=1.2,
│ │ @@ -523,15 +547,16 @@
│ │  
│ │      range_tool = RangeTool(y_range=plot_range)
│ │      range_tool.overlay.fill_color = "navy"
│ │      range_tool.overlay.fill_alpha = 0.2
│ │      rng_select.ygrid.grid_line_color = None
│ │      rng_select.xgrid.grid_line_color = None
│ │      rng_select.add_tools(range_tool)
│ │ -    rng_select.toolbar.active_multi = range_tool
│ │ +    if isinstance(range_tool, GestureTool):
│ │ +        rng_select.toolbar.active_multi = range_tool
│ │      return rng_select
│ │  
│ │  
│ │  # pylint: enable=too-many-arguments
│ │  
│ │  
│ │  def _create_data_table(
│ │   --- msticpy-2.3.1/msticpy/vis/query_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/query_browser.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/ti_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/ti_browser.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/timeline.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/timeline.py
│ │┄ Files 2% similar despite different names
│ │ @@ -7,21 +7,22 @@
│ │  from datetime import datetime
│ │  from typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union
│ │  
│ │  import attr
│ │  import pandas as pd
│ │  from bokeh.io import output_notebook, show
│ │  from bokeh.layouts import column
│ │ -from bokeh.models import ColumnDataSource, HoverTool, LayoutDOM, Legend
│ │ +from bokeh.models import ColumnDataSource, HoverTool, LayoutDOM, Legend  # type: ignore
│ │  from bokeh.models.annotations import LegendItem
│ │  from bokeh.plotting import figure, reset_output
│ │  
│ │  from .._version import VERSION
│ │  from ..common.data_utils import ensure_df_datetimes
│ │  from ..common.utility import check_kwargs, export
│ │ +from .figure_dimension import bokeh_figure
│ │  from .timeline_common import (
│ │      calc_auto_plot_height,
│ │      create_range_tool,
│ │      create_tool_tips,
│ │      get_color_palette,
│ │      get_def_source_cols,
│ │      get_ref_event_time,
│ │ @@ -38,14 +39,17 @@
│ │  from .timeline_values import display_timeline_values  # noqa F401
│ │  
│ │  # pylint: enable=unused-import
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  @attr.s(auto_attribs=True)
│ │  class PlotParams:
│ │      """Plot params for time_duration."""
│ │  
│ │      time_column: str = "TimeGenerated"
│ │      height: Optional[int] = None
│ │ @@ -221,20 +225,23 @@
│ │              color=param.color,
│ │              size=param.size,
│ │          )
│ │          return _display_timeline_dict(data=series_dict, param=param)
│ │  
│ │      if isinstance(data, dict):
│ │          return _display_timeline_dict(data, param=param)
│ │ -    return None
│ │ +    raise TypeError(
│ │ +        "`data` parameter must be a DataFrame or a Python dict.",
│ │ +        f"The type supplied was {type(data)}",
│ │ +    )
│ │  
│ │  
│ │  def _display_timeline_dict(
│ │      data: dict, param: PlotParams
│ │ -) -> figure:  # noqa: C901, MC0001
│ │ +) -> LayoutDOM:  # noqa: C901, MC0001
│ │      """
│ │      Display a timeline of events.
│ │  
│ │      Parameters
│ │      ----------
│ │      data : dict
│ │          Data points to plot on the timeline.
│ │ @@ -250,16 +257,16 @@
│ │                  color: str
│ │                      Color of data points for this data
│ │      param : PlotParams
│ │          Plot parameters object
│ │  
│ │      Returns
│ │      -------
│ │ -    figure
│ │ -        The bokeh plot figure.
│ │ +    LayoutDOM
│ │ +        The bokeh plot layout.
│ │  
│ │      """
│ │      reset_output()
│ │      output_notebook()
│ │  
│ │      tool_tip_columns, min_time, max_time = _unpack_data_series_dict(data, param)
│ │      if min_time is None or max_time is None:
│ │ @@ -273,31 +280,31 @@
│ │      start_range, end_range, min_time, max_time = get_time_bounds(min_time, max_time)
│ │      height = param.height or calc_auto_plot_height(len(data))
│ │      y_range = ((-1 / series_count), series_count - 1 + (1 / series_count))
│ │      plot = figure(
│ │          x_range=(start_range, end_range),
│ │          y_range=y_range,
│ │          min_border_left=50,
│ │ -        plot_height=height,
│ │ -        plot_width=param.width,
│ │          x_axis_label="Event Time",
│ │          x_axis_type="datetime",
│ │          x_minor_ticks=10,
│ │          tools=[hover, "xwheel_zoom", "box_zoom", "reset", "save", "xpan"],
│ │          title=param.fmt_title,
│ │ +        height=height,
│ │ +        width=param.width,
│ │      )
│ │  
│ │      set_axes_and_grids(data, plot, param.yaxis, param.ygrid, param.xgrid)
│ │  
│ │      # Create plot bar to act as as range selector
│ │      rng_select = create_range_tool(
│ │          data=data,
│ │          min_time=min_time,
│ │          max_time=max_time,
│ │ -        plot_range=plot.x_range,
│ │ +        plot_range=plot.x_range,  # type: ignore[arg-type]
│ │          width=param.width,
│ │          height=height,
│ │      )
│ │  
│ │      # set the tick datetime formatter
│ │      plot.xaxis[0].formatter = get_tick_formatter()
│ │      # plot the data
│ │   --- msticpy-2.3.1/msticpy/vis/timeline_common.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/timeline_common.py
│ │┄ Files 6% similar despite different names
│ │ @@ -4,46 +4,56 @@
│ │  # license information.
│ │  # --------------------------------------------------------------------------
│ │  """Module for common timeline functions."""
│ │  from datetime import datetime
│ │  from typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Union
│ │  
│ │  import pandas as pd
│ │ -from bokeh.models import (
│ │ +from bokeh.models import (  # type: ignore[attr-defined]
│ │      ColumnDataSource,
│ │      DatetimeTickFormatter,
│ │ +    GestureTool,
│ │      Label,
│ │      LayoutDOM,
│ │      Range,
│ │      RangeTool,
│ │      Title,
│ │  )
│ │  
│ │  # pylint: disable=no-name-in-module
│ │  from bokeh.palettes import Palette, viridis
│ │  
│ │  # pylint: enable=no-name-in-module
│ │ -from bokeh.plotting import Figure, figure
│ │ +from bokeh.plotting import figure
│ │ +
│ │ +try:
│ │ +    from bokeh.plotting import Figure  # type: ignore
│ │ +except ImportError:
│ │ +    Figure = LayoutDOM
│ │  from pandas.api.types import is_datetime64_any_dtype
│ │  from pandas.errors import OutOfBoundsDatetime
│ │  
│ │  from .._version import VERSION
│ │  from ..common.exceptions import MsticpyParameterError
│ │  from ..common.utility import export
│ │ +from .figure_dimension import bokeh_figure
│ │  
│ │  # pylint: enable=unused-import
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │  TIMELINE_HELP = (
│ │      "https://msticpy.readthedocs.io/en/latest/msticpy.vis.html"
│ │      "#msticpy.vis.timeline.{plot_type}"
│ │  )
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  @export
│ │  def check_df_columns(
│ │      data: pd.DataFrame, req_columns: List[str], help_uri: str, plot_type: str
│ │  ):
│ │      """
│ │      Check that specified columns are in the DataFrame.
│ │ @@ -149,15 +159,15 @@
│ │              )
│ │              else set()
│ │          )
│ │  
│ │      return set(source_columns)
│ │  
│ │  
│ │ -def get_color_palette(series_count: int) -> Palette:
│ │ +def get_color_palette(series_count: int) -> Tuple[Palette, int]:
│ │      """Return palette based on series size."""
│ │      palette_size = min(256, series_count + series_count // 5)
│ │      return viridis(palette_size), palette_size
│ │  
│ │  
│ │  def set_axes_and_grids(
│ │      data: pd.DataFrame, plot: Figure, show_yaxis: bool, ygrid: bool, xgrid: bool
│ │ @@ -261,21 +271,22 @@
│ │      """Create plot bar to act as as range selector."""
│ │      ext_min = min_time - ((max_time - min_time) * 0.15)
│ │      ext_max = max_time + ((max_time - min_time) * 0.15)
│ │      plot_height = max(120, int(height * 0.20))
│ │      rng_select = figure(
│ │          x_range=(ext_min, ext_max),
│ │          title="Range Selector",
│ │ -        plot_height=plot_height,
│ │ -        plot_width=width,
│ │          x_axis_type="datetime",
│ │          y_axis_type=None,
│ │          tools="",
│ │          toolbar_location=None,
│ │ +        height=plot_height,
│ │ +        width=width,
│ │      )
│ │ +
│ │      help_str = (
│ │          "Drag the middle or edges of the selection box to change "
│ │          + "the range in the main chart"
│ │      )
│ │      rng_select.add_layout(
│ │          Title(text=help_str, align="right", text_font_size="10px"), "below"
│ │      )
│ │ @@ -290,19 +301,20 @@
│ │              )
│ │      elif isinstance(data, pd.DataFrame):
│ │          rng_select.circle(
│ │              x=time_column, y=y, color="blue", source=ColumnDataSource(data)
│ │          )
│ │  
│ │      range_tool = RangeTool(x_range=plot_range)
│ │ -    range_tool.overlay.fill_color = "navy"
│ │ -    range_tool.overlay.fill_alpha = 0.2
│ │ +    range_tool.overlay.fill_color = "navy"  # type: ignore
│ │ +    range_tool.overlay.fill_alpha = 0.2  # type: ignore
│ │      rng_select.ygrid.grid_line_color = None
│ │      rng_select.add_tools(range_tool)
│ │ -    rng_select.toolbar.active_multi = range_tool
│ │ +    if isinstance(range_tool, GestureTool):
│ │ +        rng_select.toolbar.active_multi = range_tool  # type: ignore
│ │      return rng_select
│ │  
│ │  
│ │  # pylint: enable=too-many-arguments
│ │  
│ │  
│ │  def plot_ref_line(
│ │ @@ -328,15 +340,14 @@
│ │          y=0,
│ │          y_offset=10 + (10 * index),
│ │          x_units="data",
│ │          y_units="data",
│ │          text=f"< {ref_text}",
│ │          text_font_size="8pt",
│ │          text_alpha=0.5,
│ │ -        render_mode="css",
│ │          border_line_color="red",
│ │          border_line_alpha=0.3,
│ │          background_fill_color="white",
│ │          background_fill_alpha=0.3,
│ │      )
│ │  
│ │      plot.add_layout(ref_label)
│ │ @@ -400,13 +411,13 @@
│ │      return ref_time, kwargs.get("ref_label", ref_label)  # type: ignore
│ │  
│ │  
│ │  def get_tick_formatter() -> DatetimeTickFormatter:
│ │      """Return tick formatting for different zoom levels."""
│ │      # '%H:%M:%S.%3Nms
│ │      tick_format = DatetimeTickFormatter()
│ │ -    tick_format.days = ["%m-%d %H:%M"]
│ │ -    tick_format.hours = ["%H:%M:%S"]
│ │ -    tick_format.minutes = ["%H:%M:%S"]
│ │ -    tick_format.seconds = ["%H:%M:%S"]
│ │ -    tick_format.milliseconds = ["%H:%M:%S.%3N"]
│ │ +    tick_format.days = "%m-%d %H:%M"  # type: ignore
│ │ +    tick_format.hours = "%H:%M:%S"  # type: ignore
│ │ +    tick_format.minutes = "%H:%M:%S"  # type: ignore
│ │ +    tick_format.seconds = "%H:%M:%S"  # type: ignore
│ │ +    tick_format.milliseconds = "%H:%M:%S.%3N"  # type: ignore
│ │      return tick_format
│ │   --- msticpy-2.3.1/msticpy/vis/timeline_duration.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/timeline_duration.py
│ │┄ Files 2% similar despite different names
│ │ @@ -16,14 +16,15 @@
│ │  # pylint: enable=no-name-in-module
│ │  from bokeh.plotting import figure, reset_output
│ │  from bokeh.transform import dodge
│ │  
│ │  from .._version import VERSION
│ │  from ..common.data_utils import ensure_df_datetimes
│ │  from ..common.utility import check_kwargs, export
│ │ +from .figure_dimension import bokeh_figure
│ │  from .timeline_common import (
│ │      calc_auto_plot_height,
│ │      check_df_columns,
│ │      create_range_tool,
│ │      create_tool_tips,
│ │      get_tick_formatter,
│ │      get_time_bounds,
│ │ @@ -42,14 +43,17 @@
│ │  __author__ = "Ian Hellen"
│ │  
│ │  _TIMELINE_HELP = (
│ │      "https://msticpy.readthedocs.io/en/latest/msticpy.init.html"
│ │      "#msticpy.init.timeline_duration.{plot_type}"
│ │  )
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  @attr.s(auto_attribs=True)
│ │  class PlotParams:
│ │      """Plot params for time_duration."""
│ │  
│ │      height: Optional[int] = None
│ │      width: int = 900
│ │ @@ -183,22 +187,22 @@
│ │      else:
│ │          y_range = grouped_data[group_by[0]]
│ │  
│ │      plot = figure(
│ │          x_range=(start_range, end_range),
│ │          y_range=y_range,
│ │          min_border_left=50,
│ │ -        plot_height=height,
│ │ -        plot_width=param.width,
│ │          x_axis_label="Event Time",
│ │          y_axis_label=", ".join(group_by),
│ │          x_axis_type="datetime",
│ │          x_minor_ticks=10,
│ │          tools=[hover, "xwheel_zoom", "box_zoom", "reset", "save", "xpan"],
│ │          title=title,
│ │ +        height=height,
│ │ +        width=param.width,
│ │      )
│ │  
│ │      # Plot the duration rectangles
│ │      rect_plot_params = {
│ │          "height": 0.3,
│ │          "source": col_src,
│ │          "fill_alpha": 0.4,
│ │ @@ -220,15 +224,15 @@
│ │      set_axes_and_grids(None, plot, param.yaxis, param.ygrid, param.xgrid)
│ │  
│ │      # Create plot bar to act as as range selector
│ │      rng_select = create_range_tool(
│ │          data=all_data,
│ │          min_time=min_time,
│ │          max_time=max_time,
│ │ -        plot_range=plot.x_range,
│ │ +        plot_range=plot.x_range,  # type: ignore[arg-type]
│ │          width=param.width,
│ │          height=height,
│ │          time_column=time_column,
│ │          y="Row",
│ │      )
│ │  
│ │      # set the tick datetime formatter
│ │   --- msticpy-2.3.1/msticpy/vis/timeline_pd_accessor.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/timeline_pd_accessor.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy/vis/timeline_values.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/timeline_values.py
│ │┄ Files 8% similar despite different names
│ │ @@ -7,20 +7,26 @@
│ │  from datetime import datetime
│ │  from typing import Any, Dict, Iterable, List, Optional, Tuple, Union
│ │  
│ │  import attr
│ │  import pandas as pd
│ │  from bokeh.io import output_notebook, show
│ │  from bokeh.layouts import column
│ │ -from bokeh.models import ColumnDataSource, HoverTool, LayoutDOM, Legend
│ │ +from bokeh.models import (  # type: ignore[attr-defined]
│ │ +    ColumnDataSource,
│ │ +    HoverTool,
│ │ +    LayoutDOM,
│ │ +    Legend,
│ │ +)
│ │  from bokeh.plotting import figure, reset_output
│ │  
│ │  from .._version import VERSION
│ │  from ..common.data_utils import ensure_df_datetimes
│ │  from ..common.utility import check_kwargs, export
│ │ +from .figure_dimension import bokeh_figure
│ │  from .timeline_common import (
│ │      TIMELINE_HELP,
│ │      calc_auto_plot_height,
│ │      check_df_columns,
│ │      create_data_grouping,
│ │      create_range_tool,
│ │      create_tool_tips,
│ │ @@ -29,14 +35,17 @@
│ │      plot_ref_events,
│ │      plot_ref_line,
│ │  )
│ │  
│ │  __version__ = VERSION
│ │  __author__ = "Ian Hellen"
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  @attr.s(auto_attribs=True)
│ │  class PlotParams:
│ │      """Plot params for time_duration."""
│ │  
│ │      time_column: Optional[str] = None
│ │      height: Optional[int] = None
│ │ @@ -194,24 +203,25 @@
│ │      start_range = min_time - ((max_time - min_time) * 0.1)
│ │      end_range = max_time + ((max_time - min_time) * 0.1)
│ │      height = param.height or calc_auto_plot_height(series_count)
│ │  
│ │      plot = figure(
│ │          x_range=(start_range, end_range),
│ │          min_border_left=50,
│ │ -        plot_height=height,
│ │ -        plot_width=param.width,
│ │          x_axis_label="Event Time",
│ │          x_axis_type="datetime",
│ │          x_minor_ticks=10,
│ │          y_axis_label=value_col,
│ │          tools=[hover, "xwheel_zoom", "box_zoom", "reset", "save", "xpan"],
│ │          toolbar_location="above",
│ │          title=param.title or "Timeline",
│ │ +        height=height,
│ │ +        width=param.width,
│ │      )
│ │ +
│ │      plot.yaxis.visible = param.yaxis
│ │      _set_grid_lines(plot)
│ │  
│ │      # set the tick datetime formatter
│ │      plot.xaxis[0].formatter = get_tick_formatter()
│ │  
│ │      # plot groups individually so that we can create an interactive legend
│ │ @@ -234,15 +244,15 @@
│ │              # Create the legend box outside of the plot area
│ │              ext_legend = Legend(
│ │                  items=legend_items,
│ │                  location="center",
│ │                  click_policy="hide",
│ │                  label_text_font_size="8pt",
│ │              )
│ │ -            plot.add_layout(ext_legend, param.legend)
│ │ +            plot.add_layout(ext_legend, param.legend)  # type: ignore[arg-type]
│ │      else:
│ │          plot_args = {
│ │              "x": time_column,
│ │              "color": param.color,
│ │              "alpha": 0.7,
│ │              "source": ColumnDataSource(graph_df),
│ │          }
│ │ @@ -262,20 +272,21 @@
│ │              ref_events=param.ref_events,
│ │              time_col=param.ref_time_col,
│ │              group_count=series_count,
│ │              ref_col=param.ref_col,
│ │              ref_times=param.ref_times,
│ │          )
│ │  
│ │ +    plot_layout: LayoutDOM
│ │      if param.range_tool:
│ │          rng_select = create_range_tool(
│ │              data=graph_df,
│ │              min_time=min_time,
│ │              max_time=max_time,
│ │ -            plot_range=plot.x_range,
│ │ +            plot_range=plot.x_range,  # type: ignore[arg-type]
│ │              width=param.width,
│ │              height=height,
│ │              time_column=time_column,
│ │          )
│ │          plot_layout = column(plot, rng_select)
│ │      else:
│ │          plot_layout = plot
│ │   --- msticpy-2.3.1/msticpy/vis/timeseries.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/timeseries.py
│ │┄ Files 2% similar despite different names
│ │ @@ -6,22 +6,23 @@
│ │  """Module for common display functions."""
│ │  from itertools import zip_longest
│ │  from typing import Any, Dict
│ │  
│ │  import pandas as pd
│ │  from bokeh.io import output_notebook, show
│ │  from bokeh.layouts import column
│ │ -from bokeh.models import ColumnDataSource, HoverTool, NumeralTickFormatter
│ │ +from bokeh.models import ColumnDataSource, HoverTool, LayoutDOM, NumeralTickFormatter
│ │  
│ │  # pylint: disable=no-name-in-module
│ │  from bokeh.plotting import figure, reset_output
│ │  from deprecated.sphinx import deprecated
│ │  
│ │  from .._version import VERSION
│ │  from ..common.utility import check_kwargs, export
│ │ +from .figure_dimension import bokeh_figure
│ │  from .timeline_common import (
│ │      calc_auto_plot_height,
│ │      create_range_tool,
│ │      create_tool_tips,
│ │      get_ref_event_time,
│ │      get_tick_formatter,
│ │      plot_ref_line,
│ │ @@ -49,26 +50,29 @@
│ │      "ref_col",
│ │      "ref_times",
│ │      "size",
│ │  ]
│ │  _TL_VALUE_KWARGS = ["kind", "y", "x"]
│ │  _TS_KWARGS = ["xgrid", "ygrid"]
│ │  
│ │ +# wrap figure function to handle v2/v3 parameter renaming
│ │ +figure = bokeh_figure(figure)  # type: ignore[assignment, misc]
│ │ +
│ │  
│ │  # pylint: disable=invalid-name, too-many-locals, too-many-statements
│ │  # pylint: disable=too-many-branches, too-many-function-args, too-many-arguments
│ │  @export  # noqa: C901, MC0001
│ │  def display_timeseries_anomalies(
│ │      data: pd.DataFrame,
│ │      y: str = "Total",
│ │      time_column: str = "TimeGenerated",
│ │      anomalies_column: str = "anomalies",
│ │      period: int = 30,
│ │      **kwargs,
│ │ -) -> figure:
│ │ +) -> LayoutDOM:
│ │      """
│ │      Display time series anomalies visualization.
│ │  
│ │      Parameters
│ │      ----------
│ │      data : pd.DataFrame
│ │          DataFrame as a time series data set retrieved from KQL time series
│ │ @@ -116,16 +120,16 @@
│ │      color : list, optional
│ │          List of colors to use in 3 plots as specified in order
│ │          3 plots- line(observed), circle(baseline), circle_x/user specified(anomalies).
│ │          (the default is ["navy", "green", "firebrick"])
│ │  
│ │      Returns
│ │      -------
│ │ -    figure
│ │ -        The bokeh plot figure.
│ │ +    LayoutDOM
│ │ +        The bokeh plot layout.
│ │  
│ │      """
│ │      check_kwargs(kwargs, _DEFAULT_KWARGS + _TL_VALUE_KWARGS + _TS_KWARGS)
│ │  
│ │      reset_output()
│ │      output_notebook()
│ │      height: int = kwargs.pop("height", None)
│ │ @@ -163,23 +167,23 @@
│ │      start_range = min_time - ((max_time - min_time) * 0.05)
│ │      end_range = max_time + ((max_time - min_time) * 0.05)
│ │      height = height or calc_auto_plot_height(series_count)
│ │  
│ │      plot = figure(
│ │          x_range=(start_range, end_range),
│ │          min_border_left=50,
│ │ -        plot_height=height,
│ │ -        plot_width=width,
│ │          x_axis_label=time_column,
│ │          x_axis_type="datetime",
│ │          y_axis_label=value_column,
│ │          x_minor_ticks=10,
│ │          tools=[hover, "xwheel_zoom", "box_zoom", "reset", "save", "xpan"],
│ │          toolbar_location="above",
│ │          title=title,
│ │ +        height=height,
│ │ +        width=width,
│ │      )
│ │  
│ │      if xgrid:
│ │          plot.xgrid.minor_grid_line_color = "navy"
│ │          plot.xgrid.minor_grid_line_alpha = 0.1
│ │          plot.xgrid.grid_line_color = "navy"
│ │          plot.xgrid.grid_line_alpha = 0.3
│ │ @@ -241,15 +245,15 @@
│ │  
│ │      # Create plot for the score column to act as as range selector
│ │      rng_select = create_range_tool(
│ │          data=data,
│ │          y="score",
│ │          min_time=min_time,
│ │          max_time=max_time,
│ │ -        plot_range=plot.x_range,
│ │ +        plot_range=plot.x_range,  # type: ignore[arg-type]
│ │          width=width,
│ │          height=height,
│ │          time_column=time_column,
│ │      )
│ │  
│ │      # if we have a reference timestamp, plot the time as a line
│ │      if ref_time is not None:
│ │   --- msticpy-2.3.1/msticpy/vis/vtobject_browser.py
│ ├── +++ msticpy-2.4.0/msticpy/vis/vtobject_browser.py
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/msticpy.egg-info/PKG-INFO
│ ├── +++ msticpy-2.4.0/msticpy.egg-info/PKG-INFO
│ │┄ Files 1% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: msticpy
│ │ -Version: 2.3.1
│ │ +Version: 2.4.0
│ │  Summary: MSTIC Security Tools
│ │  Home-page: https://github.com/microsoft/msticpy
│ │  Author: Ian Hellen
│ │  Author-email: ianhelle@microsoft.com
│ │  Maintainer: Pete Bryan
│ │  Maintainer-email: peter.bryan@microsoft.com
│ │  License: MIT License
│ │ @@ -131,15 +131,15 @@
│ │  [docs/notebooks](https://github.com/microsoft/msticpy/blob/master/docs/notebooks)
│ │  folder and accompanying notebooks.
│ │  
│ │  You can also browse through the sample notebooks referenced at the end of this document
│ │  to see some of the functionality used in context. You can play with some of the package
│ │  functions in this interactive demo on mybinder.org.
│ │  
│ │ -[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Azure/Azure-Sentinel-Notebooks/master?filepath=%2Fnbdemo%2Fmsticpy%20demo.ipynb)
│ │ +[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/Azure/Azure-Sentinel-Notebooks/master?filepath=A%20Tour%20of%20Cybersec%20notebook%20features.ipynb)
│ │  
│ │  ---
│ │  
│ │  ## Log Data Acquisition
│ │  
│ │  QueryProvider is an extensible query library targeting Azure Sentinel/Log Analytics,
│ │  Splunk, OData
│ │ @@ -172,15 +172,15 @@
│ │  
│ │  The GeoIP lookup classes allow you to match the geo-locations of IP addresses
│ │  using either:
│ │  
│ │  - GeoLiteLookup - Maxmind Geolite (see <https://www.maxmind.com>)
│ │  - IPStackLookup  - IPStack (see <https://ipstack.com>)
│ │  
│ │ -<img src="./docs/source/visualization/_static/FoliumMap-01.png"
│ │ +<img src="./docs/source/visualization/_static/folium_sf_zoom.png"
│ │    alt="Folium map"
│ │    title="Plotting Geo IP Location" height="200" />
│ │  
│ │  [GeoIP Lookup](https://msticpy.readthedocs.io/en/latest/data_acquisition/GeoIPLookups.html)
│ │  and
│ │  [GeoIP Notebook](https://github.com/microsoft/msticpy/blob/master/docs/notebooks/GeoIPLookups.ipynb)
│ │   --- msticpy-2.3.1/msticpy.egg-info/SOURCES.txt
│ ├── +++ msticpy-2.4.0/msticpy.egg-info/SOURCES.txt
│ │┄ Files 1% similar despite different names
│ │ @@ -111,14 +111,15 @@
│ │  msticpy/context/tiproviders/azure_sent_byoti.py
│ │  msticpy/context/tiproviders/greynoise.py
│ │  msticpy/context/tiproviders/ibm_xforce.py
│ │  msticpy/context/tiproviders/intsights.py
│ │  msticpy/context/tiproviders/kql_base.py
│ │  msticpy/context/tiproviders/mblookup.py
│ │  msticpy/context/tiproviders/open_page_rank.py
│ │ +msticpy/context/tiproviders/pulsedive.py
│ │  msticpy/context/tiproviders/result_severity.py
│ │  msticpy/context/tiproviders/riskiq.py
│ │  msticpy/context/tiproviders/ti_http_provider.py
│ │  msticpy/context/tiproviders/ti_provider_base.py
│ │  msticpy/context/tiproviders/tor_exit_nodes.py
│ │  msticpy/context/tiproviders/virustotal.py
│ │  msticpy/context/vtlookupv3/__init__.py
│ │ @@ -241,14 +242,15 @@
│ │  msticpy/datamodel/entities/url.py
│ │  msticpy/datamodel/soc/__init__.py
│ │  msticpy/datamodel/soc/incident.py
│ │  msticpy/datamodel/soc/sentinel_alert.py
│ │  msticpy/init/__init__.py
│ │  msticpy/init/azure_ml_tools.py
│ │  msticpy/init/azure_synapse_tools.py
│ │ +msticpy/init/logging.py
│ │  msticpy/init/mp_pandas_accessors.py
│ │  msticpy/init/nbinit.py
│ │  msticpy/init/nbmagics.py
│ │  msticpy/init/pivot.py
│ │  msticpy/init/user_config.py
│ │  msticpy/init/pivot_core/__init__.py
│ │  msticpy/init/pivot_core/pivot_browser.py
│ │ @@ -333,14 +335,15 @@
│ │  msticpy/transform/proc_tree_builder.py
│ │  msticpy/transform/proc_tree_schema.py
│ │  msticpy/transform/process_tree_utils.py
│ │  msticpy/vis/__init__.py
│ │  msticpy/vis/code_view.py
│ │  msticpy/vis/data_viewer.py
│ │  msticpy/vis/entity_graph_tools.py
│ │ +msticpy/vis/figure_dimension.py
│ │  msticpy/vis/foliummap.py
│ │  msticpy/vis/matrix_plot.py
│ │  msticpy/vis/mordor_browser.py
│ │  msticpy/vis/morph_charts.py
│ │  msticpy/vis/mp_pandas_plot.py
│ │  msticpy/vis/nbdisplay.py
│ │  msticpy/vis/network_plot.py
│ │   --- msticpy-2.3.1/msticpy.egg-info/requires.txt
│ ├── +++ msticpy-2.4.0/msticpy.egg-info/requires.txt
│ │┄ Files 2% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  attrs>=18.2.0
│ │  azure-common>=1.1.18
│ │  azure-core>=1.24.0
│ │  azure-identity>=1.10.0
│ │  azure-mgmt-subscription>=3.0.0
│ │  beautifulsoup4>=4.0.0
│ │ -bokeh<3.0.0,>=1.4.0
│ │ +bokeh<=2.4.3,>=1.4.0
│ │  cryptography>=3.1
│ │  deprecated>=1.2.4
│ │  dnspython<3.0.0,>=2.0.0
│ │  folium>=0.9.0
│ │  geoip2>=2.9.0
│ │  httpx==0.23.3
│ │  html5lib
│ │ @@ -62,15 +62,15 @@
│ │  azure-mgmt-resourcegraph>=8.0.0
│ │  azure-storage-blob>=12.5.0
│ │  keyring>=13.2.1
│ │  mo-sql-parsing<9.0.0,>=8
│ │  nest_asyncio>=1.4.0
│ │  openpyxl>=3.0
│ │  passivetotal>=2.5.3
│ │ -scikit-learn>=0.20.2
│ │ +scikit-learn>=1.0.0
│ │  scipy>=1.1.0
│ │  splunk-sdk>=1.6.0
│ │  statsmodels>=0.11.1
│ │  sumologic-sdk>=0.1.11
│ │  vt-graph-api>=2.0
│ │  vt-py>=0.6.1
│ │  
│ │ @@ -155,15 +155,15 @@
│ │  azure-mgmt-keyvault>=2.0.0
│ │  keyring>=13.2.1
│ │  
│ │  [kql]
│ │  KqlmagicCustom[jupyter-extended]>=0.1.114.post22
│ │  
│ │  [ml]
│ │ -scikit-learn>=0.20.2
│ │ +scikit-learn>=1.0.0
│ │  scipy>=1.1.0
│ │  statsmodels>=0.11.1
│ │  
│ │  [riskiq]
│ │  passivetotal>=2.5.3
│ │  
│ │  [sentinel]
│ │ @@ -234,15 +234,15 @@
│ │  pytest-check>=1.0.1
│ │  pytest-cov>=2.11.1
│ │  pytest-xdist>=2.5.0
│ │  pytest>=5.0.1
│ │  readthedocs-sphinx-ext==2.2.0
│ │  responses>=0.13.2
│ │  respx>=0.20.1
│ │ -scikit-learn>=0.20.2
│ │ +scikit-learn>=1.0.0
│ │  scipy>=1.1.0
│ │  sphinx-rtd-theme>=1.0.0
│ │  sphinx>=5.0.1
│ │  splunk-sdk>=1.6.0
│ │  statsmodels>=0.11.1
│ │  sumologic-sdk>=0.1.11
│ │  types-attrs>=19.0.0
│ │   --- msticpy-2.3.1/requirements-all.txt
│ ├── +++ msticpy-2.4.0/requirements-all.txt
│ │┄ Files 12% similar despite different names
│ │ @@ -9,15 +9,15 @@
│ │  azure-mgmt-monitor>=2.0.0
│ │  azure-mgmt-network>=2.7.0
│ │  azure-mgmt-resource>=16.1.0
│ │  azure-mgmt-resourcegraph>=8.0.0
│ │  azure-mgmt-subscription>=3.0.0
│ │  azure-storage-blob>=12.5.0
│ │  beautifulsoup4>=4.0.0
│ │ -bokeh>=1.4.0, <3.0.0
│ │ +bokeh>=1.4.0, <=2.4.3
│ │  cryptography>=3.1
│ │  deprecated>=1.2.4
│ │  dnspython>=2.0.0, <3.0.0
│ │  folium>=0.9.0
│ │  geoip2>=2.9.0
│ │  httpx==0.23.3
│ │  html5lib
│ │ @@ -41,15 +41,15 @@
│ │  pandas>=1.4.0, <2.0.0
│ │  passivetotal>=2.5.3
│ │  pygments>=2.0.0
│ │  pyjwt>=2.3.0
│ │  python-dateutil>=2.8.1  # pandas
│ │  pytz>=2019.2  # pandas
│ │  pyyaml>=3.13
│ │ -scikit-learn>=0.20.2
│ │ +scikit-learn>=1.0.0
│ │  scipy>=1.1.0
│ │  setuptools>=40.6.3
│ │  splunk-sdk>=1.6.0
│ │  statsmodels>=0.11.1
│ │  sumologic-sdk>=0.1.11
│ │  tldextract>=2.2.2
│ │  tqdm>=4.36.1
│ │   --- msticpy-2.3.1/requirements-dev.txt
│ ├── +++ msticpy-2.4.0/requirements-dev.txt
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/requirements.txt
│ ├── +++ msticpy-2.4.0/requirements.txt
│ │┄ Files 15% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  attrs>=18.2.0
│ │  azure-common>=1.1.18
│ │  azure-core>=1.24.0
│ │  azure-identity>=1.10.0
│ │  azure-mgmt-subscription>=3.0.0
│ │  beautifulsoup4>=4.0.0
│ │ -bokeh>=1.4.0, <3.0.0
│ │ +bokeh>=1.4.0, <=2.4.3
│ │  cryptography>=3.1
│ │  deprecated>=1.2.4
│ │  dnspython>=2.0.0, <3.0.0
│ │  folium>=0.9.0
│ │  geoip2>=2.9.0
│ │  httpx==0.23.3
│ │  html5lib
│ │   --- msticpy-2.3.1/setup.cfg
│ ├── +++ msticpy-2.4.0/setup.cfg
│ │┄ Files identical despite different names
│ │   --- msticpy-2.3.1/setup.py
│ ├── +++ msticpy-2.4.0/setup.py
│ │┄ Files 1% similar despite different names
│ │ @@ -42,15 +42,15 @@
│ │          "azure-mgmt-resourcegraph>=8.0.0",
│ │      ],
│ │      "keyvault": [
│ │          "azure-keyvault-secrets>=4.0.0",
│ │          "azure-mgmt-keyvault>=2.0.0",
│ │          "keyring>=13.2.1",  # needed by Key Vault package
│ │      ],
│ │ -    "ml": ["scikit-learn>=0.20.2", "scipy>=1.1.0", "statsmodels>=0.11.1"],
│ │ +    "ml": ["scikit-learn>=1.0.0", "scipy>=1.1.0", "statsmodels>=0.11.1"],
│ │      "sql2kql": ["mo-sql-parsing>=8, <9.0.0"],
│ │      "riskiq": ["passivetotal>=2.5.3"],
│ │  }
│ │  extras_all = [
│ │      extra for name, extras in EXTRAS.items() for extra in extras if name != "dev"
│ │  ]
│ │  EXTRAS["all"] = extras_all
