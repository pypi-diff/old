--- tmp/solcix-0.1.6.tar.gz
+++ tmp/solcix-0.1.7.tar.gz
â”œâ”€â”€ filetype from file(1)
â”‚ @@ -1 +1 @@
â”‚ -gzip compressed data, was "solcix-0.1.6.tar", max compression
â”‚ +gzip compressed data, was "solcix-0.1.7.tar", max compression
â”‚   --- solcix-0.1.6.tar
â”œâ”€â”€ +++ solcix-0.1.7.tar
â”‚ â”œâ”€â”€ file list
â”‚ â”‚ @@ -1,17 +1,17 @@
â”‚ â”‚ --rw-r--r--   0        0        0    34523 2023-04-07 01:15:56.610498 solcix-0.1.6/LICENSE
â”‚ â”‚ --rw-r--r--   0        0        0     8212 2023-04-07 01:15:56.610498 solcix-0.1.6/README.md
â”‚ â”‚ --rw-r--r--   0        0        0      871 2023-04-07 01:15:56.610498 solcix-0.1.6/pyproject.toml
â”‚ â”‚ --rw-r--r--   0        0        0     1109 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/__init__.py
â”‚ â”‚ --rw-r--r--   0        0        0     8987 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/__main__.py
â”‚ â”‚ --rw-r--r--   0        0        0      182 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/compile/__init__.py
â”‚ â”‚ --rw-r--r--   0        0        0    19156 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/compile/solc.py
â”‚ â”‚ --rw-r--r--   0        0        0      618 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/constant.py
â”‚ â”‚ --rw-r--r--   0        0        0      110 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/datatypes/__init__.py
â”‚ â”‚ --rw-r--r--   0        0        0     3949 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/datatypes/datatypes.py
â”‚ â”‚ --rw-r--r--   0        0        0     3407 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/errors.py
â”‚ â”‚ --rw-r--r--   0        0        0    21648 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/installer.py
â”‚ â”‚ --rw-r--r--   0        0        0      241 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/manage/__init__.py
â”‚ â”‚ --rw-r--r--   0        0        0     3773 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/manage/manage.py
â”‚ â”‚ --rw-r--r--   0        0        0    10656 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/resolver.py
â”‚ â”‚ --rw-r--r--   0        0        0      597 2023-04-07 01:15:56.610498 solcix-0.1.6/solcix/utils.py
â”‚ â”‚ --rw-r--r--   0        0        0     9373 1970-01-01 00:00:00.000000 solcix-0.1.6/PKG-INFO
â”‚ â”‚ +-rw-r--r--   0        0        0    34523 2023-04-07 11:28:07.282960 solcix-0.1.7/LICENSE
â”‚ â”‚ +-rw-r--r--   0        0        0     8208 2023-04-07 11:28:07.282960 solcix-0.1.7/README.md
â”‚ â”‚ +-rw-r--r--   0        0        0      871 2023-04-07 11:28:07.282960 solcix-0.1.7/pyproject.toml
â”‚ â”‚ +-rw-r--r--   0        0        0     1109 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/__init__.py
â”‚ â”‚ +-rw-r--r--   0        0        0     9081 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/__main__.py
â”‚ â”‚ +-rw-r--r--   0        0        0      182 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/compile/__init__.py
â”‚ â”‚ +-rw-r--r--   0        0        0    19156 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/compile/solc.py
â”‚ â”‚ +-rw-r--r--   0        0        0      618 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/constant.py
â”‚ â”‚ +-rw-r--r--   0        0        0      110 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/datatypes/__init__.py
â”‚ â”‚ +-rw-r--r--   0        0        0     3949 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/datatypes/datatypes.py
â”‚ â”‚ +-rw-r--r--   0        0        0     3407 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/errors.py
â”‚ â”‚ +-rw-r--r--   0        0        0    21648 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/installer.py
â”‚ â”‚ +-rw-r--r--   0        0        0      241 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/manage/__init__.py
â”‚ â”‚ +-rw-r--r--   0        0        0     3773 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/manage/manage.py
â”‚ â”‚ +-rw-r--r--   0        0        0    10656 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/resolver.py
â”‚ â”‚ +-rw-r--r--   0        0        0      597 2023-04-07 11:28:07.282960 solcix-0.1.7/solcix/utils.py
â”‚ â”‚ +-rw-r--r--   0        0        0     9369 1970-01-01 00:00:00.000000 solcix-0.1.7/PKG-INFO
â”‚ â”‚   --- solcix-0.1.6/LICENSE
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/LICENSE
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/README.md
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/README.md
â”‚ â”‚â”„ Files 1% similar despite different names
â”‚ â”‚ @@ -109,21 +109,20 @@
â”‚ â”‚  ```bash
â”‚ â”‚  solcix installed
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  If global / local version is set, it will be displayed as below:
â”‚ â”‚  
â”‚ â”‚  ```bash
â”‚ â”‚ -0.8.19
â”‚ â”‚ -0.5.2
â”‚ â”‚ -0.5.1
â”‚ â”‚  0.5.0
â”‚ â”‚ -0.8.0 <- current
â”‚ â”‚  0.8.0
â”‚ â”‚  0.8.16
â”‚ â”‚ +0.8.17
â”‚ â”‚ +0.8.18 <- current
â”‚ â”‚ +0.8.19
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  ### Switching between Solidity compilers
â”‚ â”‚  
â”‚ â”‚  The `use` command can be used to switch between installed versions of the Solidity compiler, either globally or locally.
â”‚ â”‚  
â”‚ â”‚  - If the specified version is not installed, it will be installed automatically.
â”‚ â”‚ @@ -172,15 +171,15 @@
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  ### Uninstall all Solidity compilers
â”‚ â”‚  
â”‚ â”‚  To uninstall all versions of Solidity compiler that have been installed using solcix, you can use the following command:
â”‚ â”‚  
â”‚ â”‚  ```bash
â”‚ â”‚ -solcix prune
â”‚ â”‚ +solcix purge
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  This will remove all versions of the Solidity compilers that have been installed by solcix, all cached files, and the solcix configuration file (local config takes precedence over global config).
â”‚ â”‚  
â”‚ â”‚  ### Verify Solidity compilers
â”‚ â”‚  
â”‚ â”‚  The `verify` command is used to verify the checksums of installed solc binaries and to reinstall any that are malformed.
â”‚ â”‚   --- solcix-0.1.6/pyproject.toml
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/pyproject.toml
â”‚ â”‚â”„ Files 1% similar despite different names
â”‚ â”‚ @@ -1,10 +1,10 @@
â”‚ â”‚  [tool.poetry]
â”‚ â”‚  name = "solcix"
â”‚ â”‚ -version = "0.1.6"
â”‚ â”‚ +version = "0.1.7"
â”‚ â”‚  description = "A Python wrapper for the Solidity compiler. Switch between versions, compile, and manage artifacts."
â”‚ â”‚  authors = ["alan890104 <alan890104@gmail.com>"]
â”‚ â”‚  readme = "README.md"
â”‚ â”‚  
â”‚ â”‚  [tool.poetry.dependencies]
â”‚ â”‚  python = "^3.8"
â”‚ â”‚  cfgv = "3.3.1"
â”‚ â”‚   --- solcix-0.1.6/solcix/__init__.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/__init__.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/__main__.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/__main__.py
â”‚ â”‚â”„ Files 1% similar despite different names
â”‚ â”‚ @@ -95,15 +95,15 @@
â”‚ â”‚  def uninstall(version: Union[List[str], str]):
â”‚ â”‚      success, skipped, error = solcix.uninstall_solc(version)
â”‚ â”‚      print(Fore.GREEN + f"success: {', '.join(success)}" + Style.RESET_ALL)
â”‚ â”‚      print(Fore.YELLOW + f"skipped: {', '.join(skipped)}" + Style.RESET_ALL)
â”‚ â”‚      print(Fore.RED + f"error  : {', '.join(error)}" + Style.RESET_ALL)
â”‚ â”‚  
â”‚ â”‚  @cli.command(help="Uninstall all solc binaries.")
â”‚ â”‚ -def prune():
â”‚ â”‚ +def purge():
â”‚ â”‚      opt = click.confirm(default=False, text="Are you sure to uninstall all solc binaries, caches, and config files?")
â”‚ â”‚      if opt is False:
â”‚ â”‚          print(f"ðŸ‘€{Fore.YELLOW} You have canceled the operation. Indeed, a wise choice!{Style.RESET_ALL} ðŸ‘€")
â”‚ â”‚          return
â”‚ â”‚      # Delete all cached versions
â”‚ â”‚      solcix.clear_cache()
â”‚ â”‚      # Delete all config files
â”‚ â”‚ @@ -132,15 +132,18 @@
â”‚ â”‚  @click.pass_context
â”‚ â”‚  def compile(ctx: click.Context, file: str, output: str):
â”‚ â”‚      # Parse arguments
â”‚ â”‚      params = dict()
â”‚ â”‚      for segment in ctx.args:
â”‚ â”‚          if segment.startswith("--") and segment.find("=") != 1:
â”‚ â”‚              key, value = segment.strip("--").split("=")
â”‚ â”‚ -            params[key.replace("-","_")] = ast.literal_eval(value)
â”‚ â”‚ +            try:
â”‚ â”‚ +                params[key.replace("-","_")] = ast.literal_eval(value)
â”‚ â”‚ +            except:
â”‚ â”‚ +                params[key.replace("-","_")] = value
â”‚ â”‚  
â”‚ â”‚      # check output directory
â”‚ â”‚      if output is not None:
â”‚ â”‚          params["output_dir"] = output
â”‚ â”‚          if os.path.exists(output) and "overwrite" not in params:
â”‚ â”‚              click.confirm(f"Output path `{output}` already exists, do you want to overwrite it?", default=False, abort=True)
â”‚ â”‚              params["overwrite"] = True
â”‚ â”‚   --- solcix-0.1.6/solcix/compile/solc.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/compile/solc.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/constant.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/constant.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/datatypes/datatypes.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/datatypes/datatypes.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/errors.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/errors.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/installer.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/installer.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/manage/manage.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/manage/manage.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/resolver.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/resolver.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/solcix/utils.py
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/solcix/utils.py
â”‚ â”‚â”„ Files identical despite different names
â”‚ â”‚   --- solcix-0.1.6/PKG-INFO
â”‚ â”œâ”€â”€ +++ solcix-0.1.7/PKG-INFO
â”‚ â”‚â”„ Files 2% similar despite different names
â”‚ â”‚ @@ -1,10 +1,10 @@
â”‚ â”‚  Metadata-Version: 2.1
â”‚ â”‚  Name: solcix
â”‚ â”‚ -Version: 0.1.6
â”‚ â”‚ +Version: 0.1.7
â”‚ â”‚  Summary: A Python wrapper for the Solidity compiler. Switch between versions, compile, and manage artifacts.
â”‚ â”‚  Author: alan890104
â”‚ â”‚  Author-email: alan890104@gmail.com
â”‚ â”‚  Requires-Python: >=3.8,<4.0
â”‚ â”‚  Classifier: Programming Language :: Python :: 3
â”‚ â”‚  Classifier: Programming Language :: Python :: 3.8
â”‚ â”‚  Classifier: Programming Language :: Python :: 3.9
â”‚ â”‚ @@ -141,21 +141,20 @@
â”‚ â”‚  ```bash
â”‚ â”‚  solcix installed
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  If global / local version is set, it will be displayed as below:
â”‚ â”‚  
â”‚ â”‚  ```bash
â”‚ â”‚ -0.8.19
â”‚ â”‚ -0.5.2
â”‚ â”‚ -0.5.1
â”‚ â”‚  0.5.0
â”‚ â”‚ -0.8.0 <- current
â”‚ â”‚  0.8.0
â”‚ â”‚  0.8.16
â”‚ â”‚ +0.8.17
â”‚ â”‚ +0.8.18 <- current
â”‚ â”‚ +0.8.19
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  ### Switching between Solidity compilers
â”‚ â”‚  
â”‚ â”‚  The `use` command can be used to switch between installed versions of the Solidity compiler, either globally or locally.
â”‚ â”‚  
â”‚ â”‚  - If the specified version is not installed, it will be installed automatically.
â”‚ â”‚ @@ -204,15 +203,15 @@
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  ### Uninstall all Solidity compilers
â”‚ â”‚  
â”‚ â”‚  To uninstall all versions of Solidity compiler that have been installed using solcix, you can use the following command:
â”‚ â”‚  
â”‚ â”‚  ```bash
â”‚ â”‚ -solcix prune
â”‚ â”‚ +solcix purge
â”‚ â”‚  ```
â”‚ â”‚  
â”‚ â”‚  This will remove all versions of the Solidity compilers that have been installed by solcix, all cached files, and the solcix configuration file (local config takes precedence over global config).
â”‚ â”‚  
â”‚ â”‚  ### Verify Solidity compilers
â”‚ â”‚  
â”‚ â”‚  The `verify` command is used to verify the checksums of installed solc binaries and to reinstall any that are malformed.
