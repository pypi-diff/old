--- tmp/simplejpeg-1.6.5.tar.gz
+++ tmp/simplejpeg-1.6.6.tar.gz
├── filetype from file(1)
│ @@ -1 +1 @@
│ -gzip compressed data, was "simplejpeg-1.6.5.tar", last modified: Fri Aug 12 20:48:44 2022, max compression
│ +gzip compressed data, was "simplejpeg-1.6.6.tar", last modified: Thu Apr  6 18:51:41 2023, max compression
│   --- simplejpeg-1.6.5.tar
├── +++ simplejpeg-1.6.6.tar
│ ├── file list
│ │ @@ -1,2146 +1,2146 @@
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.908571 simplejpeg-1.6.5/
│ │ --rw-rw-rw-   0 root         (0) root         (0)    19565 2022-08-12 20:48:43.000000 simplejpeg-1.6.5/LICENSE
│ │ --rw-rw-rw-   0 root         (0) root         (0)      226 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/MANIFEST.in
│ │ --rw-r--r--   0 root         (0) root         (0)     6754 2022-08-12 20:48:44.907571 simplejpeg-1.6.5/PKG-INFO
│ │ --rw-rw-rw-   0 root         (0) root         (0)     5866 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/README.rst
│ │ --rw-rw-rw-   0 root         (0) root         (0)       86 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/build_requirements.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.139548 simplejpeg-1.6.5/lib/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.230551 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/
│ │ --rw-rw-r--   0 root         (0) root         (0)    25160 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/BUILDING.md
│ │ --rw-rw-r--   0 root         (0) root         (0)    62389 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)    92261 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/ChangeLog.md
│ │ --rw-rw-r--   0 root         (0) root         (0)     5213 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/LICENSE.md
│ │ --rw-rw-r--   0 root         (0) root         (0)    12732 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/README.ijg
│ │ --rw-rw-r--   0 root         (0) root         (0)    17039 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/README.md
│ │ --rw-rw-r--   0 root         (0) root         (0)     4708 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cderror.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4375 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cdjpeg.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5929 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cdjpeg.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    12879 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/change.log
│ │ --rw-rw-r--   0 root         (0) root         (0)    13865 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cjpeg.1
│ │ --rw-rw-r--   0 root         (0) root         (0)    24798 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cjpeg.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.232551 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/
│ │ --rw-rw-r--   0 root         (0) root         (0)     5721 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/BuildPackages.cmake
│ │ --rw-rw-r--   0 root         (0) root         (0)    15882 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/GNUInstallDirs.cmake
│ │ --rw-rw-r--   0 root         (0) root         (0)      972 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/PackageInfo.cmake
│ │ --rw-rw-r--   0 root         (0) root         (0)      974 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/cmake_uninstall.cmake.in
│ │ --rw-rw-r--   0 root         (0) root         (0)      626 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/testclean.cmake
│ │ --rw-rw-r--   0 root         (0) root         (0)     1598 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmyk.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     3467 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/coderules.txt
│ │ --rwxrwxr-x   0 root         (0) root         (0)     2517 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/croptest.in
│ │ --rw-rw-r--   0 root         (0) root         (0)    10886 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/djpeg.1
│ │ --rw-rw-r--   0 root         (0) root         (0)    29308 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/djpeg.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.131548 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.245551 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/
│ │ --rw-rw-r--   0 root         (0) root         (0)     3972 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/annotated.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      676 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/bc_s.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      147 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/bdwn.png
│ │ --rw-rw-r--   0 root         (0) root         (0)     3769 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/classes.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      132 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/closed.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      746 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/doc.png
│ │ --rw-rw-r--   0 root         (0) root         (0)       26 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/doxygen-extra.css
│ │ --rw-rw-r--   0 root         (0) root         (0)    30445 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/doxygen.css
│ │ --rw-rw-r--   0 root         (0) root         (0)    15382 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/doxygen.svg
│ │ --rw-rw-r--   0 root         (0) root         (0)     4452 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/dynsections.js
│ │ --rw-rw-r--   0 root         (0) root         (0)      616 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/folderclosed.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      597 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/folderopen.png
│ │ --rw-rw-r--   0 root         (0) root         (0)     4205 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/functions.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     4077 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/functions_vars.html
│ │ --rw-rw-r--   0 root         (0) root         (0)   216428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/group___turbo_j_p_e_g.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     2965 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/index.html
│ │ --rw-rw-r--   0 root         (0) root         (0)   175457 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/jquery.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     3222 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/menu.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1684 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/menudata.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     3320 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/modules.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      153 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/nav_f.png
│ │ --rw-rw-r--   0 root         (0) root         (0)       95 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/nav_g.png
│ │ --rw-rw-r--   0 root         (0) root         (0)       98 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/nav_h.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      123 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/open.png
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.267552 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      139 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_1.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      236 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_1.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_2.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      111 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_2.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_3.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      129 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_3.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_4.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      228 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_4.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_5.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      117 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_5.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_6.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    13916 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_6.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_7.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      113 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_7.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_8.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      113 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_8.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1422 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_9.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      113 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_9.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1426 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/classes_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      245 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/classes_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1284 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/close.svg
│ │ --rw-rw-r--   0 root         (0) root         (0)     1424 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enums_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      578 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enums_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1429 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enumvalues_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     5404 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enumvalues_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/functions_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     3654 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/functions_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1425 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/groups_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)       94 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/groups_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     2378 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/mag_sel.svg
│ │ --rw-rw-r--   0 root         (0) root         (0)      462 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/nomatches.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     4361 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search.css
│ │ --rw-rw-r--   0 root         (0) root         (0)    23359 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search.js
│ │ --rw-rw-r--   0 root         (0) root         (0)      567 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search_l.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      158 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search_m.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      553 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search_r.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      467 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/searchdata.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1427 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/typedefs_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      262 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/typedefs_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_0.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      141 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_0.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_1.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      240 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_1.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_2.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      113 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_2.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_3.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      131 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_3.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_4.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      232 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_4.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_5.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      119 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_5.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_6.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      896 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_6.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_7.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      113 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_7.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_8.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      113 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_8.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     1428 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_9.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      113 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_9.js
│ │ --rw-rw-r--   0 root         (0) root         (0)      314 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/splitbar.png
│ │ --rw-rw-r--   0 root         (0) root         (0)     8537 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/structtjregion.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     5750 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/structtjscalingfactor.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    12470 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/structtjtransform.html
│ │ --rw-rw-r--   0 root         (0) root         (0)      853 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/sync_off.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      845 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/sync_on.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      142 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/tab_a.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      169 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/tab_b.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      177 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/tab_h.png
│ │ --rw-rw-r--   0 root         (0) root         (0)      184 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/tab_s.png
│ │ --rw-rw-r--   0 root         (0) root         (0)     9184 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/tabs.css
│ │ --rw-rw-r--   0 root         (0) root         (0)       26 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doxygen-extra.css
│ │ --rw-rw-r--   0 root         (0) root         (0)      403 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doxygen.config
│ │ --rw-rw-r--   0 root         (0) root         (0)    18699 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/example.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.270552 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1933 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     1080 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/build.sh
│ │ --rw-rw-r--   0 root         (0) root         (0)     3229 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/cjpeg.cc
│ │ --rw-rw-r--   0 root         (0) root         (0)     4611 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/compress.cc
│ │ --rw-rw-r--   0 root         (0) root         (0)     5182 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/compress_yuv.cc
│ │ --rw-rw-r--   0 root         (0) root         (0)     4184 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/decompress.cc
│ │ --rw-rw-r--   0 root         (0) root         (0)     4238 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/decompress_yuv.cc
│ │ --rw-rw-r--   0 root         (0) root         (0)     4936 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/transform.cc
│ │ --rw-rw-r--   0 root         (0) root         (0)     5132 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jaricom.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.273552 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/
│ │ --rw-rw-r--   0 root         (0) root         (0)     3944 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)       44 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/MANIFEST.MF
│ │ --rw-rw-r--   0 root         (0) root         (0)     2602 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/README
│ │ --rw-rw-r--   0 root         (0) root         (0)    40391 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/TJBench.java
│ │ --rw-rw-r--   0 root         (0) root         (0)    17042 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/TJExample.java
│ │ --rw-rw-r--   0 root         (0) root         (0)    33595 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/TJUnitTest.java
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.278552 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1658 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/allclasses-frame.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     1478 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/allclasses-noframe.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    21955 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/constant-values.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    11709 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/deprecated-list.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     7678 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/help-doc.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    83985 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/index-all.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     2738 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/index.html
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.133548 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.133548 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.283553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/
│ │ --rw-rw-r--   0 root         (0) root         (0)    61154 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJ.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    49849 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     9854 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJCustomFilter.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    66774 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    11393 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJException.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    12057 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJScalingFactor.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    33058 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJTransform.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    22927 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    32199 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/YUVImage.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     1732 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-frame.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     7028 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-summary.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     5999 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-tree.html
│ │ --rw-rw-r--   0 root         (0) root         (0)     5849 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/overview-tree.html
│ │ --rw-rw-r--   0 root         (0) root         (0)       27 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/package-list
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.285553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/
│ │ --rw-rw-r--   0 root         (0) root         (0)     2313 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/background.gif
│ │ --rw-rw-r--   0 root         (0) root         (0)      291 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/tab.gif
│ │ --rw-rw-r--   0 root         (0) root         (0)    10701 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/titlebar.gif
│ │ --rw-rw-r--   0 root         (0) root         (0)      849 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/titlebar_end.gif
│ │ --rw-rw-r--   0 root         (0) root         (0)      827 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/script.js
│ │ --rw-rw-r--   0 root         (0) root         (0)     5128 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/serialized-form.html
│ │ --rw-rw-r--   0 root         (0) root         (0)    11139 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/stylesheet.css
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.134548 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.134548 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.289553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/
│ │ --rw-rw-r--   0 root         (0) root         (0)    24012 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJ.java
│ │ --rw-rw-r--   0 root         (0) root         (0)    26432 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJCompressor.java
│ │ --rw-rw-r--   0 root         (0) root         (0)     3654 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJCustomFilter.java
│ │ --rw-rw-r--   0 root         (0) root         (0)    41786 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJDecompressor.java
│ │ --rw-rw-r--   0 root         (0) root         (0)     2811 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJException.java
│ │ --rw-rw-r--   0 root         (0) root         (0)     2685 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJLoader-unix.java.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     1716 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJLoader-win.java.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     3600 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJScalingFactor.java
│ │ --rw-rw-r--   0 root         (0) root         (0)     8485 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJTransform.java
│ │ --rw-rw-r--   0 root         (0) root         (0)     7043 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJTransformer.java
│ │ --rw-rw-r--   0 root         (0) root         (0)    18790 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/YUVImage.java
│ │ --rw-rw-r--   0 root         (0) root         (0)     5804 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJ.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     3521 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJCompressor.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     3479 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJDecompressor.h
│ │ --rw-rw-r--   0 root         (0) root         (0)      838 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJTransformer.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     9659 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcapimin.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5903 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcapistd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    29668 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcarith.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    17271 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jccoefct.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4521 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jccolext.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    23593 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jccolor.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    22364 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcdctmgr.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    36683 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jchuff.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     1514 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jchuff.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4072 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcicc.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2565 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcinit.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5221 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcmainct.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    17532 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcmarker.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    21983 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcmaster.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3239 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcomapi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     1170 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jconfig.h.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     3127 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jconfig.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     1055 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jconfigint.h.in
│ │ --rw-rw-r--   0 root         (0) root         (0)    18203 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcparam.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    33657 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcphuff.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    12965 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcprepct.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    19156 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcsample.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3851 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcstest.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    14940 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jctrans.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    13264 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdapimin.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    25518 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdapistd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    25539 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdarith.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     6683 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatadst-tj.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     9557 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatadst.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     6969 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatasrc-tj.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    10288 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatasrc.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    34033 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcoefct.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2704 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcoefct.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    11665 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcol565.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4355 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcolext.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    28549 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcolor.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     9708 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdct.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    11423 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jddctmgr.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    26644 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdhuff.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     9795 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdhuff.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     5409 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdicc.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    14585 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdinput.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    19821 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmainct.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2448 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmainct.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    42216 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmarker.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    27460 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmaster.c
│ │ --rw-rw-r--   0 root         (0) root         (0)      788 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmaster.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    19804 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmerge.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     1630 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmerge.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    11030 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmrg565.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5787 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmrgext.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    22173 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdphuff.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    10948 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdpostct.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    18058 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdsample.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     1725 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdsample.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     5461 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdtrans.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     7929 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jerror.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    15864 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jerror.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     5588 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jfdctflt.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     7792 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jfdctfst.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    11508 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jfdctint.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     8729 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctflt.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    13554 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctfst.c
│ │ --rw-rw-r--   0 root         (0) root         (0)   106254 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctint.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    14528 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctred.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3163 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jinclude.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    45062 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmemmgr.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2674 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmemnobs.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     7788 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmemsys.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    14192 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmorecfg.h
│ │ --rw-rw-r--   0 root         (0) root         (0)   270393 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpeg_nbits_table.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     1130 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegcomp.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    15782 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegint.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    50281 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpeglib.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    13286 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegtran.1
│ │ --rw-rw-r--   0 root         (0) root         (0)    24806 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegtran.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    32176 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jquant1.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    48710 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jquant2.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5853 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jsimd.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     8036 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jsimd_none.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3085 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jsimddct.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     5321 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jstdhuff.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3764 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jutils.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     1761 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jversion.h.in
│ │ --rw-rw-r--   0 root         (0) root         (0)      164 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/libjpeg.map.in
│ │ --rw-rw-r--   0 root         (0) root         (0)   170109 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/libjpeg.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.291553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/
│ │ --rw-rw-r--   0 root         (0) root         (0)       46 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     9659 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2371 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     2240 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5cmp.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3896 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5hl.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    23086 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdbmp.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     7001 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdcolmap.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    24546 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdgif.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     1699 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdjpgcom.1
│ │ --rw-rw-r--   0 root         (0) root         (0)    14558 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdjpgcom.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    25613 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdppm.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    13195 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdswitch.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    15487 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdtarga.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.297553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/
│ │ --rw-rw-r--   0 root         (0) root         (0)      137 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/Config.cmake.in
│ │ --rw-rw-r--   0 root         (0) root         (0)      632 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/Distribution.xml.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     2178 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/License.rtf
│ │ --rw-rw-r--   0 root         (0) root         (0)     1329 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/ReadMe.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)      654 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/Welcome.rtf.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     1644 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/deb-control.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     7163 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/installer.nsi.in
│ │ --rw-rw-r--   0 root         (0) root         (0)      299 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/libjpeg.pc.in
│ │ --rw-rw-r--   0 root         (0) root         (0)      311 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/libturbojpeg.pc.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)     2393 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makedpkg.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)     5377 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makemacpkg.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)      591 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makerpm.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)      915 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makesrpm.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)     1111 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/maketarball.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     7092 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/rpm.spec.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     3893 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/uninstall.in
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.297553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/sharedlib/
│ │ --rw-rw-r--   0 root         (0) root         (0)     4096 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/sharedlib/CMakeLists.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.298553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/
│ │ --rw-rw-r--   0 root         (0) root         (0)    20570 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/CMakeLists.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.305553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.306553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/
│ │ --rw-rw-r--   0 root         (0) root         (0)     6526 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jccolext-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    13469 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jchuff-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    21931 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jsimd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    43740 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jsimd_neon.S
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.308553 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/
│ │ --rw-rw-r--   0 root         (0) root         (0)    16072 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jccolext-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    18356 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jchuff-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    24291 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jsimd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    98482 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jsimd_neon.S
│ │ --rw-rw-r--   0 root         (0) root         (0)     1221 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/align.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4537 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jccolor-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3510 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcgray-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4441 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcgryext-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3950 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jchuff.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    26271 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcphuff-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     8626 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcsample-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    16425 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdcolext-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4132 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdcolor-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4730 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdmerge-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    30912 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdmrgext-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    25451 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdsample-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     7969 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jfdctfst-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    15054 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jfdctint-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    19854 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jidctfst-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    35430 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jidctint-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    21455 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jidctred-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     8989 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jquanti-neon.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     1573 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/neon-compat.h.in
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.332554 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/
│ │ --rw-rw-r--   0 root         (0) root         (0)    25653 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    17217 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    19289 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3731 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3732 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3690 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3346 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3347 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3305 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    20446 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    12329 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    14281 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    39398 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jchuff-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    18606 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcphuff-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    12031 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     9702 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    10565 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    25062 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    15651 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    18751 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3548 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3486 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3508 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4171 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4055 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4125 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    27474 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    18016 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    21215 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    31233 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    25600 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    26708 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    12281 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctflt-3dn.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    15144 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctflt-sse.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    15775 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctfst-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    17892 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctfst-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    13012 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    24569 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    27065 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    17611 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-3dn.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    24933 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-sse.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    21790 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    20042 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctfst-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    21568 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctfst-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    19013 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    33447 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    35753 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    27326 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctred-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    23433 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctred-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     8951 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquant-3dn.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     9409 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquant-mmx.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     7588 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquant-sse.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     6195 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquantf-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     6891 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquanti-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     7442 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquanti-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    34572 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jsimd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3984 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jsimdcpu.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    56939 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/jsimd.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.333554 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips/
│ │ --rw-rw-r--   0 root         (0) root         (0)    26529 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips/jsimd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)   148685 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips/jsimd_dspr2.S
│ │ --rw-rw-r--   0 root         (0) root         (0)     8032 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips/jsimd_dspr2_asm.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.341554 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/
│ │ --rw-rw-r--   0 root         (0) root         (0)    14239 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jccolext-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5115 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jccolor-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4237 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcgray-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    10948 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcgryext-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3838 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcsample-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)      701 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcsample.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    15201 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdcolext-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4402 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdcolor-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5118 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdmerge-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    23377 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdmrgext-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    12607 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdsample-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    10432 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jfdctfst-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    17292 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jfdctint-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    15614 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jidctfst-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    23014 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jidctint-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4498 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jquanti-mmi.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    18351 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jsimd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2458 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jsimd_mmi.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    23014 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/loongson-mmintrin.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.343554 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/
│ │ --rw-rw-r--   0 root         (0) root         (0)     2628 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jcolsamp.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)     1273 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jdct.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)     2922 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdcfg.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)     4768 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdcfg.inc.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    15031 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdext.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.351554 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/
│ │ --rw-rw-r--   0 root         (0) root         (0)    11551 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jccolext-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4274 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jccolor-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4013 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcgray-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     8749 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcgryext-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5617 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcsample-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)      701 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcsample.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    10386 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdcolext-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3860 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdcolor-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4804 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdmerge-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    12300 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdmrgext-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    14201 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdsample-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4527 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jfdctfst-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     8563 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jfdctint-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     8109 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jidctfst-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    12048 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jidctint-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     8121 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jquanti-altivec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    19937 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jsimd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     4269 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jsimd_altivec.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.365555 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/
│ │ --rw-rw-r--   0 root         (0) root         (0)    24432 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    18072 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3738 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolor-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3697 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolor-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3353 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgray-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3312 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgray-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    19313 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgryext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    13148 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgryext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    31703 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jchuff-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    17801 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcphuff-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    10560 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcsample-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     9094 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcsample-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    23808 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    17613 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3561 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolor-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3515 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolor-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4178 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmerge-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4132 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmerge-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    26887 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmrgext-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    20682 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmrgext-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    27790 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdsample-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    23496 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdsample-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    14387 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctflt-sse.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    17154 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctfst-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    12328 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctint-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    25959 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctint-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    20926 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctflt-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    20947 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctfst-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    17411 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctint-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    34909 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctint-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    22153 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctred-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     5254 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jquantf-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     5900 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jquanti-avx2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     6503 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jquanti-sse2.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)    27033 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jsimd.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2441 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jsimdcpu.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4530 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/strtest.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    49423 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/structure.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.372555 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/
│ │ --rw-rw-r--   0 root         (0) root         (0)    82998 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/nightshot_iso_100.bmp
│ │ --rw-rw-r--   0 root         (0) root         (0)     2155 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/nightshot_iso_100.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)      110 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test.scan
│ │ --rw-rw-r--   0 root         (0) root         (0)   557536 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test1.icc
│ │ --rw-rw-r--   0 root         (0) root         (0)     1078 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test1.icc.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)   654496 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test2.icc
│ │ --rw-rw-r--   0 root         (0) root         (0)     1078 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test2.icc.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     5126 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testimgari.jpg
│ │ --rw-rw-r--   0 root         (0) root         (0)     5756 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testimgint.jpg
│ │ --rw-rw-r--   0 root         (0) root         (0)     5770 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testorig.jpg
│ │ --rw-rw-r--   0 root         (0) root         (0)   101484 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testorig.ppm
│ │ --rw-rw-r--   0 root         (0) root         (0)    12394 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testorig12.jpg
│ │ --rw-rw-r--   0 root         (0) root         (0)    34614 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/vgl_5674_0098.bmp
│ │ --rw-rw-r--   0 root         (0) root         (0)    34614 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/vgl_6434_0018a.bmp
│ │ --rw-rw-r--   0 root         (0) root         (0)    36534 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/vgl_6548_0026a.bmp
│ │ --rw-rw-r--   0 root         (0) root         (0)    39586 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjbench.c
│ │ --rwxrwxr-x   0 root         (0) root         (0)    11936 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjbenchtest.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)    10297 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjbenchtest.java.in
│ │ --rw-rw-r--   0 root         (0) root         (0)    15199 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjexample.c
│ │ --rwxrwxr-x   0 root         (0) root         (0)     8234 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjexampletest.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)     8446 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjexampletest.java.in
│ │ --rw-rw-r--   0 root         (0) root         (0)    30313 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjunittest.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2259 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjutil.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2026 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjutil.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    93193 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/transupp.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    11214 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/transupp.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    47638 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg-jni.c
│ │ --rw-rw-r--   0 root         (0) root         (0)      989 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg-mapfile
│ │ --rw-rw-r--   0 root         (0) root         (0)     3194 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg-mapfile.jni
│ │ --rw-rw-r--   0 root         (0) root         (0)    76311 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    75546 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    38222 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/usage.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.376555 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.376555 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/gcc/
│ │ --rw-rw-r--   0 root         (0) root         (0)     2696 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/gcc/projectTargets-release.cmake.in
│ │ --rw-rw-r--   0 root         (0) root         (0)      939 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jconfig.h.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     1074 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg.rc.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     3065 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg62-memsrcdst.def
│ │ --rw-rw-r--   0 root         (0) root         (0)     3018 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg62.def
│ │ --rw-rw-r--   0 root         (0) root         (0)     3132 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg7-memsrcdst.def
│ │ --rw-rw-r--   0 root         (0) root         (0)     3085 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg7.def
│ │ --rw-rw-r--   0 root         (0) root         (0)     3170 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg8.def
│ │ --rw-rw-r--   0 root         (0) root         (0)     4186 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/projectTargets.cmake.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     1002 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/turbojpeg.rc.in
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.377555 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/vc/
│ │ --rw-rw-r--   0 root         (0) root         (0)     2686 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/vc/projectTargets-release.cmake.in
│ │ --rw-rw-r--   0 root         (0) root         (0)    10403 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wizard.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)    18027 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrbmp.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    18648 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrgif.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     2626 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrjpgcom.1
│ │ --rw-rw-r--   0 root         (0) root         (0)    17464 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrjpgcom.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    10840 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrppm.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     7483 2022-08-08 21:03:55.000000 simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrtarga.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.391556 simplejpeg-1.6.5/lib/yasm-1.3.0/
│ │ --rw-rw-r--   0 root         (0) root         (0)    93787 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/ABOUT-NLS
│ │ --rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/AUTHORS
│ │ --rw-r--r--   0 root         (0) root         (0)     6111 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Artistic.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     4344 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/BSD.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     1185 2014-08-11 06:18:52.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     2106 2014-08-10 17:30:28.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/COPYING
│ │ --rw-rw-r--   0 root         (0) root         (0)      405 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/ChangeLog
│ │ --rw-r--r--   0 root         (0) root         (0)     2079 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/ConfigureChecks.cmake
│ │ --rw-r--r--   0 root         (0) root         (0)    18011 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/GNU_GPL-2.0
│ │ --rw-r--r--   0 root         (0) root         (0)    25287 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/GNU_LGPL-2.0
│ │ --rw-r--r--   0 root         (0) root         (0)     7831 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/INSTALL
│ │ --rw-rw-r--   0 root         (0) root         (0)     8580 2014-08-10 18:39:15.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Makefile.am
│ │ --rw-rw-r--   0 root         (0) root         (0)   194237 2014-08-11 06:19:02.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Makefile.in
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.392556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/
│ │ --rw-rw-r--   0 root         (0) root         (0)     6856 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/Makefile.dj
│ │ --rw-rw-r--   0 root         (0) root         (0)     7222 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/Makefile.flat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.393556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/dj/
│ │ --rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/dj/YASM-VERSION.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4712 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/dj/config.h
│ │ --rw-r--r--   0 root         (0) root         (0)       98 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/dj/libyasm-stdint.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.399556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/
│ │ --rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/YASM-VERSION.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4679 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/config.h
│ │ --rw-r--r--   0 root         (0) root         (0)      462 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/crt_secure_no_deprecate.props
│ │ --rw-r--r--   0 root         (0) root         (0)      280 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/crt_secure_no_deprecate.vsprops
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.400556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/
│ │ --rw-r--r--   0 root         (0) root         (0)     5759 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)      591 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)      270 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.401556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/
│ │ --rw-r--r--   0 root         (0) root         (0)     5958 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)      677 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.402556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genperf/
│ │ --rw-r--r--   0 root         (0) root         (0)     7300 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)     1998 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj.filters
│ │ --rw-rw-r--   0 root         (0) root         (0)      928 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genperf/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.403556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genstring/
│ │ --rw-r--r--   0 root         (0) root         (0)     5496 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)      577 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genstring/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.404556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genversion/
│ │ --rw-rw-r--   0 root         (0) root         (0)     5923 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)      909 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genversion/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.405556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/
│ │ --rw-r--r--   0 root         (0) root         (0)    14211 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)     7166 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)      149 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/libyasm-stdint.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.406556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/modules/
│ │ --rw-rw-r--   0 root         (0) root         (0)    17524 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj
│ │ --rw-rw-r--   0 root         (0) root         (0)    11555 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)      724 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/out_copy_rename.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.407556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/re2c/
│ │ --rw-r--r--   0 root         (0) root         (0)     6842 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)     2913 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)      174 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/re2c/run.bat
│ │ --rw-r--r--   0 root         (0) root         (0)     4323 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/readme.vc10.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     1191 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.props
│ │ --rw-r--r--   0 root         (0) root         (0)     4403 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.targets
│ │ --rw-r--r--   0 root         (0) root         (0)    14106 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)     8611 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.xml
│ │ --rw-rw-r--   0 root         (0) root         (0)     9642 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/yasm.sln
│ │ --rw-r--r--   0 root         (0) root         (0)    14308 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj
│ │ --rw-r--r--   0 root         (0) root         (0)     1495 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj.filters
│ │ --rw-r--r--   0 root         (0) root         (0)    14033 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/ytasm.vcxproj
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.412556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/
│ │ --rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/YASM-VERSION.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4509 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/config.h
│ │ --rw-rw-r--   0 root         (0) root         (0)      452 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/crt_secure_no_deprecate.props
│ │ --rw-rw-r--   0 root         (0) root         (0)      269 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/crt_secure_no_deprecate.vsprops
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.412556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/
│ │ --rw-rw-r--   0 root         (0) root         (0)    14116 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj
│ │ --rw-rw-r--   0 root         (0) root         (0)     6967 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj.filters
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.413556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/modules/
│ │ --rw-rw-r--   0 root         (0) root         (0)    17382 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj
│ │ --rw-rw-r--   0 root         (0) root         (0)    11300 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj.filters
│ │ --rw-rw-r--   0 root         (0) root         (0)      682 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/out_copy_rename.bat
│ │ --rw-rw-r--   0 root         (0) root         (0)     3862 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/readme.vc12.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     1165 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.props
│ │ --rw-rw-r--   0 root         (0) root         (0)     4296 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.targets
│ │ --rw-rw-r--   0 root         (0) root         (0)    14009 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.vcxproj
│ │ --rw-rw-r--   0 root         (0) root         (0)     8329 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.xml
│ │ --rw-rw-r--   0 root         (0) root         (0)     9555 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/yasm.sln
│ │ --rw-rw-r--   0 root         (0) root         (0)    14207 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj
│ │ --rw-rw-r--   0 root         (0) root         (0)     1455 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj.filters
│ │ --rw-rw-r--   0 root         (0) root         (0)    13937 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/ytasm.vcxproj
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.417556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/
│ │ --rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/YASM-VERSION.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4679 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/config.h
│ │ --rw-r--r--   0 root         (0) root         (0)      280 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/crt_secure_no_deprecate.vsprops
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.418557 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/
│ │ --rw-r--r--   0 root         (0) root         (0)     4265 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/genmacro.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)      270 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.419556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/
│ │ --rw-r--r--   0 root         (0) root         (0)     4445 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/genmodule.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.419556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genperf/
│ │ --rw-r--r--   0 root         (0) root         (0)     5180 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genperf/genperf.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)      585 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genperf/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.420557 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genstring/
│ │ --rw-r--r--   0 root         (0) root         (0)     4255 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genstring/genstring.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genstring/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.421557 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genversion/
│ │ --rw-rw-r--   0 root         (0) root         (0)     4579 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genversion/genversion.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genversion/run.bat
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.421557 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/libyasm/
│ │ --rw-r--r--   0 root         (0) root         (0)    12026 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/libyasm/libyasm.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)      149 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/libyasm-stdint.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.422556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/modules/
│ │ --rw-r--r--   0 root         (0) root         (0)    13806 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/modules/modules.vcproj
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.422556 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/re2c/
│ │ --rw-r--r--   0 root         (0) root         (0)     5889 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/re2c/re2c.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)      174 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/re2c/run.bat
│ │ --rw-r--r--   0 root         (0) root         (0)     4294 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/readme.vc9.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     1526 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/vc98_swap.py
│ │ --rw-r--r--   0 root         (0) root         (0)     9440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/vsyasm.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)     3242 2011-08-19 20:20:40.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/yasm.rules
│ │ --rw-rw-r--   0 root         (0) root         (0)    10758 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/yasm.sln
│ │ --rw-r--r--   0 root         (0) root         (0)     9501 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/yasm.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)     9507 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/ytasm.vcproj
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/NEWS
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/README
│ │ --rwxrwxr-x   0 root         (0) root         (0)      816 2014-08-11 06:18:52.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/YASM-VERSION-GEN.sh
│ │ --rw-rw-r--   0 root         (0) root         (0)    56044 2014-08-10 18:39:37.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/aclocal.m4
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.423557 simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/
│ │ --rw-r--r--   0 root         (0) root         (0)       26 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/CMakeLists.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.424557 simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/modules/
│ │ --rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/modules/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)       27 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/modules/DummyCFile.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3426 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/modules/VersionGen.cmake
│ │ --rw-rw-r--   0 root         (0) root         (0)     3258 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/modules/YasmMacros.cmake
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.427557 simplejpeg-1.6.5/lib/yasm-1.3.0/config/
│ │ --rwxr-xr-x   0 root         (0) root         (0)     7333 2014-01-02 19:14:59.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/compile
│ │ --rw-rw-r--   0 root         (0) root         (0)    44826 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/config.guess
│ │ --rwxrwxr-x   0 root         (0) root         (0)    18717 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/config.rpath
│ │ --rw-rw-r--   0 root         (0) root         (0)    35543 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/config.sub
│ │ --rwxr-xr-x   0 root         (0) root         (0)    23566 2014-01-02 19:14:59.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/depcomp
│ │ --rwxr-xr-x   0 root         (0) root         (0)    13997 2014-01-02 19:14:59.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/install-sh
│ │ --rwxr-xr-x   0 root         (0) root         (0)     6872 2014-01-02 19:14:59.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/missing
│ │ --rwxr-xr-x   0 root         (0) root         (0)     3495 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/mkinstalldirs
│ │ --rwxr-xr-x   0 root         (0) root         (0)     4287 2014-01-02 19:14:59.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config/test-driver
│ │ --rw-rw-r--   0 root         (0) root         (0)     1238 2014-08-11 04:39:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config.h.cmake
│ │ --rw-rw-r--   0 root         (0) root         (0)     4279 2014-08-10 18:39:43.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/config.h.in
│ │ --rwxrwxr-x   0 root         (0) root         (0)   323978 2014-08-11 06:19:03.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/configure
│ │ --rw-rw-r--   0 root         (0) root         (0)     9033 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/configure.ac
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.428557 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/
│ │ --rw-rw-r--   0 root         (0) root         (0)       71 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      239 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.430557 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1044 2014-08-11 04:39:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      193 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)     4256 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/tasm-options.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2706 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/tasm-options.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    32345 2014-08-11 04:39:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/tasm.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.431557 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/vsyasm/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1123 2014-08-11 04:39:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/vsyasm/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      250 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/vsyasm/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)    46494 2014-08-11 04:39:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/vsyasm/vsyasm.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.434557 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/
│ │ --rw-rw-r--   0 root         (0) root         (0)      943 2014-08-11 04:39:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      584 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/Makefile.inc
│ │ --rwxrwxr-x   0 root         (0) root         (0)     2144 2014-08-10 19:33:52.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/genstring.py
│ │ --rw-r--r--   0 root         (0) root         (0)     7998 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-options.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2939 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-options.h
│ │ --rw-r--r--   0 root         (0) root         (0)     3444 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.c
│ │ --rw-r--r--   0 root         (0) root         (0)     1557 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    46053 2014-08-11 04:39:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm.c
│ │ --rw-r--r--   0 root         (0) root         (0)    19043 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm.xml
│ │ --rw-r--r--   0 root         (0) root         (0)     3158 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/genstring.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.457558 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1289 2014-08-11 05:36:24.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     2838 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)    21040 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/arch.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     4077 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/assocdat.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2947 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/assocdat.h
│ │ --rw-r--r--   0 root         (0) root         (0)     8217 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-align.c
│ │ --rw-r--r--   0 root         (0) root         (0)    19643 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-data.c
│ │ --rw-r--r--   0 root         (0) root         (0)     8793 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-incbin.c
│ │ --rw-r--r--   0 root         (0) root         (0)     4933 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-org.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5170 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-reserve.c
│ │ --rw-r--r--   0 root         (0) root         (0)   119974 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bitvect.c
│ │ --rw-r--r--   0 root         (0) root         (0)    30779 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bitvect.h
│ │ --rw-r--r--   0 root         (0) root         (0)    11380 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bytecode.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    26163 2014-08-10 19:33:52.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bytecode.h
│ │ --rw-r--r--   0 root         (0) root         (0)     3956 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/cmake-module.c
│ │ --rw-r--r--   0 root         (0) root         (0)    22421 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/compat-queue.h
│ │ --rw-r--r--   0 root         (0) root         (0)    15800 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/coretype.h
│ │ --rw-r--r--   0 root         (0) root         (0)     4558 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/dbgfmt.h
│ │ --rw-r--r--   0 root         (0) root         (0)    14156 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/errwarn.c
│ │ --rw-r--r--   0 root         (0) root         (0)    13725 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/errwarn.h
│ │ --rw-r--r--   0 root         (0) root         (0)    48141 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/expr.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    15039 2014-08-10 19:33:52.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/expr.h
│ │ --rw-r--r--   0 root         (0) root         (0)    18659 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/file.c
│ │ --rw-r--r--   0 root         (0) root         (0)    19650 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/file.h
│ │ --rw-r--r--   0 root         (0) root         (0)    25048 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/floatnum.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5278 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/floatnum.h
│ │ --rw-r--r--   0 root         (0) root         (0)     6996 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/genmodule.c
│ │ --rw-r--r--   0 root         (0) root         (0)    14106 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/hamt.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5025 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/hamt.h
│ │ --rw-r--r--   0 root         (0) root         (0)     9097 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/insn.c
│ │ --rw-r--r--   0 root         (0) root         (0)    10123 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/insn.h
│ │ --rw-r--r--   0 root         (0) root         (0)    31410 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/intnum.c
│ │ --rw-r--r--   0 root         (0) root         (0)    11860 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/intnum.h
│ │ --rw-r--r--   0 root         (0) root         (0)    28794 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/inttree.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2290 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/inttree.h
│ │ --rw-r--r--   0 root         (0) root         (0)     8884 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/linemap.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5796 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/linemap.h
│ │ --rw-r--r--   0 root         (0) root         (0)     4687 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/listfmt.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    10798 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/md5.c
│ │ --rw-r--r--   0 root         (0) root         (0)     1030 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/md5.h
│ │ --rw-r--r--   0 root         (0) root         (0)    14443 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/mergesort.c
│ │ --rw-r--r--   0 root         (0) root         (0)     3146 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/module.h
│ │ --rw-r--r--   0 root         (0) root         (0)     5430 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/module.in
│ │ --rw-r--r--   0 root         (0) root         (0)     8816 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/objfmt.h
│ │ --rw-r--r--   0 root         (0) root         (0)     2850 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/parser.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     9529 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/phash.c
│ │ --rw-r--r--   0 root         (0) root         (0)      701 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/phash.h
│ │ --rw-r--r--   0 root         (0) root         (0)     8860 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/preproc.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    49257 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/section.c
│ │ --rw-r--r--   0 root         (0) root         (0)    14448 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/section.h
│ │ --rw-r--r--   0 root         (0) root         (0)     3323 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/strcasecmp.c
│ │ --rw-r--r--   0 root         (0) root         (0)     3195 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/strsep.c
│ │ --rw-r--r--   0 root         (0) root         (0)    20825 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/symrec.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    15625 2014-08-10 19:33:52.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/symrec.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.488559 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)       10 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/1shl0.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/1shl0.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     4611 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       70 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/absloop-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/absloop-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     4548 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/bitvect_test.c
│ │ --rw-r--r--   0 root         (0) root         (0)       31 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/charconst64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/charconst64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     5546 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/combpath_test.c
│ │ --rw-r--r--   0 root         (0) root         (0)       17 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/data-rawvalue.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/data-rawvalue.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/duplabel-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      164 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/duplabel-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        6 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/emptydata.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/emptydata.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      204 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/equ-expand.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/equ-expand.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/expr-fold-level.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/expr-fold-level.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       87 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/expr-simplify-identity.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       52 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/expr-simplify-identity.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/expr-wide-ident.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/expr-wide-ident.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/externdef.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      122 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/externdef.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/externdef.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    13237 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/floatnum_test.c
│ │ --rw-r--r--   0 root         (0) root         (0)     1138 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/incbin.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       92 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/incbin.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1173 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/jmpsize1-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/jmpsize1-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     1091 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/jmpsize1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1060 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/jmpsize1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     6385 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/leb128_test.c
│ │ --rwxr-xr-x   0 root         (0) root         (0)       90 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/libyasm_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       94 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-align1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1064 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-align1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-align2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1064 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-align2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      171 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-align3.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1088 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-align3.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-circular1-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-circular1-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       54 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-circular2-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-circular2-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-circular3-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-circular3-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)    14571 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2924 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       99 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-immexpand.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1052 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-immexpand.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-immnoexpand.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1044 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-immnoexpand.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-oldalign.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      140 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-oldalign.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      956 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-struc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-struc.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      146 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/reserve-err1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/reserve-err1.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      148 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/reserve-err2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      313 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/reserve-err2.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     5884 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/splitpath_test.c
│ │ --rw-r--r--   0 root         (0) root         (0)      182 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/strucsize.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/strucsize.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       45 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/times-res.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       73 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/times-res.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/times-res.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       13 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/times0.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/times0.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/timesfwd.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/timesfwd.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/timesover-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       33 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/timesover-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       37 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/timesunder.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      520 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/timesunder.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/unary.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/unary.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     5083 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/uncstring_test.c
│ │ --rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      127 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       54 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-mask.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-mask.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-mask.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-samesym.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       69 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-samesym.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-samesym.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-shr-symexpr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/value-shr-symexpr.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    10936 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/valparam.c
│ │ --rw-r--r--   0 root         (0) root         (0)    15898 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/valparam.h
│ │ --rw-r--r--   0 root         (0) root         (0)    28792 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/value.c
│ │ --rw-r--r--   0 root         (0) root         (0)     7670 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/value.h
│ │ --rw-r--r--   0 root         (0) root         (0)     3290 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/xmalloc.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2386 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/xstrdup.c
│ │ --rw-rw-r--   0 root         (0) root         (0)      807 2014-08-11 06:18:45.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm-stdint.h.cmake
│ │ --rw-r--r--   0 root         (0) root         (0)     2374 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.500559 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/
│ │ --rw-r--r--   0 root         (0) root         (0)      858 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)    23330 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/ax_create_stdint_h.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      745 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/codeset.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)      943 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/cython.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)    15245 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/gettext.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      805 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/glibc21.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)     9104 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/iconv.m4
│ │ --rw-r--r--   0 root         (0) root         (0)     1760 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/intdiv0.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      998 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/intmax.m4
│ │ --rw-r--r--   0 root         (0) root         (0)     1026 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/inttypes-pri.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      826 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/inttypes.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      915 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/inttypes_h.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      966 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/isc-posix.m4
│ │ --rw-r--r--   0 root         (0) root         (0)     1284 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lcmessage.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)     3683 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lib-ld.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)    33059 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lib-link.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)     8466 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lib-prefix.m4
│ │ --rw-r--r--   0 root         (0) root         (0)     1067 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/longdouble.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      782 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/longlong.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)     1229 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/nls.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)    18977 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/po.m4
│ │ --rw-r--r--   0 root         (0) root         (0)     1457 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/printf-posix.m4
│ │ --rw-rw-r--   0 root         (0) root         (0)     3104 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/progtest.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      912 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/pythonhead.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      620 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/signed.m4
│ │ --rw-r--r--   0 root         (0) root         (0)     1957 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/size_max.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      891 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/stdint_h.m4
│ │ --rw-r--r--   0 root         (0) root         (0)     1086 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/uintmax_t.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      909 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/ulonglong.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      726 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/wchar_t.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      708 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/wint_t.m4
│ │ --rw-r--r--   0 root         (0) root         (0)      421 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/m4/xsize.m4
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.501559 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/
│ │ --rw-rw-r--   0 root         (0) root         (0)     3814 2014-08-11 05:25:06.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      436 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.502559 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/
│ │ --rw-r--r--   0 root         (0) root         (0)       67 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      377 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.504559 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/
│ │ --rw-r--r--   0 root         (0) root         (0)      211 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      517 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     6070 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.c
│ │ --rw-r--r--   0 root         (0) root         (0)     3038 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.h
│ │ --rw-r--r--   0 root         (0) root         (0)     8620 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3bbc.c
│ │ --rw-r--r--   0 root         (0) root         (0)    16229 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3bid.re
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.508559 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      581 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       95 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-basic.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-basic.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-basic.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       92 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-br.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-br.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       14 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-ea-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-ea-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     5795 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      107 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.512559 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/
│ │ --rw-r--r--   0 root         (0) root         (0)     1397 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     2041 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/Makefile.inc
│ │ --rwxrwxr-x   0 root         (0) root         (0)   298190 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/gen_x86_insn.py
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.603562 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)    12780 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      616 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      224 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      388 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addrop-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addrop-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      565 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1808 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/aes.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     1424 2014-05-19 07:17:14.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/aes.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     3398 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2160 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      519 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      848 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      266 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/arithsmall.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/arithsmall.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      204 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/arithsmall.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    58486 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx.asm
│ │ --rw-r--r--   0 root         (0) root         (0)    41328 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      207 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx16.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      208 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx16.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    23053 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     9188 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    29844 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)    15264 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       11 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bittest.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bittest.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1083 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      772 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1413 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      976 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bswap64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bswap64.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)     1070 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)      840 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       81 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/cmpxchg.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/cmpxchg.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/cpubasic-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      243 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/cpubasic-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      488 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/cyrix.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      344 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/cyrix.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       78 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/div-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      168 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/div-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      114 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-nonzero.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-nonzero.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       70 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-over.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-over.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-over.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      434 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-warn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      142 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-warn.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ea-warn.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ebpindex.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ebpindex.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      359 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/effaddr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      252 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/effaddr.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      105 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/enter.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/enter.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      104 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/enter.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/eptvpid.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/eptvpid.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      211 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/f16c.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      256 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/f16c.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      109 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/far64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      176 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/far64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       72 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/farbasic.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/farbasic.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      145 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/farithr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/farithr.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      134 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fcmov.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fcmov.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     9346 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fma.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     5760 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fma.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      115 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fsgsbase.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      144 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fsgsbase.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fwdequ64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fwdequ64.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.611562 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/
│ │ --rw-r--r--   0 root         (0) root         (0)     1275 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      863 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2144 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      421 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farithr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farithr.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      198 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farjump.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1632 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farjump.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      115 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-fpmem.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-fpmem.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-invlpg.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-invlpg.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-loop32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-loop32.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      248 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movdq32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1760 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movdq32.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movsd.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movsd.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1151 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1824 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas32-jmpcall.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1856 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas32-jmpcall.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      125 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/x86_gas32_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.622563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/
│ │ --rw-r--r--   0 root         (0) root         (0)     1905 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      863 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2688 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-cbw.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2112 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-cbw.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      264 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-fp.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2688 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-fp.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      134 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-inout.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2112 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-inout.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-loop64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2112 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-loop64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      780 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2880 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       63 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movabs.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2688 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movabs.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      436 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movdq64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2560 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movdq64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      478 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movsxs.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2560 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movsxs.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      520 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2496 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       97 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      207 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      155 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-retenter.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-retenter.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      379 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-shift.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2304 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-shift.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas64-jmpcall.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2752 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas64-jmpcall.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       19 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/riprel.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2560 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/riprel.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      134 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/x86_gas64_test.sh
│ │ --rwxr-xr-x   0 root         (0) root         (0)     1755 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gen-fma-test.py
│ │ --rw-r--r--   0 root         (0) root         (0)     2294 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1980 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1389 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)      150 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      700 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      131 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/invpcid.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       76 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/invpcid.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       87 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/iret.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/iret.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-3.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-3.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-4.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-4.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-5.asm
│ │ --rw-r--r--   0 root         (0) root         (0)   262216 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-5.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-6.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-6.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      746 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmpfar.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      156 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmpfar.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      772 2011-08-19 20:20:40.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/larlsl.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      712 2011-08-19 20:20:40.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/larlsl.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lds.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lds.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      142 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lfs64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      132 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lfs64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      138 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/loopadsz.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/loopadsz.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       60 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lsahf.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lsahf.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      239 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lzcnt.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      172 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/lzcnt.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      253 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      949 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)       49 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      576 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       50 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64hi32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64hi32.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64rip.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      140 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64rip.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mixcase.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mixcase.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      329 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movbe.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      704 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movbe.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      248 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movdq32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movdq32.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      366 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movdq64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      528 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movdq64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/negequ.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/negequ.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      110 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      658 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      122 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err2.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      581 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)       50 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      636 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       54 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/o64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/o64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/o64loop.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       42 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/o64loop.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/o64loop.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      199 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/opersize.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      120 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/opersize.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       37 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/opsize-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/opsize-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/overflow.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      295 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/overflow.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      148 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/overflow.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      161 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/padlock.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/padlock.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       99 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pinsrb.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       72 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pinsrb.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pshift.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      180 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pshift.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      105 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/push64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/push64.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/push64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      182 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushf-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      477 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushf-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      188 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushf.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushf.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1577 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      336 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      556 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       42 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/rdrnd.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/rdrnd.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/rep.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/rep.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      224 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ret.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      252 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ret.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2554 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1336 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2580 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1560 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     2816 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      626 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      358 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      680 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/segmov.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      116 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/segmov.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/segoff-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      194 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/segoff-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      143 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/segoff.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       60 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/segoff.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/shift.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/shift.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/shift64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/shift64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      203 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd-1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      268 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd-1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     3370 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1896 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      158 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      156 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/smx.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/smx.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse-prefix.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      324 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse-prefix.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      478 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse3.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      472 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse3.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       59 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse4-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      122 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse4-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     3521 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     5388 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     8849 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     6128 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2045 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     5498 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.c
│ │ --rw-r--r--   0 root         (0) root         (0)     3976 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       90 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/stos.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/stos.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/str.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/str.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      266 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      156 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     4213 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1128 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     2168 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       51 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/stringseg.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       57 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/stringseg.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/stringseg.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      446 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/svm.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      416 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/svm.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      231 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/twobytemem.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/twobytemem.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      300 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/twobytemem.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       98 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vmx-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       78 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vmx-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      290 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vmx.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      332 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vmx.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      324 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      389 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     5582 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2648 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      323 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib2-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      279 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib2-err.errwarn
│ │ --rwxr-xr-x   0 root         (0) root         (0)       96 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/x86_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       25 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/x86label.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/x86label.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      372 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xchg64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      224 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xchg64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xmm64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xmm64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    11366 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     5748 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      317 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-basic.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      188 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-basic.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      880 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-cc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      432 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-cc.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       74 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xsave.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      120 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xsave.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)    24242 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86arch.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    13918 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86arch.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    37522 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86bc.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    15235 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86cpu.gperf
│ │ --rw-rw-r--   0 root         (0) root         (0)    39188 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86expr.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    76389 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86id.c
│ │ --rw-r--r--   0 root         (0) root         (0)     7998 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86regtmod.gperf
│ │ --rw-rw-r--   0 root         (0) root         (0)    16424 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/yasm_arch.xml
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.623562 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/
│ │ --rw-r--r--   0 root         (0) root         (0)      155 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      609 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.626562 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/
│ │ --rw-r--r--   0 root         (0) root         (0)      131 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      420 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     3586 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2393 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    36807 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-symline.c
│ │ --rw-r--r--   0 root         (0) root         (0)    35376 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-type.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     3537 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv8.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.628563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/
│ │ --rw-r--r--   0 root         (0) root         (0)      173 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      435 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     4821 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-aranges.c
│ │ --rw-r--r--   0 root         (0) root         (0)    11413 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.c
│ │ --rw-r--r--   0 root         (0) root         (0)     4925 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.h
│ │ --rw-r--r--   0 root         (0) root         (0)    13763 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-info.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    40473 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-line.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.628563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      485 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.630563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/
│ │ --rw-r--r--   0 root         (0) root         (0)      277 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      142 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf2_gen64_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)      291 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf64_pathname.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     6528 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf64_pathname.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.632563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/
│ │ --rw-r--r--   0 root         (0) root         (0)      415 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      150 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf2_pass32_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)      528 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      875 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)    13337 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.asm
│ │ --rw-r--r--   0 root         (0) root         (0)    23744 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.634563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/
│ │ --rw-r--r--   0 root         (0) root         (0)      413 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      152 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf2_pass64_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_2loc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3520 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_2loc.hex
│ │ --rw-r--r--   0 root         (0) root         (0)   136081 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.asm
│ │ --rw-r--r--   0 root         (0) root         (0)   365120 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.637563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/
│ │ --rw-r--r--   0 root         (0) root         (0)      382 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      161 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarf2_passwin64_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)    15863 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      872 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)    30296 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.638563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/null/
│ │ --rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/null/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)       85 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/null/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     2208 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/null/null-dbgfmt.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.639563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      193 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)    18134 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/stabs-dbgfmt.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.640563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      220 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     2145 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     6528 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      194 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     3796 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/yasm_dbgfmts.xml
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.641563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/
│ │ --rw-r--r--   0 root         (0) root         (0)       38 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)       93 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.642563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/nasm/
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/nasm/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      196 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/nasm/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)    10766 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/nasm/nasm-listfmt.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.643563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/
│ │ --rw-r--r--   0 root         (0) root         (0)      333 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     1133 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.644563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/
│ │ --rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      198 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)    65139 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/bin-objfmt.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.654563 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)     1644 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       78 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/abs.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/abs.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      116 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bigorg.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       98 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bigorg.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bigorg.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1100 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-farabs.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      236 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-farabs.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      270 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-rip.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      184 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-rip.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      101 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     1373 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bintest.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      260 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bintest.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      365 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/float-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      414 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/float-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      215 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/float.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      192 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/float.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      175 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer-warn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      244 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer-warn.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer-warn.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      142 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/levelop.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/levelop.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.672564 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/
│ │ --rw-r--r--   0 root         (0) root         (0)     3321 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      141 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      225 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1785 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.map
│ │ --rw-r--r--   0 root         (0) root         (0)      163 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-ssym.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-ssym.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      498 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-ssym.map
│ │ --rwxr-xr-x   0 root         (0) root         (0)     3744 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin_multi_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop1-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       67 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop1-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       26 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop2-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop2-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       25 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-notfound-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-notfound-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      138 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      562 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.map
│ │ --rw-r--r--   0 root         (0) root         (0)     2077 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.asm
│ │ --rw-r--r--   0 root         (0) root         (0)    45452 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     3856 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.map
│ │ --rw-r--r--   0 root         (0) root         (0)      774 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2053 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.map
│ │ --rw-r--r--   0 root         (0) root         (0)      808 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      264 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1939 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.map
│ │ --rw-r--r--   0 root         (0) root         (0)      101 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1462 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.map
│ │ --rw-r--r--   0 root         (0) root         (0)      687 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3072 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2538 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.map
│ │ --rw-r--r--   0 root         (0) root         (0)      505 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     7264 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     3636 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.map
│ │ --rw-r--r--   0 root         (0) root         (0)      105 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1473 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.map
│ │ --rw-r--r--   0 root         (0) root         (0)      116 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1473 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.map
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop1-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop1-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       27 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop2-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       66 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop2-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       26 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-notfound-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       69 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-notfound-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      110 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/reserve.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      292 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/reserve.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      932 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/reserve.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/shr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1040 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/shr.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.674564 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/
│ │ --rw-r--r--   0 root         (0) root         (0)      687 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      949 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)    92011 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.c
│ │ --rw-r--r--   0 root         (0) root         (0)     3139 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.678564 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      531 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      107 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/coff_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     2120 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      914 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2628 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      209 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftimes.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1880 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftimes.hex
│ │ --rw-r--r--   0 root         (0) root         (0)   307325 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3187 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)   424040 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    19360 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/win64-except.c
│ │ --rw-r--r--   0 root         (0) root         (0)      999 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/win64-gas.mac
│ │ --rw-r--r--   0 root         (0) root         (0)     1572 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/win64-nasm.mac
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.680564 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/dbg/
│ │ --rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/dbg/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)       82 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/dbg/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     6108 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/dbg/dbg-objfmt.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.683564 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/
│ │ --rw-rw-r--   0 root         (0) root         (0)      294 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)      540 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     4659 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-machine.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    47888 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-objfmt.c
│ │ --rw-r--r--   0 root         (0) root         (0)    10336 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-amd64.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     9838 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x32.c
│ │ --rw-r--r--   0 root         (0) root         (0)     9666 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x86.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    27650 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf.c
│ │ --rw-r--r--   0 root         (0) root         (0)    23781 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.700565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/
│ │ --rw-rw-r--   0 root         (0) root         (0)     3078 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.704565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/
│ │ --rw-r--r--   0 root         (0) root         (0)      602 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf-rip.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2816 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf-rip.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      130 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf_amd64_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     2578 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     6720 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      187 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/gotpcrel.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2880 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/gotpcrel.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      127 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/multiplefixup.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3968 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/multiplefixup.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      431 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      433 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3328 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-overdef.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-overdef.hex
│ │ --rw-r--r--   0 root         (0) root         (0)   307913 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.asm
│ │ --rw-r--r--   0 root         (0) root         (0)   583200 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      177 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)      242 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfabssect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1696 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfabssect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       59 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfcond.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1664 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfcond.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      103 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfequabs.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1984 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfequabs.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      225 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobal.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1632 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobal.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      228 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext2.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)     6048 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.asm
│ │ --rw-r--r--   0 root         (0) root         (0)    17856 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       71 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc-ext.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1856 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc-ext.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       90 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfsectalign.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1952 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfsectalign.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2646 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     4576 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2145 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      949 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.c
│ │ --rw-r--r--   0 root         (0) root         (0)     4128 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      209 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftimes.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2624 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftimes.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      223 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftypesize.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2208 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftypesize.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      176 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       67 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     1824 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.706565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/
│ │ --rw-r--r--   0 root         (0) root         (0)      382 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      157 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_got.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_got.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      275 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_ssym.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2368 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_ssym.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      132 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.710565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/
│ │ --rw-r--r--   0 root         (0) root         (0)      640 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      319 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/crosssect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3328 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/crosssect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      507 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_curpos.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     4992 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_curpos.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      504 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_reloc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     5568 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_reloc.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      182 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_ssym.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3520 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_ssym.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      134 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.713565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/
│ │ --rw-rw-r--   0 root         (0) root         (0)      658 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)      319 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/crosssect.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     2272 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/crosssect.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)      507 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_curpos.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     3392 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_curpos.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)      504 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_reloc.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4064 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_reloc.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)      182 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_ssym.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     2368 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_ssym.hex
│ │ --rwxrwxr-x   0 root         (0) root         (0)      135 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       86 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-forceident.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1792 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-forceident.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      117 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-sectname.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2016 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-sectname.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.716565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/
│ │ --rw-rw-r--   0 root         (0) root         (0)      580 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)      106 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf-rip.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     1984 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf-rip.hex
│ │ --rwxrwxr-x   0 root         (0) root         (0)      122 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf_x32_test.sh
│ │ --rw-rw-r--   0 root         (0) root         (0)     2578 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     4704 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)      187 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/gotpcrel.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     1984 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/gotpcrel.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)      127 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/multiplefixup.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     2720 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/multiplefixup.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.718565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/
│ │ --rw-r--r--   0 root         (0) root         (0)      150 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      224 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)    59448 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/macho-objfmt.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.718565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      469 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.720565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/
│ │ --rw-r--r--   0 root         (0) root         (0)      260 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     2099 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2752 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      137 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas_macho32_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.722565 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/
│ │ --rw-r--r--   0 root         (0) root         (0)      396 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     1020 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1384 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     3632 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2664 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      137 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas_macho64_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.727566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1039 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      293 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho-reloc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1572 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho-reloc.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)       49 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pext.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)      808 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pext.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1188 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1352 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      231 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      455 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     3156 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1191 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1312 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      127 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     2200 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1192 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2768 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.730566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/
│ │ --rw-r--r--   0 root         (0) root         (0)      605 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      397 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho-reloc64-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1187 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho-reloc64-err.errwarn
│ │ --rwxr-xr-x   0 root         (0) root         (0)      127 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho64_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     2527 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1681 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.c
│ │ --rw-r--r--   0 root         (0) root         (0)     4232 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1050 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1384 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.731566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/
│ │ --rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      184 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)    35731 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/rdf-objfmt.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.739566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)     1088 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      105 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdf_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       69 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfabs.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      130 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfabs.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfabs.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      713 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1788 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      420 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      564 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      262 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      196 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1338 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1204 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      659 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1008 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      572 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      512 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1132 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      536 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      343 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/testlib.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      512 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/testlib.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.739566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/
│ │ --rw-r--r--   0 root         (0) root         (0)      169 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.745566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)     1029 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/export.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1092 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/export.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.747566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/
│ │ --rw-r--r--   0 root         (0) root         (0)      486 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      128 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32_gas_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     2358 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     6612 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32def.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      688 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32def.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1197 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3112 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      433 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-curpos.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1992 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-curpos.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-overdef.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      616 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-overdef.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       71 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1184 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.masm
│ │ --rw-r--r--   0 root         (0) root         (0)       95 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-segof.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1120 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-segof.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      113 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     2120 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      914 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2700 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.747566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/
│ │ --rw-r--r--   0 root         (0) root         (0)      180 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.759566 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/
│ │ --rw-rw-r--   0 root         (0) root         (0)     1917 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.760567 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/
│ │ --rw-r--r--   0 root         (0) root         (0)      252 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      186 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64-gas-sce.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1596 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64-gas-sce.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      136 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64_gas_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)      549 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      395 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     1106 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1720 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      576 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2868 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1682 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3436 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1589 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.masm
│ │ --rw-r--r--   0 root         (0) root         (0)      369 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      460 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      706 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2608 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      716 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.masm
│ │ --rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-abs.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      684 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-abs.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      433 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-curpos.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1996 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-curpos.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     3464 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     9916 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     2793 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.masm
│ │ --rw-r--r--   0 root         (0) root         (0)      205 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1372 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      183 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.masm
│ │ --rw-rw-r--   0 root         (0) root         (0)       29 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-function.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)      616 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-function.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)      196 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-imagebase.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)     2048 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-imagebase.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      113 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.762567 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/
│ │ --rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      184 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.768567 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      918 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdf-overdef.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      312 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdf-overdef.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      105 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdf_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     7201 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       51 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)   191424 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      265 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfother.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2312 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfother.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     5875 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     7224 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      340 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      971 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      331 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     3344 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      127 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfvirtual.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1292 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfvirtual.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)    28489 2014-08-10 18:39:20.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/xdf-objfmt.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5016 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/yasm_objfmts.xml
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.769567 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/
│ │ --rw-r--r--   0 root         (0) root         (0)       73 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      455 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.771567 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/
│ │ --rw-r--r--   0 root         (0) root         (0)      266 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      659 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     3415 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parse-intel.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    54687 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parse.c
│ │ --rw-r--r--   0 root         (0) root         (0)     4289 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5137 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.h
│ │ --rw-r--r--   0 root         (0) root         (0)    17005 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-token.re
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.787567 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)     2505 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.797567 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/
│ │ --rw-r--r--   0 root         (0) root         (0)     1780 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      359 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-comment.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       38 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-comment.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-comment.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      278 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-intel_syntax-noprefix.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      232 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-intel_syntax-noprefix.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      731 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      220 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-macro.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-macro.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      514 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-set.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       37 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-set.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       14 2011-08-19 20:20:40.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-str.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       12 2011-08-19 20:20:40.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-str.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      134 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas_bin_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/rept-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/rept-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptempty.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptempty.hex
│ │ --rw-r--r--   0 root         (0) root         (0)    11967 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptlong.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptlong.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptnested.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptnested.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       38 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptsimple.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptsimple.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptwarn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      434 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptwarn.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptwarn.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptzero.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptzero.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/dataref-imm.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2368 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/dataref-imm.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       74 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     3680 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      291 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2848 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/execsect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1728 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/execsect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-fill.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1696 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-fill.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-float.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-float.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-instlabel.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-instlabel.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       97 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      262 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line2-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      124 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line2-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-push.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-push.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-segprefix.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-segprefix.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-semi.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1632 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-semi.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      117 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gassectalign.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1888 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gassectalign.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      169 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      173 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     1984 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      211 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/leb128.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1792 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/leb128.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      307 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/localcomm.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/localcomm.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       84 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       35 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       85 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/strzero.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/strzero.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/varinsn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     1792 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/varinsn.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.800568 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/
│ │ --rw-r--r--   0 root         (0) root         (0)      523 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     1035 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)    60141 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parse.c
│ │ --rw-r--r--   0 root         (0) root         (0)     2768 2011-09-03 06:10:04.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser-struct.h
│ │ --rw-r--r--   0 root         (0) root         (0)     4232 2011-09-03 06:10:08.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.c
│ │ --rw-r--r--   0 root         (0) root         (0)     3802 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.h
│ │ --rw-rw-r--   0 root         (0) root         (0)     1943 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-std.mac
│ │ --rw-r--r--   0 root         (0) root         (0)    25656 2011-09-03 06:10:12.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-token.re
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.817568 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/
│ │ --rw-rw-r--   0 root         (0) root         (0)     2661 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop16.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop16.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop32.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop32.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       21 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/charconstmath.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/charconstmath.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       13 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/dirwarning.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       57 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/dirwarning.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/dirwarning.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/dy.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/dy.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/endcomma.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/endcomma.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/equcolon.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/equcolon.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       70 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/equlocal.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/equlocal.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/hexconst.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/hexconst.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      197 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       51 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel2.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel2.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/long.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/long.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/nasm-prefix.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/nasm-prefix.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      111 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/nasm_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)      181 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/newsect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/newsect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/orphannowarn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/orphannowarn.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/prevlocalwarn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/prevlocalwarn.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/prevlocalwarn.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      180 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucalign.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucalign.hex
│ │ --rw-rw-r--   0 root         (0) root         (0)      173 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucbase.asm
│ │ --rw-rw-r--   0 root         (0) root         (0)       16 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucbase.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       74 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/struczero.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/struczero.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      146 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/syntax-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      684 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/syntax-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/uscore.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      128 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/uscore.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.818568 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/
│ │ --rw-r--r--   0 root         (0) root         (0)      332 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/Makefile.inc
│ │ --rwxr-xr-x   0 root         (0) root         (0)      135 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/nasm_worphan_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/orphanwarn.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      138 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/orphanwarn.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/orphanwarn.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.819568 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/
│ │ --rw-r--r--   0 root         (0) root         (0)      103 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.832569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)     2044 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       23 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/array.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/array.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       21 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/case.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/case.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/charstr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/charstr.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/dup.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/dup.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       11 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/equal.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/equal.hex
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.833569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/
│ │ --rw-r--r--   0 root         (0) root         (0)      227 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/exe.asm
│ │ --rw-r--r--   0 root         (0) root         (0)     2060 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/exe.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      126 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/tasm_exe_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/expr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/expr.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/irp.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/irp.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/label.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/label.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/les.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/les.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/lidt.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/lidt.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/macro.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/macro.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/offset.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/offset.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/quote.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/quote.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/res.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      146 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/res.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/res.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       92 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/segment.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/segment.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/size.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/size.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/struc.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       73 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/struc.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/struc.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      119 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/tasm_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     3058 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/yasm_parsers.xml
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.834569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/
│ │ --rw-r--r--   0 root         (0) root         (0)      149 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      455 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.835569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/cpp/
│ │ --rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/cpp/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/cpp/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)    11058 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/cpp/cpp-preproc.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.837569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/
│ │ --rw-r--r--   0 root         (0) root         (0)       93 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      295 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)    10665 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.c
│ │ --rw-r--r--   0 root         (0) root         (0)     4975 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.h
│ │ --rw-rw-r--   0 root         (0) root         (0)    41956 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/gas-preproc.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.837569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      218 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/tests/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.841569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/
│ │ --rw-r--r--   0 root         (0) root         (0)      729 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     1353 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)     2859 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/genversion.c
│ │ --rw-r--r--   0 root         (0) root         (0)    10544 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-eval.c
│ │ --rw-r--r--   0 root         (0) root         (0)      479 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-eval.h
│ │ --rw-rw-r--   0 root         (0) root         (0)   172102 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.c
│ │ --rw-r--r--   0 root         (0) root         (0)      558 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.h
│ │ --rw-r--r--   0 root         (0) root         (0)     8948 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-preproc.c
│ │ --rw-r--r--   0 root         (0) root         (0)     9587 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm.h
│ │ --rw-r--r--   0 root         (0) root         (0)     4635 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.c
│ │ --rw-r--r--   0 root         (0) root         (0)     1985 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.849569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      325 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/16args.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      384 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/16args.hex
│ │ --rw-r--r--   0 root         (0) root         (0)     1348 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      228 2011-09-02 22:06:57.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/ifcritical-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/ifcritical-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)     8525 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/longline.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      256 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/longline.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       13 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/macroeof-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       57 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/macroeof-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-bigint.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        4 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-bigint.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      157 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-decimal.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-decimal.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      409 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-nested.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-nested.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-nested.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      108 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/noinclude-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       60 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/noinclude-err.errwarn
│ │ --rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/orgsect.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/orgsect.hex
│ │ --rw-r--r--   0 root         (0) root         (0)      125 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/scope-err.asm
│ │ --rw-r--r--   0 root         (0) root         (0)      134 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/scope-err.errwarn
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.850569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/
│ │ --rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      189 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     4822 2011-10-03 06:14:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/raw-preproc.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.852569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      214 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      517 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/tests/longline.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/tests/longline.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      112 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/tests/rawpp_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.852569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/
│ │ --rw-r--r--   0 root         (0) root         (0)      105 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.854569 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      372 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      117 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-assume-comment.asm
│ │ --rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-assume-comment.hex
│ │ --rw-r--r--   0 root         (0) root         (0)       33 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-comment-instr.asm
│ │ --rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-comment-instr.hex
│ │ --rwxr-xr-x   0 root         (0) root         (0)      116 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasmpp_test.sh
│ │ --rwxr-xr-x   0 root         (0) root         (0)     3283 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/out_test.sh
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.855569 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/
│ │ --rw-r--r--   0 root         (0) root         (0)      829 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/README
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.856569 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/dbg/
│ │ --rw-r--r--   0 root         (0) root         (0)     1212 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/dbg/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      474 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/dbg/README
│ │ --rw-r--r--   0 root         (0) root         (0)     5946 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/dbg/dbg-objfmt.c
│ │ --rw-r--r--   0 root         (0) root         (0)      248 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/dbg/init_plugin.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.857569 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/x86/
│ │ --rw-r--r--   0 root         (0) root         (0)     3664 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/x86/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      455 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/x86/README
│ │ --rw-r--r--   0 root         (0) root         (0)      242 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/x86/init_plugin.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.861570 simplejpeg-1.6.5/lib/yasm-1.3.0/po/
│ │ --rw-rw-r--   0 root         (0) root         (0)      236 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/ChangeLog
│ │ --rw-rw-r--   0 root         (0) root         (0)    16659 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/Makefile.in.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     2376 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/Makevars
│ │ --rw-r--r--   0 root         (0) root         (0)     1718 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/POTFILES.in
│ │ --rw-rw-r--   0 root         (0) root         (0)     1801 2014-08-10 18:39:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/Rules-quot
│ │ --rw-r--r--   0 root         (0) root         (0)      217 2014-08-10 17:20:08.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/boldquot.sed
│ │ --rw-r--r--   0 root         (0) root         (0)     1337 2014-08-10 17:20:08.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/en@boldquot.header
│ │ --rw-r--r--   0 root         (0) root         (0)     1203 2014-08-10 17:20:08.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/en@quot.header
│ │ --rw-r--r--   0 root         (0) root         (0)      672 2014-08-10 17:20:08.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/insert-header.sin
│ │ --rw-r--r--   0 root         (0) root         (0)      153 2014-08-10 17:20:08.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/quot.sed
│ │ --rw-r--r--   0 root         (0) root         (0)      432 2014-08-10 17:20:08.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/remove-potcdate.sin
│ │ --rw-rw-r--   0 root         (0) root         (0)       10 2014-08-11 05:26:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/stamp-po
│ │ --rw-rw-r--   0 root         (0) root         (0)    59434 2014-08-11 05:26:35.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/po/yasm.pot
│ │ --rwxr-xr-x   0 root         (0) root         (0)     2210 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/splint.sh
│ │ --rw-r--r--   0 root         (0) root         (0)     2017 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/test_hd.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.862569 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/
│ │ --rw-rw-r--   0 root         (0) root         (0)       76 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)      309 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/Makefile.inc
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.863570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genmacro/
│ │ --rw-r--r--   0 root         (0) root         (0)       45 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genmacro/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)      500 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genmacro/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     4102 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genmacro/genmacro.c
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.866570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/
│ │ --rw-rw-r--   0 root         (0) root         (0)      212 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/CMakeLists.txt
│ │ --rw-rw-r--   0 root         (0) root         (0)     1635 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/Makefile.inc
│ │ --rw-rw-r--   0 root         (0) root         (0)    17718 2014-08-10 07:41:25.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/genperf.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    40479 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/perfect.c
│ │ --rw-rw-r--   0 root         (0) root         (0)     5695 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/perfect.h
│ │ --rw-rw-r--   0 root         (0) root         (0)      916 2014-05-17 18:08:26.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/standard.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.869570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/
│ │ --rw-r--r--   0 root         (0) root         (0)     2804 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     4003 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/bytecode.pxi
│ │ --rw-r--r--   0 root         (0) root         (0)     3098 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/errwarn.pxi
│ │ --rw-r--r--   0 root         (0) root         (0)     5653 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/expr.pxi
│ │ --rw-r--r--   0 root         (0) root         (0)     2174 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/floatnum.pxi
│ │ --rw-r--r--   0 root         (0) root         (0)     7017 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/intnum.pxi
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.872570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/
│ │ --rwxr-xr-x   0 root         (0) root         (0)    21080 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/cparse.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)    18513 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/genpyx.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)    35563 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/ir.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)     6716 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/lexer.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)     8966 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/node.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)     2686 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/parse_core.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)     5971 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/work_unit.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)     1294 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/wrap_yasm.py
│ │ --rw-r--r--   0 root         (0) root         (0)     3508 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/setup.py
│ │ --rw-r--r--   0 root         (0) root         (0)     9852 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/symrec.pxi
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.874570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/
│ │ --rw-r--r--   0 root         (0) root         (0)      434 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)     1996 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/__init__.py
│ │ --rwxr-xr-x   0 root         (0) root         (0)      616 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/python_test.sh
│ │ --rw-r--r--   0 root         (0) root         (0)       71 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/test_bytecode.py
│ │ --rw-r--r--   0 root         (0) root         (0)      521 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/test_expr.py
│ │ --rw-r--r--   0 root         (0) root         (0)     1974 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/test_intnum.py
│ │ --rw-r--r--   0 root         (0) root         (0)     2976 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/test_symrec.py
│ │ --rw-r--r--   0 root         (0) root         (0)     2447 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/value.pxi
│ │ --rw-r--r--   0 root         (0) root         (0)     4896 2011-08-20 18:17:17.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/yasm.pyx
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.884570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/
│ │ --rw-r--r--   0 root         (0) root         (0)      445 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/CHANGELOG
│ │ --rw-r--r--   0 root         (0) root         (0)      145 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/CMakeLists.txt
│ │ --rw-r--r--   0 root         (0) root         (0)     3815 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/Makefile.inc
│ │ --rw-r--r--   0 root         (0) root         (0)      142 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/NO_WARRANTY
│ │ --rw-r--r--   0 root         (0) root         (0)     5066 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/README
│ │ --rw-r--r--   0 root         (0) root         (0)    14764 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/actions.c
│ │ --rw-r--r--   0 root         (0) root         (0)      251 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/basics.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.884570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/bootstrap/
│ │ --rw-r--r--   0 root         (0) root         (0)    15237 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/bootstrap/scanner.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    21478 2014-05-11 21:58:10.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/code.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5264 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/dfa.c
│ │ --rw-r--r--   0 root         (0) root         (0)     3453 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/dfa.h
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.885570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/doc/
│ │ --rw-r--r--   0 root         (0) root         (0)    69080 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/doc/loplas.ps.gz
│ │ --rw-r--r--   0 root         (0) root         (0)     2454 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/doc/sample.bib
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.889570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/
│ │ --rw-r--r--   0 root         (0) root         (0)      499 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/basemmap.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5445 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/c.re
│ │ --rw-r--r--   0 root         (0) root         (0)     5286 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/cmmap.re
│ │ --rw-r--r--   0 root         (0) root         (0)     4581 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/cnokw.re
│ │ --rw-r--r--   0 root         (0) root         (0)     5091 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/cunroll.re
│ │ --rw-r--r--   0 root         (0) root         (0)     4840 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/modula.re
│ │ --rw-r--r--   0 root         (0) root         (0)      733 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/repeater.re
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.890570 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/rexx/
│ │ --rw-r--r--   0 root         (0) root         (0)       71 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/rexx/README
│ │ --rw-r--r--   0 root         (0) root         (0)     5491 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/rexx/rexx.l
│ │ --rw-r--r--   0 root         (0) root         (0)     1250 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/rexx/scanio.c
│ │ --rw-r--r--   0 root         (0) root         (0)      139 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/sample.re
│ │ --rw-r--r--   0 root         (0) root         (0)      222 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/simple.re
│ │ --rw-r--r--   0 root         (0) root         (0)      537 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/globals.h
│ │ --rw-r--r--   0 root         (0) root         (0)      537 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/ins.h
│ │ --rw-r--r--   0 root         (0) root         (0)     4279 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/main.c
│ │ --rwxr-xr-x   0 root         (0) root         (0)     3207 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/mbo_getopt.c
│ │ --rwxr-xr-x   0 root         (0) root         (0)      523 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/mbo_getopt.h
│ │ --rw-r--r--   0 root         (0) root         (0)      544 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/parse.h
│ │ --rw-r--r--   0 root         (0) root         (0)     4771 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/parser.c
│ │ --rw-r--r--   0 root         (0) root         (0)      473 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/parser.h
│ │ --rw-r--r--   0 root         (0) root         (0)     3471 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/re.h
│ │ --rw-r--r--   0 root         (0) root         (0)    15628 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/re2c.1
│ │ --rw-r--r--   0 root         (0) root         (0)    15247 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/scanner.c
│ │ --rw-r--r--   0 root         (0) root         (0)      833 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/scanner.h
│ │ --rw-r--r--   0 root         (0) root         (0)     5505 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/scanner.re
│ │ --rw-r--r--   0 root         (0) root         (0)     1073 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/substr.c
│ │ --rw-r--r--   0 root         (0) root         (0)     1652 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/substr.h
│ │ --rw-r--r--   0 root         (0) root         (0)      508 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/token.h
│ │ --rw-r--r--   0 root         (0) root         (0)     4171 2011-03-23 03:24:32.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/translate.c
│ │ --rw-r--r--   0 root         (0) root         (0)     5011 2011-08-27 23:13:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/util.h
│ │ --rw-rw-r--   0 root         (0) root         (0)        6 2014-08-11 06:19:19.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/version
│ │ --rw-rw-r--   0 root         (0) root         (0)   139465 2014-08-10 07:46:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/x86insn_gas.gperf
│ │ --rw-rw-r--   0 root         (0) root         (0)   100128 2014-08-10 07:46:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/x86insn_nasm.gperf
│ │ --rw-rw-r--   0 root         (0) root         (0)   149849 2014-08-10 07:46:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/x86insns.c
│ │ --rw-rw-r--   0 root         (0) root         (0)    12374 2014-05-12 01:24:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/yasm.1
│ │ --rw-rw-r--   0 root         (0) root         (0)    17124 2014-05-12 01:24:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_arch.7
│ │ --rw-rw-r--   0 root         (0) root         (0)     3120 2014-05-12 01:24:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_dbgfmts.7
│ │ --rw-rw-r--   0 root         (0) root         (0)     4499 2014-05-12 01:24:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_objfmts.7
│ │ --rw-rw-r--   0 root         (0) root         (0)     2326 2014-05-12 01:24:21.000000 simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_parsers.7
│ │ --rw-rw-rw-   0 root         (0) root         (0)      168 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/pyproject.toml
│ │ --rw-rw-rw-   0 root         (0) root         (0)        5 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/requirements.txt
│ │ --rw-r--r--   0 root         (0) root         (0)       38 2022-08-12 20:48:44.908571 simplejpeg-1.6.5/setup.cfg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    11254 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/setup.py
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.893570 simplejpeg-1.6.5/simplejpeg/
│ │ --rw-rw-rw-   0 root         (0) root         (0)      527 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/simplejpeg/__init__.py
│ │ --rw-rw-rw-   0 root         (0) root         (0)      948 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/simplejpeg/_color.c
│ │ --rw-rw-rw-   0 root         (0) root         (0)      219 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/simplejpeg/_color.h
│ │ --rw-r--r--   0 root         (0) root         (0)   730316 2022-08-12 20:48:42.000000 simplejpeg-1.6.5/simplejpeg/_jpeg.c
│ │ --rw-rw-rw-   0 root         (0) root         (0)     3642 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/simplejpeg/_jpeg.pyi
│ │ --rw-rw-rw-   0 root         (0) root         (0)    15834 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/simplejpeg/_jpeg.pyx
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.895570 simplejpeg-1.6.5/simplejpeg.egg-info/
│ │ --rw-r--r--   0 root         (0) root         (0)     6754 2022-08-12 20:48:43.000000 simplejpeg-1.6.5/simplejpeg.egg-info/PKG-INFO
│ │ --rw-r--r--   0 root         (0) root         (0)    97657 2022-08-12 20:48:44.000000 simplejpeg-1.6.5/simplejpeg.egg-info/SOURCES.txt
│ │ --rw-r--r--   0 root         (0) root         (0)        1 2022-08-12 20:48:43.000000 simplejpeg-1.6.5/simplejpeg.egg-info/dependency_links.txt
│ │ --rw-r--r--   0 root         (0) root         (0)        1 2022-08-12 20:48:42.000000 simplejpeg-1.6.5/simplejpeg.egg-info/not-zip-safe
│ │ --rw-r--r--   0 root         (0) root         (0)        6 2022-08-12 20:48:43.000000 simplejpeg-1.6.5/simplejpeg.egg-info/requires.txt
│ │ --rw-r--r--   0 root         (0) root         (0)       11 2022-08-12 20:48:43.000000 simplejpeg-1.6.5/simplejpeg.egg-info/top_level.txt
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.897570 simplejpeg-1.6.5/test/
│ │ --rw-rw-rw-   0 root         (0) root         (0)      757 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/convert_originals.py
│ │ -drwxr-xr-x   0 root         (0) root         (0)        0 2022-08-12 20:48:44.907571 simplejpeg-1.6.5/test/images/
│ │ --rw-rw-rw-   0 root         (0) root         (0)    31046 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/airplane.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    16443 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/arctichare.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    48713 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/baboon.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    31031 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/barbara.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    27333 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/boat.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    50804 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/boy.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)     7382 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/cameraman.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    47003 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/cat.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    64441 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/fprint3.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    27537 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/fruits.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    33777 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/girl.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    41779 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/goldhill.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    48437 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/lena.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    61538 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/monarch.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    98077 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/mountain.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    45454 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/peppers.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    12287 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/pool.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    99814 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/sails.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    75926 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/tulips.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)   162884 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/us021.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)   132198 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/us092.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)    74455 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/images/zelda.jpg
│ │ --rw-rw-rw-   0 root         (0) root         (0)     5113 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/test_decode.py
│ │ --rw-rw-rw-   0 root         (0) root         (0)     3725 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/test_encode.py
│ │ --rw-rw-rw-   0 root         (0) root         (0)      608 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test/test_util.py
│ │ --rw-rw-rw-   0 root         (0) root         (0)       34 2022-08-12 20:48:18.000000 simplejpeg-1.6.5/test_requirements.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.808184 simplejpeg-1.6.6/
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    19569 2023-04-06 18:51:40.000000 simplejpeg-1.6.6/LICENSE
│ │ +-rw-rw-rw-   0 root         (0) root         (0)      226 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/MANIFEST.in
│ │ +-rw-r--r--   0 root         (0) root         (0)     6754 2023-04-06 18:51:41.808184 simplejpeg-1.6.6/PKG-INFO
│ │ +-rw-rw-rw-   0 root         (0) root         (0)     5866 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/README.rst
│ │ +-rw-rw-rw-   0 root         (0) root         (0)       86 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/build_requirements.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.132192 simplejpeg-1.6.6/lib/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.205191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25599 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/BUILDING.md
│ │ +-rw-rw-r--   0 root         (0) root         (0)    63897 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)    96132 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/ChangeLog.md
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5213 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/LICENSE.md
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12732 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/README.ijg
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17039 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/README.md
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4708 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cderror.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4375 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cdjpeg.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5929 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cdjpeg.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12879 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/change.log
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13865 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cjpeg.1
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24798 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cjpeg.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.206191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5738 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/BuildPackages.cmake
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15882 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/GNUInstallDirs.cmake
│ │ +-rw-rw-r--   0 root         (0) root         (0)      972 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/PackageInfo.cmake
│ │ +-rw-rw-r--   0 root         (0) root         (0)      974 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/cmake_uninstall.cmake.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)      626 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/testclean.cmake
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1574 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmyk.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3467 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/coderules.txt
│ │ +-rwxrwxr-x   0 root         (0) root         (0)     2517 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/croptest.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10886 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/djpeg.1
│ │ +-rw-rw-r--   0 root         (0) root         (0)    29345 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/djpeg.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.126192 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.218191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3972 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/annotated.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      676 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/bc_s.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      147 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/bdwn.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3769 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/classes.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      132 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/closed.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      746 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/doc.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)       26 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen-extra.css
│ │ +-rw-rw-r--   0 root         (0) root         (0)    30445 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen.css
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15382 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen.svg
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4452 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/dynsections.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)      616 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/folderclosed.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      597 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/folderopen.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4205 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/functions.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4077 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/functions_vars.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)   217086 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/group___turbo_j_p_e_g.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2965 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/index.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)   175457 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/jquery.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3222 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/menu.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1684 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/menudata.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3320 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/modules.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      153 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/nav_f.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)       95 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/nav_g.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)       98 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/nav_h.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      123 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/open.png
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.237191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      139 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_1.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      236 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_1.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_2.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      111 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_2.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_3.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      129 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_3.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_4.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      228 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_4.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_5.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      117 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_5.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_6.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13916 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_6.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_7.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      113 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_7.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_8.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      113 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_8.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1422 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_9.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      113 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_9.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1426 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/classes_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      245 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/classes_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1284 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/close.svg
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1424 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enums_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      578 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enums_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1429 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enumvalues_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5404 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enumvalues_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/functions_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3654 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/functions_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1425 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/groups_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)       94 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/groups_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2378 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/mag_sel.svg
│ │ +-rw-rw-r--   0 root         (0) root         (0)      462 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/nomatches.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4361 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search.css
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23359 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)      567 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_l.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      158 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_m.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      553 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_r.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      467 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/searchdata.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1427 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/typedefs_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      262 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/typedefs_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_0.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      141 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_0.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_1.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      240 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_1.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_2.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      113 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_2.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_3.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      131 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_3.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_4.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      232 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_4.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_5.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      119 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_5.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_6.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      896 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_6.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_7.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      113 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_7.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_8.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      113 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_8.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1428 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_9.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      113 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_9.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)      314 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/splitbar.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8537 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/structtjregion.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5750 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/structtjscalingfactor.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12471 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/structtjtransform.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)      853 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/sync_off.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      845 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/sync_on.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      142 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/tab_a.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      169 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/tab_b.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      177 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/tab_h.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)      184 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/tab_s.png
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9184 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/tabs.css
│ │ +-rw-rw-r--   0 root         (0) root         (0)       26 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doxygen-extra.css
│ │ +-rw-rw-r--   0 root         (0) root         (0)      403 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doxygen.config
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18699 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/example.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.239191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1933 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1080 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/build.sh
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3229 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/cjpeg.cc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4611 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/compress.cc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5182 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/compress_yuv.cc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4215 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/decompress.cc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4269 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/decompress_yuv.cc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4936 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/transform.cc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5132 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jaricom.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.241191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3944 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)       44 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/MANIFEST.MF
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2602 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/README
│ │ +-rw-rw-r--   0 root         (0) root         (0)    40455 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/TJBench.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)    16881 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/TJExample.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)    35466 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/TJUnitTest.java
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.244191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1658 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/allclasses-frame.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1478 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/allclasses-noframe.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21955 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/constant-values.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11709 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/deprecated-list.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7678 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/help-doc.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    84922 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/index-all.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2738 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/index.html
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.127192 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.127192 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.247191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    61572 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJ.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    51359 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9856 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJCustomFilter.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    69251 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11393 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJException.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12057 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJScalingFactor.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    33676 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJTransform.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23107 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    32451 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/YUVImage.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1732 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-frame.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7028 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-summary.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5999 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-tree.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5849 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/overview-tree.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)       27 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/package-list
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.248191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2313 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/background.gif
│ │ +-rw-rw-r--   0 root         (0) root         (0)      291 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/tab.gif
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10701 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/titlebar.gif
│ │ +-rw-rw-r--   0 root         (0) root         (0)      849 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/titlebar_end.gif
│ │ +-rw-rw-r--   0 root         (0) root         (0)      827 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/script.js
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5265 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/serialized-form.html
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11139 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/stylesheet.css
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.128192 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.128192 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.252191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24327 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJ.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)    26854 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJCompressor.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3662 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJCustomFilter.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)    42855 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJDecompressor.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2811 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJException.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2685 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJLoader-unix.java.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1716 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJLoader-win.java.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3600 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJScalingFactor.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8519 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJTransform.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7205 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJTransformer.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19126 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/YUVImage.java
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5804 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJ.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3521 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJCompressor.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3479 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJDecompressor.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)      838 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJTransformer.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9659 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcapimin.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5903 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcapistd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    29668 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcarith.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17271 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jccoefct.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4605 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jccolext.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23998 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jccolor.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    22364 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcdctmgr.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    36659 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jchuff.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1857 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jchuff.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4072 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcicc.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2565 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcinit.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5221 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcmainct.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17532 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcmarker.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21959 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcmaster.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3239 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcomapi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1170 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jconfig.h.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3127 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jconfig.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1055 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jconfigint.h.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18203 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcparam.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    33656 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcphuff.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12965 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcprepct.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19156 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcsample.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3851 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcstest.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14940 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jctrans.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13240 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdapimin.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25518 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdapistd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25539 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdarith.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6683 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatadst-tj.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9557 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatadst.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6969 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatasrc-tj.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10288 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatasrc.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    34033 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcoefct.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2704 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcoefct.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11665 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcol565.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4397 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcolext.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    28525 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcolor.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9708 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdct.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11423 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jddctmgr.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    26644 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdhuff.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9795 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdhuff.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5409 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdicc.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14585 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdinput.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19797 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmainct.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2448 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmainct.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    42216 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmarker.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    27460 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmaster.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)      788 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmaster.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19780 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmerge.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1630 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmerge.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11030 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmrg565.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5847 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmrgext.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    22173 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdphuff.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10948 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdpostct.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18058 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdsample.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1725 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdsample.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5461 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdtrans.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7929 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jerror.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15864 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jerror.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5588 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jfdctflt.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7792 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jfdctfst.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11508 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jfdctint.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8729 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctflt.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13554 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctfst.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)   106254 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctint.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14528 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctred.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3163 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jinclude.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    45062 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmemmgr.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2674 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmemnobs.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7788 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmemsys.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14192 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmorecfg.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)   270393 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpeg_nbits_table.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1130 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegcomp.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15782 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegint.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    50281 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpeglib.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13286 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegtran.1
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24806 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegtran.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    32176 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jquant1.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    48710 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jquant2.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5867 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jsimd.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8050 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jsimd_none.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3085 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jsimddct.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5321 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jstdhuff.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3764 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jutils.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1761 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jversion.h.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)      164 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/libjpeg.map.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)   170109 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/libjpeg.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.254191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/
│ │ +-rw-rw-r--   0 root         (0) root         (0)       46 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9659 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2371 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2240 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5cmp.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3896 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5hl.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23086 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdbmp.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7001 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdcolmap.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24546 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdgif.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1699 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdjpgcom.1
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14558 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdjpgcom.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25667 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdppm.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13195 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdswitch.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15487 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdtarga.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.259191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/
│ │ +-rw-rw-r--   0 root         (0) root         (0)      137 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/Config.cmake.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)      632 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/Distribution.xml.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2178 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/License.rtf
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1329 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/ReadMe.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)      654 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/Welcome.rtf.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1644 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/deb-control.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7163 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/installer.nsi.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)      299 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/libjpeg.pc.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)      311 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/libturbojpeg.pc.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)     2393 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makedpkg.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)     5377 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makemacpkg.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)      591 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makerpm.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)      915 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makesrpm.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)     1111 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/maketarball.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7092 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/rpm.spec.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3893 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/uninstall.in
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.259191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/sharedlib/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4096 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/sharedlib/CMakeLists.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.260191 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    20570 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/CMakeLists.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.274190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.275190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6526 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jccolext-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13469 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jchuff-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21898 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jsimd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    43740 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jsimd_neon.S
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.277190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    16072 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jccolext-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18356 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jchuff-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24260 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jsimd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    98482 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jsimd_neon.S
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1221 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/align.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4537 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jccolor-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3510 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcgray-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4441 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcgryext-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3950 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jchuff.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    26878 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcphuff-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8626 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcsample-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    16425 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdcolext-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4108 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdcolor-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4706 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdmerge-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    30912 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdmrgext-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25451 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdsample-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7969 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jfdctfst-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15054 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jfdctint-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19854 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctfst-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    35406 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctint-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21455 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctred-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8989 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jquanti-neon.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1573 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/neon-compat.h.in
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.301190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25653 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17217 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19289 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3731 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3732 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3690 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3346 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3347 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3305 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    20446 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12329 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14281 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    39398 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jchuff-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18606 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcphuff-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12031 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9702 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10565 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25062 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15651 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18751 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3548 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3486 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3508 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4171 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4055 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4125 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    27474 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18016 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21215 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    31233 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25600 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    26708 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12281 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctflt-3dn.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15144 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctflt-sse.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15775 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctfst-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17892 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctfst-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13012 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24569 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    27065 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17611 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-3dn.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24933 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-sse.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21790 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    20042 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctfst-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21568 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctfst-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19013 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    33447 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    35753 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    27326 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctred-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23433 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctred-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8951 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-3dn.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9409 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-mmx.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7588 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-sse.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6195 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquantf-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6891 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquanti-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7442 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquanti-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    35555 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jsimd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3984 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jsimdcpu.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    56955 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/jsimd.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.303190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    26489 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)   148685 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd_dspr2.S
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8032 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd_dspr2_asm.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.309190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14239 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jccolext-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5115 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jccolor-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4237 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcgray-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10948 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcgryext-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3838 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcsample-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)      701 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcsample.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15201 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdcolext-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4402 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdcolor-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5118 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdmerge-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23377 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdmrgext-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12607 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdsample-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10432 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jfdctfst-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17292 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jfdctint-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15614 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jidctfst-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23014 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jidctint-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4498 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jquanti-mmi.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18311 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jsimd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2458 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jsimd_mmi.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23014 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/loongson-mmintrin.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.310190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2628 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jcolsamp.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1273 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jdct.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2922 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdcfg.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4768 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdcfg.inc.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15031 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdext.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.316190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11551 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jccolext-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4274 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jccolor-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4013 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcgray-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8749 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcgryext-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5617 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcsample-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)      701 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcsample.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10386 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdcolext-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3860 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdcolor-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4804 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdmerge-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12300 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdmrgext-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14201 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdsample-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4527 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jfdctfst-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8563 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jfdctint-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8109 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jidctfst-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12048 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jidctint-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8121 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jquanti-altivec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19897 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jsimd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4269 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jsimd_altivec.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.326190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24432 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18072 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3738 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolor-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3697 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolor-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3353 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgray-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3312 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgray-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    19313 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgryext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13148 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgryext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    31703 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jchuff-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17801 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcphuff-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10560 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcsample-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9094 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcsample-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23808 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17613 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3561 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolor-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3515 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolor-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4178 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmerge-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4132 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmerge-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    26887 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmrgext-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    20682 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmrgext-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    27790 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdsample-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    23496 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdsample-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14387 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctflt-sse.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17154 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctfst-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12328 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctint-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    25959 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctint-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    20926 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctflt-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    20947 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctfst-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17411 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctint-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    34909 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctint-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    22153 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctred-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5254 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquantf-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5900 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquanti-avx2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6503 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquanti-sse2.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    27656 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jsimd.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2441 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jsimdcpu.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4530 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/strtest.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    49423 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/structure.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.332190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    82998 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/nightshot_iso_100.bmp
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2155 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/nightshot_iso_100.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)      110 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test.scan
│ │ +-rw-rw-r--   0 root         (0) root         (0)   557536 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test1.icc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1078 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test1.icc.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)   654496 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test2.icc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1078 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test2.icc.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5126 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testimgari.jpg
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5756 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testimgint.jpg
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5770 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testorig.jpg
│ │ +-rw-rw-r--   0 root         (0) root         (0)   101484 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testorig.ppm
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12394 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testorig12.jpg
│ │ +-rw-rw-r--   0 root         (0) root         (0)    34614 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/vgl_5674_0098.bmp
│ │ +-rw-rw-r--   0 root         (0) root         (0)    34614 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/vgl_6434_0018a.bmp
│ │ +-rw-rw-r--   0 root         (0) root         (0)    36534 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/vgl_6548_0026a.bmp
│ │ +-rw-rw-r--   0 root         (0) root         (0)    39671 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjbench.c
│ │ +-rwxrwxr-x   0 root         (0) root         (0)    11936 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjbenchtest.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)    10297 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjbenchtest.java.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15062 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjexample.c
│ │ +-rwxrwxr-x   0 root         (0) root         (0)     8234 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjexampletest.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)     8446 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjexampletest.java.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)    31371 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjunittest.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2259 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjutil.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2026 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjutil.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    93206 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/transupp.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11214 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/transupp.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    47965 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg-jni.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)      989 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg-mapfile
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3194 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg-mapfile.jni
│ │ +-rw-rw-r--   0 root         (0) root         (0)    77956 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    75853 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    38222 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/usage.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.335190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.335190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/gcc/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2696 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/gcc/projectTargets-release.cmake.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)      939 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jconfig.h.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1075 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg.rc.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3065 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg62-memsrcdst.def
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3018 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg62.def
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3132 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg7-memsrcdst.def
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3085 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg7.def
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3170 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg8.def
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4186 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/projectTargets.cmake.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1003 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/turbojpeg.rc.in
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.335190 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/vc/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2686 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/vc/projectTargets-release.cmake.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10769 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wizard.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18027 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrbmp.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18648 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrgif.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2626 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrjpgcom.1
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17464 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrjpgcom.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10840 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrppm.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7483 2023-02-08 15:29:21.000000 simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrtarga.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.361189 simplejpeg-1.6.6/lib/yasm-1.3.0/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    93787 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/ABOUT-NLS
│ │ +-rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/AUTHORS
│ │ +-rw-r--r--   0 root         (0) root         (0)     6111 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Artistic.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     4344 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/BSD.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1185 2014-08-11 06:18:52.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2106 2014-08-10 17:30:28.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/COPYING
│ │ +-rw-rw-r--   0 root         (0) root         (0)      405 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/ChangeLog
│ │ +-rw-r--r--   0 root         (0) root         (0)     2079 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/ConfigureChecks.cmake
│ │ +-rw-r--r--   0 root         (0) root         (0)    18011 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/GNU_GPL-2.0
│ │ +-rw-r--r--   0 root         (0) root         (0)    25287 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/GNU_LGPL-2.0
│ │ +-rw-r--r--   0 root         (0) root         (0)     7831 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/INSTALL
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8580 2014-08-10 18:39:15.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Makefile.am
│ │ +-rw-rw-r--   0 root         (0) root         (0)   194237 2014-08-11 06:19:02.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Makefile.in
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.362189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6856 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/Makefile.dj
│ │ +-rw-rw-r--   0 root         (0) root         (0)     7222 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/Makefile.flat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.363189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/dj/
│ │ +-rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/dj/YASM-VERSION.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4712 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/dj/config.h
│ │ +-rw-r--r--   0 root         (0) root         (0)       98 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/dj/libyasm-stdint.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.368189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/
│ │ +-rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/YASM-VERSION.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4679 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/config.h
│ │ +-rw-r--r--   0 root         (0) root         (0)      462 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/crt_secure_no_deprecate.props
│ │ +-rw-r--r--   0 root         (0) root         (0)      280 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/crt_secure_no_deprecate.vsprops
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.369189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/
│ │ +-rw-r--r--   0 root         (0) root         (0)     5759 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      591 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)      270 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.369189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/
│ │ +-rw-r--r--   0 root         (0) root         (0)     5958 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      677 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.370189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genperf/
│ │ +-rw-r--r--   0 root         (0) root         (0)     7300 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)     1998 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj.filters
│ │ +-rw-rw-r--   0 root         (0) root         (0)      928 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genperf/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.371189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genstring/
│ │ +-rw-r--r--   0 root         (0) root         (0)     5496 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      577 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genstring/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.372189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genversion/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5923 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      909 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genversion/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.372189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)    14211 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)     7166 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)      149 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/libyasm-stdint.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.373189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/modules/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17524 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11555 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)      724 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/out_copy_rename.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.374189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/re2c/
│ │ +-rw-r--r--   0 root         (0) root         (0)     6842 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)     2913 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)      174 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/re2c/run.bat
│ │ +-rw-r--r--   0 root         (0) root         (0)     4323 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/readme.vc10.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     1191 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.props
│ │ +-rw-r--r--   0 root         (0) root         (0)     4403 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.targets
│ │ +-rw-r--r--   0 root         (0) root         (0)    14106 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)     8611 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.xml
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9642 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/yasm.sln
│ │ +-rw-r--r--   0 root         (0) root         (0)    14308 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj
│ │ +-rw-r--r--   0 root         (0) root         (0)     1495 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj.filters
│ │ +-rw-r--r--   0 root         (0) root         (0)    14033 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/ytasm.vcxproj
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.378189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/
│ │ +-rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/YASM-VERSION.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4509 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/config.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)      452 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/crt_secure_no_deprecate.props
│ │ +-rw-rw-r--   0 root         (0) root         (0)      269 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/crt_secure_no_deprecate.vsprops
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.379189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14116 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj
│ │ +-rw-rw-r--   0 root         (0) root         (0)     6967 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj.filters
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.380189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/modules/
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17382 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj
│ │ +-rw-rw-r--   0 root         (0) root         (0)    11300 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj.filters
│ │ +-rw-rw-r--   0 root         (0) root         (0)      682 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/out_copy_rename.bat
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3862 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/readme.vc12.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1165 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.props
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4296 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.targets
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14009 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.vcxproj
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8329 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.xml
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9555 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/yasm.sln
│ │ +-rw-rw-r--   0 root         (0) root         (0)    14207 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1455 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj.filters
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13937 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/ytasm.vcxproj
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.384189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/
│ │ +-rw-rw-r--   0 root         (0) root         (0)       68 2014-08-11 06:19:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/YASM-VERSION.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4679 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/config.h
│ │ +-rw-r--r--   0 root         (0) root         (0)      280 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/crt_secure_no_deprecate.vsprops
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.384189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/
│ │ +-rw-r--r--   0 root         (0) root         (0)     4265 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/genmacro.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      270 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.385189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/
│ │ +-rw-r--r--   0 root         (0) root         (0)     4445 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/genmodule.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.385189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genperf/
│ │ +-rw-r--r--   0 root         (0) root         (0)     5180 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genperf/genperf.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      585 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genperf/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.386189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genstring/
│ │ +-rw-r--r--   0 root         (0) root         (0)     4255 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genstring/genstring.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genstring/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.387189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genversion/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4579 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genversion/genversion.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genversion/run.bat
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.387189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/libyasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)    12026 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/libyasm/libyasm.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      149 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/libyasm-stdint.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.387189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/modules/
│ │ +-rw-r--r--   0 root         (0) root         (0)    13806 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/modules/modules.vcproj
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.388189 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/re2c/
│ │ +-rw-r--r--   0 root         (0) root         (0)     5889 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/re2c/re2c.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)      174 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/re2c/run.bat
│ │ +-rw-r--r--   0 root         (0) root         (0)     4294 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/readme.vc9.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     1526 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/vc98_swap.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     9440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/vsyasm.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)     3242 2011-08-19 20:20:40.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/yasm.rules
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10758 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/yasm.sln
│ │ +-rw-r--r--   0 root         (0) root         (0)     9501 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/yasm.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)     9507 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/ytasm.vcproj
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/NEWS
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/README
│ │ +-rwxrwxr-x   0 root         (0) root         (0)      816 2014-08-11 06:18:52.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/YASM-VERSION-GEN.sh
│ │ +-rw-rw-r--   0 root         (0) root         (0)    56044 2014-08-10 18:39:37.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/aclocal.m4
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.388189 simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/
│ │ +-rw-r--r--   0 root         (0) root         (0)       26 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/CMakeLists.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.390189 simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/modules/
│ │ +-rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/modules/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)       27 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/modules/DummyCFile.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3426 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/modules/VersionGen.cmake
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3258 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/modules/YasmMacros.cmake
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.393189 simplejpeg-1.6.6/lib/yasm-1.3.0/config/
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     7333 2014-01-02 19:14:59.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/compile
│ │ +-rw-rw-r--   0 root         (0) root         (0)    44826 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/config.guess
│ │ +-rwxrwxr-x   0 root         (0) root         (0)    18717 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/config.rpath
│ │ +-rw-rw-r--   0 root         (0) root         (0)    35543 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/config.sub
│ │ +-rwxr-xr-x   0 root         (0) root         (0)    23566 2014-01-02 19:14:59.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/depcomp
│ │ +-rwxr-xr-x   0 root         (0) root         (0)    13997 2014-01-02 19:14:59.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/install-sh
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     6872 2014-01-02 19:14:59.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/missing
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     3495 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/mkinstalldirs
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     4287 2014-01-02 19:14:59.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config/test-driver
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1238 2014-08-11 04:39:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config.h.cmake
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4279 2014-08-10 18:39:43.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/config.h.in
│ │ +-rwxrwxr-x   0 root         (0) root         (0)   323978 2014-08-11 06:19:03.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/configure
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9033 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/configure.ac
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.393189 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/
│ │ +-rw-rw-r--   0 root         (0) root         (0)       71 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      239 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.395189 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1044 2014-08-11 04:39:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      193 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4256 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/tasm-options.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2706 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/tasm-options.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    32345 2014-08-11 04:39:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/tasm.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.396189 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/vsyasm/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1123 2014-08-11 04:39:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/vsyasm/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      250 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/vsyasm/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)    46494 2014-08-11 04:39:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/vsyasm/vsyasm.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.400189 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/
│ │ +-rw-rw-r--   0 root         (0) root         (0)      943 2014-08-11 04:39:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      584 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/Makefile.inc
│ │ +-rwxrwxr-x   0 root         (0) root         (0)     2144 2014-08-10 19:33:52.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/genstring.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     7998 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-options.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2939 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-options.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     3444 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     1557 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    46053 2014-08-11 04:39:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    19043 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm.xml
│ │ +-rw-r--r--   0 root         (0) root         (0)     3158 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/genstring.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.422189 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1289 2014-08-11 05:36:24.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     2838 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)    21040 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/arch.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4077 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/assocdat.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2947 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/assocdat.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     8217 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-align.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    19643 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-data.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     8793 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-incbin.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     4933 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-org.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5170 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-reserve.c
│ │ +-rw-r--r--   0 root         (0) root         (0)   119974 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bitvect.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    30779 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bitvect.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    11380 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bytecode.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    26163 2014-08-10 19:33:52.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bytecode.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     3956 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/cmake-module.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    22421 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/compat-queue.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    15800 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/coretype.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     4558 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/dbgfmt.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    14156 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/errwarn.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    13725 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/errwarn.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    48141 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/expr.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15039 2014-08-10 19:33:52.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/expr.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    18659 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/file.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    19650 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/file.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    25048 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/floatnum.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5278 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/floatnum.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     6996 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/genmodule.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    14106 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/hamt.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5025 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/hamt.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     9097 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/insn.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    10123 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/insn.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    31410 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/intnum.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    11860 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/intnum.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    28794 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/inttree.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2290 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/inttree.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     8884 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/linemap.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5796 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/linemap.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     4687 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/listfmt.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    10798 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/md5.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     1030 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/md5.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    14443 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/mergesort.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     3146 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/module.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     5430 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/module.in
│ │ +-rw-r--r--   0 root         (0) root         (0)     8816 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/objfmt.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     2850 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/parser.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9529 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/phash.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      701 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/phash.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     8860 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/preproc.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    49257 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/section.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    14448 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/section.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     3323 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/strcasecmp.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     3195 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/strsep.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    20825 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/symrec.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15625 2014-08-10 19:33:52.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/symrec.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.451188 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)       10 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/1shl0.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/1shl0.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     4611 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       70 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/absloop-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/absloop-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     4548 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/bitvect_test.c
│ │ +-rw-r--r--   0 root         (0) root         (0)       31 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/charconst64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/charconst64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     5546 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/combpath_test.c
│ │ +-rw-r--r--   0 root         (0) root         (0)       17 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/data-rawvalue.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/data-rawvalue.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/duplabel-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      164 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/duplabel-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        6 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/emptydata.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/emptydata.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      204 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/equ-expand.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/equ-expand.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/expr-fold-level.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/expr-fold-level.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       87 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/expr-simplify-identity.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       52 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/expr-simplify-identity.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/expr-wide-ident.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/expr-wide-ident.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/externdef.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      122 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/externdef.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/externdef.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    13237 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/floatnum_test.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     1138 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/incbin.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       92 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/incbin.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1173 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/jmpsize1-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/jmpsize1-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     1091 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/jmpsize1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1060 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/jmpsize1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     6385 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/leb128_test.c
│ │ +-rwxr-xr-x   0 root         (0) root         (0)       90 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/libyasm_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       94 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-align1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1064 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-align1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-align2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1064 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-align2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      171 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-align3.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1088 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-align3.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-circular1-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-circular1-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       54 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-circular2-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-circular2-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-circular3-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-circular3-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)    14571 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2924 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       99 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-immexpand.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1052 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-immexpand.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-immnoexpand.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1044 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-immnoexpand.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-oldalign.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      140 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-oldalign.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      956 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-struc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-struc.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      146 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/reserve-err1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/reserve-err1.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      148 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/reserve-err2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      313 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/reserve-err2.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     5884 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/splitpath_test.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      182 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/strucsize.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/strucsize.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       45 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/times-res.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       73 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/times-res.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/times-res.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       13 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/times0.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/times0.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/timesfwd.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/timesfwd.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/timesover-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       33 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/timesover-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       37 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/timesunder.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      520 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/timesunder.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/unary.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/unary.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     5083 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/uncstring_test.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      127 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       54 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-mask.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-mask.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-mask.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-samesym.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       69 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-samesym.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-samesym.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-shr-symexpr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/value-shr-symexpr.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    10936 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/valparam.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    15898 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/valparam.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    28792 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/value.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     7670 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/value.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     3290 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/xmalloc.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2386 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/xstrdup.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)      807 2014-08-11 06:18:45.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm-stdint.h.cmake
│ │ +-rw-r--r--   0 root         (0) root         (0)     2374 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.462188 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/
│ │ +-rw-r--r--   0 root         (0) root         (0)      858 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)    23330 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/ax_create_stdint_h.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      745 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/codeset.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)      943 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/cython.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15245 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/gettext.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      805 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/glibc21.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9104 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/iconv.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)     1760 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/intdiv0.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      998 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/intmax.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)     1026 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/inttypes-pri.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      826 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/inttypes.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      915 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/inttypes_h.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      966 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/isc-posix.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)     1284 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lcmessage.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3683 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lib-ld.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)    33059 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lib-link.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)     8466 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lib-prefix.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)     1067 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/longdouble.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      782 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/longlong.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1229 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/nls.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18977 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/po.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)     1457 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/printf-posix.m4
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3104 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/progtest.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      912 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/pythonhead.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      620 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/signed.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)     1957 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/size_max.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      891 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/stdint_h.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)     1086 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/uintmax_t.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      909 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/ulonglong.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      726 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/wchar_t.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      708 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/wint_t.m4
│ │ +-rw-r--r--   0 root         (0) root         (0)      421 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/m4/xsize.m4
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.463188 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3814 2014-08-11 05:25:06.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      436 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.464188 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/
│ │ +-rw-r--r--   0 root         (0) root         (0)       67 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      377 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.466188 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/
│ │ +-rw-r--r--   0 root         (0) root         (0)      211 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      517 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     6070 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     3038 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     8620 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3bbc.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    16229 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3bid.re
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.471188 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      581 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       95 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-basic.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-basic.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-basic.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       92 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-br.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-br.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       14 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-ea-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-ea-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     5795 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      107 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.475188 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1397 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2041 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/Makefile.inc
│ │ +-rwxrwxr-x   0 root         (0) root         (0)   298190 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/gen_x86_insn.py
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.560187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)    12780 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      616 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      224 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      388 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addrop-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addrop-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      565 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1808 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/aes.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1424 2014-05-19 07:17:14.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/aes.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     3398 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2160 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      519 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      848 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      266 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/arithsmall.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/arithsmall.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      204 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/arithsmall.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    58486 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)    41328 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      207 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx16.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      208 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx16.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    23053 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     9188 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    29844 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)    15264 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       11 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bittest.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bittest.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1083 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      772 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1413 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      976 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bswap64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bswap64.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1070 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)      840 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       81 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/cmpxchg.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/cmpxchg.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/cpubasic-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      243 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/cpubasic-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      488 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/cyrix.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      344 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/cyrix.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       78 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/div-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      168 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/div-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      114 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-nonzero.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-nonzero.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       70 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-over.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-over.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-over.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      434 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-warn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      142 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-warn.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ea-warn.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ebpindex.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ebpindex.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      359 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/effaddr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      252 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/effaddr.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      105 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/enter.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/enter.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      104 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/enter.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/eptvpid.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/eptvpid.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      211 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/f16c.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      256 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/f16c.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      109 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/far64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      176 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/far64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       72 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/farbasic.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/farbasic.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      145 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/farithr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/farithr.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      134 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fcmov.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fcmov.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     9346 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fma.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     5760 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fma.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      115 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fsgsbase.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      144 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fsgsbase.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fwdequ64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fwdequ64.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.568187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1275 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      863 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2144 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      421 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farithr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farithr.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      198 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farjump.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1632 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farjump.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      115 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-fpmem.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-fpmem.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-invlpg.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-invlpg.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-loop32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-loop32.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      248 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movdq32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1760 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movdq32.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movsd.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movsd.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1151 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1824 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas32-jmpcall.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1856 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas32-jmpcall.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      125 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/x86_gas32_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.579187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1905 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      863 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2688 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-cbw.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2112 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-cbw.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      264 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-fp.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2688 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-fp.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      134 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-inout.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2112 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-inout.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-loop64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2112 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-loop64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      780 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2880 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       63 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movabs.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2688 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movabs.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      436 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movdq64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2560 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movdq64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      478 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movsxs.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2560 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movsxs.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      520 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2496 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       97 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      207 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      155 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-retenter.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-retenter.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      379 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-shift.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2304 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-shift.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas64-jmpcall.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2752 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas64-jmpcall.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       19 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/riprel.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2560 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/riprel.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      134 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/x86_gas64_test.sh
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     1755 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gen-fma-test.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     2294 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1980 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1389 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)      150 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      700 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      131 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/invpcid.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       76 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/invpcid.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       87 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/iret.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/iret.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-3.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-3.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-4.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-4.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-5.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)   262216 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-5.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-6.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmp64-6.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      746 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmpfar.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      156 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmpfar.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      772 2011-08-19 20:20:40.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/larlsl.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      712 2011-08-19 20:20:40.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/larlsl.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lds.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lds.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      142 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lfs64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      132 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lfs64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      138 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/loopadsz.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/loopadsz.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       60 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lsahf.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lsahf.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      239 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lzcnt.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      172 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/lzcnt.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      253 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      949 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)       49 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      576 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       50 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64hi32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64hi32.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64rip.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      140 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64rip.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mixcase.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mixcase.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      329 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movbe.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      704 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movbe.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      248 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movdq32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movdq32.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      366 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movdq64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      528 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movdq64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      108 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/negequ.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/negequ.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      110 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      658 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      122 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err2.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      581 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)       50 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      636 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       54 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/o64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/o64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/o64loop.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       42 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/o64loop.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/o64loop.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      199 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/opersize.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      120 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/opersize.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       37 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/opsize-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/opsize-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/overflow.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      295 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/overflow.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      148 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/overflow.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      161 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/padlock.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/padlock.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       99 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pinsrb.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       72 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pinsrb.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pshift.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      180 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pshift.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      105 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/push64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/push64.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/push64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      182 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushf-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      477 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushf-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      188 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushf.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushf.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1577 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      336 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      556 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       42 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/rdrnd.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/rdrnd.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/rep.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/rep.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      224 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ret.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      252 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ret.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2554 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1336 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2580 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1560 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     2816 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      626 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      358 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      680 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      121 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/segmov.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      116 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/segmov.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       88 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/segoff-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      194 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/segoff-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      143 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/segoff.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       60 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/segoff.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/shift.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/shift.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/shift64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/shift64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      203 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd-1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      268 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd-1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     3370 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1896 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      158 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      156 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd64-2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/smx.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/smx.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      352 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse-prefix.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      324 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse-prefix.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      478 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse3.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      472 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse3.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       59 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse4-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      122 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse4-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     3521 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     5388 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     8849 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     6128 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2045 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     5498 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     3976 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       90 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/stos.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/stos.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/str.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/str.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      266 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      156 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     4213 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1128 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     2168 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       51 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/stringseg.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       57 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/stringseg.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/stringseg.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      446 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/svm.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      416 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/svm.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      231 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/twobytemem.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/twobytemem.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      300 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/twobytemem.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       98 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vmx-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       78 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vmx-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      290 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vmx.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      332 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vmx.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      324 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      389 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     5582 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2648 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      323 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib2-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      279 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib2-err.errwarn
│ │ +-rwxr-xr-x   0 root         (0) root         (0)       96 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/x86_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       25 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/x86label.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/x86label.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      372 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xchg64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      224 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xchg64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xmm64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xmm64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    11366 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5748 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      317 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-basic.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      188 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-basic.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      880 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-cc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      432 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-cc.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       74 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xsave.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      120 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xsave.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)    24242 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86arch.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    13918 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86arch.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    37522 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86bc.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    15235 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86cpu.gperf
│ │ +-rw-rw-r--   0 root         (0) root         (0)    39188 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86expr.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    76389 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86id.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     7998 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86regtmod.gperf
│ │ +-rw-rw-r--   0 root         (0) root         (0)    16424 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/yasm_arch.xml
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.580187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/
│ │ +-rw-r--r--   0 root         (0) root         (0)      155 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      609 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.582187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/
│ │ +-rw-r--r--   0 root         (0) root         (0)      131 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      420 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     3586 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2393 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    36807 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-symline.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    35376 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-type.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3537 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv8.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.584187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/
│ │ +-rw-r--r--   0 root         (0) root         (0)      173 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      435 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     4821 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-aranges.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    11413 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     4925 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    13763 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-info.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    40473 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-line.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.584187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      485 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.585187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      277 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      142 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf2_gen64_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)      291 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf64_pathname.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     6528 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf64_pathname.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.587187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/
│ │ +-rw-r--r--   0 root         (0) root         (0)      415 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      150 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf2_pass32_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)      528 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      875 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)    13337 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)    23744 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.589187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      413 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      152 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf2_pass64_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_2loc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3520 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_2loc.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)   136081 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)   365120 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.591187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      382 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      161 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarf2_passwin64_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)    15863 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      872 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)    30296 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.592187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/null/
│ │ +-rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/null/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)       85 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/null/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     2208 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/null/null-dbgfmt.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.593187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      193 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)    18134 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/stabs-dbgfmt.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.594187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      220 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     2145 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     6528 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      194 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     3796 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/yasm_dbgfmts.xml
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.595187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/
│ │ +-rw-r--r--   0 root         (0) root         (0)       38 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)       93 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.596187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/nasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/nasm/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      196 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/nasm/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)    10766 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/nasm/nasm-listfmt.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.597187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/
│ │ +-rw-r--r--   0 root         (0) root         (0)      333 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     1133 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.598187 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/
│ │ +-rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      198 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)    65139 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/bin-objfmt.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.607186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1644 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       78 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/abs.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/abs.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      116 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bigorg.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       98 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bigorg.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bigorg.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1100 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-farabs.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      236 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-farabs.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      270 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-rip.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      184 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-rip.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      101 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     1373 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bintest.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      260 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bintest.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      365 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/float-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      414 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/float-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      215 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/float.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      192 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/float.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      175 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer-warn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      244 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer-warn.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer-warn.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      142 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/integer.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/levelop.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/levelop.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.623186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/
│ │ +-rw-r--r--   0 root         (0) root         (0)     3321 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      141 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      225 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1785 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      163 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-ssym.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      100 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-ssym.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      498 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-ssym.map
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     3744 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin_multi_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       56 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop1-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       67 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop1-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       26 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop2-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-loop2-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       25 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-notfound-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/follows-notfound-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      138 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      562 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.map
│ │ +-rw-r--r--   0 root         (0) root         (0)     2077 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)    45452 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     3856 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      774 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2053 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      808 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      264 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1939 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      101 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1462 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      687 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3072 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2538 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      505 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     7264 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     3636 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      105 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1473 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.map
│ │ +-rw-r--r--   0 root         (0) root         (0)      116 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1473 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.map
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop1-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop1-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       27 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop2-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       66 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-loop2-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       26 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-notfound-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       69 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/vfollows-notfound-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      110 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/reserve.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      292 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/reserve.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      932 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/reserve.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/shr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1040 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/shr.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.625186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/
│ │ +-rw-r--r--   0 root         (0) root         (0)      687 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      949 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)    92011 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     3139 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.629186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      531 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      107 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/coff_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     2120 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      914 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2628 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      209 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftimes.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1880 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftimes.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)   307325 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3187 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)   424040 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    19360 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/win64-except.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      999 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/win64-gas.mac
│ │ +-rw-r--r--   0 root         (0) root         (0)     1572 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/win64-nasm.mac
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.630186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/dbg/
│ │ +-rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/dbg/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)       82 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/dbg/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     6108 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/dbg/dbg-objfmt.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.633186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/
│ │ +-rw-rw-r--   0 root         (0) root         (0)      294 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)      540 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     4659 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-machine.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    47888 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-objfmt.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    10336 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-amd64.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     9838 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x32.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     9666 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x86.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    27650 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    23781 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.647186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3078 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.651186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      602 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf-rip.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2816 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf-rip.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      130 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf_amd64_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     2578 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     6720 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      187 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/gotpcrel.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2880 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/gotpcrel.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      127 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/multiplefixup.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3968 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/multiplefixup.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      431 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      433 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3328 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-overdef.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-overdef.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)   307913 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)   583200 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      177 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)      242 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfabssect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1696 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfabssect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       59 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfcond.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1664 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfcond.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      103 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfequabs.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1984 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfequabs.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      225 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobal.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1632 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobal.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      228 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext2.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     6048 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)    17856 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       71 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc-ext.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1856 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc-ext.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       90 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfsectalign.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1952 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfsectalign.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2646 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     4576 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2145 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      949 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     4128 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      209 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftimes.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2624 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftimes.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      223 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftypesize.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2208 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftypesize.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      176 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       67 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     1824 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.652186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/
│ │ +-rw-r--r--   0 root         (0) root         (0)      382 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      157 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_got.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_got.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      275 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_ssym.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2368 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_ssym.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      132 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.656186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      640 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      319 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/crosssect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3328 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/crosssect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      507 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_curpos.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     4992 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_curpos.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      504 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_reloc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     5568 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_reloc.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      182 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_ssym.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3520 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_ssym.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      134 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.659186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/
│ │ +-rw-rw-r--   0 root         (0) root         (0)      658 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)      319 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/crosssect.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2272 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/crosssect.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)      507 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_curpos.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3392 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_curpos.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)      504 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_reloc.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4064 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_reloc.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)      182 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_ssym.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2368 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_ssym.hex
│ │ +-rwxrwxr-x   0 root         (0) root         (0)      135 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       86 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-forceident.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1792 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-forceident.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      117 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-sectname.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2016 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-sectname.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.662186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/
│ │ +-rw-rw-r--   0 root         (0) root         (0)      580 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)      106 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf-rip.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1984 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf-rip.hex
│ │ +-rwxrwxr-x   0 root         (0) root         (0)      122 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf_x32_test.sh
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2578 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4704 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)      187 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/gotpcrel.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1984 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/gotpcrel.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)      127 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/multiplefixup.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2720 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/multiplefixup.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.663186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/
│ │ +-rw-r--r--   0 root         (0) root         (0)      150 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      224 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)    59448 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/macho-objfmt.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.663186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      469 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.665186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/
│ │ +-rw-r--r--   0 root         (0) root         (0)      260 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     2099 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2752 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      137 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas_macho32_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.667186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      396 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     1020 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1384 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     3632 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2664 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      137 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas_macho64_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.671186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1039 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      293 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho-reloc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1572 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho-reloc.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)       49 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pext.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)      808 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pext.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1188 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1352 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      231 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      455 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     3156 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1191 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1312 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      127 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     2200 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1192 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2768 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.674186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      605 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      397 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho-reloc64-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1187 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho-reloc64-err.errwarn
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      127 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho64_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     2527 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1681 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     4232 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1050 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1384 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.675186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/
│ │ +-rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      184 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)    35731 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/rdf-objfmt.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.681186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1088 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      105 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdf_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       69 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfabs.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      130 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfabs.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfabs.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      713 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1788 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      420 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      564 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      262 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      196 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1338 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1204 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      659 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1008 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      572 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      512 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1132 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      536 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      343 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/testlib.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      512 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/testlib.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.681186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/
│ │ +-rw-r--r--   0 root         (0) root         (0)      169 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.685186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1029 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/export.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1092 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/export.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.687186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/
│ │ +-rw-r--r--   0 root         (0) root         (0)      486 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      128 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32_gas_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     2358 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     6612 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32def.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      688 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32def.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1197 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3112 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      433 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-curpos.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1992 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-curpos.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-overdef.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      616 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-overdef.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       71 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1184 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.masm
│ │ +-rw-r--r--   0 root         (0) root         (0)       95 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-segof.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1120 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-segof.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      113 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     2120 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      914 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2700 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.687186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/
│ │ +-rw-r--r--   0 root         (0) root         (0)      180 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.695186 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1917 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.696185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/
│ │ +-rw-r--r--   0 root         (0) root         (0)      252 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      186 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64-gas-sce.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1596 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64-gas-sce.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      136 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64_gas_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)      549 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      395 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     1106 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1720 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      576 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2868 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1682 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3436 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1589 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.masm
│ │ +-rw-r--r--   0 root         (0) root         (0)      369 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      460 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      706 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2608 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      716 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.masm
│ │ +-rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-abs.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      684 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-abs.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      433 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-curpos.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1996 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-curpos.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     3464 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     9916 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     2793 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.masm
│ │ +-rw-r--r--   0 root         (0) root         (0)      205 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1372 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      183 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.masm
│ │ +-rw-rw-r--   0 root         (0) root         (0)       29 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-function.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)      616 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-function.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)      196 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-imagebase.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2048 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-imagebase.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      113 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.697185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/
│ │ +-rw-r--r--   0 root         (0) root         (0)       62 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      184 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.702185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      918 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdf-overdef.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      312 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdf-overdef.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      105 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdf_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     7201 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       51 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)   191424 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      265 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfother.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2312 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfother.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     5875 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     7224 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      340 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      971 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      331 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     3344 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      127 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfvirtual.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1292 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfvirtual.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)    28489 2014-08-10 18:39:20.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/xdf-objfmt.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5016 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/yasm_objfmts.xml
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.703185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/
│ │ +-rw-r--r--   0 root         (0) root         (0)       73 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      455 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.705185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/
│ │ +-rw-r--r--   0 root         (0) root         (0)      266 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      659 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     3415 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parse-intel.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    54687 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parse.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     4289 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5137 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    17005 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-token.re
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.717185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)     2505 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.725185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1780 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      359 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-comment.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       38 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-comment.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-comment.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      278 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-intel_syntax-noprefix.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      232 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-intel_syntax-noprefix.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      731 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2048 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      220 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-macro.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-macro.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      514 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-set.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       37 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-set.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       14 2011-08-19 20:20:40.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-str.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       12 2011-08-19 20:20:40.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-str.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      134 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas_bin_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/rept-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       39 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/rept-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptempty.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptempty.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)    11967 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptlong.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptlong.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptnested.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       30 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptnested.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       38 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptsimple.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptsimple.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptwarn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      434 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptwarn.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptwarn.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptzero.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptzero.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/dataref-imm.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2368 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/dataref-imm.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       74 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     3680 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      291 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2848 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       76 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/execsect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1728 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/execsect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       82 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-fill.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1696 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-fill.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-float.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-float.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-instlabel.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1504 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-instlabel.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       97 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      262 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line2-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      124 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-line2-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-push.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-push.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-segprefix.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-segprefix.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-semi.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1632 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-semi.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      117 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       55 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gassectalign.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1888 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gassectalign.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      169 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      173 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     1984 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      211 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/leb128.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1792 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/leb128.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      307 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/localcomm.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2176 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/localcomm.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       84 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       35 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       85 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/strzero.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1440 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/strzero.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/varinsn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     1792 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/varinsn.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.728185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)      523 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     1035 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)    60141 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parse.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     2768 2011-09-03 06:10:04.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser-struct.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     4232 2011-09-03 06:10:08.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     3802 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1943 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-std.mac
│ │ +-rw-r--r--   0 root         (0) root         (0)    25656 2011-09-03 06:10:12.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-token.re
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.739185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2661 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop16.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop16.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop32.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       68 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/alignnop32.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       21 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/charconstmath.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/charconstmath.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       13 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/dirwarning.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       57 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/dirwarning.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/dirwarning.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      106 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/dy.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/dy.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/endcomma.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/endcomma.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/equcolon.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/equcolon.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       70 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/equlocal.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/equlocal.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/hexconst.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/hexconst.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      197 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       51 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel2.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/locallabel2.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       18 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/long.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/long.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       34 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/nasm-prefix.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/nasm-prefix.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      111 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/nasm_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)      181 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/newsect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/newsect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/orphannowarn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/orphannowarn.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       47 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/prevlocalwarn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       49 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/prevlocalwarn.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/prevlocalwarn.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      180 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucalign.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       80 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucalign.hex
│ │ +-rw-rw-r--   0 root         (0) root         (0)      173 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucbase.asm
│ │ +-rw-rw-r--   0 root         (0) root         (0)       16 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/strucbase.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       74 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/struczero.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/struczero.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      146 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/syntax-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      684 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/syntax-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)      136 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/uscore.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      128 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/uscore.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.740185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/
│ │ +-rw-r--r--   0 root         (0) root         (0)      332 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/Makefile.inc
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      135 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/nasm_worphan_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)      111 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/orphanwarn.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      138 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/orphanwarn.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       32 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/worphan/orphanwarn.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.740185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)      103 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.751185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)     2044 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       23 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/array.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/array.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       21 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/case.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/case.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/charstr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/charstr.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/dup.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/dup.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       11 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/equal.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/equal.hex
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.752185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/
│ │ +-rw-r--r--   0 root         (0) root         (0)      227 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/exe.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)     2060 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/exe.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      126 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/tasm_exe_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       64 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/expr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        8 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/expr.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/irp.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       36 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/irp.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       29 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/label.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/label.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       16 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/les.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/les.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/lidt.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/lidt.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       48 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/macro.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/macro.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       40 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/offset.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/offset.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/quote.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/quote.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       22 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/res.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      146 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/res.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/res.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       92 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/segment.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/segment.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       15 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/size.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       24 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/size.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       58 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/struc.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       73 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/struc.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       20 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/struc.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      119 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/tasm_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     3058 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/yasm_parsers.xml
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.753185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/
│ │ +-rw-r--r--   0 root         (0) root         (0)      149 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      455 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.753185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/cpp/
│ │ +-rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/cpp/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      152 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/cpp/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)    11058 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/cpp/cpp-preproc.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.755185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/
│ │ +-rw-r--r--   0 root         (0) root         (0)       93 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      295 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)    10665 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     4975 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)    41956 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/gas-preproc.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.755185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      218 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/tests/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.759185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)      729 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     1353 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2859 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/genversion.c
│ │ +-rw-r--r--   0 root         (0) root         (0)    10544 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-eval.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      479 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-eval.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)   172102 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      558 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     8948 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-preproc.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     9587 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     4635 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     1985 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.765185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      325 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/16args.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      384 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/16args.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)     1348 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      228 2011-09-02 22:06:57.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/ifcritical-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       46 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/ifcritical-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)     8525 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/longline.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      256 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/longline.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       13 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/macroeof-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       57 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/macroeof-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       52 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-bigint.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        4 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-bigint.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      157 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-decimal.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       96 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-decimal.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      409 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-nested.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       91 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-nested.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp-nested.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      108 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/nasmpp_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       28 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/noinclude-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       60 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/noinclude-err.errwarn
│ │ +-rw-r--r--   0 root         (0) root         (0)       61 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/orgsect.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       12 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/orgsect.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)      125 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/scope-err.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)      134 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/scope-err.errwarn
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.766185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/
│ │ +-rw-r--r--   0 root         (0) root         (0)       65 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      189 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     4822 2011-10-03 06:14:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/raw-preproc.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.767185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      214 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      517 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/tests/longline.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/tests/longline.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      112 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/tests/rawpp_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.767185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)      105 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.769185 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      372 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      117 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-assume-comment.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)        0 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-assume-comment.hex
│ │ +-rw-r--r--   0 root         (0) root         (0)       33 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-comment-instr.asm
│ │ +-rw-r--r--   0 root         (0) root         (0)       44 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasm-comment-instr.hex
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      116 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/tasm/tests/tasmpp_test.sh
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     3283 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/out_test.sh
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.769185 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/
│ │ +-rw-r--r--   0 root         (0) root         (0)      829 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/README
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.770185 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/dbg/
│ │ +-rw-r--r--   0 root         (0) root         (0)     1212 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/dbg/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      474 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/dbg/README
│ │ +-rw-r--r--   0 root         (0) root         (0)     5946 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/dbg/dbg-objfmt.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      248 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/dbg/init_plugin.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.771185 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/x86/
│ │ +-rw-r--r--   0 root         (0) root         (0)     3664 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/x86/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      455 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/x86/README
│ │ +-rw-r--r--   0 root         (0) root         (0)      242 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/x86/init_plugin.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.775184 simplejpeg-1.6.6/lib/yasm-1.3.0/po/
│ │ +-rw-rw-r--   0 root         (0) root         (0)      236 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/ChangeLog
│ │ +-rw-rw-r--   0 root         (0) root         (0)    16659 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/Makefile.in.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2376 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/Makevars
│ │ +-rw-r--r--   0 root         (0) root         (0)     1718 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/POTFILES.in
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1801 2014-08-10 18:39:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/Rules-quot
│ │ +-rw-r--r--   0 root         (0) root         (0)      217 2014-08-10 17:20:08.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/boldquot.sed
│ │ +-rw-r--r--   0 root         (0) root         (0)     1337 2014-08-10 17:20:08.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/en@boldquot.header
│ │ +-rw-r--r--   0 root         (0) root         (0)     1203 2014-08-10 17:20:08.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/en@quot.header
│ │ +-rw-r--r--   0 root         (0) root         (0)      672 2014-08-10 17:20:08.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/insert-header.sin
│ │ +-rw-r--r--   0 root         (0) root         (0)      153 2014-08-10 17:20:08.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/quot.sed
│ │ +-rw-r--r--   0 root         (0) root         (0)      432 2014-08-10 17:20:08.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/remove-potcdate.sin
│ │ +-rw-rw-r--   0 root         (0) root         (0)       10 2014-08-11 05:26:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/stamp-po
│ │ +-rw-rw-r--   0 root         (0) root         (0)    59434 2014-08-11 05:26:35.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/po/yasm.pot
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     2210 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/splint.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)     2017 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/test_hd.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.775184 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/
│ │ +-rw-rw-r--   0 root         (0) root         (0)       76 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)      309 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/Makefile.inc
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.776185 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genmacro/
│ │ +-rw-r--r--   0 root         (0) root         (0)       45 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genmacro/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)      500 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genmacro/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     4102 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genmacro/genmacro.c
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.778185 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/
│ │ +-rw-rw-r--   0 root         (0) root         (0)      212 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/CMakeLists.txt
│ │ +-rw-rw-r--   0 root         (0) root         (0)     1635 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/Makefile.inc
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17718 2014-08-10 07:41:25.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/genperf.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    40479 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/perfect.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)     5695 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/perfect.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)      916 2014-05-17 18:08:26.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/standard.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.780185 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/
│ │ +-rw-r--r--   0 root         (0) root         (0)     2804 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     4003 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/bytecode.pxi
│ │ +-rw-r--r--   0 root         (0) root         (0)     3098 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/errwarn.pxi
│ │ +-rw-r--r--   0 root         (0) root         (0)     5653 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/expr.pxi
│ │ +-rw-r--r--   0 root         (0) root         (0)     2174 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/floatnum.pxi
│ │ +-rw-r--r--   0 root         (0) root         (0)     7017 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/intnum.pxi
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.782184 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/
│ │ +-rwxr-xr-x   0 root         (0) root         (0)    21080 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/cparse.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)    18513 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/genpyx.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)    35563 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/ir.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     6716 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/lexer.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     8966 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/node.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     2686 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/parse_core.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     5971 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/work_unit.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     1294 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/wrap_yasm.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     3508 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/setup.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     9852 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/symrec.pxi
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.784185 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/
│ │ +-rw-r--r--   0 root         (0) root         (0)      434 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)     1996 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/__init__.py
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      616 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/python_test.sh
│ │ +-rw-r--r--   0 root         (0) root         (0)       71 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/test_bytecode.py
│ │ +-rw-r--r--   0 root         (0) root         (0)      521 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/test_expr.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     1974 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/test_intnum.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     2976 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/test_symrec.py
│ │ +-rw-r--r--   0 root         (0) root         (0)     2447 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/value.pxi
│ │ +-rw-r--r--   0 root         (0) root         (0)     4896 2011-08-20 18:17:17.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/yasm.pyx
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.791184 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/
│ │ +-rw-r--r--   0 root         (0) root         (0)      445 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/CHANGELOG
│ │ +-rw-r--r--   0 root         (0) root         (0)      145 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/CMakeLists.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)     3815 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/Makefile.inc
│ │ +-rw-r--r--   0 root         (0) root         (0)      142 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/NO_WARRANTY
│ │ +-rw-r--r--   0 root         (0) root         (0)     5066 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/README
│ │ +-rw-r--r--   0 root         (0) root         (0)    14764 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/actions.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      251 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/basics.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.791184 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/bootstrap/
│ │ +-rw-r--r--   0 root         (0) root         (0)    15237 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/bootstrap/scanner.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    21478 2014-05-11 21:58:10.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/code.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5264 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/dfa.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     3453 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/dfa.h
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.792184 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/doc/
│ │ +-rw-r--r--   0 root         (0) root         (0)    69080 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/doc/loplas.ps.gz
│ │ +-rw-r--r--   0 root         (0) root         (0)     2454 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/doc/sample.bib
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.794184 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/
│ │ +-rw-r--r--   0 root         (0) root         (0)      499 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/basemmap.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5445 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/c.re
│ │ +-rw-r--r--   0 root         (0) root         (0)     5286 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/cmmap.re
│ │ +-rw-r--r--   0 root         (0) root         (0)     4581 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/cnokw.re
│ │ +-rw-r--r--   0 root         (0) root         (0)     5091 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/cunroll.re
│ │ +-rw-r--r--   0 root         (0) root         (0)     4840 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/modula.re
│ │ +-rw-r--r--   0 root         (0) root         (0)      733 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/repeater.re
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.795184 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/rexx/
│ │ +-rw-r--r--   0 root         (0) root         (0)       71 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/rexx/README
│ │ +-rw-r--r--   0 root         (0) root         (0)     5491 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/rexx/rexx.l
│ │ +-rw-r--r--   0 root         (0) root         (0)     1250 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/rexx/scanio.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      139 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/sample.re
│ │ +-rw-r--r--   0 root         (0) root         (0)      222 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/simple.re
│ │ +-rw-r--r--   0 root         (0) root         (0)      537 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/globals.h
│ │ +-rw-r--r--   0 root         (0) root         (0)      537 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/ins.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     4279 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/main.c
│ │ +-rwxr-xr-x   0 root         (0) root         (0)     3207 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/mbo_getopt.c
│ │ +-rwxr-xr-x   0 root         (0) root         (0)      523 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/mbo_getopt.h
│ │ +-rw-r--r--   0 root         (0) root         (0)      544 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/parse.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     4771 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/parser.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      473 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/parser.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     3471 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/re.h
│ │ +-rw-r--r--   0 root         (0) root         (0)    15628 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/re2c.1
│ │ +-rw-r--r--   0 root         (0) root         (0)    15247 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/scanner.c
│ │ +-rw-r--r--   0 root         (0) root         (0)      833 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/scanner.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     5505 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/scanner.re
│ │ +-rw-r--r--   0 root         (0) root         (0)     1073 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/substr.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     1652 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/substr.h
│ │ +-rw-r--r--   0 root         (0) root         (0)      508 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/token.h
│ │ +-rw-r--r--   0 root         (0) root         (0)     4171 2011-03-23 03:24:32.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/translate.c
│ │ +-rw-r--r--   0 root         (0) root         (0)     5011 2011-08-27 23:13:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/util.h
│ │ +-rw-rw-r--   0 root         (0) root         (0)        6 2014-08-11 06:19:19.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/version
│ │ +-rw-rw-r--   0 root         (0) root         (0)   139465 2014-08-10 07:46:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/x86insn_gas.gperf
│ │ +-rw-rw-r--   0 root         (0) root         (0)   100128 2014-08-10 07:46:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/x86insn_nasm.gperf
│ │ +-rw-rw-r--   0 root         (0) root         (0)   149849 2014-08-10 07:46:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/x86insns.c
│ │ +-rw-rw-r--   0 root         (0) root         (0)    12374 2014-05-12 01:24:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/yasm.1
│ │ +-rw-rw-r--   0 root         (0) root         (0)    17124 2014-05-12 01:24:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_arch.7
│ │ +-rw-rw-r--   0 root         (0) root         (0)     3120 2014-05-12 01:24:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_dbgfmts.7
│ │ +-rw-rw-r--   0 root         (0) root         (0)     4499 2014-05-12 01:24:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_objfmts.7
│ │ +-rw-rw-r--   0 root         (0) root         (0)     2326 2014-05-12 01:24:21.000000 simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_parsers.7
│ │ +-rw-rw-rw-   0 root         (0) root         (0)      168 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/pyproject.toml
│ │ +-rw-rw-rw-   0 root         (0) root         (0)        5 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/requirements.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)       38 2023-04-06 18:51:41.808184 simplejpeg-1.6.6/setup.cfg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    11447 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/setup.py
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.798184 simplejpeg-1.6.6/simplejpeg/
│ │ +-rw-rw-rw-   0 root         (0) root         (0)      527 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/simplejpeg/__init__.py
│ │ +-rw-rw-rw-   0 root         (0) root         (0)      948 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/simplejpeg/_color.c
│ │ +-rw-rw-rw-   0 root         (0) root         (0)      219 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/simplejpeg/_color.h
│ │ +-rw-r--r--   0 root         (0) root         (0)   730316 2023-04-06 18:51:40.000000 simplejpeg-1.6.6/simplejpeg/_jpeg.c
│ │ +-rw-rw-rw-   0 root         (0) root         (0)     3642 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/simplejpeg/_jpeg.pyi
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    15834 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/simplejpeg/_jpeg.pyx
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.800184 simplejpeg-1.6.6/simplejpeg.egg-info/
│ │ +-rw-r--r--   0 root         (0) root         (0)     6754 2023-04-06 18:51:40.000000 simplejpeg-1.6.6/simplejpeg.egg-info/PKG-INFO
│ │ +-rw-r--r--   0 root         (0) root         (0)    98685 2023-04-06 18:51:41.000000 simplejpeg-1.6.6/simplejpeg.egg-info/SOURCES.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)        1 2023-04-06 18:51:40.000000 simplejpeg-1.6.6/simplejpeg.egg-info/dependency_links.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)        1 2023-04-06 18:51:40.000000 simplejpeg-1.6.6/simplejpeg.egg-info/not-zip-safe
│ │ +-rw-r--r--   0 root         (0) root         (0)        6 2023-04-06 18:51:40.000000 simplejpeg-1.6.6/simplejpeg.egg-info/requires.txt
│ │ +-rw-r--r--   0 root         (0) root         (0)       11 2023-04-06 18:51:40.000000 simplejpeg-1.6.6/simplejpeg.egg-info/top_level.txt
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.801184 simplejpeg-1.6.6/test/
│ │ +-rw-rw-rw-   0 root         (0) root         (0)      757 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/convert_originals.py
│ │ +drwxr-xr-x   0 root         (0) root         (0)        0 2023-04-06 18:51:41.808184 simplejpeg-1.6.6/test/images/
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    31046 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/airplane.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    16443 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/arctichare.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    48713 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/baboon.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    31031 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/barbara.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    27333 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/boat.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    50804 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/boy.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)     7382 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/cameraman.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    47003 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/cat.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    64441 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/fprint3.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    27537 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/fruits.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    33777 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/girl.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    41779 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/goldhill.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    48437 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/lena.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    61538 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/monarch.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    98077 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/mountain.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    45454 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/peppers.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    12287 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/pool.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    99814 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/sails.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    75926 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/tulips.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)   162884 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/us021.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)   132198 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/us092.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)    74455 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/images/zelda.jpg
│ │ +-rw-rw-rw-   0 root         (0) root         (0)     5113 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/test_decode.py
│ │ +-rw-rw-rw-   0 root         (0) root         (0)     3725 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/test_encode.py
│ │ +-rw-rw-rw-   0 root         (0) root         (0)      608 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test/test_util.py
│ │ +-rw-rw-rw-   0 root         (0) root         (0)       34 2023-04-06 18:51:10.000000 simplejpeg-1.6.6/test_requirements.txt
│ │   --- simplejpeg-1.6.5/LICENSE
│ ├── +++ simplejpeg-1.6.6/LICENSE
│ │┄ Files 0% similar despite different names
│ │ @@ -23,15 +23,15 @@
│ │  
│ │  From hereon included are the license texts of all bundled software.
│ │  
│ │  
│ │  
│ │  
│ │  ================================================================================
│ │ -Content of: /builds/jfolz/simplejpeg/lib/libjpeg-turbo-2.1.4/LICENSE.md
│ │ +Content of: /builds/jfolz/simplejpeg/lib/libjpeg-turbo-2.1.5.1/LICENSE.md
│ │  ================================================================================
│ │  
│ │  
│ │  libjpeg-turbo Licenses
│ │  ======================
│ │  
│ │  libjpeg-turbo is covered by three compatible BSD-style open source licenses:
│ │ @@ -120,15 +120,15 @@
│ │      - Modified BSD License
│ │      - zlib License
│ │  
│ │  
│ │  The Modified (3-clause) BSD License
│ │  ===================================
│ │  
│ │ -Copyright (C)2009-2022 D. R. Commander.  All Rights Reserved.<br>
│ │ +Copyright (C)2009-2023 D. R. Commander.  All Rights Reserved.<br>
│ │  Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.
│ │  
│ │  Redistribution and use in source and binary forms, with or without
│ │  modification, are permitted provided that the following conditions are met:
│ │  
│ │  - Redistributions of source code must retain the above copyright notice,
│ │    this list of conditions and the following disclaimer.
│ │ @@ -165,15 +165,15 @@
│ │  that were granted to the IJG for code derived from their software.
│ │  
│ │  
│ │  
│ │  
│ │  
│ │  ================================================================================
│ │ -Content of: /builds/jfolz/simplejpeg/lib/libjpeg-turbo-2.1.4/README.ijg
│ │ +Content of: /builds/jfolz/simplejpeg/lib/libjpeg-turbo-2.1.5.1/README.ijg
│ │  ================================================================================
│ │  
│ │  
│ │  libjpeg-turbo note:  This file has been modified by The libjpeg-turbo Project
│ │  to include only information relevant to libjpeg-turbo, to wordsmith certain
│ │  sections, and to remove impolitic language that existed in the libjpeg v8
│ │  README.  It is included only for reference.  Please see README.md for
│ │   --- simplejpeg-1.6.5/PKG-INFO
│ ├── +++ simplejpeg-1.6.6/PKG-INFO
│ │┄ Files 0% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: simplejpeg
│ │ -Version: 1.6.5
│ │ +Version: 1.6.6
│ │  Summary: A simple package for fast JPEG encoding and decoding.
│ │  Author: Joachim Folz
│ │  Author-email: joachim.folz@dfki.de
│ │  License: MIT
│ │  Project-URL: Documentation, https://gitlab.com/jfolz/simplejpeg/blob/master/README.rst
│ │  Project-URL: Source, https://gitlab.com/jfolz/simplejpeg
│ │  Project-URL: Tracker, https://gitlab.com/jfolz/simplejpeg/issues
│ │   --- simplejpeg-1.6.5/README.rst
│ ├── +++ simplejpeg-1.6.6/README.rst
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/BUILDING.md
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/BUILDING.md
│ │┄ Files 1% similar despite different names
│ │ @@ -21,17 +21,17 @@
│ │         libjpeg-turbo, then NASM 2.14 or later or Yasm must be used when
│ │         building libjpeg-turbo.
│ │    * If NASM or Yasm is not in your `PATH`, then you can specify the full path
│ │      to the assembler by using either the `CMAKE_ASM_NASM_COMPILER` CMake
│ │      variable or the `ASM_NASM` environment variable.  On Windows, use forward
│ │      slashes rather than backslashes in the path (for example,
│ │      **c:/nasm/nasm.exe**).
│ │ -  * NASM and Yasm are located in the CRB (Code Ready Builder) repository on
│ │ -    Red Hat Enterprise Linux 8 and in the PowerTools repository on RHEL
│ │ -    derivatives, which is not enabled by default.
│ │ +  * NASM and Yasm are located in the CRB (Code Ready Builder) or PowerTools
│ │ +    repository on Red Hat Enterprise Linux 8+ and derivatives, which is not
│ │ +    enabled by default.
│ │  
│ │  ### Un*x Platforms (including Linux, Mac, FreeBSD, Solaris, and Cygwin)
│ │  
│ │  - GCC v4.1 (or later) or Clang recommended for best performance
│ │  
│ │  - If building the TurboJPEG Java wrapper, JDK or OpenJDK 1.5 or later is
│ │    required.  Most modern Linux distributions, as well as Solaris 10 and later,
│ │ @@ -368,17 +368,21 @@
│ │      set(CMAKE_RC_COMPILER {mingw_binary_path}/i686-w64-mingw32-windres)
│ │  
│ │  *{mingw\_binary\_path}* is the directory under which the MinGW binaries are
│ │  located (usually **/usr/bin**.)  Next, execute the following commands:
│ │  
│ │      cd {build_directory}
│ │      cmake -G"Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake \
│ │ +      -DCMAKE_INSTALL_PREFIX={install_path} \
│ │        [additional CMake flags] {source_directory}
│ │      make
│ │  
│ │ +*{install\_path}* is the path under which the libjpeg-turbo binaries should be
│ │ +installed.
│ │ +
│ │  
│ │  ### 64-bit MinGW Build on Un*x (including Mac and Cygwin)
│ │  
│ │  Create a file called **toolchain.cmake** under *{build_directory}*, with the
│ │  following contents:
│ │  
│ │      set(CMAKE_SYSTEM_NAME Windows)
│ │ @@ -387,17 +391,21 @@
│ │      set(CMAKE_RC_COMPILER {mingw_binary_path}/x86_64-w64-mingw32-windres)
│ │  
│ │  *{mingw\_binary\_path}* is the directory under which the MinGW binaries are
│ │  located (usually **/usr/bin**.)  Next, execute the following commands:
│ │  
│ │      cd {build_directory}
│ │      cmake -G"Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake \
│ │ +      -DCMAKE_INSTALL_PREFIX={install_path} \
│ │        [additional CMake flags] {source_directory}
│ │      make
│ │  
│ │ +*{install\_path}* is the path under which the libjpeg-turbo binaries should be
│ │ +installed.
│ │ +
│ │  
│ │  Building libjpeg-turbo for iOS
│ │  ------------------------------
│ │  
│ │  iOS platforms, such as the iPhone and iPad, use Arm processors, and all
│ │  currently supported models include Neon instructions.  Thus, they can take
│ │  advantage of libjpeg-turbo's SIMD extensions to significantly accelerate JPEG
│ │ @@ -425,14 +433,18 @@
│ │      EOF
│ │  
│ │      cmake -G"Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake \
│ │        -DCMAKE_OSX_SYSROOT=${IOS_SYSROOT[0]} \
│ │        [additional CMake flags] {source_directory}
│ │      make
│ │  
│ │ +Replace `iPhoneOS` with `iPhoneSimulator` and `-miphoneos-version-min` with
│ │ +`-miphonesimulator-version-min` to build libjpeg-turbo for the iOS simulator on
│ │ +Macs with Apple silicon CPUs.
│ │ +
│ │  
│ │  Building libjpeg-turbo for Android
│ │  ----------------------------------
│ │  
│ │  Building libjpeg-turbo for Android platforms requires v13b or later of the
│ │  [Android NDK](https://developer.android.com/tools/sdk/ndk).
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/CMakeLists.txt
│ │┄ Files 3% similar despite different names
│ │ @@ -6,16 +6,16 @@
│ │  endif()
│ │  
│ │  if(CMAKE_EXECUTABLE_SUFFIX)
│ │    set(CMAKE_EXECUTABLE_SUFFIX_TMP ${CMAKE_EXECUTABLE_SUFFIX})
│ │  endif()
│ │  
│ │  project(libjpeg-turbo C)
│ │ -set(VERSION 2.1.4)
│ │ -set(COPYRIGHT_YEAR "1991-2022")
│ │ +set(VERSION 2.1.5.1)
│ │ +set(COPYRIGHT_YEAR "1991-2023")
│ │  string(REPLACE "." ";" VERSION_TRIPLET ${VERSION})
│ │  list(GET VERSION_TRIPLET 0 VERSION_MAJOR)
│ │  list(GET VERSION_TRIPLET 1 VERSION_MINOR)
│ │  list(GET VERSION_TRIPLET 2 VERSION_REVISION)
│ │  function(pad_number NUMBER OUTPUT_LEN)
│ │    string(LENGTH "${${NUMBER}}" INPUT_LEN)
│ │    if(INPUT_LEN LESS OUTPUT_LEN)
│ │ @@ -36,14 +36,23 @@
│ │  # build.  (Specifically, when CMAKE_MACOSX_BUNDLE is TRUE, executables for
│ │  # Apple platforms are built as application bundles, which causes CMake to
│ │  # complain that our install() directives for executables do not specify a
│ │  # BUNDLE DESTINATION.  Even if CMake did not complain, building executables as
│ │  # application bundles would break our iOS packages.)
│ │  set(CMAKE_MACOSX_BUNDLE FALSE)
│ │  
│ │ +get_property(GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY
│ │ +  GENERATOR_IS_MULTI_CONFIG)
│ │ +# If the GENERATOR_IS_MULTI_CONFIG property doesn't exist (CMake < 3.9), then
│ │ +# set the GENERATOR_IS_MULTI_CONFIG variable manually if the generator is
│ │ +# Visual Studio or Xcode (the only multi-config generators in CMake < 3.9).
│ │ +if(NOT GENERATOR_IS_MULTI_CONFIG AND (MSVC_IDE OR XCODE))
│ │ +  set(GENERATOR_IS_MULTI_CONFIG TRUE)
│ │ +endif()
│ │ +
│ │  string(TIMESTAMP DEFAULT_BUILD "%Y%m%d")
│ │  set(BUILD ${DEFAULT_BUILD} CACHE STRING "Build string (default: ${DEFAULT_BUILD})")
│ │  
│ │  # NOTE: On Windows, this does nothing except when using MinGW or Cygwin.
│ │  # CMAKE_BUILD_TYPE has no meaning in Visual Studio, and it always defaults to
│ │  # Debug when using NMake.
│ │  if(NOT CMAKE_BUILD_TYPE)
│ │ @@ -283,14 +292,24 @@
│ │    set(MEM_SRCDST_SUPPORTED 1)
│ │    set(MEM_SRCDST_FUNCTIONS "global:  jpeg_mem_dest;  jpeg_mem_src;")
│ │  endif()
│ │  if(NOT WITH_JPEG8)
│ │    report_option(WITH_MEM_SRCDST "In-memory source/destination managers")
│ │  endif()
│ │  
│ │ +# 0: Original libjpeg v6b/v7/v8 API/ABI
│ │ +#
│ │ +# libjpeg v6b/v7 API/ABI emulation:
│ │ +# 1: + In-memory source/destination managers (libjpeg-turbo 1.3.x)
│ │ +# 2: + Partial image decompression functions (libjpeg-turbo 1.5.x)
│ │ +# 3: + ICC functions (libjpeg-turbo 2.0.x)
│ │ +#
│ │ +# libjpeg v8 API/ABI emulation:
│ │ +# 1: + Partial image decompression functions (libjpeg-turbo 1.5.x)
│ │ +# 2: + ICC functions (libjpeg-turbo 2.0.x)
│ │  set(SO_AGE 2)
│ │  if(WITH_MEM_SRCDST)
│ │    set(SO_AGE 3)
│ │  endif()
│ │  
│ │  if(WITH_JPEG8)
│ │    set(JPEG_LIB_VERSION 80)
│ │ @@ -333,16 +352,27 @@
│ │  message(STATUS "Emulating libjpeg API/ABI v${JPEG_LIB_VERSION_DECIMAL} (WITH_JPEG7 = ${WITH_JPEG7}, WITH_JPEG8 = ${WITH_JPEG8})")
│ │  message(STATUS "libjpeg API shared library version = ${SO_MAJOR_VERSION}.${SO_AGE}.${SO_MINOR_VERSION}")
│ │  
│ │  # Because the TurboJPEG API library uses versioned symbols and changes the
│ │  # names of functions whenever they are modified in a backward-incompatible
│ │  # manner, it is always backward-ABI-compatible with itself, so the major and
│ │  # minor SO versions don't change.  However, we increase the middle number (the
│ │ -# SO "age") whenever functions are added to the API.
│ │ +# SO "age") whenever functions are added to the API, because adding functions
│ │ +# affects forward API/ABI compatibility.
│ │  set(TURBOJPEG_SO_MAJOR_VERSION 0)
│ │ +# 0: TurboJPEG 1.3.x API
│ │ +# 1: TurboJPEG 1.4.x API
│ │ +#    The TurboJPEG 1.5.x API modified some of the function prototypes, adding
│ │ +#    the const keyword in front of pointers to unmodified buffers, but that did
│ │ +#    not affect forward API/ABI compatibility.
│ │ +# 2: TurboJPEG 2.0.x API
│ │ +#    The TurboJPEG 2.1.x API modified the behavior of the tjDecompressHeader3()
│ │ +#    function so that it accepts "abbreviated table specification" (AKA
│ │ +#    "tables-only") datastreams as well as JPEG images, but that did not affect
│ │ +#    forward API/ABI compatibility.
│ │  set(TURBOJPEG_SO_AGE 2)
│ │  set(TURBOJPEG_SO_VERSION 0.${TURBOJPEG_SO_AGE}.0)
│ │  
│ │  
│ │  ###############################################################################
│ │  # COMPILER SETTINGS
│ │  ###############################################################################
│ │ @@ -460,27 +490,25 @@
│ │    endif()
│ │  endforeach()
│ │  if(NOT INLINE_WORKS)
│ │    message(FATAL_ERROR "Could not determine how to inline functions.")
│ │  endif()
│ │  message(STATUS "INLINE = ${INLINE} (FORCE_INLINE = ${FORCE_INLINE})")
│ │  
│ │ -if(WITH_TURBOJPEG)
│ │ -  if(MSVC)
│ │ -    set(THREAD_LOCAL "__declspec(thread)")
│ │ -  else()
│ │ -    set(THREAD_LOCAL "__thread")
│ │ -  endif()
│ │ -  check_c_source_compiles("${THREAD_LOCAL} int i;  int main(void) { i = 0;  return i; }" HAVE_THREAD_LOCAL)
│ │ -  if(HAVE_THREAD_LOCAL)
│ │ -    message(STATUS "THREAD_LOCAL = ${THREAD_LOCAL}")
│ │ -  else()
│ │ -    message(WARNING "Thread-local storage is not available.  The TurboJPEG API library's global error handler will not be thread-safe.")
│ │ -    unset(THREAD_LOCAL)
│ │ -  endif()
│ │ +if(MSVC)
│ │ +  set(THREAD_LOCAL "__declspec(thread)")
│ │ +else()
│ │ +  set(THREAD_LOCAL "__thread")
│ │ +endif()
│ │ +check_c_source_compiles("${THREAD_LOCAL} int i;  int main(void) { i = 0;  return i; }" HAVE_THREAD_LOCAL)
│ │ +if(HAVE_THREAD_LOCAL)
│ │ +  message(STATUS "THREAD_LOCAL = ${THREAD_LOCAL}")
│ │ +else()
│ │ +  message(WARNING "Thread-local storage is not available.  The TurboJPEG API library's global error handler will not be thread-safe.")
│ │ +  unset(THREAD_LOCAL)
│ │  endif()
│ │  
│ │  if(UNIX AND NOT APPLE)
│ │    file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/conftest.map "VERS_1 { global: *; };")
│ │    set(CMAKE_REQUIRED_FLAGS
│ │      "-Wl,--version-script,${CMAKE_CURRENT_BINARY_DIR}/conftest.map")
│ │    check_c_source_compiles("int main(void) { return 0; }" HAVE_VERSION_SCRIPT)
│ │ @@ -709,15 +737,15 @@
│ │    add_subdirectory(fuzz)
│ │  endif()
│ │  
│ │  add_executable(strtest strtest.c)
│ │  
│ │  add_subdirectory(md5)
│ │  
│ │ -if(MSVC_IDE OR XCODE)
│ │ +if(GENERATOR_IS_MULTI_CONFIG)
│ │    set(OBJDIR "\${CTEST_CONFIGURATION_TYPE}/")
│ │  else()
│ │    set(OBJDIR "")
│ │  endif()
│ │  
│ │  enable_testing()
│ │  
│ │ @@ -1388,22 +1416,23 @@
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjexampletest
│ │        COMMAND echo tjbenchtest.java
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest.java
│ │        COMMAND echo tjbenchtest.java -yuv
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest.java -yuv
│ │        COMMAND echo tjbenchtest.java -progressive
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest.java -progressive
│ │ -      COMMAND echo tjexampletest.java -progressive -yuv
│ │ +      COMMAND echo tjbenchtest.java -progressive -yuv
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest.java
│ │          -progressive -yuv
│ │        COMMAND echo tjexampletest.java
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjexampletest.java
│ │        DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest
│ │          ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest.java
│ │ -        ${CMAKE_CURRENT_BINARY_DIR}/tjexampletest)
│ │ +        ${CMAKE_CURRENT_BINARY_DIR}/tjexampletest
│ │ +        ${CMAKE_CURRENT_BINARY_DIR}/tjexampletest.java)
│ │    else()
│ │      add_custom_target(tjtest
│ │        COMMAND echo tjbenchtest
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest
│ │        COMMAND echo tjbenchtest -alloc
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest -alloc
│ │        COMMAND echo tjbenchtest -yuv
│ │ @@ -1412,15 +1441,16 @@
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest -yuv -alloc
│ │        COMMAND echo tjbenchtest -progressive
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest -progressive
│ │        COMMAND echo tjbenchtest -progressive -yuv
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest -progressive -yuv
│ │        COMMAND echo tjexampletest
│ │        COMMAND ${BASH} ${CMAKE_CURRENT_BINARY_DIR}/tjexampletest
│ │ -      DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest)
│ │ +      DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/tjbenchtest
│ │ +        ${CMAKE_CURRENT_BINARY_DIR}/tjexampletest)
│ │    endif()
│ │  endif()
│ │  
│ │  
│ │  ###############################################################################
│ │  # INSTALLATION
│ │  ###############################################################################
│ │ @@ -1443,15 +1473,15 @@
│ │      endif()
│ │    endif()
│ │    if(ENABLE_STATIC)
│ │      install(TARGETS turbojpeg-static EXPORT ${CMAKE_PROJECT_NAME}Targets
│ │        INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
│ │        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
│ │      if(NOT ENABLE_SHARED)
│ │ -      if(MSVC_IDE OR XCODE)
│ │ +      if(GENERATOR_IS_MULTI_CONFIG)
│ │          set(DIR "${CMAKE_CURRENT_BINARY_DIR}/\${CMAKE_INSTALL_CONFIG_NAME}")
│ │        else()
│ │          set(DIR ${CMAKE_CURRENT_BINARY_DIR})
│ │        endif()
│ │        install(PROGRAMS ${DIR}/tjbench-static${EXE}
│ │          DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME tjbench${EXE})
│ │      endif()
│ │ @@ -1461,15 +1491,15 @@
│ │  endif()
│ │  
│ │  if(ENABLE_STATIC)
│ │    install(TARGETS jpeg-static EXPORT ${CMAKE_PROJECT_NAME}Targets
│ │      INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
│ │      ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
│ │    if(NOT ENABLE_SHARED)
│ │ -    if(MSVC_IDE OR XCODE)
│ │ +    if(GENERATOR_IS_MULTI_CONFIG)
│ │        set(DIR "${CMAKE_CURRENT_BINARY_DIR}/\${CMAKE_INSTALL_CONFIG_NAME}")
│ │      else()
│ │        set(DIR ${CMAKE_CURRENT_BINARY_DIR})
│ │      endif()
│ │      install(PROGRAMS ${DIR}/cjpeg-static${EXE}
│ │        DESTINATION ${CMAKE_INSTALL_BINDIR} RENAME cjpeg${EXE})
│ │      install(PROGRAMS ${DIR}/djpeg-static${EXE}
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/ChangeLog.md
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/ChangeLog.md
│ │┄ Files 2% similar despite different names
│ │ @@ -1,11 +1,87 @@
│ │ +2.1.5.1
│ │ +=======
│ │ +
│ │ +### Significant changes relative to 2.1.5:
│ │ +
│ │ +1. The SIMD dispatchers in libjpeg-turbo 2.1.4 and prior stored the list of
│ │ +supported SIMD instruction sets in a global variable, which caused an innocuous
│ │ +race condition whereby the variable could have been initialized multiple times
│ │ +if `jpeg_start_*compress()` was called simultaneously in multiple threads.
│ │ +libjpeg-turbo 2.1.5 included an undocumented attempt to fix this race condition
│ │ +by making the SIMD support variable thread-local.  However, that caused another
│ │ +issue whereby, if `jpeg_start_*compress()` was called in one thread and
│ │ +`jpeg_read_*()` or `jpeg_write_*()` was called in a second thread, the SIMD
│ │ +support variable was never initialized in the second thread.  On x86 systems,
│ │ +this led the second thread to incorrectly assume that AVX2 instructions were
│ │ +always available, and when it attempted to use those instructions on older x86
│ │ +CPUs that do not support them, an illegal instruction error occurred.  The SIMD
│ │ +dispatchers now ensure that the SIMD support variable is initialized before
│ │ +dispatching based on its value.
│ │ +
│ │ +
│ │ +2.1.5
│ │ +=====
│ │ +
│ │ +### Significant changes relative to 2.1.4:
│ │ +
│ │ +1. Fixed issues in the build system whereby, when using the Ninja Multi-Config
│ │ +CMake generator, a static build of libjpeg-turbo (a build in which
│ │ +`ENABLE_SHARED` is `0`) could not be installed, a Windows installer could not
│ │ +be built, and the Java regression tests failed.
│ │ +
│ │ +2. Fixed a regression introduced by 2.0 beta1[15] that caused a buffer overrun
│ │ +in the progressive Huffman encoder when attempting to transform a
│ │ +specially-crafted malformed 12-bit-per-component JPEG image into a progressive
│ │ +12-bit-per-component JPEG image using a 12-bit-per-component build of
│ │ +libjpeg-turbo (`-DWITH_12BIT=1`.)  Given that the buffer overrun was fully
│ │ +contained within the progressive Huffman encoder structure and did not cause a
│ │ +segfault or other user-visible errant behavior, given that the lossless
│ │ +transformer (unlike the decompressor) is not generally exposed to arbitrary
│ │ +data exploits, and given that 12-bit-per-component builds of libjpeg-turbo are
│ │ +uncommon, this issue did not likely pose a security risk.
│ │ +
│ │ +3. Fixed an issue whereby, when using a 12-bit-per-component build of
│ │ +libjpeg-turbo (`-DWITH_12BIT=1`), passing samples with values greater than 4095
│ │ +or less than 0 to `jpeg_write_scanlines()` caused a buffer overrun or underrun
│ │ +in the RGB-to-YCbCr color converter.
│ │ +
│ │ +4. Fixed a floating point exception that occurred when attempting to use the
│ │ +jpegtran `-drop` and `-trim` options to losslessly transform a
│ │ +specially-crafted malformed JPEG image.
│ │ +
│ │ +5. Fixed an issue in `tjBufSizeYUV2()` whereby it returned a bogus result,
│ │ +rather than throwing an error, if the `align` parameter was not a power of 2.
│ │ +Fixed a similar issue in `tjCompressFromYUV()` whereby it generated a corrupt
│ │ +JPEG image in certain cases, rather than throwing an error, if the `align`
│ │ +parameter was not a power of 2.
│ │ +
│ │ +6. Fixed an issue whereby `tjDecompressToYUV2()`, which is a wrapper for
│ │ +`tjDecompressToYUVPlanes()`, used the desired YUV image dimensions rather than
│ │ +the actual scaled image dimensions when computing the plane pointers and
│ │ +strides to pass to `tjDecompressToYUVPlanes()`.  This caused a buffer overrun
│ │ +and subsequent segfault if the desired image dimensions exceeded the scaled
│ │ +image dimensions.
│ │ +
│ │ +7. Fixed an issue whereby, when decompressing a 12-bit-per-component JPEG image
│ │ +(`-DWITH_12BIT=1`) using an alpha-enabled output color space such as
│ │ +`JCS_EXT_RGBA`, the alpha channel was set to 255 rather than 4095.
│ │ +
│ │ +8. Fixed an issue whereby the Java version of TJBench did not accept a range of
│ │ +quality values.
│ │ +
│ │ +9. Fixed an issue whereby, when `-progressive` was passed to TJBench, the JPEG
│ │ +input image was not transformed into a progressive JPEG image prior to
│ │ +decompression.
│ │ +
│ │ +
│ │  2.1.4
│ │  =====
│ │  
│ │ -### Significant changes relative to 2.1.3
│ │ +### Significant changes relative to 2.1.3:
│ │  
│ │  1. Fixed a regression introduced in 2.1.3 that caused build failures with
│ │  Visual Studio 2010.
│ │  
│ │  2. The `tjDecompressHeader3()` function in the TurboJPEG C API and the
│ │  `TJDecompressor.setSourceImage()` method in the TurboJPEG Java API now accept
│ │  "abbreviated table specification" (AKA "tables-only") datastreams, which can be
│ │ @@ -32,15 +108,15 @@
│ │       - Attempting to use `jpeg_skip_scanlines()` resulted in an error ("Bogus
│ │  virtual array access") under certain circumstances.
│ │  
│ │  
│ │  2.1.3
│ │  =====
│ │  
│ │ -### Significant changes relative to 2.1.2
│ │ +### Significant changes relative to 2.1.2:
│ │  
│ │  1. Fixed a regression introduced by 2.0 beta1[7] whereby cjpeg compressed PGM
│ │  input files into full-color JPEG images unless the `-grayscale` option was
│ │  used.
│ │  
│ │  2. cjpeg now automatically compresses GIF and 8-bit BMP input files into
│ │  grayscale JPEG images if the input files contain only shades of gray.
│ │ @@ -56,15 +132,15 @@
│ │  uncropped scanline of the output image.  For that reason, the issue could only
│ │  be reproduced using the libjpeg API, not using djpeg.
│ │  
│ │  
│ │  2.1.2
│ │  =====
│ │  
│ │ -### Significant changes relative to 2.1.1
│ │ +### Significant changes relative to 2.1.1:
│ │  
│ │  1. Fixed a regression introduced by 2.1 beta1[13] that caused the remaining
│ │  GAS implementations of AArch64 (Arm 64-bit) Neon SIMD functions (which are used
│ │  by default with GCC for performance reasons) to be placed in the `.rodata`
│ │  section rather than in the `.text` section.  This caused the GNU linker to
│ │  automatically place the `.rodata` section in an executable segment, which
│ │  prevented libjpeg-turbo from working properly with other linkers and also
│ │ @@ -88,15 +164,15 @@
│ │  jpegtran, which causes the compressor to abort if an LZW-compressed GIF input
│ │  image contains incomplete or corrupt image data.
│ │  
│ │  
│ │  2.1.1
│ │  =====
│ │  
│ │ -### Significant changes relative to 2.1.0
│ │ +### Significant changes relative to 2.1.0:
│ │  
│ │  1. Fixed a regression introduced in 2.1.0 that caused build failures with
│ │  non-GCC-compatible compilers for Un*x/Arm platforms.
│ │  
│ │  2. Fixed a regression introduced by 2.1 beta1[13] that prevented the Arm 32-bit
│ │  (AArch32) Neon SIMD extensions from building unless the C compiler flags
│ │  included `-mfloat-abi=softfp` or `-mfloat-abi=hard`.
│ │ @@ -117,15 +193,15 @@
│ │  segfault in the 64-bit SSE2 Huffman encoder when attempting to losslessly
│ │  transform a specially-crafted malformed JPEG image.
│ │  
│ │  
│ │  2.1.0
│ │  =====
│ │  
│ │ -### Significant changes relative to 2.1 beta1
│ │ +### Significant changes relative to 2.1 beta1:
│ │  
│ │  1. Fixed a regression introduced by 2.1 beta1[6(b)] whereby attempting to
│ │  decompress certain progressive JPEG images with one or more component planes of
│ │  width 8 or less caused a buffer overrun.
│ │  
│ │  2. Fixed a regression introduced by 2.1 beta1[6(b)] whereby attempting to
│ │  decompress a specially-crafted malformed progressive JPEG image caused the
│ │ @@ -152,18 +228,18 @@
│ │  and transform functions/operations to return/throw an error if a progressive
│ │  JPEG image contains an unreasonably large number of scans.  This allows
│ │  applications that use the TurboJPEG API to guard against an exploit of the
│ │  progressive JPEG format described in the report
│ │  ["Two Issues with the JPEG Standard"](https://libjpeg-turbo.org/pmwiki/uploads/About/TwoIssueswiththeJPEGStandard.pdf).
│ │  
│ │  7. The PPM reader now throws an error, rather than segfaulting (due to a buffer
│ │ -overrun) or generating incorrect pixels, if an application attempts to use the
│ │ -`tjLoadImage()` function to load a 16-bit binary PPM file (a binary PPM file
│ │ -with a maximum value greater than 255) into a grayscale image buffer or to load
│ │ -a 16-bit binary PGM file into an RGB image buffer.
│ │ +overrun, CVE-2021-46822) or generating incorrect pixels, if an application
│ │ +attempts to use the `tjLoadImage()` function to load a 16-bit binary PPM file
│ │ +(a binary PPM file with a maximum value greater than 255) into a grayscale
│ │ +image buffer or to load a 16-bit binary PGM file into an RGB image buffer.
│ │  
│ │  8. Fixed an issue in the PPM reader that caused incorrect pixels to be
│ │  generated when using the `tjLoadImage()` function to load a 16-bit binary PPM
│ │  file into an extended RGB image buffer.
│ │  
│ │  9. Fixed an issue whereby, if a JPEG buffer was automatically re-allocated by
│ │  one of the TurboJPEG compression or transform functions and an error
│ │ @@ -321,19 +397,19 @@
│ │  
│ │  1. Fixed "using JNI after critical get" errors that occurred on Android
│ │  platforms when using any of the YUV encoding/compression/decompression/decoding
│ │  methods in the TurboJPEG Java API.
│ │  
│ │  2. Fixed or worked around multiple issues with `jpeg_skip_scanlines()`:
│ │  
│ │ -     - Fixed segfaults or "Corrupt JPEG data: premature end of data segment"
│ │ -errors in `jpeg_skip_scanlines()` that occurred when decompressing 4:2:2 or
│ │ -4:2:0 JPEG images using merged (non-fancy) upsampling/color conversion (that
│ │ -is, when setting `cinfo.do_fancy_upsampling` to `FALSE`.)  2.0.0[6] was a
│ │ -similar fix, but it did not cover all cases.
│ │ +     - Fixed segfaults (CVE-2020-35538) or "Corrupt JPEG data: premature end of
│ │ +data segment" errors in `jpeg_skip_scanlines()` that occurred when
│ │ +decompressing 4:2:2 or 4:2:0 JPEG images using merged (non-fancy)
│ │ +upsampling/color conversion (that is, when setting `cinfo.do_fancy_upsampling`
│ │ +to `FALSE`.)  2.0.0[6] was a similar fix, but it did not cover all cases.
│ │       - `jpeg_skip_scanlines()` now throws an error if two-pass color
│ │  quantization is enabled.  Two-pass color quantization never worked properly
│ │  with `jpeg_skip_scanlines()`, and the issues could not readily be fixed.
│ │       - Fixed an issue whereby `jpeg_skip_scanlines()` always returned 0 when
│ │  skipping past the end of an image.
│ │  
│ │  3. The Arm 64-bit (Armv8) Neon SIMD extensions can now be built using MinGW
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/LICENSE.md
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/LICENSE.md
│ │┄ Files 0% similar despite different names
│ │ @@ -87,15 +87,15 @@
│ │      - Modified BSD License
│ │      - zlib License
│ │  
│ │  
│ │  The Modified (3-clause) BSD License
│ │  ===================================
│ │  
│ │ -Copyright (C)2009-2022 D. R. Commander.  All Rights Reserved.<br>
│ │ +Copyright (C)2009-2023 D. R. Commander.  All Rights Reserved.<br>
│ │  Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.
│ │  
│ │  Redistribution and use in source and binary forms, with or without
│ │  modification, are permitted provided that the following conditions are met:
│ │  
│ │  - Redistributions of source code must retain the above copyright notice,
│ │    this list of conditions and the following disclaimer.
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/README.ijg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/README.ijg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/README.md
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/README.md
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cderror.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cderror.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cdjpeg.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cdjpeg.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cdjpeg.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cdjpeg.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/change.log
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/change.log
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cjpeg.1
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cjpeg.1
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cjpeg.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cjpeg.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/BuildPackages.cmake
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/BuildPackages.cmake
│ │┄ Files 2% similar despite different names
│ │ @@ -86,15 +86,15 @@
│ │    set(INST_DEFS ${INST_DEFS} -DWIN64)
│ │  endif()
│ │  
│ │  if(WITH_JAVA)
│ │    set(INST_DEFS ${INST_DEFS} -DJAVA)
│ │  endif()
│ │  
│ │ -if(MSVC_IDE)
│ │ +if(GENERATOR_IS_MULTI_CONFIG)
│ │    set(INST_DEFS ${INST_DEFS} "-DBUILDDIR=${CMAKE_CFG_INTDIR}\\")
│ │  else()
│ │    set(INST_DEFS ${INST_DEFS} "-DBUILDDIR=")
│ │  endif()
│ │  
│ │  string(REGEX REPLACE "/" "\\\\" INST_DIR ${CMAKE_INSTALL_PREFIX})
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/GNUInstallDirs.cmake
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/GNUInstallDirs.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/PackageInfo.cmake
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/PackageInfo.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/cmake_uninstall.cmake.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/cmake_uninstall.cmake.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmakescripts/testclean.cmake
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmakescripts/testclean.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/cmyk.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/cmyk.h
│ │┄ Files 6% similar despite different names
│ │ @@ -13,15 +13,14 @@
│ │  
│ │  #ifndef CMYK_H
│ │  #define CMYK_H
│ │  
│ │  #include <jinclude.h>
│ │  #define JPEG_INTERNALS
│ │  #include <jpeglib.h>
│ │ -#include "jconfigint.h"
│ │  
│ │  
│ │  /* Fully reversible */
│ │  
│ │  INLINE
│ │  LOCAL(void)
│ │  rgb_to_cmyk(JSAMPLE r, JSAMPLE g, JSAMPLE b, JSAMPLE *c, JSAMPLE *m,
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/coderules.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/coderules.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/croptest.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/croptest.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/djpeg.1
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/djpeg.1
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/djpeg.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/djpeg.c
│ │┄ Files 0% similar despite different names
│ │ @@ -312,15 +312,17 @@
│ │        cinfo->out_color_space = JCS_RGB565;
│ │  
│ │      } else if (keymatch(arg, "icc", 1)) {
│ │        /* Set ICC filename. */
│ │        if (++argn >= argc)       /* advance to next argument */
│ │          usage();
│ │        icc_filename = argv[argn];
│ │ +#ifdef SAVE_MARKERS_SUPPORTED
│ │        jpeg_save_markers(cinfo, JPEG_APP0 + 2, 0xFFFF);
│ │ +#endif
│ │  
│ │      } else if (keymatch(arg, "map", 3)) {
│ │        /* Quantize to a color map taken from an input file. */
│ │        if (++argn >= argc)       /* advance to next argument */
│ │          usage();
│ │        if (for_real) {           /* too expensive to do twice! */
│ │  #ifdef QUANT_2PASS_SUPPORTED    /* otherwise can't quantize to supplied map */
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/annotated.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/annotated.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/bc_s.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/bc_s.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/classes.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/classes.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/doc.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/doc.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/doxygen.css
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen.css
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/doxygen.svg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen.svg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/dynsections.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/dynsections.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/folderclosed.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/folderclosed.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/folderopen.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/folderopen.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/functions.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/functions.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/functions_vars.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/functions_vars.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/group___turbo_j_p_e_g.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/group___turbo_j_p_e_g.html
│ │┄ Files 2% similar despite different names
│ │ @@ -98,30 +98,30 @@
│ │  <tr class="memitem:ga7010a4402f54a45ba822ad8675a4655e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga7010a4402f54a45ba822ad8675a4655e">TJ_NUMPF</a></td></tr>
│ │  <tr class="memdesc:ga7010a4402f54a45ba822ad8675a4655e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of pixel formats.  <a href="group___turbo_j_p_e_g.html#ga7010a4402f54a45ba822ad8675a4655e">More...</a><br /></td></tr>
│ │  <tr class="separator:ga7010a4402f54a45ba822ad8675a4655e"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga39f57a6fb02d9cf32e7b6890099b5a71"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga39f57a6fb02d9cf32e7b6890099b5a71">TJ_NUMCS</a></td></tr>
│ │  <tr class="memdesc:ga39f57a6fb02d9cf32e7b6890099b5a71"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of JPEG colorspaces.  <a href="group___turbo_j_p_e_g.html#ga39f57a6fb02d9cf32e7b6890099b5a71">More...</a><br /></td></tr>
│ │  <tr class="separator:ga39f57a6fb02d9cf32e7b6890099b5a71"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga72ecf4ebe6eb702d3c6f5ca27455e1ec"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga72ecf4ebe6eb702d3c6f5ca27455e1ec">TJFLAG_BOTTOMUP</a></td></tr>
│ │ -<tr class="memdesc:ga72ecf4ebe6eb702d3c6f5ca27455e1ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">The uncompressed source/destination image is stored in bottom-up (Windows, OpenGL) order, not top-down (X11) order.  <a href="group___turbo_j_p_e_g.html#ga72ecf4ebe6eb702d3c6f5ca27455e1ec">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga72ecf4ebe6eb702d3c6f5ca27455e1ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rows in the packed-pixel source/destination image are stored in bottom-up (Windows, OpenGL) order rather than in top-down (X11) order.  <a href="group___turbo_j_p_e_g.html#ga72ecf4ebe6eb702d3c6f5ca27455e1ec">More...</a><br /></td></tr>
│ │  <tr class="separator:ga72ecf4ebe6eb702d3c6f5ca27455e1ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga4ee4506c81177a06f77e2504a22efd2d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga4ee4506c81177a06f77e2504a22efd2d">TJFLAG_FASTUPSAMPLE</a></td></tr>
│ │ -<tr class="memdesc:ga4ee4506c81177a06f77e2504a22efd2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">When decompressing an image that was compressed using chrominance subsampling, use the fastest chrominance upsampling algorithm available in the underlying codec.  <a href="group___turbo_j_p_e_g.html#ga4ee4506c81177a06f77e2504a22efd2d">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga4ee4506c81177a06f77e2504a22efd2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">When decompressing an image that was compressed using chrominance subsampling, use the fastest chrominance upsampling algorithm available.  <a href="group___turbo_j_p_e_g.html#ga4ee4506c81177a06f77e2504a22efd2d">More...</a><br /></td></tr>
│ │  <tr class="separator:ga4ee4506c81177a06f77e2504a22efd2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga8808d403c68b62aaa58a4c1e58e98963"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963">TJFLAG_NOREALLOC</a></td></tr>
│ │ -<tr class="memdesc:ga8808d403c68b62aaa58a4c1e58e98963"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable buffer (re)allocation.  <a href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga8808d403c68b62aaa58a4c1e58e98963"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable JPEG buffer (re)allocation.  <a href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963">More...</a><br /></td></tr>
│ │  <tr class="separator:ga8808d403c68b62aaa58a4c1e58e98963"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gaabce235db80d3f698b27f36cbd453da2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gaabce235db80d3f698b27f36cbd453da2">TJFLAG_FASTDCT</a></td></tr>
│ │ -<tr class="memdesc:gaabce235db80d3f698b27f36cbd453da2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use the fastest DCT/IDCT algorithm available in the underlying codec.  <a href="group___turbo_j_p_e_g.html#gaabce235db80d3f698b27f36cbd453da2">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gaabce235db80d3f698b27f36cbd453da2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use the fastest DCT/IDCT algorithm available.  <a href="group___turbo_j_p_e_g.html#gaabce235db80d3f698b27f36cbd453da2">More...</a><br /></td></tr>
│ │  <tr class="separator:gaabce235db80d3f698b27f36cbd453da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gacb233cfd722d66d1ccbf48a7de81f0e0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">TJFLAG_ACCURATEDCT</a></td></tr>
│ │ -<tr class="memdesc:gacb233cfd722d66d1ccbf48a7de81f0e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use the most accurate DCT/IDCT algorithm available in the underlying codec.  <a href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gacb233cfd722d66d1ccbf48a7de81f0e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use the most accurate DCT/IDCT algorithm available.  <a href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">More...</a><br /></td></tr>
│ │  <tr class="separator:gacb233cfd722d66d1ccbf48a7de81f0e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga519cfa4ef6c18d9e5b455fdf59306a3a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga519cfa4ef6c18d9e5b455fdf59306a3a">TJFLAG_STOPONWARNING</a></td></tr>
│ │ -<tr class="memdesc:ga519cfa4ef6c18d9e5b455fdf59306a3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Immediately discontinue the current compression/decompression/transform operation if the underlying codec throws a warning (non-fatal error).  <a href="group___turbo_j_p_e_g.html#ga519cfa4ef6c18d9e5b455fdf59306a3a">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga519cfa4ef6c18d9e5b455fdf59306a3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Immediately discontinue the current compression/decompression/transform operation if a warning (non-fatal error) occurs.  <a href="group___turbo_j_p_e_g.html#ga519cfa4ef6c18d9e5b455fdf59306a3a">More...</a><br /></td></tr>
│ │  <tr class="separator:ga519cfa4ef6c18d9e5b455fdf59306a3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga43b426750b46190a25d34a67ef76df1b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga43b426750b46190a25d34a67ef76df1b">TJFLAG_PROGRESSIVE</a></td></tr>
│ │  <tr class="memdesc:ga43b426750b46190a25d34a67ef76df1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use progressive entropy coding in JPEG images generated by the compression and transform functions.  <a href="group___turbo_j_p_e_g.html#ga43b426750b46190a25d34a67ef76df1b">More...</a><br /></td></tr>
│ │  <tr class="separator:ga43b426750b46190a25d34a67ef76df1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga163e6482dc5096831feef9c79ff3f805"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga163e6482dc5096831feef9c79ff3f805">TJFLAG_LIMITSCANS</a></td></tr>
│ │  <tr class="memdesc:ga163e6482dc5096831feef9c79ff3f805"><td class="mdescLeft">&#160;</td><td class="mdescRight">Limit the number of progressive JPEG scans that the decompression and transform functions will process.  <a href="group___turbo_j_p_e_g.html#ga163e6482dc5096831feef9c79ff3f805">More...</a><br /></td></tr>
│ │  <tr class="separator:ga163e6482dc5096831feef9c79ff3f805"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ @@ -137,27 +137,27 @@
│ │  <tr class="memitem:ga319826b7eb1583c0595bbe7b95428709"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga319826b7eb1583c0595bbe7b95428709">TJXOPT_TRIM</a></td></tr>
│ │  <tr class="memdesc:ga319826b7eb1583c0595bbe7b95428709"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will cause <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> to discard any partial MCU blocks that cannot be transformed.  <a href="group___turbo_j_p_e_g.html#ga319826b7eb1583c0595bbe7b95428709">More...</a><br /></td></tr>
│ │  <tr class="separator:ga319826b7eb1583c0595bbe7b95428709"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga9c771a757fc1294add611906b89ab2d2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga9c771a757fc1294add611906b89ab2d2">TJXOPT_CROP</a></td></tr>
│ │  <tr class="memdesc:ga9c771a757fc1294add611906b89ab2d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will enable lossless cropping.  <a href="group___turbo_j_p_e_g.html#ga9c771a757fc1294add611906b89ab2d2">More...</a><br /></td></tr>
│ │  <tr class="separator:ga9c771a757fc1294add611906b89ab2d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga3acee7b48ade1b99e5588736007c2589"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga3acee7b48ade1b99e5588736007c2589">TJXOPT_GRAY</a></td></tr>
│ │ -<tr class="memdesc:ga3acee7b48ade1b99e5588736007c2589"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will discard the color data in the input image and produce a grayscale output image.  <a href="group___turbo_j_p_e_g.html#ga3acee7b48ade1b99e5588736007c2589">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga3acee7b48ade1b99e5588736007c2589"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will discard the color data in the source image and produce a grayscale destination image.  <a href="group___turbo_j_p_e_g.html#ga3acee7b48ade1b99e5588736007c2589">More...</a><br /></td></tr>
│ │  <tr class="separator:ga3acee7b48ade1b99e5588736007c2589"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gafbf992bbf6e006705886333703ffab31"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gafbf992bbf6e006705886333703ffab31">TJXOPT_NOOUTPUT</a></td></tr>
│ │ -<tr class="memdesc:gafbf992bbf6e006705886333703ffab31"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from outputting a JPEG image for this particular transform (this can be used in conjunction with a custom filter to capture the transformed DCT coefficients without transcoding them.)  <a href="group___turbo_j_p_e_g.html#gafbf992bbf6e006705886333703ffab31">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gafbf992bbf6e006705886333703ffab31"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from outputting a JPEG image for this particular transform.  <a href="group___turbo_j_p_e_g.html#gafbf992bbf6e006705886333703ffab31">More...</a><br /></td></tr>
│ │  <tr class="separator:gafbf992bbf6e006705886333703ffab31"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gad2371c80674584ecc1a7d75e564cf026"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gad2371c80674584ecc1a7d75e564cf026">TJXOPT_PROGRESSIVE</a></td></tr>
│ │ -<tr class="memdesc:gad2371c80674584ecc1a7d75e564cf026"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will enable progressive entropy coding in the output image generated by this particular transform.  <a href="group___turbo_j_p_e_g.html#gad2371c80674584ecc1a7d75e564cf026">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gad2371c80674584ecc1a7d75e564cf026"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will enable progressive entropy coding in the JPEG image generated by this particular transform.  <a href="group___turbo_j_p_e_g.html#gad2371c80674584ecc1a7d75e564cf026">More...</a><br /></td></tr>
│ │  <tr class="separator:gad2371c80674584ecc1a7d75e564cf026"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga153b468cfb905d0de61706c838986fe8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga153b468cfb905d0de61706c838986fe8">TJXOPT_COPYNONE</a></td></tr>
│ │ -<tr class="memdesc:ga153b468cfb905d0de61706c838986fe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from copying any extra markers (including EXIF and ICC profile data) from the source image to the output image.  <a href="group___turbo_j_p_e_g.html#ga153b468cfb905d0de61706c838986fe8">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga153b468cfb905d0de61706c838986fe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from copying any extra markers (including EXIF and ICC profile data) from the source image to the destination image.  <a href="group___turbo_j_p_e_g.html#ga153b468cfb905d0de61706c838986fe8">More...</a><br /></td></tr>
│ │  <tr class="separator:ga153b468cfb905d0de61706c838986fe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga0aba955473315e405295d978f0c16511"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511">TJPAD</a>(width)</td></tr>
│ │ -<tr class="memdesc:ga0aba955473315e405295d978f0c16511"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pad the given width to the nearest 32-bit boundary.  <a href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga0aba955473315e405295d978f0c16511"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pad the given width to the nearest multiple of 4.  <a href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511">More...</a><br /></td></tr>
│ │  <tr class="separator:ga0aba955473315e405295d978f0c16511"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga84878bb65404204743aa18cac02781df"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga84878bb65404204743aa18cac02781df">TJSCALED</a>(dimension,  scalingFactor)</td></tr>
│ │  <tr class="memdesc:ga84878bb65404204743aa18cac02781df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the scaled value of <code>dimension</code> using the given scaling factor.  <a href="group___turbo_j_p_e_g.html#ga84878bb65404204743aa18cac02781df">More...</a><br /></td></tr>
│ │  <tr class="separator:ga84878bb65404204743aa18cac02781df"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  </table><table class="memberdecls">
│ │  <tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
│ │  Typedefs</h2></td></tr>
│ │ @@ -236,87 +236,87 @@
│ │  </table><table class="memberdecls">
│ │  <tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
│ │  Functions</h2></td></tr>
│ │  <tr class="memitem:ga9d63a05fc6d813f4aae06107041a37e8"><td class="memItemLeft" align="right" valign="top">DLLEXPORT <a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga9d63a05fc6d813f4aae06107041a37e8">tjInitCompress</a> (void)</td></tr>
│ │  <tr class="memdesc:ga9d63a05fc6d813f4aae06107041a37e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a TurboJPEG compressor instance.  <a href="group___turbo_j_p_e_g.html#ga9d63a05fc6d813f4aae06107041a37e8">More...</a><br /></td></tr>
│ │  <tr class="separator:ga9d63a05fc6d813f4aae06107041a37e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gafbdce0112fd78fd38efae841443a9bcf"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gafbdce0112fd78fd38efae841443a9bcf">tjCompress2</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int width, int pitch, int height, int pixelFormat, unsigned char **jpegBuf, unsigned long *jpegSize, int jpegSubsamp, int jpegQual, int flags)</td></tr>
│ │ -<tr class="memdesc:gafbdce0112fd78fd38efae841443a9bcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compress an RGB, grayscale, or CMYK image into a JPEG image.  <a href="group___turbo_j_p_e_g.html#gafbdce0112fd78fd38efae841443a9bcf">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gafbdce0112fd78fd38efae841443a9bcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compress a packed-pixel RGB, grayscale, or CMYK image into a JPEG image.  <a href="group___turbo_j_p_e_g.html#gafbdce0112fd78fd38efae841443a9bcf">More...</a><br /></td></tr>
│ │  <tr class="separator:gafbdce0112fd78fd38efae841443a9bcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ -<tr class="memitem:ga7622a459b79aa1007e005b58783f875b"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga7622a459b79aa1007e005b58783f875b">tjCompressFromYUV</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int width, int pad, int height, int subsamp, unsigned char **jpegBuf, unsigned long *jpegSize, int jpegQual, int flags)</td></tr>
│ │ -<tr class="memdesc:ga7622a459b79aa1007e005b58783f875b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compress a YUV planar image into a JPEG image.  <a href="group___turbo_j_p_e_g.html#ga7622a459b79aa1007e005b58783f875b">More...</a><br /></td></tr>
│ │ -<tr class="separator:ga7622a459b79aa1007e005b58783f875b"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ +<tr class="memitem:gab40f5096a72fd7e5bda9d6b58fa37e2e"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gab40f5096a72fd7e5bda9d6b58fa37e2e">tjCompressFromYUV</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int width, int align, int height, int subsamp, unsigned char **jpegBuf, unsigned long *jpegSize, int jpegQual, int flags)</td></tr>
│ │ +<tr class="memdesc:gab40f5096a72fd7e5bda9d6b58fa37e2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compress a unified planar YUV image into a JPEG image.  <a href="group___turbo_j_p_e_g.html#gab40f5096a72fd7e5bda9d6b58fa37e2e">More...</a><br /></td></tr>
│ │ +<tr class="separator:gab40f5096a72fd7e5bda9d6b58fa37e2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga29ec5dfbd2d84b8724e951d6fa0d5d9e"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga29ec5dfbd2d84b8724e951d6fa0d5d9e">tjCompressFromYUVPlanes</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char **srcPlanes, int width, const int *strides, int height, int subsamp, unsigned char **jpegBuf, unsigned long *jpegSize, int jpegQual, int flags)</td></tr>
│ │  <tr class="memdesc:ga29ec5dfbd2d84b8724e951d6fa0d5d9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compress a set of Y, U (Cb), and V (Cr) image planes into a JPEG image.  <a href="group___turbo_j_p_e_g.html#ga29ec5dfbd2d84b8724e951d6fa0d5d9e">More...</a><br /></td></tr>
│ │  <tr class="separator:ga29ec5dfbd2d84b8724e951d6fa0d5d9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga67ac12fee79073242cb216e07c9f1f90"><td class="memItemLeft" align="right" valign="top">DLLEXPORT unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90">tjBufSize</a> (int width, int height, int jpegSubsamp)</td></tr>
│ │  <tr class="memdesc:ga67ac12fee79073242cb216e07c9f1f90"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.  <a href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90">More...</a><br /></td></tr>
│ │  <tr class="separator:ga67ac12fee79073242cb216e07c9f1f90"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ -<tr class="memitem:ga2be2b9969d4df9ecce9b05deed273194"><td class="memItemLeft" align="right" valign="top">DLLEXPORT unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194">tjBufSizeYUV2</a> (int width, int pad, int height, int subsamp)</td></tr>
│ │ -<tr class="memdesc:ga2be2b9969d4df9ecce9b05deed273194"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the buffer (in bytes) required to hold a YUV planar image with the given parameters.  <a href="group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194">More...</a><br /></td></tr>
│ │ -<tr class="separator:ga2be2b9969d4df9ecce9b05deed273194"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ +<tr class="memitem:ga5e5aac9e8bcf17049279301e2466474c"><td class="memItemLeft" align="right" valign="top">DLLEXPORT unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c">tjBufSizeYUV2</a> (int width, int align, int height, int subsamp)</td></tr>
│ │ +<tr class="memdesc:ga5e5aac9e8bcf17049279301e2466474c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the buffer (in bytes) required to hold a unified planar YUV image with the given parameters.  <a href="group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c">More...</a><br /></td></tr>
│ │ +<tr class="separator:ga5e5aac9e8bcf17049279301e2466474c"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gab4ab7b24f6e797d79abaaa670373961d"><td class="memItemLeft" align="right" valign="top">DLLEXPORT unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d">tjPlaneSizeYUV</a> (int componentID, int width, int stride, int height, int subsamp)</td></tr>
│ │  <tr class="memdesc:gab4ab7b24f6e797d79abaaa670373961d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters.  <a href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d">More...</a><br /></td></tr>
│ │  <tr class="separator:gab4ab7b24f6e797d79abaaa670373961d"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga63fb66bb1e36c74008c4634360becbb1"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga63fb66bb1e36c74008c4634360becbb1">tjPlaneWidth</a> (int componentID, int width, int subsamp)</td></tr>
│ │  <tr class="memdesc:ga63fb66bb1e36c74008c4634360becbb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The plane width of a YUV image plane with the given parameters.  <a href="group___turbo_j_p_e_g.html#ga63fb66bb1e36c74008c4634360becbb1">More...</a><br /></td></tr>
│ │  <tr class="separator:ga63fb66bb1e36c74008c4634360becbb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga1a209696c6a80748f20e134b3c64789f"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga1a209696c6a80748f20e134b3c64789f">tjPlaneHeight</a> (int componentID, int height, int subsamp)</td></tr>
│ │  <tr class="memdesc:ga1a209696c6a80748f20e134b3c64789f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The plane height of a YUV image plane with the given parameters.  <a href="group___turbo_j_p_e_g.html#ga1a209696c6a80748f20e134b3c64789f">More...</a><br /></td></tr>
│ │  <tr class="separator:ga1a209696c6a80748f20e134b3c64789f"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ -<tr class="memitem:gac519b922cdf446e97d0cdcba513636bf"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gac519b922cdf446e97d0cdcba513636bf">tjEncodeYUV3</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int width, int pitch, int height, int pixelFormat, unsigned char *dstBuf, int pad, int subsamp, int flags)</td></tr>
│ │ -<tr class="memdesc:gac519b922cdf446e97d0cdcba513636bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encode an RGB or grayscale image into a YUV planar image.  <a href="group___turbo_j_p_e_g.html#gac519b922cdf446e97d0cdcba513636bf">More...</a><br /></td></tr>
│ │ -<tr class="separator:gac519b922cdf446e97d0cdcba513636bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ +<tr class="memitem:ga5d619e0a02b71e05a8dffb764f6d7a64"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga5d619e0a02b71e05a8dffb764f6d7a64">tjEncodeYUV3</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int width, int pitch, int height, int pixelFormat, unsigned char *dstBuf, int align, int subsamp, int flags)</td></tr>
│ │ +<tr class="memdesc:ga5d619e0a02b71e05a8dffb764f6d7a64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encode a packed-pixel RGB or grayscale image into a unified planar YUV image.  <a href="group___turbo_j_p_e_g.html#ga5d619e0a02b71e05a8dffb764f6d7a64">More...</a><br /></td></tr>
│ │ +<tr class="separator:ga5d619e0a02b71e05a8dffb764f6d7a64"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gae2d04c72457fe7f4d60cf78ab1b1feb1"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gae2d04c72457fe7f4d60cf78ab1b1feb1">tjEncodeYUVPlanes</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int width, int pitch, int height, int pixelFormat, unsigned char **dstPlanes, int *strides, int subsamp, int flags)</td></tr>
│ │ -<tr class="memdesc:gae2d04c72457fe7f4d60cf78ab1b1feb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encode an RGB or grayscale image into separate Y, U (Cb), and V (Cr) image planes.  <a href="group___turbo_j_p_e_g.html#gae2d04c72457fe7f4d60cf78ab1b1feb1">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gae2d04c72457fe7f4d60cf78ab1b1feb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encode a packed-pixel RGB or grayscale image into separate Y, U (Cb), and V (Cr) image planes.  <a href="group___turbo_j_p_e_g.html#gae2d04c72457fe7f4d60cf78ab1b1feb1">More...</a><br /></td></tr>
│ │  <tr class="separator:gae2d04c72457fe7f4d60cf78ab1b1feb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga52300eac3f3d9ef4bab303bc244f62d3"><td class="memItemLeft" align="right" valign="top">DLLEXPORT <a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga52300eac3f3d9ef4bab303bc244f62d3">tjInitDecompress</a> (void)</td></tr>
│ │  <tr class="memdesc:ga52300eac3f3d9ef4bab303bc244f62d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a TurboJPEG decompressor instance.  <a href="group___turbo_j_p_e_g.html#ga52300eac3f3d9ef4bab303bc244f62d3">More...</a><br /></td></tr>
│ │  <tr class="separator:ga52300eac3f3d9ef4bab303bc244f62d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga0595681096bba7199cc6f3533cb25f77"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga0595681096bba7199cc6f3533cb25f77">tjDecompressHeader3</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *jpegBuf, unsigned long jpegSize, int *width, int *height, int *jpegSubsamp, int *jpegColorspace)</td></tr>
│ │  <tr class="memdesc:ga0595681096bba7199cc6f3533cb25f77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve information about a JPEG image without decompressing it, or prime the decompressor with quantization and Huffman tables.  <a href="group___turbo_j_p_e_g.html#ga0595681096bba7199cc6f3533cb25f77">More...</a><br /></td></tr>
│ │  <tr class="separator:ga0595681096bba7199cc6f3533cb25f77"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ -<tr class="memitem:gac3854476006b10787bd128f7ede48057"><td class="memItemLeft" align="right" valign="top">DLLEXPORT <a class="el" href="structtjscalingfactor.html">tjscalingfactor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gac3854476006b10787bd128f7ede48057">tjGetScalingFactors</a> (int *numscalingfactors)</td></tr>
│ │ -<tr class="memdesc:gac3854476006b10787bd128f7ede48057"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a list of fractional scaling factors that the JPEG decompressor in this implementation of TurboJPEG supports.  <a href="group___turbo_j_p_e_g.html#gac3854476006b10787bd128f7ede48057">More...</a><br /></td></tr>
│ │ -<tr class="separator:gac3854476006b10787bd128f7ede48057"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ +<tr class="memitem:ga193d0977b3b9966d53a6c402e90899b1"><td class="memItemLeft" align="right" valign="top">DLLEXPORT <a class="el" href="structtjscalingfactor.html">tjscalingfactor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga193d0977b3b9966d53a6c402e90899b1">tjGetScalingFactors</a> (int *numScalingFactors)</td></tr>
│ │ +<tr class="memdesc:ga193d0977b3b9966d53a6c402e90899b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a list of fractional scaling factors that the JPEG decompressor supports.  <a href="group___turbo_j_p_e_g.html#ga193d0977b3b9966d53a6c402e90899b1">More...</a><br /></td></tr>
│ │ +<tr class="separator:ga193d0977b3b9966d53a6c402e90899b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gae9eccef8b682a48f43a9117c231ed013"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gae9eccef8b682a48f43a9117c231ed013">tjDecompress2</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *jpegBuf, unsigned long jpegSize, unsigned char *dstBuf, int width, int pitch, int height, int pixelFormat, int flags)</td></tr>
│ │ -<tr class="memdesc:gae9eccef8b682a48f43a9117c231ed013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decompress a JPEG image to an RGB, grayscale, or CMYK image.  <a href="group___turbo_j_p_e_g.html#gae9eccef8b682a48f43a9117c231ed013">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gae9eccef8b682a48f43a9117c231ed013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decompress a JPEG image into a packed-pixel RGB, grayscale, or CMYK image.  <a href="group___turbo_j_p_e_g.html#gae9eccef8b682a48f43a9117c231ed013">More...</a><br /></td></tr>
│ │  <tr class="separator:gae9eccef8b682a48f43a9117c231ed013"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ -<tr class="memitem:ga04d1e839ff9a0860dd1475cff78d3364"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga04d1e839ff9a0860dd1475cff78d3364">tjDecompressToYUV2</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *jpegBuf, unsigned long jpegSize, unsigned char *dstBuf, int width, int pad, int height, int flags)</td></tr>
│ │ -<tr class="memdesc:ga04d1e839ff9a0860dd1475cff78d3364"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decompress a JPEG image to a YUV planar image.  <a href="group___turbo_j_p_e_g.html#ga04d1e839ff9a0860dd1475cff78d3364">More...</a><br /></td></tr>
│ │ -<tr class="separator:ga04d1e839ff9a0860dd1475cff78d3364"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ +<tr class="memitem:ga5a3093e325598c17a9f004323af6fafa"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga5a3093e325598c17a9f004323af6fafa">tjDecompressToYUV2</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *jpegBuf, unsigned long jpegSize, unsigned char *dstBuf, int width, int align, int height, int flags)</td></tr>
│ │ +<tr class="memdesc:ga5a3093e325598c17a9f004323af6fafa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decompress a JPEG image into a unified planar YUV image.  <a href="group___turbo_j_p_e_g.html#ga5a3093e325598c17a9f004323af6fafa">More...</a><br /></td></tr>
│ │ +<tr class="separator:ga5a3093e325598c17a9f004323af6fafa"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gaa59f901a5258ada5bd0185ad59368540"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gaa59f901a5258ada5bd0185ad59368540">tjDecompressToYUVPlanes</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *jpegBuf, unsigned long jpegSize, unsigned char **dstPlanes, int width, int *strides, int height, int flags)</td></tr>
│ │  <tr class="memdesc:gaa59f901a5258ada5bd0185ad59368540"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decompress a JPEG image into separate Y, U (Cb), and V (Cr) image planes.  <a href="group___turbo_j_p_e_g.html#gaa59f901a5258ada5bd0185ad59368540">More...</a><br /></td></tr>
│ │  <tr class="separator:gaa59f901a5258ada5bd0185ad59368540"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ -<tr class="memitem:ga70abbf38f77a26fd6da8813bef96f695"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga70abbf38f77a26fd6da8813bef96f695">tjDecodeYUV</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int pad, int subsamp, unsigned char *dstBuf, int width, int pitch, int height, int pixelFormat, int flags)</td></tr>
│ │ -<tr class="memdesc:ga70abbf38f77a26fd6da8813bef96f695"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decode a YUV planar image into an RGB or grayscale image.  <a href="group___turbo_j_p_e_g.html#ga70abbf38f77a26fd6da8813bef96f695">More...</a><br /></td></tr>
│ │ -<tr class="separator:ga70abbf38f77a26fd6da8813bef96f695"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ +<tr class="memitem:ga97c2cedc1e2bade15a84164c94e503c1"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga97c2cedc1e2bade15a84164c94e503c1">tjDecodeYUV</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *srcBuf, int align, int subsamp, unsigned char *dstBuf, int width, int pitch, int height, int pixelFormat, int flags)</td></tr>
│ │ +<tr class="memdesc:ga97c2cedc1e2bade15a84164c94e503c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decode a unified planar YUV image into a packed-pixel RGB or grayscale image.  <a href="group___turbo_j_p_e_g.html#ga97c2cedc1e2bade15a84164c94e503c1">More...</a><br /></td></tr>
│ │ +<tr class="separator:ga97c2cedc1e2bade15a84164c94e503c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga10e837c07fa9d25770565b237d3898d9"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga10e837c07fa9d25770565b237d3898d9">tjDecodeYUVPlanes</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char **srcPlanes, const int *strides, int subsamp, unsigned char *dstBuf, int width, int pitch, int height, int pixelFormat, int flags)</td></tr>
│ │ -<tr class="memdesc:ga10e837c07fa9d25770565b237d3898d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decode a set of Y, U (Cb), and V (Cr) image planes into an RGB or grayscale image.  <a href="group___turbo_j_p_e_g.html#ga10e837c07fa9d25770565b237d3898d9">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga10e837c07fa9d25770565b237d3898d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decode a set of Y, U (Cb), and V (Cr) image planes into a packed-pixel RGB or grayscale image.  <a href="group___turbo_j_p_e_g.html#ga10e837c07fa9d25770565b237d3898d9">More...</a><br /></td></tr>
│ │  <tr class="separator:ga10e837c07fa9d25770565b237d3898d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga928beff6ac248ceadf01089fc6b41957"><td class="memItemLeft" align="right" valign="top">DLLEXPORT <a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga928beff6ac248ceadf01089fc6b41957">tjInitTransform</a> (void)</td></tr>
│ │  <tr class="memdesc:ga928beff6ac248ceadf01089fc6b41957"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new TurboJPEG transformer instance.  <a href="group___turbo_j_p_e_g.html#ga928beff6ac248ceadf01089fc6b41957">More...</a><br /></td></tr>
│ │  <tr class="separator:ga928beff6ac248ceadf01089fc6b41957"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga9cb8abf4cc91881e04a0329b2270be25"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25">tjTransform</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle, const unsigned char *jpegBuf, unsigned long jpegSize, int n, unsigned char **dstBufs, unsigned long *dstSizes, <a class="el" href="structtjtransform.html">tjtransform</a> *transforms, int flags)</td></tr>
│ │  <tr class="memdesc:ga9cb8abf4cc91881e04a0329b2270be25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Losslessly transform a JPEG image into another JPEG image.  <a href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25">More...</a><br /></td></tr>
│ │  <tr class="separator:ga9cb8abf4cc91881e04a0329b2270be25"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga75f355fa27225ba1a4ee392c852394d2"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga75f355fa27225ba1a4ee392c852394d2">tjDestroy</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle)</td></tr>
│ │  <tr class="memdesc:ga75f355fa27225ba1a4ee392c852394d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a TurboJPEG compressor, decompressor, or transformer instance.  <a href="group___turbo_j_p_e_g.html#ga75f355fa27225ba1a4ee392c852394d2">More...</a><br /></td></tr>
│ │  <tr class="separator:ga75f355fa27225ba1a4ee392c852394d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gaec627dd4c5f30b7a775a7aea3bec5d83"><td class="memItemLeft" align="right" valign="top">DLLEXPORT unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83">tjAlloc</a> (int bytes)</td></tr>
│ │ -<tr class="memdesc:gaec627dd4c5f30b7a775a7aea3bec5d83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate an image buffer for use with TurboJPEG.  <a href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gaec627dd4c5f30b7a775a7aea3bec5d83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a byte buffer for use with TurboJPEG.  <a href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83">More...</a><br /></td></tr>
│ │  <tr class="separator:gaec627dd4c5f30b7a775a7aea3bec5d83"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gaffbd83c375e79f5db4b5c5d8ad4466e7"><td class="memItemLeft" align="right" valign="top">DLLEXPORT unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7">tjLoadImage</a> (const char *filename, int *width, int align, int *height, int *pixelFormat, int flags)</td></tr>
│ │ -<tr class="memdesc:gaffbd83c375e79f5db4b5c5d8ad4466e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load an uncompressed image from disk into memory.  <a href="group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gaffbd83c375e79f5db4b5c5d8ad4466e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load a packed-pixel image from disk into memory.  <a href="group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7">More...</a><br /></td></tr>
│ │  <tr class="separator:gaffbd83c375e79f5db4b5c5d8ad4466e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga6f445b22d8933ae4815b3370a538d879"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga6f445b22d8933ae4815b3370a538d879">tjSaveImage</a> (const char *filename, unsigned char *buffer, int width, int pitch, int height, int pixelFormat, int flags)</td></tr>
│ │ -<tr class="memdesc:ga6f445b22d8933ae4815b3370a538d879"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save an uncompressed image from memory to disk.  <a href="group___turbo_j_p_e_g.html#ga6f445b22d8933ae4815b3370a538d879">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ga6f445b22d8933ae4815b3370a538d879"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save a packed-pixel image from memory to disk.  <a href="group___turbo_j_p_e_g.html#ga6f445b22d8933ae4815b3370a538d879">More...</a><br /></td></tr>
│ │  <tr class="separator:ga6f445b22d8933ae4815b3370a538d879"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:gaea863d2da0cdb609563aabdf9196514b"><td class="memItemLeft" align="right" valign="top">DLLEXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b">tjFree</a> (unsigned char *buffer)</td></tr>
│ │ -<tr class="memdesc:gaea863d2da0cdb609563aabdf9196514b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free an image buffer previously allocated by TurboJPEG.  <a href="group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:gaea863d2da0cdb609563aabdf9196514b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free a byte buffer previously allocated by TurboJPEG.  <a href="group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b">More...</a><br /></td></tr>
│ │  <tr class="separator:gaea863d2da0cdb609563aabdf9196514b"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga1ead8574f9f39fbafc6b497124e7aafa"><td class="memItemLeft" align="right" valign="top">DLLEXPORT char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa">tjGetErrorStr2</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle)</td></tr>
│ │  <tr class="memdesc:ga1ead8574f9f39fbafc6b497124e7aafa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a descriptive error message explaining why the last command failed.  <a href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa">More...</a><br /></td></tr>
│ │  <tr class="separator:ga1ead8574f9f39fbafc6b497124e7aafa"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ga414feeffbf860ebd31c745df203de410"><td class="memItemLeft" align="right" valign="top">DLLEXPORT int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410">tjGetErrorCode</a> (<a class="el" href="group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763">tjhandle</a> handle)</td></tr>
│ │  <tr class="memdesc:ga414feeffbf860ebd31c745df203de410"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a code indicating the severity of the last error.  <a href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410">More...</a><br /></td></tr>
│ │  <tr class="separator:ga414feeffbf860ebd31c745df203de410"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ @@ -348,16 +348,16 @@
│ │  <a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
│ │  <p>TurboJPEG API. </p>
│ │  <p>This API provides an interface for generating, decoding, and transforming planar YUV and JPEG images in memory.</p>
│ │  <p><a class="anchor" id="YUVnotes"></a></p>
│ │  <h2><a class="anchor" id="autotoc_md0"></a>
│ │  YUV Image Format Notes</h2>
│ │  <p>Technically, the JPEG format uses the YCbCr colorspace (which is technically not a colorspace but a color transform), but per the convention of the digital video community, the TurboJPEG API uses "YUV" to refer to an image format consisting of Y, Cb, and Cr image planes.</p>
│ │ -<p>Each plane is simply a 2D array of bytes, each byte representing the value of one of the components (Y, Cb, or Cr) at a particular location in the image. The width and height of each plane are determined by the image width, height, and level of chrominance subsampling. The luminance plane width is the image width padded to the nearest multiple of the horizontal subsampling factor (2 in the case of 4:2:0 and 4:2:2, 4 in the case of 4:1:1, 1 in the case of 4:4:4 or grayscale.) Similarly, the luminance plane height is the image height padded to the nearest multiple of the vertical subsampling factor (2 in the case of 4:2:0 or 4:4:0, 1 in the case of 4:4:4 or grayscale.) This is irrespective of any additional padding that may be specified as an argument to the various YUV functions. The chrominance plane width is equal to the luminance plane width divided by the horizontal subsampling factor, and the chrominance plane height is equal to the luminance plane height divided by the vertical subsampling factor.</p>
│ │ -<p>For example, if the source image is 35 x 35 pixels and 4:2:2 subsampling is used, then the luminance plane would be 36 x 35 bytes, and each of the chrominance planes would be 18 x 35 bytes. If you specify a line padding of 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes, and each of the chrominance planes would be 20 x 35 bytes. </p>
│ │ +<p>Each plane is simply a 2D array of bytes, each byte representing the value of one of the components (Y, Cb, or Cr) at a particular location in the image. The width and height of each plane are determined by the image width, height, and level of chrominance subsampling. The luminance plane width is the image width padded to the nearest multiple of the horizontal subsampling factor (1 in the case of 4:4:4, grayscale, or 4:4:0; 2 in the case of 4:2:2 or 4:2:0; 4 in the case of 4:1:1.) Similarly, the luminance plane height is the image height padded to the nearest multiple of the vertical subsampling factor (1 in the case of 4:4:4, 4:2:2, grayscale, or 4:1:1; 2 in the case of 4:2:0 or 4:4:0.) This is irrespective of any additional padding that may be specified as an argument to the various YUV functions. The chrominance plane width is equal to the luminance plane width divided by the horizontal subsampling factor, and the chrominance plane height is equal to the luminance plane height divided by the vertical subsampling factor.</p>
│ │ +<p>For example, if the source image is 35 x 35 pixels and 4:2:2 subsampling is used, then the luminance plane would be 36 x 35 bytes, and each of the chrominance planes would be 18 x 35 bytes. If you specify a row alignment of 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes, and each of the chrominance planes would be 20 x 35 bytes. </p>
│ │  <h2 class="groupheader">Macro Definition Documentation</h2>
│ │  <a id="ga39f57a6fb02d9cf32e7b6890099b5a71"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga39f57a6fb02d9cf32e7b6890099b5a71">&#9670;&nbsp;</a></span>TJ_NUMCS</h2>
│ │  
│ │  <div class="memitem">
│ │  <div class="memproto">
│ │        <table class="memname">
│ │ @@ -443,16 +443,16 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJFLAG_ACCURATEDCT</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Use the most accurate DCT/IDCT algorithm available in the underlying codec. </p>
│ │ -<p>The default if this flag is not specified is implementation-specific. For example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast algorithm by default when compressing, because this has been shown to have only a very slight effect on accuracy, but it uses the accurate algorithm when decompressing, because this has been shown to have a larger effect. </p>
│ │ +<p>Use the most accurate DCT/IDCT algorithm available. </p>
│ │ +<p>The default if this flag is not specified is implementation-specific. For example, the implementation of the TurboJPEG API in libjpeg-turbo uses the fast algorithm by default when compressing, because this has been shown to have only a very slight effect on accuracy, but it uses the accurate algorithm when decompressing, because this has been shown to have a larger effect. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga72ecf4ebe6eb702d3c6f5ca27455e1ec"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga72ecf4ebe6eb702d3c6f5ca27455e1ec">&#9670;&nbsp;</a></span>TJFLAG_BOTTOMUP</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -460,15 +460,15 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJFLAG_BOTTOMUP</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>The uncompressed source/destination image is stored in bottom-up (Windows, OpenGL) order, not top-down (X11) order. </p>
│ │ +<p>Rows in the packed-pixel source/destination image are stored in bottom-up (Windows, OpenGL) order rather than in top-down (X11) order. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="gaabce235db80d3f698b27f36cbd453da2"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#gaabce235db80d3f698b27f36cbd453da2">&#9670;&nbsp;</a></span>TJFLAG_FASTDCT</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -476,16 +476,16 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJFLAG_FASTDCT</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Use the fastest DCT/IDCT algorithm available in the underlying codec. </p>
│ │ -<p>The default if this flag is not specified is implementation-specific. For example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast algorithm by default when compressing, because this has been shown to have only a very slight effect on accuracy, but it uses the accurate algorithm when decompressing, because this has been shown to have a larger effect. </p>
│ │ +<p>Use the fastest DCT/IDCT algorithm available. </p>
│ │ +<p>The default if this flag is not specified is implementation-specific. For example, the implementation of the TurboJPEG API in libjpeg-turbo uses the fast algorithm by default when compressing, because this has been shown to have only a very slight effect on accuracy, but it uses the accurate algorithm when decompressing, because this has been shown to have a larger effect. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga4ee4506c81177a06f77e2504a22efd2d"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga4ee4506c81177a06f77e2504a22efd2d">&#9670;&nbsp;</a></span>TJFLAG_FASTUPSAMPLE</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -493,15 +493,15 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJFLAG_FASTUPSAMPLE</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>When decompressing an image that was compressed using chrominance subsampling, use the fastest chrominance upsampling algorithm available in the underlying codec. </p>
│ │ +<p>When decompressing an image that was compressed using chrominance subsampling, use the fastest chrominance upsampling algorithm available. </p>
│ │  <p>The default is to use smooth upsampling, which creates a smooth transition between neighboring chrominance components in order to reduce upsampling artifacts in the decompressed image. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga163e6482dc5096831feef9c79ff3f805"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga163e6482dc5096831feef9c79ff3f805">&#9670;&nbsp;</a></span>TJFLAG_LIMITSCANS</h2>
│ │  
│ │ @@ -527,16 +527,16 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJFLAG_NOREALLOC</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Disable buffer (re)allocation. </p>
│ │ -<p>If passed to one of the JPEG compression or transform functions, this flag will cause those functions to generate an error if the JPEG image buffer is invalid or too small rather than attempting to allocate or reallocate that buffer. This reproduces the behavior of earlier versions of TurboJPEG. </p>
│ │ +<p>Disable JPEG buffer (re)allocation. </p>
│ │ +<p>If passed to one of the JPEG compression or transform functions, this flag will cause those functions to generate an error if the JPEG destination buffer is invalid or too small, rather than attempt to allocate or reallocate that buffer. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga43b426750b46190a25d34a67ef76df1b"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga43b426750b46190a25d34a67ef76df1b">&#9670;&nbsp;</a></span>TJFLAG_PROGRESSIVE</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -561,15 +561,15 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJFLAG_STOPONWARNING</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Immediately discontinue the current compression/decompression/transform operation if the underlying codec throws a warning (non-fatal error). </p>
│ │ +<p>Immediately discontinue the current compression/decompression/transform operation if a warning (non-fatal error) occurs. </p>
│ │  <p>The default behavior is to allow the operation to complete unless a fatal error is encountered. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga0aba955473315e405295d978f0c16511"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga0aba955473315e405295d978f0c16511">&#9670;&nbsp;</a></span>TJPAD</h2>
│ │  
│ │ @@ -582,15 +582,15 @@
│ │            <td class="paramtype">&#160;</td>
│ │            <td class="paramname">width</td><td>)</td>
│ │            <td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Pad the given width to the nearest 32-bit boundary. </p>
│ │ +<p>Pad the given width to the nearest multiple of 4. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga84878bb65404204743aa18cac02781df"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga84878bb65404204743aa18cac02781df">&#9670;&nbsp;</a></span>TJSCALED</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -629,15 +629,15 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJXOPT_COPYNONE</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from copying any extra markers (including EXIF and ICC profile data) from the source image to the output image. </p>
│ │ +<p>This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from copying any extra markers (including EXIF and ICC profile data) from the source image to the destination image. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga9c771a757fc1294add611906b89ab2d2"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga9c771a757fc1294add611906b89ab2d2">&#9670;&nbsp;</a></span>TJXOPT_CROP</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -662,15 +662,15 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJXOPT_GRAY</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>This option will discard the color data in the input image and produce a grayscale output image. </p>
│ │ +<p>This option will discard the color data in the source image and produce a grayscale destination image. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="gafbf992bbf6e006705886333703ffab31"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#gafbf992bbf6e006705886333703ffab31">&#9670;&nbsp;</a></span>TJXOPT_NOOUTPUT</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -678,15 +678,16 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJXOPT_NOOUTPUT</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from outputting a JPEG image for this particular transform (this can be used in conjunction with a custom filter to capture the transformed DCT coefficients without transcoding them.) </p>
│ │ +<p>This option will prevent <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a> from outputting a JPEG image for this particular transform. </p>
│ │ +<p>(This can be used in conjunction with a custom filter to capture the transformed DCT coefficients without transcoding them.) </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga50e03cb5ed115330e212417429600b00"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga50e03cb5ed115330e212417429600b00">&#9670;&nbsp;</a></span>TJXOPT_PERFECT</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -711,16 +712,16 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">#define TJXOPT_PROGRESSIVE</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>This option will enable progressive entropy coding in the output image generated by this particular transform. </p>
│ │ -<p>Progressive entropy coding will generally improve compression relative to baseline entropy coding (the default), but it will reduce compression and decompression performance considerably. </p>
│ │ +<p>This option will enable progressive entropy coding in the JPEG image generated by this particular transform. </p>
│ │ +<p>Progressive entropy coding will generally improve compression relative to baseline entropy coding (the default), but it will reduce decompression performance considerably. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga319826b7eb1583c0595bbe7b95428709"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga319826b7eb1583c0595bbe7b95428709">&#9670;&nbsp;</a></span>TJXOPT_TRIM</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -781,27 +782,27 @@
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>JPEG colorspaces. </p>
│ │  <table class="fieldtable">
│ │  <tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga4f83ad3368e0e29d1957be0efa7c3720a677cb7ccb85c4038ac41964a2e09e555"></a>TJCS_RGB&#160;</td><td class="fielddoc"><p>RGB colorspace. </p>
│ │ -<p>When compressing the JPEG image, the R, G, and B components in the source image are reordered into image planes, but no colorspace conversion or subsampling is performed. RGB JPEG images can be decompressed to any of the extended RGB pixel formats or grayscale, but they cannot be decompressed to YUV images. </p>
│ │ +<p>When compressing the JPEG image, the R, G, and B components in the source image are reordered into image planes, but no colorspace conversion or subsampling is performed. RGB JPEG images can be decompressed to packed-pixel images with any of the extended RGB or grayscale pixel formats, but they cannot be decompressed to planar YUV images. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="gga4f83ad3368e0e29d1957be0efa7c3720a7389b8f65bb387ffedce3efd0d78ec75"></a>TJCS_YCbCr&#160;</td><td class="fielddoc"><p>YCbCr colorspace. </p>
│ │ -<p>YCbCr is not an absolute colorspace but rather a mathematical transformation of RGB designed solely for storage and transmission. YCbCr images must be converted to RGB before they can actually be displayed. In the YCbCr colorspace, the Y (luminance) component represents the black &amp; white portion of the original image, and the Cb and Cr (chrominance) components represent the color portion of the original image. Originally, the analog equivalent of this transformation allowed the same signal to drive both black &amp; white and color televisions, but JPEG images use YCbCr primarily because it allows the color data to be optionally subsampled for the purposes of reducing bandwidth or disk space. YCbCr is the most common JPEG colorspace, and YCbCr JPEG images can be compressed from and decompressed to any of the extended RGB pixel formats or grayscale, or they can be decompressed to YUV planar images. </p>
│ │ +<p>YCbCr is not an absolute colorspace but rather a mathematical transformation of RGB designed solely for storage and transmission. YCbCr images must be converted to RGB before they can actually be displayed. In the YCbCr colorspace, the Y (luminance) component represents the black &amp; white portion of the original image, and the Cb and Cr (chrominance) components represent the color portion of the original image. Originally, the analog equivalent of this transformation allowed the same signal to drive both black &amp; white and color televisions, but JPEG images use YCbCr primarily because it allows the color data to be optionally subsampled for the purposes of reducing network or disk usage. YCbCr is the most common JPEG colorspace, and YCbCr JPEG images can be compressed from and decompressed to packed-pixel images with any of the extended RGB or grayscale pixel formats. YCbCr JPEG images can also be compressed from and decompressed to planar YUV images. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="gga4f83ad3368e0e29d1957be0efa7c3720ab3e7d6a87f695e45b81c1b5262b5a50a"></a>TJCS_GRAY&#160;</td><td class="fielddoc"><p>Grayscale colorspace. </p>
│ │ -<p>The JPEG image retains only the luminance data (Y component), and any color data from the source image is discarded. Grayscale JPEG images can be compressed from and decompressed to any of the extended RGB pixel formats or grayscale, or they can be decompressed to YUV planar images. </p>
│ │ +<p>The JPEG image retains only the luminance data (Y component), and any color data from the source image is discarded. Grayscale JPEG images can be compressed from and decompressed to packed-pixel images with any of the extended RGB or grayscale pixel formats, or they can be compressed from and decompressed to planar YUV images. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="gga4f83ad3368e0e29d1957be0efa7c3720a6c8b636152ac8195b869587db315ee53"></a>TJCS_CMYK&#160;</td><td class="fielddoc"><p>CMYK colorspace. </p>
│ │ -<p>When compressing the JPEG image, the C, M, Y, and K components in the source image are reordered into image planes, but no colorspace conversion or subsampling is performed. CMYK JPEG images can only be decompressed to CMYK pixels. </p>
│ │ +<p>When compressing the JPEG image, the C, M, Y, and K components in the source image are reordered into image planes, but no colorspace conversion or subsampling is performed. CMYK JPEG images can only be decompressed to packed-pixel images with the CMYK pixel format. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="gga4f83ad3368e0e29d1957be0efa7c3720a53839e0fe867b76b58d16b0a1a7c598e"></a>TJCS_YCCK&#160;</td><td class="fielddoc"><p>YCCK colorspace. </p>
│ │ -<p>YCCK (AKA "YCbCrK") is not an absolute colorspace but rather a mathematical transformation of CMYK designed solely for storage and transmission. It is to CMYK as YCbCr is to RGB. CMYK pixels can be reversibly transformed into YCCK, and as with YCbCr, the chrominance components in the YCCK pixels can be subsampled without incurring major perceptual loss. YCCK JPEG images can only be compressed from and decompressed to CMYK pixels. </p>
│ │ +<p>YCCK (AKA "YCbCrK") is not an absolute colorspace but rather a mathematical transformation of CMYK designed solely for storage and transmission. It is to CMYK as YCbCr is to RGB. CMYK pixels can be reversibly transformed into YCCK, and as with YCbCr, the chrominance components in the YCCK pixels can be subsampled without incurring major perceptual loss. YCCK JPEG images can only be compressed from and decompressed to packed-pixel images with the CMYK pixel format. </p>
│ │  </td></tr>
│ │  </table>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="gafbc17cfa57d0d5d11fea35ac025950fe"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#gafbc17cfa57d0d5d11fea35ac025950fe">&#9670;&nbsp;</a></span>TJERR</h2>
│ │ @@ -813,15 +814,15 @@
│ │            <td class="memname">enum <a class="el" href="group___turbo_j_p_e_g.html#gafbc17cfa57d0d5d11fea35ac025950fe">TJERR</a></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Error codes. </p>
│ │  <table class="fieldtable">
│ │ -<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggafbc17cfa57d0d5d11fea35ac025950fea342dd6e2aedb47bb257b4e7568329b59"></a>TJERR_WARNING&#160;</td><td class="fielddoc"><p>The error was non-fatal and recoverable, but the image may still be corrupt. </p>
│ │ +<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggafbc17cfa57d0d5d11fea35ac025950fea342dd6e2aedb47bb257b4e7568329b59"></a>TJERR_WARNING&#160;</td><td class="fielddoc"><p>The error was non-fatal and recoverable, but the destination image may still be corrupt. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="ggafbc17cfa57d0d5d11fea35ac025950feafc9cceeada13122b09e4851e3788039a"></a>TJERR_FATAL&#160;</td><td class="fielddoc"><p>The error was fatal and non-recoverable. </p>
│ │  </td></tr>
│ │  </table>
│ │  
│ │  </div>
│ │  </div>
│ │ @@ -869,18 +870,18 @@
│ │  <tr><td class="fieldname"><a id="ggac916144e26c3817ac514e64ae5d12e2aa1ba1a7f1631dbeaa49a0a85fc4a40081"></a>TJPF_ABGR&#160;</td><td class="fielddoc"><p>ABGR pixel format. </p>
│ │  <p>This is the same as <a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aaf6603b27147de47e212e75dac027b2af">TJPF_XBGR</a>, except that when decompressing, the X component is guaranteed to be 0xFF, which can be interpreted as an opaque alpha channel. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="ggac916144e26c3817ac514e64ae5d12e2aae8f846ed9d9de99b6e1dfe448848765c"></a>TJPF_ARGB&#160;</td><td class="fielddoc"><p>ARGB pixel format. </p>
│ │  <p>This is the same as <a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aadae996905efcfa3b42a0bb3bea7f9d84">TJPF_XRGB</a>, except that when decompressing, the X component is guaranteed to be 0xFF, which can be interpreted as an opaque alpha channel. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="ggac916144e26c3817ac514e64ae5d12e2aa7f5100ec44c91994e243f1cf55553f8b"></a>TJPF_CMYK&#160;</td><td class="fielddoc"><p>CMYK pixel format. </p>
│ │ -<p>Unlike RGB, which is an additive color model used primarily for display, CMYK (Cyan/Magenta/Yellow/Key) is a subtractive color model used primarily for printing. In the CMYK color model, the value of each color component typically corresponds to an amount of cyan, magenta, yellow, or black ink that is applied to a white background. In order to convert between CMYK and RGB, it is necessary to use a color management system (CMS.) A CMS will attempt to map colors within the printer's gamut to perceptually similar colors in the display's gamut and vice versa, but the mapping is typically not 1:1 or reversible, nor can it be defined with a simple formula. Thus, such a conversion is out of scope for a codec library. However, the TurboJPEG API allows for compressing CMYK pixels into a YCCK JPEG image (see <a class="el" href="group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a53839e0fe867b76b58d16b0a1a7c598e" title="YCCK colorspace.">TJCS_YCCK</a>) and decompressing YCCK JPEG images into CMYK pixels. </p>
│ │ +<p>Unlike RGB, which is an additive color model used primarily for display, CMYK (Cyan/Magenta/Yellow/Key) is a subtractive color model used primarily for printing. In the CMYK color model, the value of each color component typically corresponds to an amount of cyan, magenta, yellow, or black ink that is applied to a white background. In order to convert between CMYK and RGB, it is necessary to use a color management system (CMS.) A CMS will attempt to map colors within the printer's gamut to perceptually similar colors in the display's gamut and vice versa, but the mapping is typically not 1:1 or reversible, nor can it be defined with a simple formula. Thus, such a conversion is out of scope for a codec library. However, the TurboJPEG API allows for compressing packed-pixel CMYK images into YCCK JPEG images (see <a class="el" href="group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a53839e0fe867b76b58d16b0a1a7c598e" title="YCCK colorspace.">TJCS_YCCK</a>) and decompressing YCCK JPEG images into packed-pixel CMYK images. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="ggac916144e26c3817ac514e64ae5d12e2aa84c1a6cead7952998e2fb895844a21ed"></a>TJPF_UNKNOWN&#160;</td><td class="fielddoc"><p>Unknown pixel format. </p>
│ │ -<p>Currently this is only used by <a class="el" href="group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7" title="Load an uncompressed image from disk into memory.">tjLoadImage()</a>. </p>
│ │ +<p>Currently this is only used by <a class="el" href="group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7" title="Load a packed-pixel image from disk into memory.">tjLoadImage()</a>. </p>
│ │  </td></tr>
│ │  </table>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga1d047060ea80bb9820d540bb928e9074"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga1d047060ea80bb9820d540bb928e9074">&#9670;&nbsp;</a></span>TJSAMP</h2>
│ │ @@ -891,15 +892,15 @@
│ │          <tr>
│ │            <td class="memname">enum <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">TJSAMP</a></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Chrominance subsampling options. </p>
│ │ -<p>When pixels are converted from RGB to YCbCr (see <a class="el" href="group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a7389b8f65bb387ffedce3efd0d78ec75" title="YCbCr colorspace.">TJCS_YCbCr</a>) or from CMYK to YCCK (see <a class="el" href="group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a53839e0fe867b76b58d16b0a1a7c598e" title="YCCK colorspace.">TJCS_YCCK</a>) as part of the JPEG compression process, some of the Cb and Cr (chrominance) components can be discarded or averaged together to produce a smaller image with little perceptible loss of image clarity (the human eye is more sensitive to small changes in brightness than to small changes in color.) This is called "chrominance subsampling". </p>
│ │ +<p>When pixels are converted from RGB to YCbCr (see <a class="el" href="group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a7389b8f65bb387ffedce3efd0d78ec75" title="YCbCr colorspace.">TJCS_YCbCr</a>) or from CMYK to YCCK (see <a class="el" href="group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a53839e0fe867b76b58d16b0a1a7c598e" title="YCCK colorspace.">TJCS_YCCK</a>) as part of the JPEG compression process, some of the Cb and Cr (chrominance) components can be discarded or averaged together to produce a smaller image with little perceptible loss of image clarity. (The human eye is more sensitive to small changes in brightness than to small changes in color.) This is called "chrominance subsampling". </p>
│ │  <table class="fieldtable">
│ │  <tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga1d047060ea80bb9820d540bb928e9074afb8da4f44197837bdec0a4f593dacae3"></a>TJSAMP_444&#160;</td><td class="fielddoc"><p>4:4:4 chrominance subsampling (no chrominance subsampling). </p>
│ │  <p>The JPEG or YUV image will contain one chrominance component for every pixel in the source image. </p>
│ │  </td></tr>
│ │  <tr><td class="fieldname"><a id="gga1d047060ea80bb9820d540bb928e9074a136130902cc578f11f32429b59368404"></a>TJSAMP_422&#160;</td><td class="fielddoc"><p>4:2:2 chrominance subsampling. </p>
│ │  <p>The JPEG or YUV image will contain one chrominance component for every 2x1 block of pixels in the source image. </p>
│ │  </td></tr>
│ │ @@ -973,24 +974,24 @@
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>bytes</em></td><td>)</td>
│ │            <td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Allocate an image buffer for use with TurboJPEG. </p>
│ │ -<p>You should always use this function to allocate the JPEG destination buffer(s) for the compression and transform functions unless you are disabling automatic buffer (re)allocation (by setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a>.)</p>
│ │ +<p>Allocate a byte buffer for use with TurboJPEG. </p>
│ │ +<p>You should always use this function to allocate the JPEG destination buffer(s) for the compression and transform functions unless you are disabling automatic buffer (re)allocation (by setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a>.)</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">bytes</td><td>the number of bytes to allocate</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>a pointer to a newly-allocated buffer with the specified number of bytes.</dd></dl>
│ │ -<dl class="section see"><dt>See also</dt><dd><a class="el" href="group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b" title="Free an image buffer previously allocated by TurboJPEG.">tjFree()</a> </dd></dl>
│ │ +<dl class="section see"><dt>See also</dt><dd><a class="el" href="group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b" title="Free a byte buffer previously allocated by TurboJPEG.">tjFree()</a> </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga67ac12fee79073242cb216e07c9f1f90"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga67ac12fee79073242cb216e07c9f1f90">&#9670;&nbsp;</a></span>tjBufSize()</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -1019,44 +1020,44 @@
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters. </p>
│ │ -<p>The number of bytes returned by this function is larger than the size of the uncompressed source image. The reason for this is that the JPEG format uses 16-bit coefficients, and it is thus possible for a very high-quality JPEG image with very high-frequency content to expand rather than compress when converted to the JPEG format. Such images represent a very rare corner case, but since there is no way to predict the size of a JPEG image prior to compression, the corner case has to be handled.</p>
│ │ +<p>The number of bytes returned by this function is larger than the size of the uncompressed source image. The reason for this is that the JPEG format uses 16-bit coefficients, so it is possible for a very high-quality source image with very high-frequency content to expand rather than compress when converted to the JPEG format. Such images represent very rare corner cases, but since there is no way to predict the size of a JPEG image prior to compression, the corner cases have to be handled.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the image</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the image</td></tr>
│ │      <tr><td class="paramname">jpegSubsamp</td><td>the level of chrominance subsampling to be used when generating the JPEG image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>the maximum size of the buffer (in bytes) required to hold the image, or -1 if the arguments are out of bounds. </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │ -<a id="ga2be2b9969d4df9ecce9b05deed273194"></a>
│ │ -<h2 class="memtitle"><span class="permalink"><a href="#ga2be2b9969d4df9ecce9b05deed273194">&#9670;&nbsp;</a></span>tjBufSizeYUV2()</h2>
│ │ +<a id="ga5e5aac9e8bcf17049279301e2466474c"></a>
│ │ +<h2 class="memtitle"><span class="permalink"><a href="#ga5e5aac9e8bcf17049279301e2466474c">&#9670;&nbsp;</a></span>tjBufSizeYUV2()</h2>
│ │  
│ │  <div class="memitem">
│ │  <div class="memproto">
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">DLLEXPORT unsigned long tjBufSizeYUV2 </td>
│ │            <td>(</td>
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>width</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │ -          <td class="paramname"><em>pad</em>, </td>
│ │ +          <td class="paramname"><em>align</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>height</em>, </td>
│ │          </tr>
│ │ @@ -1070,19 +1071,19 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>The size of the buffer (in bytes) required to hold a YUV planar image with the given parameters. </p>
│ │ +<p>The size of the buffer (in bytes) required to hold a unified planar YUV image with the given parameters. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the image</td></tr>
│ │ -    <tr><td class="paramname">pad</td><td>the width of each line in each plane of the image is padded to the nearest multiple of this number of bytes (must be a power of 2.)</td></tr>
│ │ +    <tr><td class="paramname">align</td><td>row alignment (in bytes) of the image (must be a power of 2.) Setting this parameter to n specifies that each row in each plane of the image will be padded to the nearest multiple of n bytes (1 = unpadded.)</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the image</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>level of chrominance subsampling in the image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>the size of the buffer (in bytes) required to hold the image, or -1 if the arguments are out of bounds. </dd></dl>
│ │  
│ │ @@ -1164,42 +1165,42 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Compress an RGB, grayscale, or CMYK image into a JPEG image. </p>
│ │ +<p>Compress a packed-pixel RGB, grayscale, or CMYK image into a JPEG image. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG compressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">srcBuf</td><td>pointer to an image buffer containing RGB, grayscale, or CMYK pixels to be compressed</td></tr>
│ │ +    <tr><td class="paramname">srcBuf</td><td>pointer to a buffer containing a packed-pixel RGB, grayscale, or CMYK source image to be compressed</td></tr>
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the source image</td></tr>
│ │ -    <tr><td class="paramname">pitch</td><td>bytes per line in the source image. Normally, this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code> if the image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest 32-bit boundary.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each line of the image is padded to the nearest 32-bit boundary, as is the case for Windows bitmaps. You can also be clever and use this parameter to skip lines, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ +    <tr><td class="paramname">pitch</td><td>bytes per row in the source image. Normally this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>, if the image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest multiple of 4.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each row of the image is padded to the nearest multiple of 4 bytes, as is the case for Windows bitmaps. You can also be clever and use this parameter to skip rows, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the source image</td></tr>
│ │      <tr><td class="paramname">pixelFormat</td><td>pixel format of the source image (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.)</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>address of a pointer to an image buffer that will receive the JPEG image. TurboJPEG has the ability to reallocate the JPEG buffer to accommodate the size of the JPEG image. Thus, you can choose to:<ol type="1">
│ │ -<li>pre-allocate the JPEG buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate an image buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>address of a pointer to a byte buffer that will receive the JPEG image. TurboJPEG has the ability to reallocate the JPEG buffer to accommodate the size of the JPEG image. Thus, you can choose to:<ol type="1">
│ │ +<li>pre-allocate the JPEG buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate a byte buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │  <li>set <code>*jpegBuf</code> to NULL to tell TurboJPEG to allocate the buffer for you, or</li>
│ │ -<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a>. This should ensure that the buffer never has to be re-allocated (setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.)</li>
│ │ +<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a>. This should ensure that the buffer never has to be re-allocated. (Setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.)</li>
│ │  </ol>
│ │ -If you choose option 1, <code>*jpegSize</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>*jpegBuf</code> upon return from this function, as it may have changed.</td></tr>
│ │ -    <tr><td class="paramname">jpegSize</td><td>pointer to an unsigned long variable that holds the size of the JPEG image buffer. If <code>*jpegBuf</code> points to a pre-allocated buffer, then <code>*jpegSize</code> should be set to the size of the buffer. Upon return, <code>*jpegSize</code> will contain the size of the JPEG image (in bytes.) If <code>*jpegBuf</code> points to a JPEG image buffer that is being reused from a previous call to one of the JPEG compression functions, then <code>*jpegSize</code> is ignored.</td></tr>
│ │ +If you choose option 1, then <code>*jpegSize</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>*jpegBuf</code> upon return from this function, as it may have changed.</td></tr>
│ │ +    <tr><td class="paramname">jpegSize</td><td>pointer to an unsigned long variable that holds the size of the JPEG buffer. If <code>*jpegBuf</code> points to a pre-allocated buffer, then <code>*jpegSize</code> should be set to the size of the buffer. Upon return, <code>*jpegSize</code> will contain the size of the JPEG image (in bytes.) If <code>*jpegBuf</code> points to a JPEG buffer that is being reused from a previous call to one of the JPEG compression functions, then <code>*jpegSize</code> is ignored.</td></tr>
│ │      <tr><td class="paramname">jpegSubsamp</td><td>the level of chrominance subsampling to be used when generating the JPEG image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │      <tr><td class="paramname">jpegQual</td><td>the image quality of the generated JPEG image (1 = worst, 100 = best)</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │ -<a id="ga7622a459b79aa1007e005b58783f875b"></a>
│ │ -<h2 class="memtitle"><span class="permalink"><a href="#ga7622a459b79aa1007e005b58783f875b">&#9670;&nbsp;</a></span>tjCompressFromYUV()</h2>
│ │ +<a id="gab40f5096a72fd7e5bda9d6b58fa37e2e"></a>
│ │ +<h2 class="memtitle"><span class="permalink"><a href="#gab40f5096a72fd7e5bda9d6b58fa37e2e">&#9670;&nbsp;</a></span>tjCompressFromYUV()</h2>
│ │  
│ │  <div class="memitem">
│ │  <div class="memproto">
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">DLLEXPORT int tjCompressFromYUV </td>
│ │            <td>(</td>
│ │ @@ -1218,15 +1219,15 @@
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>width</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │ -          <td class="paramname"><em>pad</em>, </td>
│ │ +          <td class="paramname"><em>align</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>height</em>, </td>
│ │          </tr>
│ │ @@ -1264,30 +1265,30 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Compress a YUV planar image into a JPEG image. </p>
│ │ +<p>Compress a unified planar YUV image into a JPEG image. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG compressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">srcBuf</td><td>pointer to an image buffer containing a YUV planar image to be compressed. The size of this buffer should match the value returned by <a class="el" href="group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194" title="The size of the buffer (in bytes) required to hold a YUV planar image with the given parameters.">tjBufSizeYUV2()</a> for the given image width, height, padding, and level of chrominance subsampling. The Y, U (Cb), and V (Cr) image planes should be stored sequentially in the source buffer (refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ -    <tr><td class="paramname">width</td><td>width (in pixels) of the source image. If the width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ -    <tr><td class="paramname">pad</td><td>the line padding used in the source image. For instance, if each line in each plane of the YUV image is padded to the nearest multiple of 4 bytes, then <code>pad</code> should be set to 4.</td></tr>
│ │ -    <tr><td class="paramname">height</td><td>height (in pixels) of the source image. If the height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ +    <tr><td class="paramname">srcBuf</td><td>pointer to a buffer containing a unified planar YUV source image to be compressed. The size of this buffer should match the value returned by <a class="el" href="group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c" title="The size of the buffer (in bytes) required to hold a unified planar YUV image with the given paramete...">tjBufSizeYUV2()</a> for the given image width, height, row alignment, and level of chrominance subsampling. The Y, U (Cb), and V (Cr) image planes should be stored sequentially in the buffer. (Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ +    <tr><td class="paramname">width</td><td>width (in pixels) of the source image. If the width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │ +    <tr><td class="paramname">align</td><td>row alignment (in bytes) of the source image (must be a power of 2.) Setting this parameter to n indicates that each row in each plane of the source image is padded to the nearest multiple of n bytes (1 = unpadded.)</td></tr>
│ │ +    <tr><td class="paramname">height</td><td>height (in pixels) of the source image. If the height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>the level of chrominance subsampling used in the source image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>address of a pointer to an image buffer that will receive the JPEG image. TurboJPEG has the ability to reallocate the JPEG buffer to accommodate the size of the JPEG image. Thus, you can choose to:<ol type="1">
│ │ -<li>pre-allocate the JPEG buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate an image buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>address of a pointer to a byte buffer that will receive the JPEG image. TurboJPEG has the ability to reallocate the JPEG buffer to accommodate the size of the JPEG image. Thus, you can choose to:<ol type="1">
│ │ +<li>pre-allocate the JPEG buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate a byte buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │  <li>set <code>*jpegBuf</code> to NULL to tell TurboJPEG to allocate the buffer for you, or</li>
│ │ -<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a>. This should ensure that the buffer never has to be re-allocated (setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.)</li>
│ │ +<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a>. This should ensure that the buffer never has to be re-allocated. (Setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.)</li>
│ │  </ol>
│ │ -If you choose option 1, <code>*jpegSize</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>*jpegBuf</code> upon return from this function, as it may have changed.</td></tr>
│ │ -    <tr><td class="paramname">jpegSize</td><td>pointer to an unsigned long variable that holds the size of the JPEG image buffer. If <code>*jpegBuf</code> points to a pre-allocated buffer, then <code>*jpegSize</code> should be set to the size of the buffer. Upon return, <code>*jpegSize</code> will contain the size of the JPEG image (in bytes.) If <code>*jpegBuf</code> points to a JPEG image buffer that is being reused from a previous call to one of the JPEG compression functions, then <code>*jpegSize</code> is ignored.</td></tr>
│ │ +If you choose option 1, then <code>*jpegSize</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>*jpegBuf</code> upon return from this function, as it may have changed.</td></tr>
│ │ +    <tr><td class="paramname">jpegSize</td><td>pointer to an unsigned long variable that holds the size of the JPEG buffer. If <code>*jpegBuf</code> points to a pre-allocated buffer, then <code>*jpegSize</code> should be set to the size of the buffer. Upon return, <code>*jpegSize</code> will contain the size of the JPEG image (in bytes.) If <code>*jpegBuf</code> points to a JPEG buffer that is being reused from a previous call to one of the JPEG compression functions, then <code>*jpegSize</code> is ignored.</td></tr>
│ │      <tr><td class="paramname">jpegQual</td><td>the image quality of the generated JPEG image (1 = worst, 100 = best)</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │ @@ -1367,37 +1368,37 @@
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Compress a set of Y, U (Cb), and V (Cr) image planes into a JPEG image. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG compressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">srcPlanes</td><td>an array of pointers to Y, U (Cb), and V (Cr) image planes (or just a Y plane, if compressing a grayscale image) that contain a YUV image to be compressed. These planes can be contiguous or non-contiguous in memory. The size of each plane should match the value returned by <a class="el" href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d" title="The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters.">tjPlaneSizeYUV()</a> for the given image width, height, strides, and level of chrominance subsampling. Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a> for more details.</td></tr>
│ │ -    <tr><td class="paramname">width</td><td>width (in pixels) of the source image. If the width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ -    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per line in the corresponding plane of the YUV source image. Setting the stride for any plane to 0 is the same as setting it to the plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective plane widths. You can adjust the strides in order to specify an arbitrary amount of line padding in each plane or to create a JPEG image from a subregion of a larger YUV planar image.</td></tr>
│ │ -    <tr><td class="paramname">height</td><td>height (in pixels) of the source image. If the height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ +    <tr><td class="paramname">srcPlanes</td><td>an array of pointers to Y, U (Cb), and V (Cr) image planes (or just a Y plane, if compressing a grayscale image) that contain a YUV source image to be compressed. These planes can be contiguous or non-contiguous in memory. The size of each plane should match the value returned by <a class="el" href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d" title="The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters.">tjPlaneSizeYUV()</a> for the given image width, height, strides, and level of chrominance subsampling. Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a> for more details.</td></tr>
│ │ +    <tr><td class="paramname">width</td><td>width (in pixels) of the source image. If the width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │ +    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per row in the corresponding plane of the YUV source image. Setting the stride for any plane to 0 is the same as setting it to the plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective plane widths. You can adjust the strides in order to specify an arbitrary amount of row padding in each plane or to create a JPEG image from a subregion of a larger planar YUV image.</td></tr>
│ │ +    <tr><td class="paramname">height</td><td>height (in pixels) of the source image. If the height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>the level of chrominance subsampling used in the source image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>address of a pointer to an image buffer that will receive the JPEG image. TurboJPEG has the ability to reallocate the JPEG buffer to accommodate the size of the JPEG image. Thus, you can choose to:<ol type="1">
│ │ -<li>pre-allocate the JPEG buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate an image buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>address of a pointer to a byte buffer that will receive the JPEG image. TurboJPEG has the ability to reallocate the JPEG buffer to accommodate the size of the JPEG image. Thus, you can choose to:<ol type="1">
│ │ +<li>pre-allocate the JPEG buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate a byte buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │  <li>set <code>*jpegBuf</code> to NULL to tell TurboJPEG to allocate the buffer for you, or</li>
│ │ -<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a>. This should ensure that the buffer never has to be re-allocated (setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.)</li>
│ │ +<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a>. This should ensure that the buffer never has to be re-allocated. (Setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.)</li>
│ │  </ol>
│ │ -If you choose option 1, <code>*jpegSize</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>*jpegBuf</code> upon return from this function, as it may have changed.</td></tr>
│ │ -    <tr><td class="paramname">jpegSize</td><td>pointer to an unsigned long variable that holds the size of the JPEG image buffer. If <code>*jpegBuf</code> points to a pre-allocated buffer, then <code>*jpegSize</code> should be set to the size of the buffer. Upon return, <code>*jpegSize</code> will contain the size of the JPEG image (in bytes.) If <code>*jpegBuf</code> points to a JPEG image buffer that is being reused from a previous call to one of the JPEG compression functions, then <code>*jpegSize</code> is ignored.</td></tr>
│ │ +If you choose option 1, then <code>*jpegSize</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>*jpegBuf</code> upon return from this function, as it may have changed.</td></tr>
│ │ +    <tr><td class="paramname">jpegSize</td><td>pointer to an unsigned long variable that holds the size of the JPEG buffer. If <code>*jpegBuf</code> points to a pre-allocated buffer, then <code>*jpegSize</code> should be set to the size of the buffer. Upon return, <code>*jpegSize</code> will contain the size of the JPEG image (in bytes.) If <code>*jpegBuf</code> points to a JPEG buffer that is being reused from a previous call to one of the JPEG compression functions, then <code>*jpegSize</code> is ignored.</td></tr>
│ │      <tr><td class="paramname">jpegQual</td><td>the image quality of the generated JPEG image (1 = worst, 100 = best)</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │ -<a id="ga70abbf38f77a26fd6da8813bef96f695"></a>
│ │ -<h2 class="memtitle"><span class="permalink"><a href="#ga70abbf38f77a26fd6da8813bef96f695">&#9670;&nbsp;</a></span>tjDecodeYUV()</h2>
│ │ +<a id="ga97c2cedc1e2bade15a84164c94e503c1"></a>
│ │ +<h2 class="memtitle"><span class="permalink"><a href="#ga97c2cedc1e2bade15a84164c94e503c1">&#9670;&nbsp;</a></span>tjDecodeYUV()</h2>
│ │  
│ │  <div class="memitem">
│ │  <div class="memproto">
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">DLLEXPORT int tjDecodeYUV </td>
│ │            <td>(</td>
│ │ @@ -1410,15 +1411,15 @@
│ │            <td class="paramtype">const unsigned char *&#160;</td>
│ │            <td class="paramname"><em>srcBuf</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │ -          <td class="paramname"><em>pad</em>, </td>
│ │ +          <td class="paramname"><em>align</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>subsamp</em>, </td>
│ │          </tr>
│ │ @@ -1462,25 +1463,25 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Decode a YUV planar image into an RGB or grayscale image. </p>
│ │ -<p>This function uses the accelerated color conversion routines in the underlying codec but does not execute any of the other steps in the JPEG decompression process.</p>
│ │ +<p>Decode a unified planar YUV image into a packed-pixel RGB or grayscale image. </p>
│ │ +<p>This function performs color conversion (which is accelerated in the libjpeg-turbo implementation) but does not execute any of the other steps in the JPEG decompression process.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG decompressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">srcBuf</td><td>pointer to an image buffer containing a YUV planar image to be decoded. The size of this buffer should match the value returned by <a class="el" href="group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194" title="The size of the buffer (in bytes) required to hold a YUV planar image with the given parameters.">tjBufSizeYUV2()</a> for the given image width, height, padding, and level of chrominance subsampling. The Y, U (Cb), and V (Cr) image planes should be stored sequentially in the source buffer (refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ -    <tr><td class="paramname">pad</td><td>Use this parameter to specify that the width of each line in each plane of the YUV source image is padded to the nearest multiple of this number of bytes (must be a power of 2.)</td></tr>
│ │ +    <tr><td class="paramname">srcBuf</td><td>pointer to a buffer containing a unified planar YUV source image to be decoded. The size of this buffer should match the value returned by <a class="el" href="group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c" title="The size of the buffer (in bytes) required to hold a unified planar YUV image with the given paramete...">tjBufSizeYUV2()</a> for the given image width, height, row alignment, and level of chrominance subsampling. The Y, U (Cb), and V (Cr) image planes should be stored sequentially in the source buffer. (Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ +    <tr><td class="paramname">align</td><td>row alignment (in bytes) of the YUV source image (must be a power of 2.) Setting this parameter to n indicates that each row in each plane of the YUV source image is padded to the nearest multiple of n bytes (1 = unpadded.)</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>the level of chrominance subsampling used in the YUV source image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │ -    <tr><td class="paramname">dstBuf</td><td>pointer to an image buffer that will receive the decoded image. This buffer should normally be <code>pitch * height</code> bytes in size, but the <code>dstBuf</code> pointer can also be used to decode into a specific region of a larger buffer.</td></tr>
│ │ +    <tr><td class="paramname">dstBuf</td><td>pointer to a buffer that will receive the packed-pixel decoded image. This buffer should normally be <code>pitch * height</code> bytes in size, but the <code>dstBuf</code> pointer can also be used to decode into a specific region of a larger buffer.</td></tr>
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the source and destination images</td></tr>
│ │ -    <tr><td class="paramname">pitch</td><td>bytes per line in the destination image. Normally, this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code> if the destination image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest 32-bit boundary.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each line of the destination image should be padded to the nearest 32-bit boundary, as is the case for Windows bitmaps. You can also be clever and use the pitch parameter to skip lines, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ +    <tr><td class="paramname">pitch</td><td>bytes per row in the destination image. Normally this should be set to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>, if the destination image should be unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest multiple of 4.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each row of the destination image should be padded to the nearest multiple of 4 bytes, as is the case for Windows bitmaps. You can also be clever and use the pitch parameter to skip rows, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the source and destination images</td></tr>
│ │      <tr><td class="paramname">pixelFormat</td><td>pixel format of the destination image (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.)</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │ @@ -1557,25 +1558,25 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Decode a set of Y, U (Cb), and V (Cr) image planes into an RGB or grayscale image. </p>
│ │ -<p>This function uses the accelerated color conversion routines in the underlying codec but does not execute any of the other steps in the JPEG decompression process.</p>
│ │ +<p>Decode a set of Y, U (Cb), and V (Cr) image planes into a packed-pixel RGB or grayscale image. </p>
│ │ +<p>This function performs color conversion (which is accelerated in the libjpeg-turbo implementation) but does not execute any of the other steps in the JPEG decompression process.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG decompressor or transformer instance</td></tr>
│ │      <tr><td class="paramname">srcPlanes</td><td>an array of pointers to Y, U (Cb), and V (Cr) image planes (or just a Y plane, if decoding a grayscale image) that contain a YUV image to be decoded. These planes can be contiguous or non-contiguous in memory. The size of each plane should match the value returned by <a class="el" href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d" title="The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters.">tjPlaneSizeYUV()</a> for the given image width, height, strides, and level of chrominance subsampling. Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a> for more details.</td></tr>
│ │ -    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per line in the corresponding plane of the YUV source image. Setting the stride for any plane to 0 is the same as setting it to the plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective plane widths. You can adjust the strides in order to specify an arbitrary amount of line padding in each plane or to decode a subregion of a larger YUV planar image.</td></tr>
│ │ +    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per row in the corresponding plane of the YUV source image. Setting the stride for any plane to 0 is the same as setting it to the plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective plane widths. You can adjust the strides in order to specify an arbitrary amount of row padding in each plane or to decode a subregion of a larger planar YUV image.</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>the level of chrominance subsampling used in the YUV source image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │ -    <tr><td class="paramname">dstBuf</td><td>pointer to an image buffer that will receive the decoded image. This buffer should normally be <code>pitch * height</code> bytes in size, but the <code>dstBuf</code> pointer can also be used to decode into a specific region of a larger buffer.</td></tr>
│ │ +    <tr><td class="paramname">dstBuf</td><td>pointer to a buffer that will receive the packed-pixel decoded image. This buffer should normally be <code>pitch * height</code> bytes in size, but the <code>dstBuf</code> pointer can also be used to decode into a specific region of a larger buffer.</td></tr>
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the source and destination images</td></tr>
│ │ -    <tr><td class="paramname">pitch</td><td>bytes per line in the destination image. Normally, this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code> if the destination image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest 32-bit boundary.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each line of the destination image should be padded to the nearest 32-bit boundary, as is the case for Windows bitmaps. You can also be clever and use the pitch parameter to skip lines, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ +    <tr><td class="paramname">pitch</td><td>bytes per row in the destination image. Normally this should be set to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>, if the destination image should be unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest multiple of 4.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each row of the destination image should be padded to the nearest multiple of 4 bytes, as is the case for Windows bitmaps. You can also be clever and use the pitch parameter to skip rows, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the source and destination images</td></tr>
│ │      <tr><td class="paramname">pixelFormat</td><td>pixel format of the destination image (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.)</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │ @@ -1646,23 +1647,23 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Decompress a JPEG image to an RGB, grayscale, or CMYK image. </p>
│ │ +<p>Decompress a JPEG image into a packed-pixel RGB, grayscale, or CMYK image. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG decompressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>pointer to a buffer containing the JPEG image to decompress</td></tr>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>pointer to a byte buffer containing the JPEG image to decompress</td></tr>
│ │      <tr><td class="paramname">jpegSize</td><td>size of the JPEG image (in bytes)</td></tr>
│ │ -    <tr><td class="paramname">dstBuf</td><td>pointer to an image buffer that will receive the decompressed image. This buffer should normally be <code>pitch * scaledHeight</code> bytes in size, where <code>scaledHeight</code> can be determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga84878bb65404204743aa18cac02781df" title="Compute the scaled value of dimension using the given scaling factor.">TJSCALED()</a> with the JPEG image height and one of the scaling factors returned by <a class="el" href="group___turbo_j_p_e_g.html#gac3854476006b10787bd128f7ede48057" title="Returns a list of fractional scaling factors that the JPEG decompressor in this implementation of Tur...">tjGetScalingFactors()</a>. The <code>dstBuf</code> pointer may also be used to decompress into a specific region of a larger buffer.</td></tr>
│ │ +    <tr><td class="paramname">dstBuf</td><td>pointer to a buffer that will receive the packed-pixel decompressed image. This buffer should normally be <code>pitch * scaledHeight</code> bytes in size, where <code>scaledHeight</code> can be determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga84878bb65404204743aa18cac02781df" title="Compute the scaled value of dimension using the given scaling factor.">TJSCALED()</a> with the JPEG image height and one of the scaling factors returned by <a class="el" href="group___turbo_j_p_e_g.html#ga193d0977b3b9966d53a6c402e90899b1" title="Returns a list of fractional scaling factors that the JPEG decompressor supports.">tjGetScalingFactors()</a>. The <code>dstBuf</code> pointer may also be used to decompress into a specific region of a larger buffer.</td></tr>
│ │      <tr><td class="paramname">width</td><td>desired width (in pixels) of the destination image. If this is different than the width of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired width. If <code>width</code> is set to 0, then only the height will be considered when determining the scaled image size.</td></tr>
│ │ -    <tr><td class="paramname">pitch</td><td>bytes per line in the destination image. Normally, this is <code>scaledWidth * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code> if the decompressed image is unpadded, else <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest 32-bit boundary.">TJPAD</a>(scaledWidth * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each line of the decompressed image is padded to the nearest 32-bit boundary, as is the case for Windows bitmaps. (NOTE: <code>scaledWidth</code> can be determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga84878bb65404204743aa18cac02781df" title="Compute the scaled value of dimension using the given scaling factor.">TJSCALED()</a> with the JPEG image width and one of the scaling factors returned by <a class="el" href="group___turbo_j_p_e_g.html#gac3854476006b10787bd128f7ede48057" title="Returns a list of fractional scaling factors that the JPEG decompressor in this implementation of Tur...">tjGetScalingFactors()</a>.) You can also be clever and use the pitch parameter to skip lines, etc. Setting this parameter to 0 is the equivalent of setting it to <code>scaledWidth * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ +    <tr><td class="paramname">pitch</td><td>bytes per row in the destination image. Normally this should be set to <code>scaledWidth * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>, if the destination image should be unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest multiple of 4.">TJPAD</a>(scaledWidth * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each row of the destination image should be padded to the nearest multiple of 4 bytes, as is the case for Windows bitmaps. (NOTE: <code>scaledWidth</code> can be determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga84878bb65404204743aa18cac02781df" title="Compute the scaled value of dimension using the given scaling factor.">TJSCALED()</a> with the JPEG image width and one of the scaling factors returned by <a class="el" href="group___turbo_j_p_e_g.html#ga193d0977b3b9966d53a6c402e90899b1" title="Returns a list of fractional scaling factors that the JPEG decompressor supports.">tjGetScalingFactors()</a>.) You can also be clever and use the pitch parameter to skip rows, etc. Setting this parameter to 0 is the equivalent of setting it to <code>scaledWidth * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │      <tr><td class="paramname">height</td><td>desired height (in pixels) of the destination image. If this is different than the height of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired height. If <code>height</code> is set to 0, then only the width will be considered when determining the scaled image size.</td></tr>
│ │      <tr><td class="paramname">pixelFormat</td><td>pixel format of the destination image (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.)</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │ @@ -1725,29 +1726,29 @@
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Retrieve information about a JPEG image without decompressing it, or prime the decompressor with quantization and Huffman tables. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG decompressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>pointer to a buffer containing a JPEG image or an "abbreviated table specification" (AKA "tables-only") datastream. Passing a tables-only datastream to this function primes the decompressor with quantization and Huffman tables that can be used when decompressing subsequent "abbreviated image" datastreams. This is useful, for instance, when decompressing video streams in which all frames share the same quantization and Huffman tables.</td></tr>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>pointer to a byte buffer containing a JPEG image or an "abbreviated table specification" (AKA "tables-only") datastream. Passing a tables-only datastream to this function primes the decompressor with quantization and Huffman tables that can be used when decompressing subsequent "abbreviated image" datastreams. This is useful, for instance, when decompressing video streams in which all frames share the same quantization and Huffman tables.</td></tr>
│ │      <tr><td class="paramname">jpegSize</td><td>size of the JPEG image or tables-only datastream (in bytes)</td></tr>
│ │      <tr><td class="paramname">width</td><td>pointer to an integer variable that will receive the width (in pixels) of the JPEG image. If <code>jpegBuf</code> points to a tables-only datastream, then <code>width</code> is ignored.</td></tr>
│ │      <tr><td class="paramname">height</td><td>pointer to an integer variable that will receive the height (in pixels) of the JPEG image. If <code>jpegBuf</code> points to a tables-only datastream, then <code>height</code> is ignored.</td></tr>
│ │      <tr><td class="paramname">jpegSubsamp</td><td>pointer to an integer variable that will receive the level of chrominance subsampling used when the JPEG image was compressed (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.) If <code>jpegBuf</code> points to a tables-only datastream, then <code>jpegSubsamp</code> is ignored.</td></tr>
│ │      <tr><td class="paramname">jpegColorspace</td><td>pointer to an integer variable that will receive one of the JPEG colorspace constants, indicating the colorspace of the JPEG image (see <a class="el" href="group___turbo_j_p_e_g.html#ga4f83ad3368e0e29d1957be0efa7c3720">JPEG colorspaces</a>.) If <code>jpegBuf</code> points to a tables-only datastream, then <code>jpegColorspace</code> is ignored.</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │ -<a id="ga04d1e839ff9a0860dd1475cff78d3364"></a>
│ │ -<h2 class="memtitle"><span class="permalink"><a href="#ga04d1e839ff9a0860dd1475cff78d3364">&#9670;&nbsp;</a></span>tjDecompressToYUV2()</h2>
│ │ +<a id="ga5a3093e325598c17a9f004323af6fafa"></a>
│ │ +<h2 class="memtitle"><span class="permalink"><a href="#ga5a3093e325598c17a9f004323af6fafa">&#9670;&nbsp;</a></span>tjDecompressToYUV2()</h2>
│ │  
│ │  <div class="memitem">
│ │  <div class="memproto">
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">DLLEXPORT int tjDecompressToYUV2 </td>
│ │            <td>(</td>
│ │ @@ -1778,15 +1779,15 @@
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>width</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │ -          <td class="paramname"><em>pad</em>, </td>
│ │ +          <td class="paramname"><em>align</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>height</em>, </td>
│ │          </tr>
│ │ @@ -1800,25 +1801,25 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Decompress a JPEG image to a YUV planar image. </p>
│ │ -<p>This function performs JPEG decompression but leaves out the color conversion step, so a planar YUV image is generated instead of an RGB image.</p>
│ │ +<p>Decompress a JPEG image into a unified planar YUV image. </p>
│ │ +<p>This function performs JPEG decompression but leaves out the color conversion step, so a planar YUV image is generated instead of a packed-pixel image.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG decompressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>pointer to a buffer containing the JPEG image to decompress</td></tr>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>pointer to a byte buffer containing the JPEG image to decompress</td></tr>
│ │      <tr><td class="paramname">jpegSize</td><td>size of the JPEG image (in bytes)</td></tr>
│ │ -    <tr><td class="paramname">dstBuf</td><td>pointer to an image buffer that will receive the YUV image. Use <a class="el" href="group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194" title="The size of the buffer (in bytes) required to hold a YUV planar image with the given parameters.">tjBufSizeYUV2()</a> to determine the appropriate size for this buffer based on the image width, height, padding, and level of subsampling. The Y, U (Cb), and V (Cr) image planes will be stored sequentially in the buffer (refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ -    <tr><td class="paramname">width</td><td>desired width (in pixels) of the YUV image. If this is different than the width of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired width. If <code>width</code> is set to 0, then only the height will be considered when determining the scaled image size. If the scaled width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ -    <tr><td class="paramname">pad</td><td>the width of each line in each plane of the YUV image will be padded to the nearest multiple of this number of bytes (must be a power of 2.) To generate images suitable for X Video, <code>pad</code> should be set to 4.</td></tr>
│ │ -    <tr><td class="paramname">height</td><td>desired height (in pixels) of the YUV image. If this is different than the height of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired height. If <code>height</code> is set to 0, then only the width will be considered when determining the scaled image size. If the scaled height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ +    <tr><td class="paramname">dstBuf</td><td>pointer to a buffer that will receive the unified planar YUV decompressed image. Use <a class="el" href="group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c" title="The size of the buffer (in bytes) required to hold a unified planar YUV image with the given paramete...">tjBufSizeYUV2()</a> to determine the appropriate size for this buffer based on the scaled image width, scaled image height, row alignment, and level of chrominance subsampling. The Y, U (Cb), and V (Cr) image planes will be stored sequentially in the buffer. (Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ +    <tr><td class="paramname">width</td><td>desired width (in pixels) of the YUV image. If this is different than the width of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired width. If <code>width</code> is set to 0, then only the height will be considered when determining the scaled image size. If the scaled width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │ +    <tr><td class="paramname">align</td><td>row alignment (in bytes) of the YUV image (must be a power of 2.) Setting this parameter to n will cause each row in each plane of the YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.) To generate images suitable for X Video, <code>align</code> should be set to 4.</td></tr>
│ │ +    <tr><td class="paramname">height</td><td>desired height (in pixels) of the YUV image. If this is different than the height of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired height. If <code>height</code> is set to 0, then only the width will be considered when determining the scaled image size. If the scaled height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │ @@ -1882,24 +1883,24 @@
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Decompress a JPEG image into separate Y, U (Cb), and V (Cr) image planes. </p>
│ │ -<p>This function performs JPEG decompression but leaves out the color conversion step, so a planar YUV image is generated instead of an RGB image.</p>
│ │ +<p>This function performs JPEG decompression but leaves out the color conversion step, so a planar YUV image is generated instead of a packed-pixel image.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG decompressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>pointer to a buffer containing the JPEG image to decompress</td></tr>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>pointer to a byte buffer containing the JPEG image to decompress</td></tr>
│ │      <tr><td class="paramname">jpegSize</td><td>size of the JPEG image (in bytes)</td></tr>
│ │ -    <tr><td class="paramname">dstPlanes</td><td>an array of pointers to Y, U (Cb), and V (Cr) image planes (or just a Y plane, if decompressing a grayscale image) that will receive the YUV image. These planes can be contiguous or non-contiguous in memory. Use <a class="el" href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d" title="The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters.">tjPlaneSizeYUV()</a> to determine the appropriate size for each plane based on the scaled image width, scaled image height, strides, and level of chrominance subsampling. Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a> for more details.</td></tr>
│ │ -    <tr><td class="paramname">width</td><td>desired width (in pixels) of the YUV image. If this is different than the width of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired width. If <code>width</code> is set to 0, then only the height will be considered when determining the scaled image size. If the scaled width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ -    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per line in the corresponding plane of the output image. Setting the stride for any plane to 0 is the same as setting it to the scaled plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective scaled plane widths. You can adjust the strides in order to add an arbitrary amount of line padding to each plane or to decompress the JPEG image into a subregion of a larger YUV planar image.</td></tr>
│ │ -    <tr><td class="paramname">height</td><td>desired height (in pixels) of the YUV image. If this is different than the height of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired height. If <code>height</code> is set to 0, then only the width will be considered when determining the scaled image size. If the scaled height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed within TurboJPEG.</td></tr>
│ │ +    <tr><td class="paramname">dstPlanes</td><td>an array of pointers to Y, U (Cb), and V (Cr) image planes (or just a Y plane, if decompressing a grayscale image) that will receive the decompressed image. These planes can be contiguous or non-contiguous in memory. Use <a class="el" href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d" title="The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters.">tjPlaneSizeYUV()</a> to determine the appropriate size for each plane based on the scaled image width, scaled image height, strides, and level of chrominance subsampling. Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a> for more details.</td></tr>
│ │ +    <tr><td class="paramname">width</td><td>desired width (in pixels) of the YUV image. If this is different than the width of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired width. If <code>width</code> is set to 0, then only the height will be considered when determining the scaled image size. If the scaled width is not an even multiple of the MCU block width (see <a class="el" href="group___turbo_j_p_e_g.html#ga9e61e7cd47a15a173283ba94e781308c" title="MCU block width (in pixels) for a given level of chrominance subsampling.">tjMCUWidth</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │ +    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per row in the corresponding plane of the YUV image. Setting the stride for any plane to 0 is the same as setting it to the scaled plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective scaled plane widths. You can adjust the strides in order to add an arbitrary amount of row padding to each plane or to decompress the JPEG image into a subregion of a larger planar YUV image.</td></tr>
│ │ +    <tr><td class="paramname">height</td><td>desired height (in pixels) of the YUV image. If this is different than the height of the JPEG image being decompressed, then TurboJPEG will use scaling in the JPEG decompressor to generate the largest possible image that will fit within the desired height. If <code>height</code> is set to 0, then only the width will be considered when determining the scaled image size. If the scaled height is not an even multiple of the MCU block height (see <a class="el" href="group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf" title="MCU block height (in pixels) for a given level of chrominance subsampling.">tjMCUHeight</a>), then an intermediate buffer copy will be performed.</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │ @@ -1927,16 +1928,16 @@
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │ -<a id="gac519b922cdf446e97d0cdcba513636bf"></a>
│ │ -<h2 class="memtitle"><span class="permalink"><a href="#gac519b922cdf446e97d0cdcba513636bf">&#9670;&nbsp;</a></span>tjEncodeYUV3()</h2>
│ │ +<a id="ga5d619e0a02b71e05a8dffb764f6d7a64"></a>
│ │ +<h2 class="memtitle"><span class="permalink"><a href="#ga5d619e0a02b71e05a8dffb764f6d7a64">&#9670;&nbsp;</a></span>tjEncodeYUV3()</h2>
│ │  
│ │  <div class="memitem">
│ │  <div class="memproto">
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">DLLEXPORT int tjEncodeYUV3 </td>
│ │            <td>(</td>
│ │ @@ -1979,15 +1980,15 @@
│ │            <td class="paramtype">unsigned char *&#160;</td>
│ │            <td class="paramname"><em>dstBuf</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │ -          <td class="paramname"><em>pad</em>, </td>
│ │ +          <td class="paramname"><em>align</em>, </td>
│ │          </tr>
│ │          <tr>
│ │            <td class="paramkey"></td>
│ │            <td></td>
│ │            <td class="paramtype">int&#160;</td>
│ │            <td class="paramname"><em>subsamp</em>, </td>
│ │          </tr>
│ │ @@ -2001,26 +2002,26 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Encode an RGB or grayscale image into a YUV planar image. </p>
│ │ -<p>This function uses the accelerated color conversion routines in the underlying codec but does not execute any of the other steps in the JPEG compression process.</p>
│ │ +<p>Encode a packed-pixel RGB or grayscale image into a unified planar YUV image. </p>
│ │ +<p>This function performs color conversion (which is accelerated in the libjpeg-turbo implementation) but does not execute any of the other steps in the JPEG compression process.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG compressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">srcBuf</td><td>pointer to an image buffer containing RGB or grayscale pixels to be encoded</td></tr>
│ │ +    <tr><td class="paramname">srcBuf</td><td>pointer to a buffer containing a packed-pixel RGB or grayscale source image to be encoded</td></tr>
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the source image</td></tr>
│ │ -    <tr><td class="paramname">pitch</td><td>bytes per line in the source image. Normally, this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code> if the image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest 32-bit boundary.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each line of the image is padded to the nearest 32-bit boundary, as is the case for Windows bitmaps. You can also be clever and use this parameter to skip lines, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ +    <tr><td class="paramname">pitch</td><td>bytes per row in the source image. Normally this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>, if the image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest multiple of 4.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each row of the image is padded to the nearest multiple of 4 bytes, as is the case for Windows bitmaps. You can also be clever and use this parameter to skip rows, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the source image</td></tr>
│ │      <tr><td class="paramname">pixelFormat</td><td>pixel format of the source image (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.)</td></tr>
│ │ -    <tr><td class="paramname">dstBuf</td><td>pointer to an image buffer that will receive the YUV image. Use <a class="el" href="group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194" title="The size of the buffer (in bytes) required to hold a YUV planar image with the given parameters.">tjBufSizeYUV2()</a> to determine the appropriate size for this buffer based on the image width, height, padding, and level of chrominance subsampling. The Y, U (Cb), and V (Cr) image planes will be stored sequentially in the buffer (refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ -    <tr><td class="paramname">pad</td><td>the width of each line in each plane of the YUV image will be padded to the nearest multiple of this number of bytes (must be a power of 2.) To generate images suitable for X Video, <code>pad</code> should be set to 4.</td></tr>
│ │ +    <tr><td class="paramname">dstBuf</td><td>pointer to a buffer that will receive the unified planar YUV image. Use <a class="el" href="group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c" title="The size of the buffer (in bytes) required to hold a unified planar YUV image with the given paramete...">tjBufSizeYUV2()</a> to determine the appropriate size for this buffer based on the image width, height, row alignment, and level of chrominance subsampling. The Y, U (Cb), and V (Cr) image planes will be stored sequentially in the buffer. (Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.)</td></tr>
│ │ +    <tr><td class="paramname">align</td><td>row alignment (in bytes) of the YUV image (must be a power of 2.) Setting this parameter to n will cause each row in each plane of the YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.) To generate images suitable for X Video, <code>align</code> should be set to 4.</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>the level of chrominance subsampling to be used when generating the YUV image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.) To generate images suitable for X Video, <code>subsamp</code> should be set to <a class="el" href="group___turbo_j_p_e_g.html#gga1d047060ea80bb9820d540bb928e9074a63085dbf683cfe39e513cdb6343e3737">TJSAMP_420</a>. This produces an image compatible with the I420 (AKA "YUV420P") format.</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │ @@ -2096,26 +2097,26 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Encode an RGB or grayscale image into separate Y, U (Cb), and V (Cr) image planes. </p>
│ │ -<p>This function uses the accelerated color conversion routines in the underlying codec but does not execute any of the other steps in the JPEG compression process.</p>
│ │ +<p>Encode a packed-pixel RGB or grayscale image into separate Y, U (Cb), and V (Cr) image planes. </p>
│ │ +<p>This function performs color conversion (which is accelerated in the libjpeg-turbo implementation) but does not execute any of the other steps in the JPEG compression process.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG compressor or transformer instance</td></tr>
│ │ -    <tr><td class="paramname">srcBuf</td><td>pointer to an image buffer containing RGB or grayscale pixels to be encoded</td></tr>
│ │ +    <tr><td class="paramname">srcBuf</td><td>pointer to a buffer containing a packed-pixel RGB or grayscale source image to be encoded</td></tr>
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the source image</td></tr>
│ │ -    <tr><td class="paramname">pitch</td><td>bytes per line in the source image. Normally, this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code> if the image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest 32-bit boundary.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each line of the image is padded to the nearest 32-bit boundary, as is the case for Windows bitmaps. You can also be clever and use this parameter to skip lines, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ +    <tr><td class="paramname">pitch</td><td>bytes per row in the source image. Normally this should be <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>, if the image is unpadded, or <code><a class="el" href="group___turbo_j_p_e_g.html#ga0aba955473315e405295d978f0c16511" title="Pad the given width to the nearest multiple of 4.">TJPAD</a>(width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat])</code> if each row of the image is padded to the nearest multiple of 4 bytes, as is the case for Windows bitmaps. You can also be clever and use this parameter to skip rows, etc. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the source image</td></tr>
│ │      <tr><td class="paramname">pixelFormat</td><td>pixel format of the source image (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.)</td></tr>
│ │      <tr><td class="paramname">dstPlanes</td><td>an array of pointers to Y, U (Cb), and V (Cr) image planes (or just a Y plane, if generating a grayscale image) that will receive the encoded image. These planes can be contiguous or non-contiguous in memory. Use <a class="el" href="group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d" title="The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters.">tjPlaneSizeYUV()</a> to determine the appropriate size for each plane based on the image width, height, strides, and level of chrominance subsampling. Refer to <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a> for more details.</td></tr>
│ │ -    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per line in the corresponding plane of the output image. Setting the stride for any plane to 0 is the same as setting it to the plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective plane widths. You can adjust the strides in order to add an arbitrary amount of line padding to each plane or to encode an RGB or grayscale image into a subregion of a larger YUV planar image.</td></tr>
│ │ +    <tr><td class="paramname">strides</td><td>an array of integers, each specifying the number of bytes per row in the corresponding plane of the YUV image. Setting the stride for any plane to 0 is the same as setting it to the plane width (see <a class="el" href="group___turbo_j_p_e_g.html#YUVnotes">YUV Image Format Notes</a>.) If <code>strides</code> is NULL, then the strides for all planes will be set to their respective plane widths. You can adjust the strides in order to add an arbitrary amount of row padding to each plane or to encode an RGB or grayscale image into a subregion of a larger planar YUV image.</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>the level of chrominance subsampling to be used when generating the YUV image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.) To generate images suitable for X Video, <code>subsamp</code> should be set to <a class="el" href="group___turbo_j_p_e_g.html#gga1d047060ea80bb9820d540bb928e9074a63085dbf683cfe39e513cdb6343e3737">TJSAMP_420</a>. This produces an image compatible with the I420 (AKA "YUV420P") format.</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │ @@ -2133,23 +2134,23 @@
│ │            <td class="paramtype">unsigned char *&#160;</td>
│ │            <td class="paramname"><em>buffer</em></td><td>)</td>
│ │            <td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Free an image buffer previously allocated by TurboJPEG. </p>
│ │ -<p>You should always use this function to free JPEG destination buffer(s) that were automatically (re)allocated by the compression and transform functions or that were manually allocated using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate an image buffer for use with TurboJPEG.">tjAlloc()</a>.</p>
│ │ +<p>Free a byte buffer previously allocated by TurboJPEG. </p>
│ │ +<p>You should always use this function to free JPEG destination buffer(s) that were automatically (re)allocated by the compression and transform functions or that were manually allocated using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate a byte buffer for use with TurboJPEG.">tjAlloc()</a>.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">buffer</td><td>address of the buffer to free. If the address is NULL, then this function has no effect.</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │ -<dl class="section see"><dt>See also</dt><dd><a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate an image buffer for use with TurboJPEG.">tjAlloc()</a> </dd></dl>
│ │ +<dl class="section see"><dt>See also</dt><dd><a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate a byte buffer for use with TurboJPEG.">tjAlloc()</a> </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga414feeffbf860ebd31c745df203de410"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga414feeffbf860ebd31c745df203de410">&#9670;&nbsp;</a></span>tjGetErrorCode()</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -2200,34 +2201,34 @@
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>a descriptive error message explaining why the last command failed. </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │ -<a id="gac3854476006b10787bd128f7ede48057"></a>
│ │ -<h2 class="memtitle"><span class="permalink"><a href="#gac3854476006b10787bd128f7ede48057">&#9670;&nbsp;</a></span>tjGetScalingFactors()</h2>
│ │ +<a id="ga193d0977b3b9966d53a6c402e90899b1"></a>
│ │ +<h2 class="memtitle"><span class="permalink"><a href="#ga193d0977b3b9966d53a6c402e90899b1">&#9670;&nbsp;</a></span>tjGetScalingFactors()</h2>
│ │  
│ │  <div class="memitem">
│ │  <div class="memproto">
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">DLLEXPORT <a class="el" href="structtjscalingfactor.html">tjscalingfactor</a>* tjGetScalingFactors </td>
│ │            <td>(</td>
│ │            <td class="paramtype">int *&#160;</td>
│ │ -          <td class="paramname"><em>numscalingfactors</em></td><td>)</td>
│ │ +          <td class="paramname"><em>numScalingFactors</em></td><td>)</td>
│ │            <td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Returns a list of fractional scaling factors that the JPEG decompressor in this implementation of TurboJPEG supports. </p>
│ │ +<p>Returns a list of fractional scaling factors that the JPEG decompressor supports. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │ -    <tr><td class="paramname">numscalingfactors</td><td>pointer to an integer variable that will receive the number of elements in the list</td></tr>
│ │ +    <tr><td class="paramname">numScalingFactors</td><td>pointer to an integer variable that will receive the number of elements in the list</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>a pointer to a list of fractional scaling factors, or NULL if an error is encountered (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │ @@ -2340,33 +2341,33 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Load an uncompressed image from disk into memory. </p>
│ │ +<p>Load a packed-pixel image from disk into memory. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │ -    <tr><td class="paramname">filename</td><td>name of a file containing an uncompressed image in Windows BMP or PBMPLUS (PPM/PGM) format</td></tr>
│ │ -    <tr><td class="paramname">width</td><td>pointer to an integer variable that will receive the width (in pixels) of the uncompressed image</td></tr>
│ │ -    <tr><td class="paramname">align</td><td>row alignment of the image buffer to be returned (must be a power of 2.) For instance, setting this parameter to 4 will cause all rows in the image buffer to be padded to the nearest 32-bit boundary, and setting this parameter to 1 will cause all rows in the image buffer to be unpadded.</td></tr>
│ │ -    <tr><td class="paramname">height</td><td>pointer to an integer variable that will receive the height (in pixels) of the uncompressed image</td></tr>
│ │ -    <tr><td class="paramname">pixelFormat</td><td>pointer to an integer variable that specifies or will receive the pixel format of the uncompressed image buffer. The behavior of <a class="el" href="group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7" title="Load an uncompressed image from disk into memory.">tjLoadImage()</a> will vary depending on the value of <code>*pixelFormat</code> passed to the function:<ul>
│ │ -<li><a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa84c1a6cead7952998e2fb895844a21ed">TJPF_UNKNOWN</a> : The uncompressed image buffer returned by the function will use the most optimal pixel format for the file type, and <code>*pixelFormat</code> will contain the ID of this pixel format upon successful return from the function.</li>
│ │ -<li><a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa5431b54b015337705f13118073711a1a">TJPF_GRAY</a> : Only PGM files and 8-bit BMP files with a grayscale colormap can be loaded.</li>
│ │ -<li><a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa7f5100ec44c91994e243f1cf55553f8b">TJPF_CMYK</a> : The RGB or grayscale pixels stored in the file will be converted using a quick &amp; dirty algorithm that is suitable only for testing purposes (proper conversion between CMYK and other formats requires a color management system.)</li>
│ │ -<li>Other <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">pixel formats</a> : The uncompressed image buffer will use the specified pixel format, and pixel format conversion will be performed if necessary.</li>
│ │ +    <tr><td class="paramname">filename</td><td>name of a file containing a packed-pixel image in Windows BMP or PBMPLUS (PPM/PGM) format</td></tr>
│ │ +    <tr><td class="paramname">width</td><td>pointer to an integer variable that will receive the width (in pixels) of the packed-pixel image</td></tr>
│ │ +    <tr><td class="paramname">align</td><td>row alignment of the packed-pixel buffer to be returned (must be a power of 2.) Setting this parameter to n will cause all rows in the buffer to be padded to the nearest multiple of n bytes (1 = unpadded.)</td></tr>
│ │ +    <tr><td class="paramname">height</td><td>pointer to an integer variable that will receive the height (in pixels) of the packed-pixel image</td></tr>
│ │ +    <tr><td class="paramname">pixelFormat</td><td>pointer to an integer variable that specifies or will receive the pixel format of the packed-pixel buffer. The behavior of <a class="el" href="group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7" title="Load a packed-pixel image from disk into memory.">tjLoadImage()</a> will vary depending on the value of <code>*pixelFormat</code> passed to the function:<ul>
│ │ +<li><a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa84c1a6cead7952998e2fb895844a21ed">TJPF_UNKNOWN</a> : The packed-pixel buffer returned by this function will use the most optimal pixel format for the file type, and <code>*pixelFormat</code> will contain the ID of that pixel format upon successful return from this function.</li>
│ │ +<li><a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa5431b54b015337705f13118073711a1a">TJPF_GRAY</a> : Only PGM files and 8-bit-per-pixel BMP files with a grayscale colormap can be loaded.</li>
│ │ +<li><a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa7f5100ec44c91994e243f1cf55553f8b">TJPF_CMYK</a> : The RGB or grayscale pixels stored in the file will be converted using a quick &amp; dirty algorithm that is suitable only for testing purposes. (Proper conversion between CMYK and other formats requires a color management system.)</li>
│ │ +<li>Other <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">pixel formats</a> : The packed-pixel buffer will use the specified pixel format, and pixel format conversion will be performed if necessary.</li>
│ │  </ul>
│ │  </td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#ga72ecf4ebe6eb702d3c6f5ca27455e1ec">flags</a>.</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │ -<dl class="section return"><dt>Returns</dt><dd>a pointer to a newly-allocated buffer containing the uncompressed image, converted to the chosen pixel format and with the chosen row alignment, or NULL if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a>.) This buffer should be freed using <a class="el" href="group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b" title="Free an image buffer previously allocated by TurboJPEG.">tjFree()</a>. </dd></dl>
│ │ +<dl class="section return"><dt>Returns</dt><dd>a pointer to a newly-allocated buffer containing the packed-pixel image, converted to the chosen pixel format and with the chosen row alignment, or NULL if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a>.) This buffer should be freed using <a class="el" href="group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b" title="Free a byte buffer previously allocated by TurboJPEG.">tjFree()</a>. </dd></dl>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga1a209696c6a80748f20e134b3c64789f"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga1a209696c6a80748f20e134b3c64789f">&#9670;&nbsp;</a></span>tjPlaneHeight()</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -2457,15 +2458,15 @@
│ │  </div><div class="memdoc">
│ │  
│ │  <p>The size of the buffer (in bytes) required to hold a YUV image plane with the given parameters. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">componentID</td><td>ID number of the image plane (0 = Y, 1 = U/Cb, 2 = V/Cr)</td></tr>
│ │      <tr><td class="paramname">width</td><td>width (in pixels) of the YUV image. NOTE: this is the width of the whole image, not the plane width.</td></tr>
│ │ -    <tr><td class="paramname">stride</td><td>bytes per line in the image plane. Setting this to 0 is the equivalent of setting it to the plane width.</td></tr>
│ │ +    <tr><td class="paramname">stride</td><td>bytes per row in the image plane. Setting this to 0 is the equivalent of setting it to the plane width.</td></tr>
│ │      <tr><td class="paramname">height</td><td>height (in pixels) of the YUV image. NOTE: this is the height of the whole image, not the plane height.</td></tr>
│ │      <tr><td class="paramname">subsamp</td><td>level of chrominance subsampling in the image (see <a class="el" href="group___turbo_j_p_e_g.html#ga1d047060ea80bb9820d540bb928e9074">Chrominance subsampling options</a>.)</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>the size of the buffer (in bytes) required to hold the YUV image plane, or -1 if the arguments are out of bounds. </dd></dl>
│ │  
│ │ @@ -2569,23 +2570,23 @@
│ │            <td></td>
│ │            <td>)</td>
│ │            <td></td><td></td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>Save an uncompressed image from memory to disk. </p>
│ │ +<p>Save a packed-pixel image from memory to disk. </p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │ -    <tr><td class="paramname">filename</td><td>name of a file to which to save the uncompressed image. The image will be stored in Windows BMP or PBMPLUS (PPM/PGM) format, depending on the file extension.</td></tr>
│ │ -    <tr><td class="paramname">buffer</td><td>pointer to an image buffer containing RGB, grayscale, or CMYK pixels to be saved</td></tr>
│ │ -    <tr><td class="paramname">width</td><td>width (in pixels) of the uncompressed image</td></tr>
│ │ -    <tr><td class="paramname">pitch</td><td>bytes per line in the image buffer. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ -    <tr><td class="paramname">height</td><td>height (in pixels) of the uncompressed image</td></tr>
│ │ -    <tr><td class="paramname">pixelFormat</td><td>pixel format of the image buffer (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.) If this parameter is set to <a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa5431b54b015337705f13118073711a1a">TJPF_GRAY</a>, then the image will be stored in PGM or 8-bit (indexed color) BMP format. Otherwise, the image will be stored in PPM or 24-bit BMP format. If this parameter is set to <a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa7f5100ec44c91994e243f1cf55553f8b">TJPF_CMYK</a>, then the CMYK pixels will be converted to RGB using a quick &amp; dirty algorithm that is suitable only for testing (proper conversion between CMYK and other formats requires a color management system.)</td></tr>
│ │ +    <tr><td class="paramname">filename</td><td>name of a file to which to save the packed-pixel image. The image will be stored in Windows BMP or PBMPLUS (PPM/PGM) format, depending on the file extension.</td></tr>
│ │ +    <tr><td class="paramname">buffer</td><td>pointer to a buffer containing a packed-pixel RGB, grayscale, or CMYK image to be saved</td></tr>
│ │ +    <tr><td class="paramname">width</td><td>width (in pixels) of the packed-pixel image</td></tr>
│ │ +    <tr><td class="paramname">pitch</td><td>bytes per row in the packed-pixel image. Setting this parameter to 0 is the equivalent of setting it to <code>width * <a class="el" href="group___turbo_j_p_e_g.html#gad77cf8fe5b2bfd3cb3f53098146abb4c" title="Pixel size (in bytes) for a given pixel format.">tjPixelSize</a>[pixelFormat]</code>.</td></tr>
│ │ +    <tr><td class="paramname">height</td><td>height (in pixels) of the packed-pixel image</td></tr>
│ │ +    <tr><td class="paramname">pixelFormat</td><td>pixel format of the packed-pixel image (see <a class="el" href="group___turbo_j_p_e_g.html#gac916144e26c3817ac514e64ae5d12e2a">Pixel formats</a>.) If this parameter is set to <a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa5431b54b015337705f13118073711a1a">TJPF_GRAY</a>, then the image will be stored in PGM or 8-bit-per-pixel (indexed color) BMP format. Otherwise, the image will be stored in PPM or 24-bit-per-pixel BMP format. If this parameter is set to <a class="el" href="group___turbo_j_p_e_g.html#ggac916144e26c3817ac514e64ae5d12e2aa7f5100ec44c91994e243f1cf55553f8b">TJPF_CMYK</a>, then the CMYK pixels will be converted to RGB using a quick &amp; dirty algorithm that is suitable only for testing purposes. (Proper conversion between CMYK and other formats requires a color management system.)</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#ga72ecf4ebe6eb702d3c6f5ca27455e1ec">flags</a>.</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │ @@ -2653,25 +2654,25 @@
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Losslessly transform a JPEG image into another JPEG image. </p>
│ │  <p>Lossless transforms work by moving the raw DCT coefficients from one JPEG image structure to another without altering the values of the coefficients. While this is typically faster than decompressing the image, transforming it, and re-compressing it, lossless transforms are not free. Each lossless transform requires reading and performing Huffman decoding on all of the coefficients in the source image, regardless of the size of the destination image. Thus, this function provides a means of generating multiple transformed images from the same source or applying multiple transformations simultaneously, in order to eliminate the need to read the source coefficients multiple times.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">handle</td><td>a handle to a TurboJPEG transformer instance</td></tr>
│ │ -    <tr><td class="paramname">jpegBuf</td><td>pointer to a buffer containing the JPEG source image to transform</td></tr>
│ │ +    <tr><td class="paramname">jpegBuf</td><td>pointer to a byte buffer containing the JPEG source image to transform</td></tr>
│ │      <tr><td class="paramname">jpegSize</td><td>size of the JPEG source image (in bytes)</td></tr>
│ │      <tr><td class="paramname">n</td><td>the number of transformed JPEG images to generate</td></tr>
│ │ -    <tr><td class="paramname">dstBufs</td><td>pointer to an array of n image buffers. <code>dstBufs[i]</code> will receive a JPEG image that has been transformed using the parameters in <code>transforms[i]</code>. TurboJPEG has the ability to reallocate the JPEG buffer to accommodate the size of the JPEG image. Thus, you can choose to:<ol type="1">
│ │ -<li>pre-allocate the JPEG buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate an image buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │ +    <tr><td class="paramname">dstBufs</td><td>pointer to an array of n byte buffers. <code>dstBufs[i]</code> will receive a JPEG image that has been transformed using the parameters in <code>transforms[i]</code>. TurboJPEG has the ability to reallocate the JPEG destination buffer to accommodate the size of the transformed JPEG image. Thus, you can choose to:<ol type="1">
│ │ +<li>pre-allocate the JPEG destination buffer with an arbitrary size using <a class="el" href="group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83" title="Allocate a byte buffer for use with TurboJPEG.">tjAlloc()</a> and let TurboJPEG grow the buffer as needed,</li>
│ │  <li>set <code>dstBufs[i]</code> to NULL to tell TurboJPEG to allocate the buffer for you, or</li>
│ │ -<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a> with the transformed or cropped width and height. Under normal circumstances, this should ensure that the buffer never has to be re-allocated (setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.) Note, however, that there are some rare cases (such as transforming images with a large amount of embedded EXIF or ICC profile data) in which the output image will be larger than the worst-case size, and <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a> cannot be used in those cases.</li>
│ │ +<li>pre-allocate the buffer to a "worst case" size determined by calling <a class="el" href="group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90" title="The maximum size of the buffer (in bytes) required to hold a JPEG image with the given parameters.">tjBufSize()</a> with the transformed or cropped width and height. Under normal circumstances, this should ensure that the buffer never has to be re-allocated. (Setting <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a> guarantees that it won't be.) Note, however, that there are some rare cases (such as transforming images with a large amount of embedded EXIF or ICC profile data) in which the transformed JPEG image will be larger than the worst-case size, and <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a> cannot be used in those cases.</li>
│ │  </ol>
│ │ -If you choose option 1, <code>dstSizes[i]</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>dstBufs[i]</code> upon return from this function, as it may have changed.</td></tr>
│ │ -    <tr><td class="paramname">dstSizes</td><td>pointer to an array of n unsigned long variables that will receive the actual sizes (in bytes) of each transformed JPEG image. If <code>dstBufs[i]</code> points to a pre-allocated buffer, then <code>dstSizes[i]</code> should be set to the size of the buffer. Upon return, <code>dstSizes[i]</code> will contain the size of the JPEG image (in bytes.)</td></tr>
│ │ -    <tr><td class="paramname">transforms</td><td>pointer to an array of n <a class="el" href="structtjtransform.html" title="Lossless transform.">tjtransform</a> structures, each of which specifies the transform parameters and/or cropping region for the corresponding transformed output image.</td></tr>
│ │ +If you choose option 1, then <code>dstSizes[i]</code> should be set to the size of your pre-allocated buffer. In any case, unless you have set <a class="el" href="group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963" title="Disable JPEG buffer (re)allocation.">TJFLAG_NOREALLOC</a>, you should always check <code>dstBufs[i]</code> upon return from this function, as it may have changed.</td></tr>
│ │ +    <tr><td class="paramname">dstSizes</td><td>pointer to an array of n unsigned long variables that will receive the actual sizes (in bytes) of each transformed JPEG image. If <code>dstBufs[i]</code> points to a pre-allocated buffer, then <code>dstSizes[i]</code> should be set to the size of the buffer. Upon return, <code>dstSizes[i]</code> will contain the size of the transformed JPEG image (in bytes.)</td></tr>
│ │ +    <tr><td class="paramname">transforms</td><td>pointer to an array of n <a class="el" href="structtjtransform.html" title="Lossless transform.">tjtransform</a> structures, each of which specifies the transform parameters and/or cropping region for the corresponding transformed JPEG image.</td></tr>
│ │      <tr><td class="paramname">flags</td><td>the bitwise OR of one or more of the <a class="el" href="group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0">flags</a></td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if successful, or -1 if an error occurred (see <a class="el" href="group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa" title="Returns a descriptive error message explaining why the last command failed.">tjGetErrorStr2()</a> and <a class="el" href="group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410" title="Returns a code indicating the severity of the last error.">tjGetErrorCode()</a>.) </dd></dl>
│ │  
│ │  </div>
│ │ @@ -2694,15 +2695,15 @@
│ │    <td class="mlabels-right">
│ │  <span class="mlabels"><span class="mlabel">static</span></span>  </td>
│ │    </tr>
│ │  </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Alpha offset (in bytes) for a given pixel format. </p>
│ │ -<p>This specifies the number of bytes that the Alpha component is offset from the start of the pixel. For instance, if a pixel of format TJ_BGRA is stored in <code>char pixel[]</code>, then the alpha component will be <code>pixel[tjAlphaOffset[TJ_BGRA]]</code>. This will be -1 if the pixel format does not have an alpha component. </p>
│ │ +<p>This specifies the number of bytes that the alpha component is offset from the start of the pixel. For instance, if a pixel of format TJPF_BGRA is stored in <code>unsigned char pixel[]</code>, then the alpha component will be <code>pixel[tjAlphaOffset[TJPF_BGRA]]</code>. This will be -1 if the pixel format does not have an alpha component. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga84e2e35d3f08025f976ec1ec53693dea"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga84e2e35d3f08025f976ec1ec53693dea">&#9670;&nbsp;</a></span>tjBlueOffset</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -2719,15 +2720,15 @@
│ │    <td class="mlabels-right">
│ │  <span class="mlabels"><span class="mlabel">static</span></span>  </td>
│ │    </tr>
│ │  </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Blue offset (in bytes) for a given pixel format. </p>
│ │ -<p>This specifies the number of bytes that the Blue component is offset from the start of the pixel. For instance, if a pixel of format TJ_BGRX is stored in <code>char pixel[]</code>, then the blue component will be <code>pixel[tjBlueOffset[TJ_BGRX]]</code>. This will be -1 if the pixel format does not have a blue component. </p>
│ │ +<p>This specifies the number of bytes that the blue component is offset from the start of the pixel. For instance, if a pixel of format TJPF_BGRX is stored in <code>unsigned char pixel[]</code>, then the blue component will be <code>pixel[tjBlueOffset[TJPF_BGRX]]</code>. This will be -1 if the pixel format does not have a blue component. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ga82d6e35da441112a411da41923c0ba2f"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ga82d6e35da441112a411da41923c0ba2f">&#9670;&nbsp;</a></span>tjGreenOffset</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -2744,15 +2745,15 @@
│ │    <td class="mlabels-right">
│ │  <span class="mlabels"><span class="mlabel">static</span></span>  </td>
│ │    </tr>
│ │  </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Green offset (in bytes) for a given pixel format. </p>
│ │ -<p>This specifies the number of bytes that the green component is offset from the start of the pixel. For instance, if a pixel of format TJ_BGRX is stored in <code>char pixel[]</code>, then the green component will be <code>pixel[tjGreenOffset[TJ_BGRX]]</code>. This will be -1 if the pixel format does not have a green component. </p>
│ │ +<p>This specifies the number of bytes that the green component is offset from the start of the pixel. For instance, if a pixel of format TJPF_BGRX is stored in <code>unsigned char pixel[]</code>, then the green component will be <code>pixel[tjGreenOffset[TJPF_BGRX]]</code>. This will be -1 if the pixel format does not have a green component. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="gabd247bb9fecb393eca57366feb8327bf"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#gabd247bb9fecb393eca57366feb8327bf">&#9670;&nbsp;</a></span>tjMCUHeight</h2>
│ │  
│ │  <div class="memitem">
│ │ @@ -2855,15 +2856,15 @@
│ │    <td class="mlabels-right">
│ │  <span class="mlabels"><span class="mlabel">static</span></span>  </td>
│ │    </tr>
│ │  </table>
│ │  </div><div class="memdoc">
│ │  
│ │  <p>Red offset (in bytes) for a given pixel format. </p>
│ │ -<p>This specifies the number of bytes that the red component is offset from the start of the pixel. For instance, if a pixel of format TJ_BGRX is stored in <code>char pixel[]</code>, then the red component will be <code>pixel[tjRedOffset[TJ_BGRX]]</code>. This will be -1 if the pixel format does not have a red component. </p>
│ │ +<p>This specifies the number of bytes that the red component is offset from the start of the pixel. For instance, if a pixel of format TJPF_BGRX is stored in <code>unsigned char pixel[]</code>, then the red component will be <code>pixel[tjRedOffset[TJPF_BGRX]]</code>. This will be -1 if the pixel format does not have a red component. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  </div><!-- contents -->
│ │  <!-- start footer part -->
│ │  <hr class="footer"/><address class="footer"><small>
│ │  Generated by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20
│ │ ├── html2text {}
│ │ │ @@ -27,37 +27,35 @@
│ │ │  #define TJ_NUMPF
│ │ │          The number of pixel formats. More...
│ │ │   
│ │ │  #define TJ_NUMCS
│ │ │          The number of JPEG colorspaces. More...
│ │ │   
│ │ │  #define TJFLAG_BOTTOMUP
│ │ │ -        The uncompressed source/destination image is stored in bottom-up
│ │ │ -         (Windows, OpenGL) order, not top-down (X11) order. More...
│ │ │ +         Rows in the packed-pixel source/destination image are stored in
│ │ │ +        bottom-up (Windows, OpenGL) order rather than in top-down (X11) order.
│ │ │ +         More...
│ │ │   
│ │ │  #define TJFLAG_FASTUPSAMPLE
│ │ │           When decompressing an image that was compressed using chrominance
│ │ │          subsampling, use the fastest chrominance upsampling algorithm
│ │ │ -         available in the underlying codec. More...
│ │ │ +         available. More...
│ │ │   
│ │ │  #define TJFLAG_NOREALLOC
│ │ │ -        Disable buffer (re)allocation. More...
│ │ │ +        Disable JPEG buffer (re)allocation. More...
│ │ │   
│ │ │  #define TJFLAG_FASTDCT
│ │ │ -        Use the fastest DCT/IDCT algorithm available in the underlying codec.
│ │ │ -         More...
│ │ │ +        Use the fastest DCT/IDCT algorithm available. More...
│ │ │   
│ │ │  #define TJFLAG_ACCURATEDCT
│ │ │ -        Use the most accurate DCT/IDCT algorithm available in the underlying
│ │ │ -         codec. More...
│ │ │ +        Use the most accurate DCT/IDCT algorithm available. More...
│ │ │   
│ │ │  #define TJFLAG_STOPONWARNING
│ │ │ -         Immediately discontinue the current compression/decompression/
│ │ │ -        transform operation if the underlying codec throws a warning (non-
│ │ │ -         fatal error). More...
│ │ │ +        Immediately discontinue the current compression/decompression/
│ │ │ +         transform operation if a warning (non-fatal error) occurs. More...
│ │ │   
│ │ │  #define TJFLAG_PROGRESSIVE
│ │ │          Use progressive entropy coding in JPEG images generated by the
│ │ │           compression and transform functions. More...
│ │ │   
│ │ │  #define TJFLAG_LIMITSCANS
│ │ │          Limit the number of progressive JPEG scans that the decompression and
│ │ │ @@ -77,34 +75,32 @@
│ │ │          This option will cause tjTransform() to discard any partial MCU blocks
│ │ │           that cannot be transformed. More...
│ │ │   
│ │ │  #define TJXOPT_CROP
│ │ │          This option will enable lossless cropping. More...
│ │ │   
│ │ │  #define TJXOPT_GRAY
│ │ │ -        This option will discard the color data in the input image and produce
│ │ │ -         a grayscale output image. More...
│ │ │ +        This option will discard the color data in the source image and
│ │ │ +         produce a grayscale destination image. More...
│ │ │   
│ │ │  #define TJXOPT_NOOUTPUT
│ │ │ -         This option will prevent tjTransform() from outputting a JPEG image
│ │ │ -        for this particular transform (this can be used in conjunction with a
│ │ │ -         custom filter to capture the transformed DCT coefficients without
│ │ │ -         transcoding them.) More...
│ │ │ +        This option will prevent tjTransform() from outputting a JPEG image
│ │ │ +         for this particular transform. More...
│ │ │   
│ │ │  #define TJXOPT_PROGRESSIVE
│ │ │ -        This option will enable progressive entropy coding in the output image
│ │ │ +        This option will enable progressive entropy coding in the JPEG image
│ │ │           generated by this particular transform. More...
│ │ │   
│ │ │  #define TJXOPT_COPYNONE
│ │ │           This option will prevent tjTransform() from copying any extra markers
│ │ │          (including EXIF and ICC profile data) from the source image to the
│ │ │ -         output image. More...
│ │ │ +         destination image. More...
│ │ │   
│ │ │  #define TJPAD(width)
│ │ │ -        Pad the given width to the nearest 32-bit boundary. More...
│ │ │ +        Pad the given width to the nearest multiple of 4. More...
│ │ │   
│ │ │  #define TJSCALED(dimension, scalingFactor)
│ │ │          Compute the scaled value of dimension using the given scaling factor.
│ │ │           More...
│ │ │   
│ │ │   Typedefs
│ │ │  typedef struct tjtransform tjtransform
│ │ │ @@ -148,42 +144,42 @@
│ │ │                              Create a TurboJPEG compressor instance. More...
│ │ │   
│ │ │                DLLEXPORT int tjCompress2 (tjhandle handle, const unsigned char
│ │ │                               *srcBuf, int width, int pitch, int height, int
│ │ │                               pixelFormat, unsigned char **jpegBuf, unsigned
│ │ │                               long *jpegSize, int jpegSubsamp, int jpegQual, int
│ │ │                               flags)
│ │ │ -                            Compress an RGB, grayscale, or CMYK image into a
│ │ │ -                             JPEG image. More...
│ │ │ +                            Compress a packed-pixel RGB, grayscale, or CMYK
│ │ │ +                             image into a JPEG image. More...
│ │ │   
│ │ │                DLLEXPORT int tjCompressFromYUV (tjhandle handle, const unsigned
│ │ │ -                             char *srcBuf, int width, int pad, int height, int
│ │ │ -                             subsamp, unsigned char **jpegBuf, unsigned long
│ │ │ -                             *jpegSize, int jpegQual, int flags)
│ │ │ -                            Compress a YUV planar image into a JPEG image.
│ │ │ -                             More...
│ │ │ +                             char *srcBuf, int width, int align, int height,
│ │ │ +                             int subsamp, unsigned char **jpegBuf, unsigned
│ │ │ +                             long *jpegSize, int jpegQual, int flags)
│ │ │ +                            Compress a unified planar YUV image into a JPEG
│ │ │ +                             image. More...
│ │ │   
│ │ │                DLLEXPORT int tjCompressFromYUVPlanes (tjhandle handle, const
│ │ │                               unsigned char **srcPlanes, int width, const int
│ │ │                               *strides, int height, int subsamp, unsigned char
│ │ │                               **jpegBuf, unsigned long *jpegSize, int jpegQual,
│ │ │                               int flags)
│ │ │                              Compress a set of Y, U (Cb), and V (Cr) image
│ │ │                               planes into a JPEG image. More...
│ │ │   
│ │ │      DLLEXPORT unsigned long tjBufSize (int width, int height, int jpegSubsamp)
│ │ │                               The maximum size of the buffer (in bytes) required
│ │ │                              to hold a JPEG image with the given parameters.
│ │ │                               More...
│ │ │   
│ │ │ -    DLLEXPORT unsigned long tjBufSizeYUV2 (int width, int pad, int height, int
│ │ │ -                             subsamp)
│ │ │ +    DLLEXPORT unsigned long tjBufSizeYUV2 (int width, int align, int height,
│ │ │ +                             int subsamp)
│ │ │                               The size of the buffer (in bytes) required to hold
│ │ │ -                            a YUV planar image with the given parameters.
│ │ │ -                             More...
│ │ │ +                            a unified planar YUV image with the given
│ │ │ +                             parameters. More...
│ │ │   
│ │ │      DLLEXPORT unsigned long tjPlaneSizeYUV (int componentID, int width, int
│ │ │                               stride, int height, int subsamp)
│ │ │                               The size of the buffer (in bytes) required to hold
│ │ │                              a YUV image plane with the given parameters.
│ │ │                               More...
│ │ │   
│ │ │ @@ -195,76 +191,77 @@
│ │ │                DLLEXPORT int tjPlaneHeight (int componentID, int height, int
│ │ │                               subsamp)
│ │ │                              The plane height of a YUV image plane with the
│ │ │                               given parameters. More...
│ │ │   
│ │ │                DLLEXPORT int tjEncodeYUV3 (tjhandle handle, const unsigned char
│ │ │                               *srcBuf, int width, int pitch, int height, int
│ │ │ -                             pixelFormat, unsigned char *dstBuf, int pad, int
│ │ │ +                             pixelFormat, unsigned char *dstBuf, int align, int
│ │ │                               subsamp, int flags)
│ │ │ -                            Encode an RGB or grayscale image into a YUV planar
│ │ │ -                             image. More...
│ │ │ +                            Encode a packed-pixel RGB or grayscale image into
│ │ │ +                             a unified planar YUV image. More...
│ │ │   
│ │ │                DLLEXPORT int tjEncodeYUVPlanes (tjhandle handle, const unsigned
│ │ │                               char *srcBuf, int width, int pitch, int height,
│ │ │                               int pixelFormat, unsigned char **dstPlanes, int
│ │ │                               *strides, int subsamp, int flags)
│ │ │ -                            Encode an RGB or grayscale image into separate Y,
│ │ │ -                             U (Cb), and V (Cr) image planes. More...
│ │ │ +                             Encode a packed-pixel RGB or grayscale image into
│ │ │ +                            separate Y, U (Cb), and V (Cr) image planes.
│ │ │ +                             More...
│ │ │   
│ │ │           DLLEXPORT tjhandle tjInitDecompress (void)
│ │ │                              Create a TurboJPEG decompressor instance. More...
│ │ │   
│ │ │                DLLEXPORT int tjDecompressHeader3 (tjhandle handle, const
│ │ │                               unsigned char *jpegBuf, unsigned long jpegSize,
│ │ │                               int *width, int *height, int *jpegSubsamp, int
│ │ │                               *jpegColorspace)
│ │ │                               Retrieve information about a JPEG image without
│ │ │                              decompressing it, or prime the decompressor with
│ │ │                               quantization and Huffman tables. More...
│ │ │   
│ │ │ -DLLEXPORT tjscalingfactor * tjGetScalingFactors (int *numscalingfactors)
│ │ │ -                             Returns a list of fractional scaling factors that
│ │ │ -                            the JPEG decompressor in this implementation of
│ │ │ -                             TurboJPEG supports. More...
│ │ │ +DLLEXPORT tjscalingfactor * tjGetScalingFactors (int *numScalingFactors)
│ │ │ +                            Returns a list of fractional scaling factors that
│ │ │ +                             the JPEG decompressor supports. More...
│ │ │   
│ │ │                DLLEXPORT int tjDecompress2 (tjhandle handle, const unsigned
│ │ │                               char *jpegBuf, unsigned long jpegSize, unsigned
│ │ │                               char *dstBuf, int width, int pitch, int height,
│ │ │                               int pixelFormat, int flags)
│ │ │ -                            Decompress a JPEG image to an RGB, grayscale, or
│ │ │ -                             CMYK image. More...
│ │ │ +                            Decompress a JPEG image into a packed-pixel RGB,
│ │ │ +                             grayscale, or CMYK image. More...
│ │ │   
│ │ │                DLLEXPORT int tjDecompressToYUV2 (tjhandle handle, const
│ │ │                               unsigned char *jpegBuf, unsigned long jpegSize,
│ │ │ -                             unsigned char *dstBuf, int width, int pad, int
│ │ │ +                             unsigned char *dstBuf, int width, int align, int
│ │ │                               height, int flags)
│ │ │ -                            Decompress a JPEG image to a YUV planar image.
│ │ │ -                             More...
│ │ │ +                            Decompress a JPEG image into a unified planar YUV
│ │ │ +                             image. More...
│ │ │   
│ │ │                DLLEXPORT int tjDecompressToYUVPlanes (tjhandle handle, const
│ │ │                               unsigned char *jpegBuf, unsigned long jpegSize,
│ │ │                               unsigned char **dstPlanes, int width, int
│ │ │                               *strides, int height, int flags)
│ │ │                              Decompress a JPEG image into separate Y, U (Cb),
│ │ │                               and V (Cr) image planes. More...
│ │ │   
│ │ │                DLLEXPORT int tjDecodeYUV (tjhandle handle, const unsigned char
│ │ │ -                             *srcBuf, int pad, int subsamp, unsigned char
│ │ │ +                             *srcBuf, int align, int subsamp, unsigned char
│ │ │                               *dstBuf, int width, int pitch, int height, int
│ │ │                               pixelFormat, int flags)
│ │ │ -                            Decode a YUV planar image into an RGB or grayscale
│ │ │ -                             image. More...
│ │ │ +                            Decode a unified planar YUV image into a packed-
│ │ │ +                             pixel RGB or grayscale image. More...
│ │ │   
│ │ │                DLLEXPORT int tjDecodeYUVPlanes (tjhandle handle, const unsigned
│ │ │                               char **srcPlanes, const int *strides, int subsamp,
│ │ │                               unsigned char *dstBuf, int width, int pitch, int
│ │ │                               height, int pixelFormat, int flags)
│ │ │ -                            Decode a set of Y, U (Cb), and V (Cr) image planes
│ │ │ -                             into an RGB or grayscale image. More...
│ │ │ +                             Decode a set of Y, U (Cb), and V (Cr) image planes
│ │ │ +                            into a packed-pixel RGB or grayscale image.
│ │ │ +                             More...
│ │ │   
│ │ │           DLLEXPORT tjhandle tjInitTransform (void)
│ │ │                              Create a new TurboJPEG transformer instance.
│ │ │                               More...
│ │ │   
│ │ │                DLLEXPORT int tjTransform (tjhandle handle, const unsigned char
│ │ │                               *jpegBuf, unsigned long jpegSize, int n, unsigned
│ │ │ @@ -274,30 +271,30 @@
│ │ │                               JPEG image. More...
│ │ │   
│ │ │                DLLEXPORT int tjDestroy (tjhandle handle)
│ │ │                              Destroy a TurboJPEG compressor, decompressor, or
│ │ │                               transformer instance. More...
│ │ │   
│ │ │    DLLEXPORT unsigned char * tjAlloc (int bytes)
│ │ │ -                            Allocate an image buffer for use with TurboJPEG.
│ │ │ +                            Allocate a byte buffer for use with TurboJPEG.
│ │ │                               More...
│ │ │   
│ │ │    DLLEXPORT unsigned char * tjLoadImage (const char *filename, int *width, int
│ │ │                               align, int *height, int *pixelFormat, int flags)
│ │ │ -                            Load an uncompressed image from disk into memory.
│ │ │ +                            Load a packed-pixel image from disk into memory.
│ │ │                               More...
│ │ │   
│ │ │                DLLEXPORT int tjSaveImage (const char *filename, unsigned char
│ │ │                               *buffer, int width, int pitch, int height, int
│ │ │                               pixelFormat, int flags)
│ │ │ -                            Save an uncompressed image from memory to disk.
│ │ │ +                            Save a packed-pixel image from memory to disk.
│ │ │                               More...
│ │ │   
│ │ │               DLLEXPORT void tjFree (unsigned char *buffer)
│ │ │ -                            Free an image buffer previously allocated by
│ │ │ +                            Free a byte buffer previously allocated by
│ │ │                               TurboJPEG. More...
│ │ │   
│ │ │             DLLEXPORT char * tjGetErrorStr2 (tjhandle handle)
│ │ │                              Returns a descriptive error message explaining why
│ │ │                               the last command failed. More...
│ │ │   
│ │ │                DLLEXPORT int tjGetErrorCode (tjhandle handle)
│ │ │ @@ -337,27 +334,27 @@
│ │ │  not a colorspace but a color transform), but per the convention of the digital
│ │ │  video community, the TurboJPEG API uses "YUV" to refer to an image format
│ │ │  consisting of Y, Cb, and Cr image planes.
│ │ │  Each plane is simply a 2D array of bytes, each byte representing the value of
│ │ │  one of the components (Y, Cb, or Cr) at a particular location in the image. The
│ │ │  width and height of each plane are determined by the image width, height, and
│ │ │  level of chrominance subsampling. The luminance plane width is the image width
│ │ │ -padded to the nearest multiple of the horizontal subsampling factor (2 in the
│ │ │ -case of 4:2:0 and 4:2:2, 4 in the case of 4:1:1, 1 in the case of 4:4:4 or
│ │ │ -grayscale.) Similarly, the luminance plane height is the image height padded to
│ │ │ -the nearest multiple of the vertical subsampling factor (2 in the case of 4:2:
│ │ │ -0 or 4:4:0, 1 in the case of 4:4:4 or grayscale.) This is irrespective of any
│ │ │ -additional padding that may be specified as an argument to the various YUV
│ │ │ -functions. The chrominance plane width is equal to the luminance plane width
│ │ │ -divided by the horizontal subsampling factor, and the chrominance plane height
│ │ │ -is equal to the luminance plane height divided by the vertical subsampling
│ │ │ -factor.
│ │ │ +padded to the nearest multiple of the horizontal subsampling factor (1 in the
│ │ │ +case of 4:4:4, grayscale, or 4:4:0; 2 in the case of 4:2:2 or 4:2:0; 4 in the
│ │ │ +case of 4:1:1.) Similarly, the luminance plane height is the image height
│ │ │ +padded to the nearest multiple of the vertical subsampling factor (1 in the
│ │ │ +case of 4:4:4, 4:2:2, grayscale, or 4:1:1; 2 in the case of 4:2:0 or 4:4:0.)
│ │ │ +This is irrespective of any additional padding that may be specified as an
│ │ │ +argument to the various YUV functions. The chrominance plane width is equal to
│ │ │ +the luminance plane width divided by the horizontal subsampling factor, and the
│ │ │ +chrominance plane height is equal to the luminance plane height divided by the
│ │ │ +vertical subsampling factor.
│ │ │  For example, if the source image is 35 x 35 pixels and 4:2:2 subsampling is
│ │ │  used, then the luminance plane would be 36 x 35 bytes, and each of the
│ │ │ -chrominance planes would be 18 x 35 bytes. If you specify a line padding of 4
│ │ │ +chrominance planes would be 18 x 35 bytes. If you specify a row alignment of 4
│ │ │  bytes on top of this, then the luminance plane would be 36 x 35 bytes, and each
│ │ │  of the chrominance planes would be 20 x 35 bytes.
│ │ │  ***** Macro Definition Documentation *****
│ │ │  ***** ◆ TJ_NUMCS *****
│ │ │  #define TJ_NUMCS
│ │ │  The number of JPEG colorspaces.
│ │ │  ***** ◆ TJ_NUMERR *****
│ │ │ @@ -370,115 +367,115 @@
│ │ │  #define TJ_NUMSAMP
│ │ │  The number of chrominance subsampling options.
│ │ │  ***** ◆ TJ_NUMXOP *****
│ │ │  #define TJ_NUMXOP
│ │ │  The number of transform operations.
│ │ │  ***** ◆ TJFLAG_ACCURATEDCT *****
│ │ │  #define TJFLAG_ACCURATEDCT
│ │ │ -Use the most accurate DCT/IDCT algorithm available in the underlying codec.
│ │ │ +Use the most accurate DCT/IDCT algorithm available.
│ │ │  The default if this flag is not specified is implementation-specific. For
│ │ │ -example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast
│ │ │ +example, the implementation of the TurboJPEG API in libjpeg-turbo uses the fast
│ │ │  algorithm by default when compressing, because this has been shown to have only
│ │ │  a very slight effect on accuracy, but it uses the accurate algorithm when
│ │ │  decompressing, because this has been shown to have a larger effect.
│ │ │  ***** ◆ TJFLAG_BOTTOMUP *****
│ │ │  #define TJFLAG_BOTTOMUP
│ │ │ -The uncompressed source/destination image is stored in bottom-up (Windows,
│ │ │ -OpenGL) order, not top-down (X11) order.
│ │ │ +Rows in the packed-pixel source/destination image are stored in bottom-up
│ │ │ +(Windows, OpenGL) order rather than in top-down (X11) order.
│ │ │  ***** ◆ TJFLAG_FASTDCT *****
│ │ │  #define TJFLAG_FASTDCT
│ │ │ -Use the fastest DCT/IDCT algorithm available in the underlying codec.
│ │ │ +Use the fastest DCT/IDCT algorithm available.
│ │ │  The default if this flag is not specified is implementation-specific. For
│ │ │ -example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast
│ │ │ +example, the implementation of the TurboJPEG API in libjpeg-turbo uses the fast
│ │ │  algorithm by default when compressing, because this has been shown to have only
│ │ │  a very slight effect on accuracy, but it uses the accurate algorithm when
│ │ │  decompressing, because this has been shown to have a larger effect.
│ │ │  ***** ◆ TJFLAG_FASTUPSAMPLE *****
│ │ │  #define TJFLAG_FASTUPSAMPLE
│ │ │  When decompressing an image that was compressed using chrominance subsampling,
│ │ │ -use the fastest chrominance upsampling algorithm available in the underlying
│ │ │ -codec.
│ │ │ +use the fastest chrominance upsampling algorithm available.
│ │ │  The default is to use smooth upsampling, which creates a smooth transition
│ │ │  between neighboring chrominance components in order to reduce upsampling
│ │ │  artifacts in the decompressed image.
│ │ │  ***** ◆ TJFLAG_LIMITSCANS *****
│ │ │  #define TJFLAG_LIMITSCANS
│ │ │  Limit the number of progressive JPEG scans that the decompression and transform
│ │ │  functions will process.
│ │ │  If a progressive JPEG image contains an unreasonably large number of scans,
│ │ │  then this flag will cause the decompression and transform functions to return
│ │ │  an error. The primary purpose of this is to allow security-critical
│ │ │  applications to guard against an exploit of the progressive JPEG format
│ │ │  described in this_report.
│ │ │  ***** ◆ TJFLAG_NOREALLOC *****
│ │ │  #define TJFLAG_NOREALLOC
│ │ │ -Disable buffer (re)allocation.
│ │ │ +Disable JPEG buffer (re)allocation.
│ │ │  If passed to one of the JPEG compression or transform functions, this flag will
│ │ │ -cause those functions to generate an error if the JPEG image buffer is invalid
│ │ │ -or too small rather than attempting to allocate or reallocate that buffer. This
│ │ │ -reproduces the behavior of earlier versions of TurboJPEG.
│ │ │ +cause those functions to generate an error if the JPEG destination buffer is
│ │ │ +invalid or too small, rather than attempt to allocate or reallocate that
│ │ │ +buffer.
│ │ │  ***** ◆ TJFLAG_PROGRESSIVE *****
│ │ │  #define TJFLAG_PROGRESSIVE
│ │ │  Use progressive entropy coding in JPEG images generated by the compression and
│ │ │  transform functions.
│ │ │  Progressive entropy coding will generally improve compression relative to
│ │ │  baseline entropy coding (the default), but it will reduce compression and
│ │ │  decompression performance considerably.
│ │ │  ***** ◆ TJFLAG_STOPONWARNING *****
│ │ │  #define TJFLAG_STOPONWARNING
│ │ │  Immediately discontinue the current compression/decompression/transform
│ │ │ -operation if the underlying codec throws a warning (non-fatal error).
│ │ │ +operation if a warning (non-fatal error) occurs.
│ │ │  The default behavior is to allow the operation to complete unless a fatal error
│ │ │  is encountered.
│ │ │  ***** ◆ TJPAD *****
│ │ │  #define TJPAD (  width )
│ │ │ -Pad the given width to the nearest 32-bit boundary.
│ │ │ +Pad the given width to the nearest multiple of 4.
│ │ │  ***** ◆ TJSCALED *****
│ │ │  #define TJSCALED (  dimension,
│ │ │                      scalingFactor 
│ │ │                   )
│ │ │  Compute the scaled value of dimension using the given scaling factor.
│ │ │  This macro performs the integer equivalent of ceil(dimension * scalingFactor).
│ │ │  ***** ◆ TJXOPT_COPYNONE *****
│ │ │  #define TJXOPT_COPYNONE
│ │ │  This option will prevent tjTransform() from copying any extra markers
│ │ │ -(including EXIF and ICC profile data) from the source image to the output
│ │ │ +(including EXIF and ICC profile data) from the source image to the destination
│ │ │  image.
│ │ │  ***** ◆ TJXOPT_CROP *****
│ │ │  #define TJXOPT_CROP
│ │ │  This option will enable lossless cropping.
│ │ │  See tjTransform() for more information.
│ │ │  ***** ◆ TJXOPT_GRAY *****
│ │ │  #define TJXOPT_GRAY
│ │ │ -This option will discard the color data in the input image and produce a
│ │ │ -grayscale output image.
│ │ │ +This option will discard the color data in the source image and produce a
│ │ │ +grayscale destination image.
│ │ │  ***** ◆ TJXOPT_NOOUTPUT *****
│ │ │  #define TJXOPT_NOOUTPUT
│ │ │  This option will prevent tjTransform() from outputting a JPEG image for this
│ │ │ -particular transform (this can be used in conjunction with a custom filter to
│ │ │ -capture the transformed DCT coefficients without transcoding them.)
│ │ │ +particular transform.
│ │ │ +(This can be used in conjunction with a custom filter to capture the
│ │ │ +transformed DCT coefficients without transcoding them.)
│ │ │  ***** ◆ TJXOPT_PERFECT *****
│ │ │  #define TJXOPT_PERFECT
│ │ │  This option will cause tjTransform() to return an error if the transform is not
│ │ │  perfect.
│ │ │  Lossless transforms operate on MCU blocks, whose size depends on the level of
│ │ │  chrominance subsampling used (see tjMCUWidth and tjMCUHeight.) If the image's
│ │ │  width or height is not evenly divisible by the MCU block size, then there will
│ │ │  be partial MCU blocks on the right and/or bottom edges. It is not possible to
│ │ │  move these partial MCU blocks to the top or left of the image, so any transform
│ │ │  that would require that is "imperfect." If this option is not specified, then
│ │ │  any partial MCU blocks that cannot be transformed will be left in place, which
│ │ │  will create odd-looking strips on the right or bottom edge of the image.
│ │ │  ***** ◆ TJXOPT_PROGRESSIVE *****
│ │ │  #define TJXOPT_PROGRESSIVE
│ │ │ -This option will enable progressive entropy coding in the output image
│ │ │ -generated by this particular transform.
│ │ │ +This option will enable progressive entropy coding in the JPEG image generated
│ │ │ +by this particular transform.
│ │ │  Progressive entropy coding will generally improve compression relative to
│ │ │ -baseline entropy coding (the default), but it will reduce compression and
│ │ │ -decompression performance considerably.
│ │ │ +baseline entropy coding (the default), but it will reduce decompression
│ │ │ +performance considerably.
│ │ │  ***** ◆ TJXOPT_TRIM *****
│ │ │  #define TJXOPT_TRIM
│ │ │  This option will cause tjTransform() to discard any partial MCU blocks that
│ │ │  cannot be transformed.
│ │ │  ***** Typedef Documentation *****
│ │ │  ***** ◆ tjhandle *****
│ │ │  typedef void* tjhandle
│ │ │ @@ -489,58 +486,61 @@
│ │ │  ***** Enumeration Type Documentation *****
│ │ │  ***** ◆ TJCS *****
│ │ │  enum TJCS
│ │ │  JPEG colorspaces.
│ │ │  Enumerator
│ │ │              RGB colorspace.
│ │ │              When compressing the JPEG image, the R, G, and B components in the
│ │ │ -TJCS_RGB   source image are reordered into image planes, but no colorspace
│ │ │ -            conversion or subsampling is performed. RGB JPEG images can be
│ │ │ -            decompressed to any of the extended RGB pixel formats or grayscale,
│ │ │ -            but they cannot be decompressed to YUV images.
│ │ │ +            source image are reordered into image planes, but no colorspace
│ │ │ +TJCS_RGB   conversion or subsampling is performed. RGB JPEG images can be
│ │ │ +            decompressed to packed-pixel images with any of the extended RGB or
│ │ │ +            grayscale pixel formats, but they cannot be decompressed to planar
│ │ │ +            YUV images.
│ │ │              YCbCr colorspace.
│ │ │              YCbCr is not an absolute colorspace but rather a mathematical
│ │ │              transformation of RGB designed solely for storage and transmission.
│ │ │              YCbCr images must be converted to RGB before they can actually be
│ │ │              displayed. In the YCbCr colorspace, the Y (luminance) component
│ │ │              represents the black & white portion of the original image, and the
│ │ │              Cb and Cr (chrominance) components represent the color portion of
│ │ │  TJCS_YCbCr the original image. Originally, the analog equivalent of this
│ │ │              transformation allowed the same signal to drive both black & white
│ │ │              and color televisions, but JPEG images use YCbCr primarily because
│ │ │              it allows the color data to be optionally subsampled for the
│ │ │ -            purposes of reducing bandwidth or disk space. YCbCr is the most
│ │ │ +            purposes of reducing network or disk usage. YCbCr is the most
│ │ │              common JPEG colorspace, and YCbCr JPEG images can be compressed
│ │ │ -            from and decompressed to any of the extended RGB pixel formats or
│ │ │ -            grayscale, or they can be decompressed to YUV planar images.
│ │ │ +            from and decompressed to packed-pixel images with any of the
│ │ │ +            extended RGB or grayscale pixel formats. YCbCr JPEG images can also
│ │ │ +            be compressed from and decompressed to planar YUV images.
│ │ │              Grayscale colorspace.
│ │ │              The JPEG image retains only the luminance data (Y component), and
│ │ │  TJCS_GRAY  any color data from the source image is discarded. Grayscale JPEG
│ │ │ -            images can be compressed from and decompressed to any of the
│ │ │ -            extended RGB pixel formats or grayscale, or they can be
│ │ │ -            decompressed to YUV planar images.
│ │ │ +            images can be compressed from and decompressed to packed-pixel
│ │ │ +            images with any of the extended RGB or grayscale pixel formats, or
│ │ │ +            they can be compressed from and decompressed to planar YUV images.
│ │ │              CMYK colorspace.
│ │ │              When compressing the JPEG image, the C, M, Y, and K components in
│ │ │  TJCS_CMYK  the source image are reordered into image planes, but no colorspace
│ │ │              conversion or subsampling is performed. CMYK JPEG images can only
│ │ │ -            be decompressed to CMYK pixels.
│ │ │ +            be decompressed to packed-pixel images with the CMYK pixel format.
│ │ │              YCCK colorspace.
│ │ │              YCCK (AKA "YCbCrK") is not an absolute colorspace but rather a
│ │ │              mathematical transformation of CMYK designed solely for storage and
│ │ │ -TJCS_YCCK  transmission. It is to CMYK as YCbCr is to RGB. CMYK pixels can be
│ │ │ -            reversibly transformed into YCCK, and as with YCbCr, the
│ │ │ +            transmission. It is to CMYK as YCbCr is to RGB. CMYK pixels can be
│ │ │ +TJCS_YCCK  reversibly transformed into YCCK, and as with YCbCr, the
│ │ │              chrominance components in the YCCK pixels can be subsampled without
│ │ │              incurring major perceptual loss. YCCK JPEG images can only be
│ │ │ -            compressed from and decompressed to CMYK pixels.
│ │ │ +            compressed from and decompressed to packed-pixel images with the
│ │ │ +            CMYK pixel format.
│ │ │  ***** ◆ TJERR *****
│ │ │  enum TJERR
│ │ │  Error codes.
│ │ │  Enumerator
│ │ │ -TJERR_WARNING The error was non-fatal and recoverable, but the image may still
│ │ │ -               be corrupt.
│ │ │ +TJERR_WARNING The error was non-fatal and recoverable, but the destination
│ │ │ +               image may still be corrupt.
│ │ │  TJERR_FATAL   The error was fatal and non-recoverable.
│ │ │  ***** ◆ TJPF *****
│ │ │  enum TJPF
│ │ │  Pixel formats.
│ │ │  Enumerator
│ │ │                RGB pixel format.
│ │ │  TJPF_RGB     The red, green, and blue components in the image are stored in 3-
│ │ │ @@ -598,25 +598,26 @@
│ │ │                background. In order to convert between CMYK and RGB, it is
│ │ │  TJPF_CMYK    necessary to use a color management system (CMS.) A CMS will
│ │ │                attempt to map colors within the printer's gamut to perceptually
│ │ │                similar colors in the display's gamut and vice versa, but the
│ │ │                mapping is typically not 1:1 or reversible, nor can it be defined
│ │ │                with a simple formula. Thus, such a conversion is out of scope
│ │ │                for a codec library. However, the TurboJPEG API allows for
│ │ │ -              compressing CMYK pixels into a YCCK JPEG image (see TJCS_YCCK)
│ │ │ -              and decompressing YCCK JPEG images into CMYK pixels.
│ │ │ +              compressing packed-pixel CMYK images into YCCK JPEG images (see
│ │ │ +              TJCS_YCCK) and decompressing YCCK JPEG images into packed-pixel
│ │ │ +              CMYK images.
│ │ │  TJPF_UNKNOWN Unknown pixel format.
│ │ │                Currently this is only used by tjLoadImage().
│ │ │  ***** ◆ TJSAMP *****
│ │ │  enum TJSAMP
│ │ │  Chrominance subsampling options.
│ │ │  When pixels are converted from RGB to YCbCr (see TJCS_YCbCr) or from CMYK to
│ │ │  YCCK (see TJCS_YCCK) as part of the JPEG compression process, some of the Cb
│ │ │  and Cr (chrominance) components can be discarded or averaged together to
│ │ │ -produce a smaller image with little perceptible loss of image clarity (the
│ │ │ +produce a smaller image with little perceptible loss of image clarity. (The
│ │ │  human eye is more sensitive to small changes in brightness than to small
│ │ │  changes in color.) This is called "chrominance subsampling".
│ │ │  Enumerator
│ │ │               4:4:4 chrominance subsampling (no chrominance subsampling).
│ │ │  TJSAMP_444  The JPEG or YUV image will contain one chrominance component for
│ │ │               every pixel in the source image.
│ │ │               4:2:2 chrominance subsampling.
│ │ │ @@ -666,15 +667,15 @@
│ │ │                    blocks in the image (see TJXOPT_PERFECT.)
│ │ │                    Rotate image counter-clockwise by 90 degrees.
│ │ │  TJXOP_ROT270     This transform is imperfect if there are any partial MCU
│ │ │                    blocks on the right edge (see TJXOPT_PERFECT.)
│ │ │  ***** Function Documentation *****
│ │ │  ***** ◆ tjAlloc() *****
│ │ │  DLLEXPORT unsigned char* tjAlloc ( int bytes )
│ │ │ -Allocate an image buffer for use with TurboJPEG.
│ │ │ +Allocate a byte buffer for use with TurboJPEG.
│ │ │  You should always use this function to allocate the JPEG destination buffer(s)
│ │ │  for the compression and transform functions unless you are disabling automatic
│ │ │  buffer (re)allocation (by setting TJFLAG_NOREALLOC.)
│ │ │    Parameters
│ │ │        bytes the number of bytes to allocate
│ │ │    Returns
│ │ │        a pointer to a newly-allocated buffer with the specified number of bytes.
│ │ │ @@ -685,41 +686,42 @@
│ │ │                                      int height,
│ │ │                                      int jpegSubsamp 
│ │ │                                    )
│ │ │  The maximum size of the buffer (in bytes) required to hold a JPEG image with
│ │ │  the given parameters.
│ │ │  The number of bytes returned by this function is larger than the size of the
│ │ │  uncompressed source image. The reason for this is that the JPEG format uses 16-
│ │ │ -bit coefficients, and it is thus possible for a very high-quality JPEG image
│ │ │ -with very high-frequency content to expand rather than compress when converted
│ │ │ -to the JPEG format. Such images represent a very rare corner case, but since
│ │ │ -there is no way to predict the size of a JPEG image prior to compression, the
│ │ │ -corner case has to be handled.
│ │ │ +bit coefficients, so it is possible for a very high-quality source image with
│ │ │ +very high-frequency content to expand rather than compress when converted to
│ │ │ +the JPEG format. Such images represent very rare corner cases, but since there
│ │ │ +is no way to predict the size of a JPEG image prior to compression, the corner
│ │ │ +cases have to be handled.
│ │ │    Parameters
│ │ │        width       width (in pixels) of the image
│ │ │        height      height (in pixels) of the image
│ │ │                    the level of chrominance subsampling to be used when
│ │ │        jpegSubsamp generating the JPEG image (see Chrominance_subsampling
│ │ │                    options.)
│ │ │    Returns
│ │ │        the maximum size of the buffer (in bytes) required to hold the image, or
│ │ │        -1 if the arguments are out of bounds.
│ │ │  ***** ◆ tjBufSizeYUV2() *****
│ │ │  DLLEXPORT unsigned long tjBufSizeYUV2 ( int width,
│ │ │ -                                        int pad,
│ │ │ +                                        int align,
│ │ │                                          int height,
│ │ │                                          int subsamp 
│ │ │                                        )
│ │ │ -The size of the buffer (in bytes) required to hold a YUV planar image with the
│ │ │ -given parameters.
│ │ │ +The size of the buffer (in bytes) required to hold a unified planar YUV image
│ │ │ +with the given parameters.
│ │ │    Parameters
│ │ │        width   width (in pixels) of the image
│ │ │ -              the width of each line in each plane of the image is padded to
│ │ │ -      pad     the nearest multiple of this number of bytes (must be a power of
│ │ │ -              2.)
│ │ │ +              row alignment (in bytes) of the image (must be a power of 2.)
│ │ │ +      align   Setting this parameter to n specifies that each row in each plane
│ │ │ +              of the image will be padded to the nearest multiple of n bytes (1
│ │ │ +              = unpadded.)
│ │ │        height  height (in pixels) of the image
│ │ │        subsamp level of chrominance subsampling in the image (see Chrominance
│ │ │                subsampling_options.)
│ │ │    Returns
│ │ │        the size of the buffer (in bytes) required to hold the image, or -1 if
│ │ │        the arguments are out of bounds.
│ │ │  ***** ◆ tjCompress2() *****
│ │ │ @@ -731,118 +733,119 @@
│ │ │                              int                   pixelFormat,
│ │ │                              unsigned char **      jpegBuf,
│ │ │                              unsigned long *       jpegSize,
│ │ │                              int                   jpegSubsamp,
│ │ │                              int                   jpegQual,
│ │ │                              int                   flags 
│ │ │                            )
│ │ │ -Compress an RGB, grayscale, or CMYK image into a JPEG image.
│ │ │ +Compress a packed-pixel RGB, grayscale, or CMYK image into a JPEG image.
│ │ │    Parameters
│ │ │        handle      a handle to a TurboJPEG compressor or transformer instance
│ │ │ -      srcBuf      pointer to an image buffer containing RGB, grayscale, or CMYK
│ │ │ -                  pixels to be compressed
│ │ │ +      srcBuf      pointer to a buffer containing a packed-pixel RGB, grayscale,
│ │ │ +                  or CMYK source image to be compressed
│ │ │        width       width (in pixels) of the source image
│ │ │ -                  bytes per line in the source image. Normally, this should be
│ │ │ -                  width * tjPixelSize[pixelFormat] if the image is unpadded, or
│ │ │ -                  TJPAD(width * tjPixelSize[pixelFormat]) if each line of the
│ │ │ -      pitch       image is padded to the nearest 32-bit boundary, as is the
│ │ │ +                  bytes per row in the source image. Normally this should be
│ │ │ +                  width * tjPixelSize[pixelFormat], if the image is unpadded,
│ │ │ +                  or TJPAD(width * tjPixelSize[pixelFormat]) if each row of the
│ │ │ +      pitch       image is padded to the nearest multiple of 4 bytes, as is the
│ │ │                    case for Windows bitmaps. You can also be clever and use this
│ │ │ -                  parameter to skip lines, etc. Setting this parameter to 0 is
│ │ │ +                  parameter to skip rows, etc. Setting this parameter to 0 is
│ │ │                    the equivalent of setting it to width * tjPixelSize
│ │ │                    [pixelFormat].
│ │ │        height      height (in pixels) of the source image
│ │ │        pixelFormat pixel format of the source image (see Pixel_formats.)
│ │ │ -                  address of a pointer to an image buffer that will receive the
│ │ │ +                  address of a pointer to a byte buffer that will receive the
│ │ │                    JPEG image. TurboJPEG has the ability to reallocate the JPEG
│ │ │                    buffer to accommodate the size of the JPEG image. Thus, you
│ │ │                    can choose to:
│ │ │                       1. pre-allocate the JPEG buffer with an arbitrary size
│ │ │                          using tjAlloc() and let TurboJPEG grow the buffer as
│ │ │                          needed,
│ │ │                       2. set *jpegBuf to NULL to tell TurboJPEG to allocate the
│ │ │        jpegBuf           buffer for you, or
│ │ │                       3. pre-allocate the buffer to a "worst case" size
│ │ │                          determined by calling tjBufSize(). This should ensure
│ │ │ -                        that the buffer never has to be re-allocated (setting
│ │ │ +                        that the buffer never has to be re-allocated. (Setting
│ │ │                          TJFLAG_NOREALLOC guarantees that it won't be.)
│ │ │ -                  If you choose option 1, *jpegSize should be set to the size
│ │ │ -                  of your pre-allocated buffer. In any case, unless you have
│ │ │ -                  set TJFLAG_NOREALLOC, you should always check *jpegBuf upon
│ │ │ -                  return from this function, as it may have changed.
│ │ │ +                  If you choose option 1, then *jpegSize should be set to the
│ │ │ +                  size of your pre-allocated buffer. In any case, unless you
│ │ │ +                  have set TJFLAG_NOREALLOC, you should always check *jpegBuf
│ │ │ +                  upon return from this function, as it may have changed.
│ │ │                    pointer to an unsigned long variable that holds the size of
│ │ │ -                  the JPEG image buffer. If *jpegBuf points to a pre-allocated
│ │ │ +                  the JPEG buffer. If *jpegBuf points to a pre-allocated
│ │ │                    buffer, then *jpegSize should be set to the size of the
│ │ │        jpegSize    buffer. Upon return, *jpegSize will contain the size of the
│ │ │ -                  JPEG image (in bytes.) If *jpegBuf points to a JPEG image
│ │ │ -                  buffer that is being reused from a previous call to one of
│ │ │ -                  the JPEG compression functions, then *jpegSize is ignored.
│ │ │ +                  JPEG image (in bytes.) If *jpegBuf points to a JPEG buffer
│ │ │ +                  that is being reused from a previous call to one of the JPEG
│ │ │ +                  compression functions, then *jpegSize is ignored.
│ │ │                    the level of chrominance subsampling to be used when
│ │ │        jpegSubsamp generating the JPEG image (see Chrominance_subsampling
│ │ │                    options.)
│ │ │        jpegQual    the image quality of the generated JPEG image (1 = worst, 100
│ │ │                    = best)
│ │ │        flags       the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjCompressFromYUV() *****
│ │ │  DLLEXPORT int tjCompressFromYUV ( tjhandle              handle,
│ │ │                                    const unsigned char * srcBuf,
│ │ │                                    int                   width,
│ │ │ -                                  int                   pad,
│ │ │ +                                  int                   align,
│ │ │                                    int                   height,
│ │ │                                    int                   subsamp,
│ │ │                                    unsigned char **      jpegBuf,
│ │ │                                    unsigned long *       jpegSize,
│ │ │                                    int                   jpegQual,
│ │ │                                    int                   flags 
│ │ │                                  )
│ │ │ -Compress a YUV planar image into a JPEG image.
│ │ │ +Compress a unified planar YUV image into a JPEG image.
│ │ │    Parameters
│ │ │        handle   a handle to a TurboJPEG compressor or transformer instance
│ │ │ -               pointer to an image buffer containing a YUV planar image to be
│ │ │ -               compressed. The size of this buffer should match the value
│ │ │ +               pointer to a buffer containing a unified planar YUV source image
│ │ │ +               to be compressed. The size of this buffer should match the value
│ │ │        srcBuf   returned by tjBufSizeYUV2() for the given image width, height,
│ │ │ -               padding, and level of chrominance subsampling. The Y, U (Cb),
│ │ │ -               and V (Cr) image planes should be stored sequentially in the
│ │ │ -               source buffer (refer to YUV_Image_Format_Notes.)
│ │ │ +               row alignment, and level of chrominance subsampling. The Y, U
│ │ │ +               (Cb), and V (Cr) image planes should be stored sequentially in
│ │ │ +               the buffer. (Refer to YUV_Image_Format_Notes.)
│ │ │                 width (in pixels) of the source image. If the width is not an
│ │ │        width    even multiple of the MCU block width (see tjMCUWidth), then an
│ │ │ -               intermediate buffer copy will be performed within TurboJPEG.
│ │ │ -               the line padding used in the source image. For instance, if each
│ │ │ -      pad      line in each plane of the YUV image is padded to the nearest
│ │ │ -               multiple of 4 bytes, then pad should be set to 4.
│ │ │ +               intermediate buffer copy will be performed.
│ │ │ +               row alignment (in bytes) of the source image (must be a power of
│ │ │ +      align    2.) Setting this parameter to n indicates that each row in each
│ │ │ +               plane of the source image is padded to the nearest multiple of n
│ │ │ +               bytes (1 = unpadded.)
│ │ │                 height (in pixels) of the source image. If the height is not an
│ │ │        height   even multiple of the MCU block height (see tjMCUHeight), then an
│ │ │ -               intermediate buffer copy will be performed within TurboJPEG.
│ │ │ +               intermediate buffer copy will be performed.
│ │ │        subsamp  the level of chrominance subsampling used in the source image
│ │ │                 (see Chrominance_subsampling_options.)
│ │ │ -               address of a pointer to an image buffer that will receive the
│ │ │ -               JPEG image. TurboJPEG has the ability to reallocate the JPEG
│ │ │ -               buffer to accommodate the size of the JPEG image. Thus, you can
│ │ │ -               choose to:
│ │ │ +               address of a pointer to a byte buffer that will receive the JPEG
│ │ │ +               image. TurboJPEG has the ability to reallocate the JPEG buffer
│ │ │ +               to accommodate the size of the JPEG image. Thus, you can choose
│ │ │ +               to:
│ │ │                    1. pre-allocate the JPEG buffer with an arbitrary size using
│ │ │                       tjAlloc() and let TurboJPEG grow the buffer as needed,
│ │ │                    2. set *jpegBuf to NULL to tell TurboJPEG to allocate the
│ │ │        jpegBuf        buffer for you, or
│ │ │                    3. pre-allocate the buffer to a "worst case" size determined
│ │ │                       by calling tjBufSize(). This should ensure that the buffer
│ │ │ -                     never has to be re-allocated (setting TJFLAG_NOREALLOC
│ │ │ +                     never has to be re-allocated. (Setting TJFLAG_NOREALLOC
│ │ │                       guarantees that it won't be.)
│ │ │ -               If you choose option 1, *jpegSize should be set to the size of
│ │ │ -               your pre-allocated buffer. In any case, unless you have set
│ │ │ +               If you choose option 1, then *jpegSize should be set to the size
│ │ │ +               of your pre-allocated buffer. In any case, unless you have set
│ │ │                 TJFLAG_NOREALLOC, you should always check *jpegBuf upon return
│ │ │                 from this function, as it may have changed.
│ │ │                 pointer to an unsigned long variable that holds the size of the
│ │ │ -               JPEG image buffer. If *jpegBuf points to a pre-allocated buffer,
│ │ │ -               then *jpegSize should be set to the size of the buffer. Upon
│ │ │ -      jpegSize return, *jpegSize will contain the size of the JPEG image (in
│ │ │ -               bytes.) If *jpegBuf points to a JPEG image buffer that is being
│ │ │ -               reused from a previous call to one of the JPEG compression
│ │ │ -               functions, then *jpegSize is ignored.
│ │ │ +               JPEG buffer. If *jpegBuf points to a pre-allocated buffer, then
│ │ │ +               *jpegSize should be set to the size of the buffer. Upon return,
│ │ │ +      jpegSize *jpegSize will contain the size of the JPEG image (in bytes.) If
│ │ │ +               *jpegBuf points to a JPEG buffer that is being reused from a
│ │ │ +               previous call to one of the JPEG compression functions, then
│ │ │ +               *jpegSize is ignored.
│ │ │        jpegQual the image quality of the generated JPEG image (1 = worst, 100 =
│ │ │                 best)
│ │ │        flags    the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjCompressFromYUVPlanes() *****
│ │ │ @@ -858,107 +861,109 @@
│ │ │                                          int                    flags 
│ │ │                                        )
│ │ │  Compress a set of Y, U (Cb), and V (Cr) image planes into a JPEG image.
│ │ │    Parameters
│ │ │        handle    a handle to a TurboJPEG compressor or transformer instance
│ │ │                  an array of pointers to Y, U (Cb), and V (Cr) image planes (or
│ │ │                  just a Y plane, if compressing a grayscale image) that contain
│ │ │ -                a YUV image to be compressed. These planes can be contiguous or
│ │ │ -      srcPlanes non-contiguous in memory. The size of each plane should match
│ │ │ -                the value returned by tjPlaneSizeYUV() for the given image
│ │ │ -                width, height, strides, and level of chrominance subsampling.
│ │ │ -                Refer to YUV_Image_Format_Notes for more details.
│ │ │ +                a YUV source image to be compressed. These planes can be
│ │ │ +      srcPlanes contiguous or non-contiguous in memory. The size of each plane
│ │ │ +                should match the value returned by tjPlaneSizeYUV() for the
│ │ │ +                given image width, height, strides, and level of chrominance
│ │ │ +                subsampling. Refer to YUV_Image_Format_Notes for more details.
│ │ │                  width (in pixels) of the source image. If the width is not an
│ │ │        width     even multiple of the MCU block width (see tjMCUWidth), then an
│ │ │ -                intermediate buffer copy will be performed within TurboJPEG.
│ │ │ +                intermediate buffer copy will be performed.
│ │ │                  an array of integers, each specifying the number of bytes per
│ │ │ -                line in the corresponding plane of the YUV source image.
│ │ │ -                Setting the stride for any plane to 0 is the same as setting it
│ │ │ -                to the plane width (see YUV_Image_Format_Notes.) If strides is
│ │ │ -      strides   NULL, then the strides for all planes will be set to their
│ │ │ -                respective plane widths. You can adjust the strides in order to
│ │ │ -                specify an arbitrary amount of line padding in each plane or to
│ │ │ -                create a JPEG image from a subregion of a larger YUV planar
│ │ │ -                image.
│ │ │ +                row in the corresponding plane of the YUV source image. Setting
│ │ │ +                the stride for any plane to 0 is the same as setting it to the
│ │ │ +      strides   plane width (see YUV_Image_Format_Notes.) If strides is NULL,
│ │ │ +                then the strides for all planes will be set to their respective
│ │ │ +                plane widths. You can adjust the strides in order to specify an
│ │ │ +                arbitrary amount of row padding in each plane or to create a
│ │ │ +                JPEG image from a subregion of a larger planar YUV image.
│ │ │                  height (in pixels) of the source image. If the height is not an
│ │ │        height    even multiple of the MCU block height (see tjMCUHeight), then
│ │ │ -                an intermediate buffer copy will be performed within TurboJPEG.
│ │ │ +                an intermediate buffer copy will be performed.
│ │ │        subsamp   the level of chrominance subsampling used in the source image
│ │ │                  (see Chrominance_subsampling_options.)
│ │ │ -                address of a pointer to an image buffer that will receive the
│ │ │ +                address of a pointer to a byte buffer that will receive the
│ │ │                  JPEG image. TurboJPEG has the ability to reallocate the JPEG
│ │ │                  buffer to accommodate the size of the JPEG image. Thus, you can
│ │ │                  choose to:
│ │ │                     1. pre-allocate the JPEG buffer with an arbitrary size using
│ │ │                        tjAlloc() and let TurboJPEG grow the buffer as needed,
│ │ │                     2. set *jpegBuf to NULL to tell TurboJPEG to allocate the
│ │ │        jpegBuf         buffer for you, or
│ │ │                     3. pre-allocate the buffer to a "worst case" size determined
│ │ │                        by calling tjBufSize(). This should ensure that the
│ │ │ -                      buffer never has to be re-allocated (setting
│ │ │ +                      buffer never has to be re-allocated. (Setting
│ │ │                        TJFLAG_NOREALLOC guarantees that it won't be.)
│ │ │ -                If you choose option 1, *jpegSize should be set to the size of
│ │ │ -                your pre-allocated buffer. In any case, unless you have set
│ │ │ -                TJFLAG_NOREALLOC, you should always check *jpegBuf upon return
│ │ │ -                from this function, as it may have changed.
│ │ │ +                If you choose option 1, then *jpegSize should be set to the
│ │ │ +                size of your pre-allocated buffer. In any case, unless you have
│ │ │ +                set TJFLAG_NOREALLOC, you should always check *jpegBuf upon
│ │ │ +                return from this function, as it may have changed.
│ │ │                  pointer to an unsigned long variable that holds the size of the
│ │ │ -                JPEG image buffer. If *jpegBuf points to a pre-allocated
│ │ │ -                buffer, then *jpegSize should be set to the size of the buffer.
│ │ │ -      jpegSize  Upon return, *jpegSize will contain the size of the JPEG image
│ │ │ -                (in bytes.) If *jpegBuf points to a JPEG image buffer that is
│ │ │ -                being reused from a previous call to one of the JPEG
│ │ │ -                compression functions, then *jpegSize is ignored.
│ │ │ +                JPEG buffer. If *jpegBuf points to a pre-allocated buffer, then
│ │ │ +                *jpegSize should be set to the size of the buffer. Upon return,
│ │ │ +      jpegSize  *jpegSize will contain the size of the JPEG image (in bytes.)
│ │ │ +                If *jpegBuf points to a JPEG buffer that is being reused from a
│ │ │ +                previous call to one of the JPEG compression functions, then
│ │ │ +                *jpegSize is ignored.
│ │ │        jpegQual  the image quality of the generated JPEG image (1 = worst, 100 =
│ │ │                  best)
│ │ │        flags     the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjDecodeYUV() *****
│ │ │  DLLEXPORT int tjDecodeYUV ( tjhandle              handle,
│ │ │                              const unsigned char * srcBuf,
│ │ │ -                            int                   pad,
│ │ │ +                            int                   align,
│ │ │                              int                   subsamp,
│ │ │                              unsigned char *       dstBuf,
│ │ │                              int                   width,
│ │ │                              int                   pitch,
│ │ │                              int                   height,
│ │ │                              int                   pixelFormat,
│ │ │                              int                   flags 
│ │ │                            )
│ │ │ -Decode a YUV planar image into an RGB or grayscale image.
│ │ │ -This function uses the accelerated color conversion routines in the underlying
│ │ │ -codec but does not execute any of the other steps in the JPEG decompression
│ │ │ -process.
│ │ │ +Decode a unified planar YUV image into a packed-pixel RGB or grayscale image.
│ │ │ +This function performs color conversion (which is accelerated in the libjpeg-
│ │ │ +turbo implementation) but does not execute any of the other steps in the JPEG
│ │ │ +decompression process.
│ │ │    Parameters
│ │ │        handle      a handle to a TurboJPEG decompressor or transformer instance
│ │ │ -                  pointer to an image buffer containing a YUV planar image to
│ │ │ -                  be decoded. The size of this buffer should match the value
│ │ │ -      srcBuf      returned by tjBufSizeYUV2() for the given image width,
│ │ │ -                  height, padding, and level of chrominance subsampling. The Y,
│ │ │ -                  U (Cb), and V (Cr) image planes should be stored sequentially
│ │ │ -                  in the source buffer (refer to YUV_Image_Format_Notes.)
│ │ │ -                  Use this parameter to specify that the width of each line in
│ │ │ -      pad         each plane of the YUV source image is padded to the nearest
│ │ │ -                  multiple of this number of bytes (must be a power of 2.)
│ │ │ +                  pointer to a buffer containing a unified planar YUV source
│ │ │ +                  image to be decoded. The size of this buffer should match the
│ │ │ +                  value returned by tjBufSizeYUV2() for the given image width,
│ │ │ +      srcBuf      height, row alignment, and level of chrominance subsampling.
│ │ │ +                  The Y, U (Cb), and V (Cr) image planes should be stored
│ │ │ +                  sequentially in the source buffer. (Refer to YUV_Image_Format
│ │ │ +                  Notes.)
│ │ │ +                  row alignment (in bytes) of the YUV source image (must be a
│ │ │ +      align       power of 2.) Setting this parameter to n indicates that each
│ │ │ +                  row in each plane of the YUV source image is padded to the
│ │ │ +                  nearest multiple of n bytes (1 = unpadded.)
│ │ │        subsamp     the level of chrominance subsampling used in the YUV source
│ │ │                    image (see Chrominance_subsampling_options.)
│ │ │ -                  pointer to an image buffer that will receive the decoded
│ │ │ -      dstBuf      image. This buffer should normally be pitch * height bytes in
│ │ │ -                  size, but the dstBuf pointer can also be used to decode into
│ │ │ -                  a specific region of a larger buffer.
│ │ │ +                  pointer to a buffer that will receive the packed-pixel
│ │ │ +      dstBuf      decoded image. This buffer should normally be pitch * height
│ │ │ +                  bytes in size, but the dstBuf pointer can also be used to
│ │ │ +                  decode into a specific region of a larger buffer.
│ │ │        width       width (in pixels) of the source and destination images
│ │ │ -                  bytes per line in the destination image. Normally, this
│ │ │ -                  should be width * tjPixelSize[pixelFormat] if the destination
│ │ │ -                  image is unpadded, or TJPAD(width * tjPixelSize[pixelFormat])
│ │ │ -      pitch       if each line of the destination image should be padded to the
│ │ │ -                  nearest 32-bit boundary, as is the case for Windows bitmaps.
│ │ │ -                  You can also be clever and use the pitch parameter to skip
│ │ │ -                  lines, etc. Setting this parameter to 0 is the equivalent of
│ │ │ -                  setting it to width * tjPixelSize[pixelFormat].
│ │ │ +                  bytes per row in the destination image. Normally this should
│ │ │ +                  be set to width * tjPixelSize[pixelFormat], if the
│ │ │ +                  destination image should be unpadded, or TJPAD(width *
│ │ │ +                  tjPixelSize[pixelFormat]) if each row of the destination
│ │ │ +      pitch       image should be padded to the nearest multiple of 4 bytes, as
│ │ │ +                  is the case for Windows bitmaps. You can also be clever and
│ │ │ +                  use the pitch parameter to skip rows, etc. Setting this
│ │ │ +                  parameter to 0 is the equivalent of setting it to width *
│ │ │ +                  tjPixelSize[pixelFormat].
│ │ │        height      height (in pixels) of the source and destination images
│ │ │        pixelFormat pixel format of the destination image (see Pixel_formats.)
│ │ │        flags       the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjDecodeYUVPlanes() *****
│ │ │ @@ -969,53 +974,54 @@
│ │ │                                    unsigned char *        dstBuf,
│ │ │                                    int                    width,
│ │ │                                    int                    pitch,
│ │ │                                    int                    height,
│ │ │                                    int                    pixelFormat,
│ │ │                                    int                    flags 
│ │ │                                  )
│ │ │ -Decode a set of Y, U (Cb), and V (Cr) image planes into an RGB or grayscale
│ │ │ -image.
│ │ │ -This function uses the accelerated color conversion routines in the underlying
│ │ │ -codec but does not execute any of the other steps in the JPEG decompression
│ │ │ -process.
│ │ │ +Decode a set of Y, U (Cb), and V (Cr) image planes into a packed-pixel RGB or
│ │ │ +grayscale image.
│ │ │ +This function performs color conversion (which is accelerated in the libjpeg-
│ │ │ +turbo implementation) but does not execute any of the other steps in the JPEG
│ │ │ +decompression process.
│ │ │    Parameters
│ │ │        handle      a handle to a TurboJPEG decompressor or transformer instance
│ │ │                    an array of pointers to Y, U (Cb), and V (Cr) image planes
│ │ │                    (or just a Y plane, if decoding a grayscale image) that
│ │ │                    contain a YUV image to be decoded. These planes can be
│ │ │        srcPlanes   contiguous or non-contiguous in memory. The size of each
│ │ │                    plane should match the value returned by tjPlaneSizeYUV() for
│ │ │                    the given image width, height, strides, and level of
│ │ │                    chrominance subsampling. Refer to YUV_Image_Format_Notes for
│ │ │                    more details.
│ │ │                    an array of integers, each specifying the number of bytes per
│ │ │ -                  line in the corresponding plane of the YUV source image.
│ │ │ +                  row in the corresponding plane of the YUV source image.
│ │ │                    Setting the stride for any plane to 0 is the same as setting
│ │ │                    it to the plane width (see YUV_Image_Format_Notes.) If
│ │ │        strides     strides is NULL, then the strides for all planes will be set
│ │ │                    to their respective plane widths. You can adjust the strides
│ │ │ -                  in order to specify an arbitrary amount of line padding in
│ │ │ -                  each plane or to decode a subregion of a larger YUV planar
│ │ │ +                  in order to specify an arbitrary amount of row padding in
│ │ │ +                  each plane or to decode a subregion of a larger planar YUV
│ │ │                    image.
│ │ │        subsamp     the level of chrominance subsampling used in the YUV source
│ │ │                    image (see Chrominance_subsampling_options.)
│ │ │ -                  pointer to an image buffer that will receive the decoded
│ │ │ -      dstBuf      image. This buffer should normally be pitch * height bytes in
│ │ │ -                  size, but the dstBuf pointer can also be used to decode into
│ │ │ -                  a specific region of a larger buffer.
│ │ │ +                  pointer to a buffer that will receive the packed-pixel
│ │ │ +      dstBuf      decoded image. This buffer should normally be pitch * height
│ │ │ +                  bytes in size, but the dstBuf pointer can also be used to
│ │ │ +                  decode into a specific region of a larger buffer.
│ │ │        width       width (in pixels) of the source and destination images
│ │ │ -                  bytes per line in the destination image. Normally, this
│ │ │ -                  should be width * tjPixelSize[pixelFormat] if the destination
│ │ │ -                  image is unpadded, or TJPAD(width * tjPixelSize[pixelFormat])
│ │ │ -      pitch       if each line of the destination image should be padded to the
│ │ │ -                  nearest 32-bit boundary, as is the case for Windows bitmaps.
│ │ │ -                  You can also be clever and use the pitch parameter to skip
│ │ │ -                  lines, etc. Setting this parameter to 0 is the equivalent of
│ │ │ -                  setting it to width * tjPixelSize[pixelFormat].
│ │ │ +                  bytes per row in the destination image. Normally this should
│ │ │ +                  be set to width * tjPixelSize[pixelFormat], if the
│ │ │ +                  destination image should be unpadded, or TJPAD(width *
│ │ │ +                  tjPixelSize[pixelFormat]) if each row of the destination
│ │ │ +      pitch       image should be padded to the nearest multiple of 4 bytes, as
│ │ │ +                  is the case for Windows bitmaps. You can also be clever and
│ │ │ +                  use the pitch parameter to skip rows, etc. Setting this
│ │ │ +                  parameter to 0 is the equivalent of setting it to width *
│ │ │ +                  tjPixelSize[pixelFormat].
│ │ │        height      height (in pixels) of the source and destination images
│ │ │        pixelFormat pixel format of the destination image (see Pixel_formats.)
│ │ │        flags       the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjDecompress2() *****
│ │ │ @@ -1025,44 +1031,46 @@
│ │ │                                unsigned char *       dstBuf,
│ │ │                                int                   width,
│ │ │                                int                   pitch,
│ │ │                                int                   height,
│ │ │                                int                   pixelFormat,
│ │ │                                int                   flags 
│ │ │                              )
│ │ │ -Decompress a JPEG image to an RGB, grayscale, or CMYK image.
│ │ │ +Decompress a JPEG image into a packed-pixel RGB, grayscale, or CMYK image.
│ │ │    Parameters
│ │ │        handle      a handle to a TurboJPEG decompressor or transformer instance
│ │ │ -      jpegBuf     pointer to a buffer containing the JPEG image to decompress
│ │ │ +      jpegBuf     pointer to a byte buffer containing the JPEG image to
│ │ │ +                  decompress
│ │ │        jpegSize    size of the JPEG image (in bytes)
│ │ │ -                  pointer to an image buffer that will receive the decompressed
│ │ │ -                  image. This buffer should normally be pitch * scaledHeight
│ │ │ -                  bytes in size, where scaledHeight can be determined by
│ │ │ -      dstBuf      calling TJSCALED() with the JPEG image height and one of the
│ │ │ -                  scaling factors returned by tjGetScalingFactors(). The dstBuf
│ │ │ -                  pointer may also be used to decompress into a specific region
│ │ │ -                  of a larger buffer.
│ │ │ +                  pointer to a buffer that will receive the packed-pixel
│ │ │ +                  decompressed image. This buffer should normally be pitch *
│ │ │ +                  scaledHeight bytes in size, where scaledHeight can be
│ │ │ +      dstBuf      determined by calling TJSCALED() with the JPEG image height
│ │ │ +                  and one of the scaling factors returned by
│ │ │ +                  tjGetScalingFactors(). The dstBuf pointer may also be used to
│ │ │ +                  decompress into a specific region of a larger buffer.
│ │ │                    desired width (in pixels) of the destination image. If this
│ │ │                    is different than the width of the JPEG image being
│ │ │                    decompressed, then TurboJPEG will use scaling in the JPEG
│ │ │        width       decompressor to generate the largest possible image that will
│ │ │                    fit within the desired width. If width is set to 0, then only
│ │ │                    the height will be considered when determining the scaled
│ │ │                    image size.
│ │ │ -                  bytes per line in the destination image. Normally, this is
│ │ │ -                  scaledWidth * tjPixelSize[pixelFormat] if the decompressed
│ │ │ -                  image is unpadded, else TJPAD(scaledWidth * tjPixelSize
│ │ │ -                  [pixelFormat]) if each line of the decompressed image is
│ │ │ -                  padded to the nearest 32-bit boundary, as is the case for
│ │ │ -      pitch       Windows bitmaps. (NOTE: scaledWidth can be determined by
│ │ │ -                  calling TJSCALED() with the JPEG image width and one of the
│ │ │ -                  scaling factors returned by tjGetScalingFactors().) You can
│ │ │ -                  also be clever and use the pitch parameter to skip lines,
│ │ │ -                  etc. Setting this parameter to 0 is the equivalent of setting
│ │ │ -                  it to scaledWidth * tjPixelSize[pixelFormat].
│ │ │ +                  bytes per row in the destination image. Normally this should
│ │ │ +                  be set to scaledWidth * tjPixelSize[pixelFormat], if the
│ │ │ +                  destination image should be unpadded, or TJPAD(scaledWidth *
│ │ │ +                  tjPixelSize[pixelFormat]) if each row of the destination
│ │ │ +                  image should be padded to the nearest multiple of 4 bytes, as
│ │ │ +      pitch       is the case for Windows bitmaps. (NOTE: scaledWidth can be
│ │ │ +                  determined by calling TJSCALED() with the JPEG image width
│ │ │ +                  and one of the scaling factors returned by
│ │ │ +                  tjGetScalingFactors().) You can also be clever and use the
│ │ │ +                  pitch parameter to skip rows, etc. Setting this parameter to
│ │ │ +                  0 is the equivalent of setting it to scaledWidth *
│ │ │ +                  tjPixelSize[pixelFormat].
│ │ │                    desired height (in pixels) of the destination image. If this
│ │ │                    is different than the height of the JPEG image being
│ │ │                    decompressed, then TurboJPEG will use scaling in the JPEG
│ │ │        height      decompressor to generate the largest possible image that will
│ │ │                    fit within the desired height. If height is set to 0, then
│ │ │                    only the width will be considered when determining the scaled
│ │ │                    image size.
│ │ │ @@ -1081,15 +1089,15 @@
│ │ │                                      int *                 jpegColorspace 
│ │ │                                    )
│ │ │  Retrieve information about a JPEG image without decompressing it, or prime the
│ │ │  decompressor with quantization and Huffman tables.
│ │ │    Parameters
│ │ │        handle         a handle to a TurboJPEG decompressor or transformer
│ │ │                       instance
│ │ │ -                     pointer to a buffer containing a JPEG image or an
│ │ │ +                     pointer to a byte buffer containing a JPEG image or an
│ │ │                       "abbreviated table specification" (AKA "tables-only")
│ │ │                       datastream. Passing a tables-only datastream to this
│ │ │                       function primes the decompressor with quantization and
│ │ │        jpegBuf        Huffman tables that can be used when decompressing
│ │ │                       subsequent "abbreviated image" datastreams. This is
│ │ │                       useful, for instance, when decompressing video streams in
│ │ │                       which all frames share the same quantization and Huffman
│ │ │ @@ -1117,53 +1125,54 @@
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjDecompressToYUV2() *****
│ │ │  DLLEXPORT int tjDecompressToYUV2 ( tjhandle              handle,
│ │ │                                     const unsigned char * jpegBuf,
│ │ │                                     unsigned long         jpegSize,
│ │ │                                     unsigned char *       dstBuf,
│ │ │                                     int                   width,
│ │ │ -                                   int                   pad,
│ │ │ +                                   int                   align,
│ │ │                                     int                   height,
│ │ │                                     int                   flags 
│ │ │                                   )
│ │ │ -Decompress a JPEG image to a YUV planar image.
│ │ │ +Decompress a JPEG image into a unified planar YUV image.
│ │ │  This function performs JPEG decompression but leaves out the color conversion
│ │ │ -step, so a planar YUV image is generated instead of an RGB image.
│ │ │ +step, so a planar YUV image is generated instead of a packed-pixel image.
│ │ │    Parameters
│ │ │        handle   a handle to a TurboJPEG decompressor or transformer instance
│ │ │ -      jpegBuf  pointer to a buffer containing the JPEG image to decompress
│ │ │ +      jpegBuf  pointer to a byte buffer containing the JPEG image to decompress
│ │ │        jpegSize size of the JPEG image (in bytes)
│ │ │ -               pointer to an image buffer that will receive the YUV image. Use
│ │ │ -               tjBufSizeYUV2() to determine the appropriate size for this
│ │ │ -      dstBuf   buffer based on the image width, height, padding, and level of
│ │ │ -               subsampling. The Y, U (Cb), and V (Cr) image planes will be
│ │ │ -               stored sequentially in the buffer (refer to YUV_Image_Format
│ │ │ -               Notes.)
│ │ │ +               pointer to a buffer that will receive the unified planar YUV
│ │ │ +               decompressed image. Use tjBufSizeYUV2() to determine the
│ │ │ +               appropriate size for this buffer based on the scaled image
│ │ │ +      dstBuf   width, scaled image height, row alignment, and level of
│ │ │ +               chrominance subsampling. The Y, U (Cb), and V (Cr) image planes
│ │ │ +               will be stored sequentially in the buffer. (Refer to YUV_Image
│ │ │ +               Format_Notes.)
│ │ │                 desired width (in pixels) of the YUV image. If this is different
│ │ │                 than the width of the JPEG image being decompressed, then
│ │ │                 TurboJPEG will use scaling in the JPEG decompressor to generate
│ │ │ -               the largest possible image that will fit within the desired
│ │ │ -      width    width. If width is set to 0, then only the height will be
│ │ │ +      width    the largest possible image that will fit within the desired
│ │ │ +               width. If width is set to 0, then only the height will be
│ │ │                 considered when determining the scaled image size. If the scaled
│ │ │                 width is not an even multiple of the MCU block width (see
│ │ │ -               tjMCUWidth), then an intermediate buffer copy will be performed
│ │ │ -               within TurboJPEG.
│ │ │ -               the width of each line in each plane of the YUV image will be
│ │ │ -      pad      padded to the nearest multiple of this number of bytes (must be
│ │ │ -               a power of 2.) To generate images suitable for X Video, pad
│ │ │ -               should be set to 4.
│ │ │ +               tjMCUWidth), then an intermediate buffer copy will be performed.
│ │ │ +               row alignment (in bytes) of the YUV image (must be a power of
│ │ │ +               2.) Setting this parameter to n will cause each row in each
│ │ │ +      align    plane of the YUV image to be padded to the nearest multiple of n
│ │ │ +               bytes (1 = unpadded.) To generate images suitable for X Video,
│ │ │ +               align should be set to 4.
│ │ │                 desired height (in pixels) of the YUV image. If this is
│ │ │                 different than the height of the JPEG image being decompressed,
│ │ │                 then TurboJPEG will use scaling in the JPEG decompressor to
│ │ │                 generate the largest possible image that will fit within the
│ │ │        height   desired height. If height is set to 0, then only the width will
│ │ │                 be considered when determining the scaled image size. If the
│ │ │                 scaled height is not an even multiple of the MCU block height
│ │ │                 (see tjMCUHeight), then an intermediate buffer copy will be
│ │ │ -               performed within TurboJPEG.
│ │ │ +               performed.
│ │ │        flags    the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjDecompressToYUVPlanes() *****
│ │ │  DLLEXPORT int tjDecompressToYUVPlanes ( tjhandle              handle,
│ │ │                                          const unsigned char * jpegBuf,
│ │ │ @@ -1172,53 +1181,54 @@
│ │ │                                          int                   width,
│ │ │                                          int *                 strides,
│ │ │                                          int                   height,
│ │ │                                          int                   flags 
│ │ │                                        )
│ │ │  Decompress a JPEG image into separate Y, U (Cb), and V (Cr) image planes.
│ │ │  This function performs JPEG decompression but leaves out the color conversion
│ │ │ -step, so a planar YUV image is generated instead of an RGB image.
│ │ │ +step, so a planar YUV image is generated instead of a packed-pixel image.
│ │ │    Parameters
│ │ │        handle    a handle to a TurboJPEG decompressor or transformer instance
│ │ │ -      jpegBuf   pointer to a buffer containing the JPEG image to decompress
│ │ │ +      jpegBuf   pointer to a byte buffer containing the JPEG image to
│ │ │ +                decompress
│ │ │        jpegSize  size of the JPEG image (in bytes)
│ │ │                  an array of pointers to Y, U (Cb), and V (Cr) image planes (or
│ │ │                  just a Y plane, if decompressing a grayscale image) that will
│ │ │ -                receive the YUV image. These planes can be contiguous or non-
│ │ │ -      dstPlanes contiguous in memory. Use tjPlaneSizeYUV() to determine the
│ │ │ -                appropriate size for each plane based on the scaled image
│ │ │ +                receive the decompressed image. These planes can be contiguous
│ │ │ +      dstPlanes or non-contiguous in memory. Use tjPlaneSizeYUV() to determine
│ │ │ +                the appropriate size for each plane based on the scaled image
│ │ │                  width, scaled image height, strides, and level of chrominance
│ │ │                  subsampling. Refer to YUV_Image_Format_Notes for more details.
│ │ │                  desired width (in pixels) of the YUV image. If this is
│ │ │                  different than the width of the JPEG image being decompressed,
│ │ │                  then TurboJPEG will use scaling in the JPEG decompressor to
│ │ │                  generate the largest possible image that will fit within the
│ │ │        width     desired width. If width is set to 0, then only the height will
│ │ │                  be considered when determining the scaled image size. If the
│ │ │                  scaled width is not an even multiple of the MCU block width
│ │ │                  (see tjMCUWidth), then an intermediate buffer copy will be
│ │ │ -                performed within TurboJPEG.
│ │ │ +                performed.
│ │ │                  an array of integers, each specifying the number of bytes per
│ │ │ -                line in the corresponding plane of the output image. Setting
│ │ │ -                the stride for any plane to 0 is the same as setting it to the
│ │ │ +                row in the corresponding plane of the YUV image. Setting the
│ │ │ +                stride for any plane to 0 is the same as setting it to the
│ │ │                  scaled plane width (see YUV_Image_Format_Notes.) If strides is
│ │ │        strides   NULL, then the strides for all planes will be set to their
│ │ │                  respective scaled plane widths. You can adjust the strides in
│ │ │ -                order to add an arbitrary amount of line padding to each plane
│ │ │ +                order to add an arbitrary amount of row padding to each plane
│ │ │                  or to decompress the JPEG image into a subregion of a larger
│ │ │ -                YUV planar image.
│ │ │ +                planar YUV image.
│ │ │                  desired height (in pixels) of the YUV image. If this is
│ │ │                  different than the height of the JPEG image being decompressed,
│ │ │                  then TurboJPEG will use scaling in the JPEG decompressor to
│ │ │                  generate the largest possible image that will fit within the
│ │ │        height    desired height. If height is set to 0, then only the width will
│ │ │                  be considered when determining the scaled image size. If the
│ │ │                  scaled height is not an even multiple of the MCU block height
│ │ │                  (see tjMCUHeight), then an intermediate buffer copy will be
│ │ │ -                performed within TurboJPEG.
│ │ │ +                performed.
│ │ │        flags     the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjDestroy() *****
│ │ │  DLLEXPORT int tjDestroy ( tjhandle handle )
│ │ │  Destroy a TurboJPEG compressor, decompressor, or transformer instance.
│ │ │ @@ -1231,47 +1241,48 @@
│ │ │  DLLEXPORT int tjEncodeYUV3 ( tjhandle              handle,
│ │ │                               const unsigned char * srcBuf,
│ │ │                               int                   width,
│ │ │                               int                   pitch,
│ │ │                               int                   height,
│ │ │                               int                   pixelFormat,
│ │ │                               unsigned char *       dstBuf,
│ │ │ -                             int                   pad,
│ │ │ +                             int                   align,
│ │ │                               int                   subsamp,
│ │ │                               int                   flags 
│ │ │                             )
│ │ │ -Encode an RGB or grayscale image into a YUV planar image.
│ │ │ -This function uses the accelerated color conversion routines in the underlying
│ │ │ -codec but does not execute any of the other steps in the JPEG compression
│ │ │ -process.
│ │ │ +Encode a packed-pixel RGB or grayscale image into a unified planar YUV image.
│ │ │ +This function performs color conversion (which is accelerated in the libjpeg-
│ │ │ +turbo implementation) but does not execute any of the other steps in the JPEG
│ │ │ +compression process.
│ │ │    Parameters
│ │ │        handle      a handle to a TurboJPEG compressor or transformer instance
│ │ │ -      srcBuf      pointer to an image buffer containing RGB or grayscale pixels
│ │ │ -                  to be encoded
│ │ │ +      srcBuf      pointer to a buffer containing a packed-pixel RGB or
│ │ │ +                  grayscale source image to be encoded
│ │ │        width       width (in pixels) of the source image
│ │ │ -                  bytes per line in the source image. Normally, this should be
│ │ │ -                  width * tjPixelSize[pixelFormat] if the image is unpadded, or
│ │ │ -                  TJPAD(width * tjPixelSize[pixelFormat]) if each line of the
│ │ │ -      pitch       image is padded to the nearest 32-bit boundary, as is the
│ │ │ +                  bytes per row in the source image. Normally this should be
│ │ │ +                  width * tjPixelSize[pixelFormat], if the image is unpadded,
│ │ │ +                  or TJPAD(width * tjPixelSize[pixelFormat]) if each row of the
│ │ │ +      pitch       image is padded to the nearest multiple of 4 bytes, as is the
│ │ │                    case for Windows bitmaps. You can also be clever and use this
│ │ │ -                  parameter to skip lines, etc. Setting this parameter to 0 is
│ │ │ +                  parameter to skip rows, etc. Setting this parameter to 0 is
│ │ │                    the equivalent of setting it to width * tjPixelSize
│ │ │                    [pixelFormat].
│ │ │        height      height (in pixels) of the source image
│ │ │        pixelFormat pixel format of the source image (see Pixel_formats.)
│ │ │ -                  pointer to an image buffer that will receive the YUV image.
│ │ │ -                  Use tjBufSizeYUV2() to determine the appropriate size for
│ │ │ -      dstBuf      this buffer based on the image width, height, padding, and
│ │ │ -                  level of chrominance subsampling. The Y, U (Cb), and V (Cr)
│ │ │ -                  image planes will be stored sequentially in the buffer (refer
│ │ │ -                  to YUV_Image_Format_Notes.)
│ │ │ -                  the width of each line in each plane of the YUV image will be
│ │ │ -      pad         padded to the nearest multiple of this number of bytes (must
│ │ │ -                  be a power of 2.) To generate images suitable for X Video,
│ │ │ -                  pad should be set to 4.
│ │ │ +                  pointer to a buffer that will receive the unified planar YUV
│ │ │ +                  image. Use tjBufSizeYUV2() to determine the appropriate size
│ │ │ +      dstBuf      for this buffer based on the image width, height, row
│ │ │ +                  alignment, and level of chrominance subsampling. The Y, U
│ │ │ +                  (Cb), and V (Cr) image planes will be stored sequentially in
│ │ │ +                  the buffer. (Refer to YUV_Image_Format_Notes.)
│ │ │ +                  row alignment (in bytes) of the YUV image (must be a power of
│ │ │ +                  2.) Setting this parameter to n will cause each row in each
│ │ │ +      align       plane of the YUV image to be padded to the nearest multiple
│ │ │ +                  of n bytes (1 = unpadded.) To generate images suitable for X
│ │ │ +                  Video, align should be set to 4.
│ │ │                    the level of chrominance subsampling to be used when
│ │ │                    generating the YUV image (see Chrominance_subsampling
│ │ │        subsamp     options.) To generate images suitable for X Video, subsamp
│ │ │                    should be set to TJSAMP_420. This produces an image
│ │ │                    compatible with the I420 (AKA "YUV420P") format.
│ │ │        flags       the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │ @@ -1285,63 +1296,63 @@
│ │ │                                    int                   height,
│ │ │                                    int                   pixelFormat,
│ │ │                                    unsigned char **      dstPlanes,
│ │ │                                    int *                 strides,
│ │ │                                    int                   subsamp,
│ │ │                                    int                   flags 
│ │ │                                  )
│ │ │ -Encode an RGB or grayscale image into separate Y, U (Cb), and V (Cr) image
│ │ │ -planes.
│ │ │ -This function uses the accelerated color conversion routines in the underlying
│ │ │ -codec but does not execute any of the other steps in the JPEG compression
│ │ │ -process.
│ │ │ +Encode a packed-pixel RGB or grayscale image into separate Y, U (Cb), and V
│ │ │ +(Cr) image planes.
│ │ │ +This function performs color conversion (which is accelerated in the libjpeg-
│ │ │ +turbo implementation) but does not execute any of the other steps in the JPEG
│ │ │ +compression process.
│ │ │    Parameters
│ │ │        handle      a handle to a TurboJPEG compressor or transformer instance
│ │ │ -      srcBuf      pointer to an image buffer containing RGB or grayscale pixels
│ │ │ -                  to be encoded
│ │ │ +      srcBuf      pointer to a buffer containing a packed-pixel RGB or
│ │ │ +                  grayscale source image to be encoded
│ │ │        width       width (in pixels) of the source image
│ │ │ -                  bytes per line in the source image. Normally, this should be
│ │ │ -                  width * tjPixelSize[pixelFormat] if the image is unpadded, or
│ │ │ -                  TJPAD(width * tjPixelSize[pixelFormat]) if each line of the
│ │ │ -      pitch       image is padded to the nearest 32-bit boundary, as is the
│ │ │ +                  bytes per row in the source image. Normally this should be
│ │ │ +                  width * tjPixelSize[pixelFormat], if the image is unpadded,
│ │ │ +                  or TJPAD(width * tjPixelSize[pixelFormat]) if each row of the
│ │ │ +      pitch       image is padded to the nearest multiple of 4 bytes, as is the
│ │ │                    case for Windows bitmaps. You can also be clever and use this
│ │ │ -                  parameter to skip lines, etc. Setting this parameter to 0 is
│ │ │ +                  parameter to skip rows, etc. Setting this parameter to 0 is
│ │ │                    the equivalent of setting it to width * tjPixelSize
│ │ │                    [pixelFormat].
│ │ │        height      height (in pixels) of the source image
│ │ │        pixelFormat pixel format of the source image (see Pixel_formats.)
│ │ │                    an array of pointers to Y, U (Cb), and V (Cr) image planes
│ │ │                    (or just a Y plane, if generating a grayscale image) that
│ │ │                    will receive the encoded image. These planes can be
│ │ │        dstPlanes   contiguous or non-contiguous in memory. Use tjPlaneSizeYUV()
│ │ │                    to determine the appropriate size for each plane based on the
│ │ │                    image width, height, strides, and level of chrominance
│ │ │                    subsampling. Refer to YUV_Image_Format_Notes for more
│ │ │                    details.
│ │ │                    an array of integers, each specifying the number of bytes per
│ │ │ -                  line in the corresponding plane of the output image. Setting
│ │ │ -                  the stride for any plane to 0 is the same as setting it to
│ │ │ -                  the plane width (see YUV_Image_Format_Notes.) If strides is
│ │ │ -      strides     NULL, then the strides for all planes will be set to their
│ │ │ +                  row in the corresponding plane of the YUV image. Setting the
│ │ │ +                  stride for any plane to 0 is the same as setting it to the
│ │ │ +                  plane width (see YUV_Image_Format_Notes.) If strides is NULL,
│ │ │ +      strides     then the strides for all planes will be set to their
│ │ │                    respective plane widths. You can adjust the strides in order
│ │ │ -                  to add an arbitrary amount of line padding to each plane or
│ │ │ -                  to encode an RGB or grayscale image into a subregion of a
│ │ │ -                  larger YUV planar image.
│ │ │ +                  to add an arbitrary amount of row padding to each plane or to
│ │ │ +                  encode an RGB or grayscale image into a subregion of a larger
│ │ │ +                  planar YUV image.
│ │ │                    the level of chrominance subsampling to be used when
│ │ │                    generating the YUV image (see Chrominance_subsampling
│ │ │        subsamp     options.) To generate images suitable for X Video, subsamp
│ │ │                    should be set to TJSAMP_420. This produces an image
│ │ │                    compatible with the I420 (AKA "YUV420P") format.
│ │ │        flags       the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** ◆ tjFree() *****
│ │ │  DLLEXPORT void tjFree ( unsigned char * buffer )
│ │ │ -Free an image buffer previously allocated by TurboJPEG.
│ │ │ +Free a byte buffer previously allocated by TurboJPEG.
│ │ │  You should always use this function to free JPEG destination buffer(s) that
│ │ │  were automatically (re)allocated by the compression and transform functions or
│ │ │  that were manually allocated using tjAlloc().
│ │ │    Parameters
│ │ │        buffer address of the buffer to free. If the address is NULL, then this
│ │ │               function has no effect.
│ │ │    See also
│ │ │ @@ -1363,19 +1374,19 @@
│ │ │               instance, or NULL if the error was generated by a global function
│ │ │        handle (but note that retrieving the error message for a global function
│ │ │               is thread-safe only on platforms that support thread-local
│ │ │               storage.)
│ │ │    Returns
│ │ │        a descriptive error message explaining why the last command failed.
│ │ │  ***** ◆ tjGetScalingFactors() *****
│ │ │ -DLLEXPORT tjscalingfactor* tjGetScalingFactors ( int * numscalingfactors )
│ │ │ -Returns a list of fractional scaling factors that the JPEG decompressor in this
│ │ │ -implementation of TurboJPEG supports.
│ │ │ +DLLEXPORT tjscalingfactor* tjGetScalingFactors ( int * numScalingFactors )
│ │ │ +Returns a list of fractional scaling factors that the JPEG decompressor
│ │ │ +supports.
│ │ │    Parameters
│ │ │ -      numscalingfactors pointer to an integer variable that will receive the
│ │ │ +      numScalingFactors pointer to an integer variable that will receive the
│ │ │                          number of elements in the list
│ │ │    Returns
│ │ │        a pointer to a list of fractional scaling factors, or NULL if an error is
│ │ │        encountered (see tjGetErrorStr2().)
│ │ │  ***** ◆ tjInitCompress() *****
│ │ │  DLLEXPORT tjhandle tjInitCompress ( void  )
│ │ │  Create a TurboJPEG compressor instance.
│ │ │ @@ -1398,49 +1409,47 @@
│ │ │  DLLEXPORT unsigned char* tjLoadImage ( const char * filename,
│ │ │                                         int *        width,
│ │ │                                         int          align,
│ │ │                                         int *        height,
│ │ │                                         int *        pixelFormat,
│ │ │                                         int          flags 
│ │ │                                       )
│ │ │ -Load an uncompressed image from disk into memory.
│ │ │ +Load a packed-pixel image from disk into memory.
│ │ │    Parameters
│ │ │ -      filename    name of a file containing an uncompressed image in Windows
│ │ │ -                  BMP or PBMPLUS (PPM/PGM) format
│ │ │ +      filename    name of a file containing a packed-pixel image in Windows BMP
│ │ │ +                  or PBMPLUS (PPM/PGM) format
│ │ │        width       pointer to an integer variable that will receive the width
│ │ │ -                  (in pixels) of the uncompressed image
│ │ │ -                  row alignment of the image buffer to be returned (must be a
│ │ │ -                  power of 2.) For instance, setting this parameter to 4 will
│ │ │ -      align       cause all rows in the image buffer to be padded to the
│ │ │ -                  nearest 32-bit boundary, and setting this parameter to 1 will
│ │ │ -                  cause all rows in the image buffer to be unpadded.
│ │ │ +                  (in pixels) of the packed-pixel image
│ │ │ +                  row alignment of the packed-pixel buffer to be returned (must
│ │ │ +      align       be a power of 2.) Setting this parameter to n will cause all
│ │ │ +                  rows in the buffer to be padded to the nearest multiple of n
│ │ │ +                  bytes (1 = unpadded.)
│ │ │        height      pointer to an integer variable that will receive the height
│ │ │ -                  (in pixels) of the uncompressed image
│ │ │ +                  (in pixels) of the packed-pixel image
│ │ │                    pointer to an integer variable that specifies or will receive
│ │ │ -                  the pixel format of the uncompressed image buffer. The
│ │ │ -                  behavior of tjLoadImage() will vary depending on the value of
│ │ │ +                  the pixel format of the packed-pixel buffer. The behavior of
│ │ │ +                  tjLoadImage() will vary depending on the value of
│ │ │                    *pixelFormat passed to the function:
│ │ │ -                      * TJPF_UNKNOWN : The uncompressed image buffer returned
│ │ │ -                        by the function will use the most optimal pixel format
│ │ │ -                        for the file type, and *pixelFormat will contain the ID
│ │ │ -                        of this pixel format upon successful return from the
│ │ │ -                        function.
│ │ │ -      pixelFormat     * TJPF_GRAY : Only PGM files and 8-bit BMP files with a
│ │ │ -                        grayscale colormap can be loaded.
│ │ │ +                      * TJPF_UNKNOWN : The packed-pixel buffer returned by this
│ │ │ +                        function will use the most optimal pixel format for the
│ │ │ +                        file type, and *pixelFormat will contain the ID of that
│ │ │ +                        pixel format upon successful return from this function.
│ │ │ +      pixelFormat     * TJPF_GRAY : Only PGM files and 8-bit-per-pixel BMP
│ │ │ +                        files with a grayscale colormap can be loaded.
│ │ │                        * TJPF_CMYK : The RGB or grayscale pixels stored in the
│ │ │                          file will be converted using a quick & dirty algorithm
│ │ │ -                        that is suitable only for testing purposes (proper
│ │ │ +                        that is suitable only for testing purposes. (Proper
│ │ │                          conversion between CMYK and other formats requires a
│ │ │                          color management system.)
│ │ │ -                      * Other pixel_formats : The uncompressed image buffer
│ │ │ -                        will use the specified pixel format, and pixel format
│ │ │ -                        conversion will be performed if necessary.
│ │ │ +                      * Other pixel_formats : The packed-pixel buffer will use
│ │ │ +                        the specified pixel format, and pixel format conversion
│ │ │ +                        will be performed if necessary.
│ │ │        flags       the bitwise OR of one or more of the flags.
│ │ │    Returns
│ │ │ -      a pointer to a newly-allocated buffer containing the uncompressed image,
│ │ │ +      a pointer to a newly-allocated buffer containing the packed-pixel image,
│ │ │        converted to the chosen pixel format and with the chosen row alignment,
│ │ │        or NULL if an error occurred (see tjGetErrorStr2().) This buffer should
│ │ │        be freed using tjFree().
│ │ │  ***** ◆ tjPlaneHeight() *****
│ │ │  DLLEXPORT int tjPlaneHeight ( int componentID,
│ │ │                                int height,
│ │ │                                int subsamp 
│ │ │ @@ -1464,15 +1473,15 @@
│ │ │                                         )
│ │ │  The size of the buffer (in bytes) required to hold a YUV image plane with the
│ │ │  given parameters.
│ │ │    Parameters
│ │ │        componentID ID number of the image plane (0 = Y, 1 = U/Cb, 2 = V/Cr)
│ │ │        width       width (in pixels) of the YUV image. NOTE: this is the width
│ │ │                    of the whole image, not the plane width.
│ │ │ -      stride      bytes per line in the image plane. Setting this to 0 is the
│ │ │ +      stride      bytes per row in the image plane. Setting this to 0 is the
│ │ │                    equivalent of setting it to the plane width.
│ │ │        height      height (in pixels) of the YUV image. NOTE: this is the height
│ │ │                    of the whole image, not the plane height.
│ │ │        subsamp     level of chrominance subsampling in the image (see
│ │ │                    Chrominance_subsampling_options.)
│ │ │    Returns
│ │ │        the size of the buffer (in bytes) required to hold the YUV image plane,
│ │ │ @@ -1497,34 +1506,35 @@
│ │ │                              unsigned char * buffer,
│ │ │                              int             width,
│ │ │                              int             pitch,
│ │ │                              int             height,
│ │ │                              int             pixelFormat,
│ │ │                              int             flags 
│ │ │                            )
│ │ │ -Save an uncompressed image from memory to disk.
│ │ │ +Save a packed-pixel image from memory to disk.
│ │ │    Parameters
│ │ │ -                  name of a file to which to save the uncompressed image. The
│ │ │ +                  name of a file to which to save the packed-pixel image. The
│ │ │        filename    image will be stored in Windows BMP or PBMPLUS (PPM/PGM)
│ │ │                    format, depending on the file extension.
│ │ │ -      buffer      pointer to an image buffer containing RGB, grayscale, or CMYK
│ │ │ -                  pixels to be saved
│ │ │ -      width       width (in pixels) of the uncompressed image
│ │ │ -                  bytes per line in the image buffer. Setting this parameter to
│ │ │ -      pitch       0 is the equivalent of setting it to width * tjPixelSize
│ │ │ -                  [pixelFormat].
│ │ │ -      height      height (in pixels) of the uncompressed image
│ │ │ -                  pixel format of the image buffer (see Pixel_formats.) If this
│ │ │ -                  parameter is set to TJPF_GRAY, then the image will be stored
│ │ │ -                  in PGM or 8-bit (indexed color) BMP format. Otherwise, the
│ │ │ -      pixelFormat image will be stored in PPM or 24-bit BMP format. If this
│ │ │ -                  parameter is set to TJPF_CMYK, then the CMYK pixels will be
│ │ │ -                  converted to RGB using a quick & dirty algorithm that is
│ │ │ -                  suitable only for testing (proper conversion between CMYK and
│ │ │ -                  other formats requires a color management system.)
│ │ │ +      buffer      pointer to a buffer containing a packed-pixel RGB, grayscale,
│ │ │ +                  or CMYK image to be saved
│ │ │ +      width       width (in pixels) of the packed-pixel image
│ │ │ +                  bytes per row in the packed-pixel image. Setting this
│ │ │ +      pitch       parameter to 0 is the equivalent of setting it to width *
│ │ │ +                  tjPixelSize[pixelFormat].
│ │ │ +      height      height (in pixels) of the packed-pixel image
│ │ │ +                  pixel format of the packed-pixel image (see Pixel_formats.)
│ │ │ +                  If this parameter is set to TJPF_GRAY, then the image will be
│ │ │ +                  stored in PGM or 8-bit-per-pixel (indexed color) BMP format.
│ │ │ +                  Otherwise, the image will be stored in PPM or 24-bit-per-
│ │ │ +      pixelFormat pixel BMP format. If this parameter is set to TJPF_CMYK, then
│ │ │ +                  the CMYK pixels will be converted to RGB using a quick &
│ │ │ +                  dirty algorithm that is suitable only for testing purposes.
│ │ │ +                  (Proper conversion between CMYK and other formats requires a
│ │ │ +                  color management system.)
│ │ │        flags       the bitwise OR of one or more of the flags.
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2().)
│ │ │  ***** ◆ tjTransform() *****
│ │ │  DLLEXPORT int tjTransform ( tjhandle              handle,
│ │ │                              const unsigned char * jpegBuf,
│ │ │                              unsigned long         jpegSize,
│ │ │ @@ -1542,77 +1552,81 @@
│ │ │  requires reading and performing Huffman decoding on all of the coefficients in
│ │ │  the source image, regardless of the size of the destination image. Thus, this
│ │ │  function provides a means of generating multiple transformed images from the
│ │ │  same source or applying multiple transformations simultaneously, in order to
│ │ │  eliminate the need to read the source coefficients multiple times.
│ │ │    Parameters
│ │ │        handle     a handle to a TurboJPEG transformer instance
│ │ │ -      jpegBuf    pointer to a buffer containing the JPEG source image to
│ │ │ +      jpegBuf    pointer to a byte buffer containing the JPEG source image to
│ │ │                   transform
│ │ │        jpegSize   size of the JPEG source image (in bytes)
│ │ │        n          the number of transformed JPEG images to generate
│ │ │ -                 pointer to an array of n image buffers. dstBufs[i] will
│ │ │ -                 receive a JPEG image that has been transformed using the
│ │ │ -                 parameters in transforms[i]. TurboJPEG has the ability to
│ │ │ -                 reallocate the JPEG buffer to accommodate the size of the JPEG
│ │ │ -                 image. Thus, you can choose to:
│ │ │ -                    1. pre-allocate the JPEG buffer with an arbitrary size
│ │ │ -                       using tjAlloc() and let TurboJPEG grow the buffer as
│ │ │ -                       needed,
│ │ │ +                 pointer to an array of n byte buffers. dstBufs[i] will receive
│ │ │ +                 a JPEG image that has been transformed using the parameters in
│ │ │ +                 transforms[i]. TurboJPEG has the ability to reallocate the
│ │ │ +                 JPEG destination buffer to accommodate the size of the
│ │ │ +                 transformed JPEG image. Thus, you can choose to:
│ │ │ +                    1. pre-allocate the JPEG destination buffer with an
│ │ │ +                       arbitrary size using tjAlloc() and let TurboJPEG grow
│ │ │ +                       the buffer as needed,
│ │ │                      2. set dstBufs[i] to NULL to tell TurboJPEG to allocate the
│ │ │                         buffer for you, or
│ │ │                      3. pre-allocate the buffer to a "worst case" size
│ │ │ -      dstBufs          determined by calling tjBufSize() with the transformed
│ │ │ -                       or cropped width and height. Under normal circumstances,
│ │ │ +                       determined by calling tjBufSize() with the transformed
│ │ │ +      dstBufs          or cropped width and height. Under normal circumstances,
│ │ │                         this should ensure that the buffer never has to be re-
│ │ │ -                       allocated (setting TJFLAG_NOREALLOC guarantees that it
│ │ │ +                       allocated. (Setting TJFLAG_NOREALLOC guarantees that it
│ │ │                         won't be.) Note, however, that there are some rare cases
│ │ │                         (such as transforming images with a large amount of
│ │ │ -                       embedded EXIF or ICC profile data) in which the output
│ │ │ -                       image will be larger than the worst-case size, and
│ │ │ -                       TJFLAG_NOREALLOC cannot be used in those cases.
│ │ │ -                 If you choose option 1, dstSizes[i] should be set to the size
│ │ │ -                 of your pre-allocated buffer. In any case, unless you have set
│ │ │ -                 TJFLAG_NOREALLOC, you should always check dstBufs[i] upon
│ │ │ -                 return from this function, as it may have changed.
│ │ │ +                       embedded EXIF or ICC profile data) in which the
│ │ │ +                       transformed JPEG image will be larger than the worst-
│ │ │ +                       case size, and TJFLAG_NOREALLOC cannot be used in those
│ │ │ +                       cases.
│ │ │ +                 If you choose option 1, then dstSizes[i] should be set to the
│ │ │ +                 size of your pre-allocated buffer. In any case, unless you
│ │ │ +                 have set TJFLAG_NOREALLOC, you should always check dstBufs[i]
│ │ │ +                 upon return from this function, as it may have changed.
│ │ │                   pointer to an array of n unsigned long variables that will
│ │ │                   receive the actual sizes (in bytes) of each transformed JPEG
│ │ │        dstSizes   image. If dstBufs[i] points to a pre-allocated buffer, then
│ │ │                   dstSizes[i] should be set to the size of the buffer. Upon
│ │ │ -                 return, dstSizes[i] will contain the size of the JPEG image
│ │ │ -                 (in bytes.)
│ │ │ +                 return, dstSizes[i] will contain the size of the transformed
│ │ │ +                 JPEG image (in bytes.)
│ │ │                   pointer to an array of n tjtransform structures, each of which
│ │ │        transforms specifies the transform parameters and/or cropping region for
│ │ │ -                 the corresponding transformed output image.
│ │ │ +                 the corresponding transformed JPEG image.
│ │ │        flags      the bitwise OR of one or more of the flags
│ │ │    Returns
│ │ │        0 if successful, or -1 if an error occurred (see tjGetErrorStr2() and
│ │ │        tjGetErrorCode().)
│ │ │  ***** Variable Documentation *****
│ │ │  ***** ◆ tjAlphaOffset *****
│ │ │  const int tjAlphaOffset[TJ_NUMPF] static
│ │ │  Alpha offset (in bytes) for a given pixel format.
│ │ │ -This specifies the number of bytes that the Alpha component is offset from the
│ │ │ -start of the pixel. For instance, if a pixel of format TJ_BGRA is stored in
│ │ │ -char pixel[], then the alpha component will be pixel[tjAlphaOffset[TJ_BGRA]].
│ │ │ -This will be -1 if the pixel format does not have an alpha component.
│ │ │ +This specifies the number of bytes that the alpha component is offset from the
│ │ │ +start of the pixel. For instance, if a pixel of format TJPF_BGRA is stored in
│ │ │ +unsigned char pixel[], then the alpha component will be pixel[tjAlphaOffset
│ │ │ +[TJPF_BGRA]]. This will be -1 if the pixel format does not have an alpha
│ │ │ +component.
│ │ │  ***** ◆ tjBlueOffset *****
│ │ │  const int tjBlueOffset[TJ_NUMPF] static
│ │ │  Blue offset (in bytes) for a given pixel format.
│ │ │ -This specifies the number of bytes that the Blue component is offset from the
│ │ │ -start of the pixel. For instance, if a pixel of format TJ_BGRX is stored in
│ │ │ -char pixel[], then the blue component will be pixel[tjBlueOffset[TJ_BGRX]].
│ │ │ -This will be -1 if the pixel format does not have a blue component.
│ │ │ +This specifies the number of bytes that the blue component is offset from the
│ │ │ +start of the pixel. For instance, if a pixel of format TJPF_BGRX is stored in
│ │ │ +unsigned char pixel[], then the blue component will be pixel[tjBlueOffset
│ │ │ +[TJPF_BGRX]]. This will be -1 if the pixel format does not have a blue
│ │ │ +component.
│ │ │  ***** ◆ tjGreenOffset *****
│ │ │  const int tjGreenOffset[TJ_NUMPF] static
│ │ │  Green offset (in bytes) for a given pixel format.
│ │ │  This specifies the number of bytes that the green component is offset from the
│ │ │ -start of the pixel. For instance, if a pixel of format TJ_BGRX is stored in
│ │ │ -char pixel[], then the green component will be pixel[tjGreenOffset[TJ_BGRX]].
│ │ │ -This will be -1 if the pixel format does not have a green component.
│ │ │ +start of the pixel. For instance, if a pixel of format TJPF_BGRX is stored in
│ │ │ +unsigned char pixel[], then the green component will be pixel[tjGreenOffset
│ │ │ +[TJPF_BGRX]]. This will be -1 if the pixel format does not have a green
│ │ │ +component.
│ │ │  ***** ◆ tjMCUHeight *****
│ │ │  const int tjMCUHeight[TJ_NUMSAMP] static
│ │ │  MCU block height (in pixels) for a given level of chrominance subsampling.
│ │ │  MCU block sizes:
│ │ │      * 8x8 for no subsampling or grayscale
│ │ │      * 16x8 for 4:2:2
│ │ │      * 8x16 for 4:4:0
│ │ │ @@ -1630,13 +1644,14 @@
│ │ │  ***** ◆ tjPixelSize *****
│ │ │  const int tjPixelSize[TJ_NUMPF] static
│ │ │  Pixel size (in bytes) for a given pixel format.
│ │ │  ***** ◆ tjRedOffset *****
│ │ │  const int tjRedOffset[TJ_NUMPF] static
│ │ │  Red offset (in bytes) for a given pixel format.
│ │ │  This specifies the number of bytes that the red component is offset from the
│ │ │ -start of the pixel. For instance, if a pixel of format TJ_BGRX is stored in
│ │ │ -char pixel[], then the red component will be pixel[tjRedOffset[TJ_BGRX]]. This
│ │ │ -will be -1 if the pixel format does not have a red component.
│ │ │ +start of the pixel. For instance, if a pixel of format TJPF_BGRX is stored in
│ │ │ +unsigned char pixel[], then the red component will be pixel[tjRedOffset
│ │ │ +[TJPF_BGRX]]. This will be -1 if the pixel format does not have a red
│ │ │ +component.
│ │ │  
│ │ │  ===============================================================================
│ │ │       Generated by [doxygen] 1.8.20
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/index.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/index.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/jquery.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/jquery.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/menu.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/menu.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/menudata.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/menudata.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/modules.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/modules.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_1.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_1.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_2.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_2.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_3.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_3.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_4.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_4.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_5.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_5.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_6.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_6.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_6.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_6.js
│ │┄ Files 1% similar despite different names
│ │ ├── js-beautify {}
│ │ │ @@ -4,32 +4,32 @@
│ │ │      ['tj_5fnumpf_10', ['TJ_NUMPF', ['../group___turbo_j_p_e_g.html#ga7010a4402f54a45ba822ad8675a4655e', 1, 'turbojpeg.h']]],
│ │ │      ['tj_5fnumsamp_11', ['TJ_NUMSAMP', ['../group___turbo_j_p_e_g.html#ga5ef3d169162ce77ce348e292a0b7477c', 1, 'turbojpeg.h']]],
│ │ │      ['tj_5fnumxop_12', ['TJ_NUMXOP', ['../group___turbo_j_p_e_g.html#ga0f6dbd18adf38b7d46ac547f0f4d562c', 1, 'turbojpeg.h']]],
│ │ │      ['tjalloc_13', ['tjAlloc', ['../group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83', 1, 'turbojpeg.h']]],
│ │ │      ['tjalphaoffset_14', ['tjAlphaOffset', ['../group___turbo_j_p_e_g.html#ga5af0ab065feefd526debf1e20c43e837', 1, 'turbojpeg.h']]],
│ │ │      ['tjblueoffset_15', ['tjBlueOffset', ['../group___turbo_j_p_e_g.html#ga84e2e35d3f08025f976ec1ec53693dea', 1, 'turbojpeg.h']]],
│ │ │      ['tjbufsize_16', ['tjBufSize', ['../group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjbufsizeyuv2_17', ['tjBufSizeYUV2', ['../group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjbufsizeyuv2_17', ['tjBufSizeYUV2', ['../group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c', 1, 'turbojpeg.h']]],
│ │ │      ['tjcompress2_18', ['tjCompress2', ['../group___turbo_j_p_e_g.html#gafbdce0112fd78fd38efae841443a9bcf', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjcompressfromyuv_19', ['tjCompressFromYUV', ['../group___turbo_j_p_e_g.html#ga7622a459b79aa1007e005b58783f875b', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjcompressfromyuv_19', ['tjCompressFromYUV', ['../group___turbo_j_p_e_g.html#gab40f5096a72fd7e5bda9d6b58fa37e2e', 1, 'turbojpeg.h']]],
│ │ │      ['tjcompressfromyuvplanes_20', ['tjCompressFromYUVPlanes', ['../group___turbo_j_p_e_g.html#ga29ec5dfbd2d84b8724e951d6fa0d5d9e', 1, 'turbojpeg.h']]],
│ │ │      ['tjcs_21', ['TJCS', ['../group___turbo_j_p_e_g.html#ga4f83ad3368e0e29d1957be0efa7c3720', 1, 'turbojpeg.h']]],
│ │ │      ['tjcs_5fcmyk_22', ['TJCS_CMYK', ['../group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a6c8b636152ac8195b869587db315ee53', 1, 'turbojpeg.h']]],
│ │ │      ['tjcs_5fgray_23', ['TJCS_GRAY', ['../group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720ab3e7d6a87f695e45b81c1b5262b5a50a', 1, 'turbojpeg.h']]],
│ │ │      ['tjcs_5frgb_24', ['TJCS_RGB', ['../group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a677cb7ccb85c4038ac41964a2e09e555', 1, 'turbojpeg.h']]],
│ │ │      ['tjcs_5fycbcr_25', ['TJCS_YCbCr', ['../group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a7389b8f65bb387ffedce3efd0d78ec75', 1, 'turbojpeg.h']]],
│ │ │      ['tjcs_5fycck_26', ['TJCS_YCCK', ['../group___turbo_j_p_e_g.html#gga4f83ad3368e0e29d1957be0efa7c3720a53839e0fe867b76b58d16b0a1a7c598e', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjdecodeyuv_27', ['tjDecodeYUV', ['../group___turbo_j_p_e_g.html#ga70abbf38f77a26fd6da8813bef96f695', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjdecodeyuv_27', ['tjDecodeYUV', ['../group___turbo_j_p_e_g.html#ga97c2cedc1e2bade15a84164c94e503c1', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecodeyuvplanes_28', ['tjDecodeYUVPlanes', ['../group___turbo_j_p_e_g.html#ga10e837c07fa9d25770565b237d3898d9', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecompress2_29', ['tjDecompress2', ['../group___turbo_j_p_e_g.html#gae9eccef8b682a48f43a9117c231ed013', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecompressheader3_30', ['tjDecompressHeader3', ['../group___turbo_j_p_e_g.html#ga0595681096bba7199cc6f3533cb25f77', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjdecompresstoyuv2_31', ['tjDecompressToYUV2', ['../group___turbo_j_p_e_g.html#ga04d1e839ff9a0860dd1475cff78d3364', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjdecompresstoyuv2_31', ['tjDecompressToYUV2', ['../group___turbo_j_p_e_g.html#ga5a3093e325598c17a9f004323af6fafa', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecompresstoyuvplanes_32', ['tjDecompressToYUVPlanes', ['../group___turbo_j_p_e_g.html#gaa59f901a5258ada5bd0185ad59368540', 1, 'turbojpeg.h']]],
│ │ │      ['tjdestroy_33', ['tjDestroy', ['../group___turbo_j_p_e_g.html#ga75f355fa27225ba1a4ee392c852394d2', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjencodeyuv3_34', ['tjEncodeYUV3', ['../group___turbo_j_p_e_g.html#gac519b922cdf446e97d0cdcba513636bf', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjencodeyuv3_34', ['tjEncodeYUV3', ['../group___turbo_j_p_e_g.html#ga5d619e0a02b71e05a8dffb764f6d7a64', 1, 'turbojpeg.h']]],
│ │ │      ['tjencodeyuvplanes_35', ['tjEncodeYUVPlanes', ['../group___turbo_j_p_e_g.html#gae2d04c72457fe7f4d60cf78ab1b1feb1', 1, 'turbojpeg.h']]],
│ │ │      ['tjerr_36', ['TJERR', ['../group___turbo_j_p_e_g.html#gafbc17cfa57d0d5d11fea35ac025950fe', 1, 'turbojpeg.h']]],
│ │ │      ['tjerr_5ffatal_37', ['TJERR_FATAL', ['../group___turbo_j_p_e_g.html#ggafbc17cfa57d0d5d11fea35ac025950feafc9cceeada13122b09e4851e3788039a', 1, 'turbojpeg.h']]],
│ │ │      ['tjerr_5fwarning_38', ['TJERR_WARNING', ['../group___turbo_j_p_e_g.html#ggafbc17cfa57d0d5d11fea35ac025950fea342dd6e2aedb47bb257b4e7568329b59', 1, 'turbojpeg.h']]],
│ │ │      ['tjflag_5faccuratedct_39', ['TJFLAG_ACCURATEDCT', ['../group___turbo_j_p_e_g.html#gacb233cfd722d66d1ccbf48a7de81f0e0', 1, 'turbojpeg.h']]],
│ │ │      ['tjflag_5fbottomup_40', ['TJFLAG_BOTTOMUP', ['../group___turbo_j_p_e_g.html#ga72ecf4ebe6eb702d3c6f5ca27455e1ec', 1, 'turbojpeg.h']]],
│ │ │      ['tjflag_5ffastdct_41', ['TJFLAG_FASTDCT', ['../group___turbo_j_p_e_g.html#gaabce235db80d3f698b27f36cbd453da2', 1, 'turbojpeg.h']]],
│ │ │ @@ -37,15 +37,15 @@
│ │ │      ['tjflag_5flimitscans_43', ['TJFLAG_LIMITSCANS', ['../group___turbo_j_p_e_g.html#ga163e6482dc5096831feef9c79ff3f805', 1, 'turbojpeg.h']]],
│ │ │      ['tjflag_5fnorealloc_44', ['TJFLAG_NOREALLOC', ['../group___turbo_j_p_e_g.html#ga8808d403c68b62aaa58a4c1e58e98963', 1, 'turbojpeg.h']]],
│ │ │      ['tjflag_5fprogressive_45', ['TJFLAG_PROGRESSIVE', ['../group___turbo_j_p_e_g.html#ga43b426750b46190a25d34a67ef76df1b', 1, 'turbojpeg.h']]],
│ │ │      ['tjflag_5fstoponwarning_46', ['TJFLAG_STOPONWARNING', ['../group___turbo_j_p_e_g.html#ga519cfa4ef6c18d9e5b455fdf59306a3a', 1, 'turbojpeg.h']]],
│ │ │      ['tjfree_47', ['tjFree', ['../group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b', 1, 'turbojpeg.h']]],
│ │ │      ['tjgeterrorcode_48', ['tjGetErrorCode', ['../group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410', 1, 'turbojpeg.h']]],
│ │ │      ['tjgeterrorstr2_49', ['tjGetErrorStr2', ['../group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjgetscalingfactors_50', ['tjGetScalingFactors', ['../group___turbo_j_p_e_g.html#gac3854476006b10787bd128f7ede48057', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjgetscalingfactors_50', ['tjGetScalingFactors', ['../group___turbo_j_p_e_g.html#ga193d0977b3b9966d53a6c402e90899b1', 1, 'turbojpeg.h']]],
│ │ │      ['tjgreenoffset_51', ['tjGreenOffset', ['../group___turbo_j_p_e_g.html#ga82d6e35da441112a411da41923c0ba2f', 1, 'turbojpeg.h']]],
│ │ │      ['tjhandle_52', ['tjhandle', ['../group___turbo_j_p_e_g.html#ga758d2634ecb4949de7815cba621f5763', 1, 'turbojpeg.h']]],
│ │ │      ['tjinitcompress_53', ['tjInitCompress', ['../group___turbo_j_p_e_g.html#ga9d63a05fc6d813f4aae06107041a37e8', 1, 'turbojpeg.h']]],
│ │ │      ['tjinitdecompress_54', ['tjInitDecompress', ['../group___turbo_j_p_e_g.html#ga52300eac3f3d9ef4bab303bc244f62d3', 1, 'turbojpeg.h']]],
│ │ │      ['tjinittransform_55', ['tjInitTransform', ['../group___turbo_j_p_e_g.html#ga928beff6ac248ceadf01089fc6b41957', 1, 'turbojpeg.h']]],
│ │ │      ['tjloadimage_56', ['tjLoadImage', ['../group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7', 1, 'turbojpeg.h']]],
│ │ │      ['tjmcuheight_57', ['tjMCUHeight', ['../group___turbo_j_p_e_g.html#gabd247bb9fecb393eca57366feb8327bf', 1, 'turbojpeg.h']]],
│ │ │ @@ -78,16 +78,16 @@
│ │ │      ['tjsamp_5f440_84', ['TJSAMP_440', ['../group___turbo_j_p_e_g.html#gga1d047060ea80bb9820d540bb928e9074accf740e6f3aa6ba20ba922cad13cb974', 1, 'turbojpeg.h']]],
│ │ │      ['tjsamp_5f444_85', ['TJSAMP_444', ['../group___turbo_j_p_e_g.html#gga1d047060ea80bb9820d540bb928e9074afb8da4f44197837bdec0a4f593dacae3', 1, 'turbojpeg.h']]],
│ │ │      ['tjsamp_5fgray_86', ['TJSAMP_GRAY', ['../group___turbo_j_p_e_g.html#gga1d047060ea80bb9820d540bb928e9074a3f1c9504842ddc7a48d0f690754b6248', 1, 'turbojpeg.h']]],
│ │ │      ['tjsaveimage_87', ['tjSaveImage', ['../group___turbo_j_p_e_g.html#ga6f445b22d8933ae4815b3370a538d879', 1, 'turbojpeg.h']]],
│ │ │      ['tjscaled_88', ['TJSCALED', ['../group___turbo_j_p_e_g.html#ga84878bb65404204743aa18cac02781df', 1, 'turbojpeg.h']]],
│ │ │      ['tjscalingfactor_89', ['tjscalingfactor', ['../structtjscalingfactor.html', 1, '']]],
│ │ │      ['tjtransform_90', ['tjtransform', ['../structtjtransform.html', 1, 'tjtransform'],
│ │ │ -        ['../group___turbo_j_p_e_g.html#ga504805ec0161f1b505397ca0118bf8fd', 1, 'tjtransform():&#160;turbojpeg.h'],
│ │ │ -        ['../group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25', 1, 'tjTransform(tjhandle handle, const unsigned char *jpegBuf, unsigned long jpegSize, int n, unsigned char **dstBufs, unsigned long *dstSizes, tjtransform *transforms, int flags):&#160;turbojpeg.h']
│ │ │ +        ['../group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25', 1, 'tjTransform(tjhandle handle, const unsigned char *jpegBuf, unsigned long jpegSize, int n, unsigned char **dstBufs, unsigned long *dstSizes, tjtransform *transforms, int flags):&#160;turbojpeg.h'],
│ │ │ +        ['../group___turbo_j_p_e_g.html#ga504805ec0161f1b505397ca0118bf8fd', 1, 'tjtransform():&#160;turbojpeg.h']
│ │ │      ]],
│ │ │      ['tjxop_91', ['TJXOP', ['../group___turbo_j_p_e_g.html#ga2de531af4e7e6c4f124908376b354866', 1, 'turbojpeg.h']]],
│ │ │      ['tjxop_5fhflip_92', ['TJXOP_HFLIP', ['../group___turbo_j_p_e_g.html#gga2de531af4e7e6c4f124908376b354866aa0df69776caa30f0fa28e26332d311ce', 1, 'turbojpeg.h']]],
│ │ │      ['tjxop_5fnone_93', ['TJXOP_NONE', ['../group___turbo_j_p_e_g.html#gga2de531af4e7e6c4f124908376b354866aad88c0366cd3f7d0eac9d7a3fa1c2c27', 1, 'turbojpeg.h']]],
│ │ │      ['tjxop_5frot180_94', ['TJXOP_ROT180', ['../group___turbo_j_p_e_g.html#gga2de531af4e7e6c4f124908376b354866a140952eb8dd0300accfcc22726d69692', 1, 'turbojpeg.h']]],
│ │ │      ['tjxop_5frot270_95', ['TJXOP_ROT270', ['../group___turbo_j_p_e_g.html#gga2de531af4e7e6c4f124908376b354866a3064ee5dfb7f032df332818587567a08', 1, 'turbojpeg.h']]],
│ │ │      ['tjxop_5frot90_96', ['TJXOP_ROT90', ['../group___turbo_j_p_e_g.html#gga2de531af4e7e6c4f124908376b354866a43b2bbb23bc4bd548422d43fbe9af128', 1, 'turbojpeg.h']]],
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_7.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_7.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_8.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_8.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/all_9.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_9.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/classes_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/classes_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/close.svg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/close.svg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enums_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enums_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enums_0.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enums_0.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enumvalues_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enumvalues_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/enumvalues_0.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/enumvalues_0.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/functions_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/functions_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/functions_0.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/functions_0.js
│ │┄ Files 2% similar despite different names
│ │ ├── js-beautify {}
│ │ │ @@ -1,27 +1,27 @@
│ │ │  var searchData = [
│ │ │      ['tjalloc_114', ['tjAlloc', ['../group___turbo_j_p_e_g.html#gaec627dd4c5f30b7a775a7aea3bec5d83', 1, 'turbojpeg.h']]],
│ │ │      ['tjbufsize_115', ['tjBufSize', ['../group___turbo_j_p_e_g.html#ga67ac12fee79073242cb216e07c9f1f90', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjbufsizeyuv2_116', ['tjBufSizeYUV2', ['../group___turbo_j_p_e_g.html#ga2be2b9969d4df9ecce9b05deed273194', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjbufsizeyuv2_116', ['tjBufSizeYUV2', ['../group___turbo_j_p_e_g.html#ga5e5aac9e8bcf17049279301e2466474c', 1, 'turbojpeg.h']]],
│ │ │      ['tjcompress2_117', ['tjCompress2', ['../group___turbo_j_p_e_g.html#gafbdce0112fd78fd38efae841443a9bcf', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjcompressfromyuv_118', ['tjCompressFromYUV', ['../group___turbo_j_p_e_g.html#ga7622a459b79aa1007e005b58783f875b', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjcompressfromyuv_118', ['tjCompressFromYUV', ['../group___turbo_j_p_e_g.html#gab40f5096a72fd7e5bda9d6b58fa37e2e', 1, 'turbojpeg.h']]],
│ │ │      ['tjcompressfromyuvplanes_119', ['tjCompressFromYUVPlanes', ['../group___turbo_j_p_e_g.html#ga29ec5dfbd2d84b8724e951d6fa0d5d9e', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjdecodeyuv_120', ['tjDecodeYUV', ['../group___turbo_j_p_e_g.html#ga70abbf38f77a26fd6da8813bef96f695', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjdecodeyuv_120', ['tjDecodeYUV', ['../group___turbo_j_p_e_g.html#ga97c2cedc1e2bade15a84164c94e503c1', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecodeyuvplanes_121', ['tjDecodeYUVPlanes', ['../group___turbo_j_p_e_g.html#ga10e837c07fa9d25770565b237d3898d9', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecompress2_122', ['tjDecompress2', ['../group___turbo_j_p_e_g.html#gae9eccef8b682a48f43a9117c231ed013', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecompressheader3_123', ['tjDecompressHeader3', ['../group___turbo_j_p_e_g.html#ga0595681096bba7199cc6f3533cb25f77', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjdecompresstoyuv2_124', ['tjDecompressToYUV2', ['../group___turbo_j_p_e_g.html#ga04d1e839ff9a0860dd1475cff78d3364', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjdecompresstoyuv2_124', ['tjDecompressToYUV2', ['../group___turbo_j_p_e_g.html#ga5a3093e325598c17a9f004323af6fafa', 1, 'turbojpeg.h']]],
│ │ │      ['tjdecompresstoyuvplanes_125', ['tjDecompressToYUVPlanes', ['../group___turbo_j_p_e_g.html#gaa59f901a5258ada5bd0185ad59368540', 1, 'turbojpeg.h']]],
│ │ │      ['tjdestroy_126', ['tjDestroy', ['../group___turbo_j_p_e_g.html#ga75f355fa27225ba1a4ee392c852394d2', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjencodeyuv3_127', ['tjEncodeYUV3', ['../group___turbo_j_p_e_g.html#gac519b922cdf446e97d0cdcba513636bf', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjencodeyuv3_127', ['tjEncodeYUV3', ['../group___turbo_j_p_e_g.html#ga5d619e0a02b71e05a8dffb764f6d7a64', 1, 'turbojpeg.h']]],
│ │ │      ['tjencodeyuvplanes_128', ['tjEncodeYUVPlanes', ['../group___turbo_j_p_e_g.html#gae2d04c72457fe7f4d60cf78ab1b1feb1', 1, 'turbojpeg.h']]],
│ │ │      ['tjfree_129', ['tjFree', ['../group___turbo_j_p_e_g.html#gaea863d2da0cdb609563aabdf9196514b', 1, 'turbojpeg.h']]],
│ │ │      ['tjgeterrorcode_130', ['tjGetErrorCode', ['../group___turbo_j_p_e_g.html#ga414feeffbf860ebd31c745df203de410', 1, 'turbojpeg.h']]],
│ │ │      ['tjgeterrorstr2_131', ['tjGetErrorStr2', ['../group___turbo_j_p_e_g.html#ga1ead8574f9f39fbafc6b497124e7aafa', 1, 'turbojpeg.h']]],
│ │ │ -    ['tjgetscalingfactors_132', ['tjGetScalingFactors', ['../group___turbo_j_p_e_g.html#gac3854476006b10787bd128f7ede48057', 1, 'turbojpeg.h']]],
│ │ │ +    ['tjgetscalingfactors_132', ['tjGetScalingFactors', ['../group___turbo_j_p_e_g.html#ga193d0977b3b9966d53a6c402e90899b1', 1, 'turbojpeg.h']]],
│ │ │      ['tjinitcompress_133', ['tjInitCompress', ['../group___turbo_j_p_e_g.html#ga9d63a05fc6d813f4aae06107041a37e8', 1, 'turbojpeg.h']]],
│ │ │      ['tjinitdecompress_134', ['tjInitDecompress', ['../group___turbo_j_p_e_g.html#ga52300eac3f3d9ef4bab303bc244f62d3', 1, 'turbojpeg.h']]],
│ │ │      ['tjinittransform_135', ['tjInitTransform', ['../group___turbo_j_p_e_g.html#ga928beff6ac248ceadf01089fc6b41957', 1, 'turbojpeg.h']]],
│ │ │      ['tjloadimage_136', ['tjLoadImage', ['../group___turbo_j_p_e_g.html#gaffbd83c375e79f5db4b5c5d8ad4466e7', 1, 'turbojpeg.h']]],
│ │ │      ['tjplaneheight_137', ['tjPlaneHeight', ['../group___turbo_j_p_e_g.html#ga1a209696c6a80748f20e134b3c64789f', 1, 'turbojpeg.h']]],
│ │ │      ['tjplanesizeyuv_138', ['tjPlaneSizeYUV', ['../group___turbo_j_p_e_g.html#gab4ab7b24f6e797d79abaaa670373961d', 1, 'turbojpeg.h']]],
│ │ │      ['tjplanewidth_139', ['tjPlaneWidth', ['../group___turbo_j_p_e_g.html#ga63fb66bb1e36c74008c4634360becbb1', 1, 'turbojpeg.h']]],
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/groups_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/groups_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/mag_sel.svg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/mag_sel.svg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search.css
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search.css
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search_l.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_l.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/search_r.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_r.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/typedefs_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/typedefs_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_0.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_0.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_1.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_1.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_2.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_2.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_3.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_3.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_4.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_4.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_5.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_5.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_6.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_6.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_6.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_6.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_7.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_7.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_8.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_8.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/search/variables_9.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_9.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/structtjregion.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/structtjregion.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/structtjscalingfactor.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/structtjscalingfactor.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/structtjtransform.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/structtjtransform.html
│ │┄ Files 2% similar despite different names
│ │ @@ -80,15 +80,15 @@
│ │  <tr class="memitem:ac324e5e442abec8a961e5bf219db12cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structtjregion.html">tjregion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtjtransform.html#ac324e5e442abec8a961e5bf219db12cf">r</a></td></tr>
│ │  <tr class="memdesc:ac324e5e442abec8a961e5bf219db12cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cropping region.  <a href="structtjtransform.html#ac324e5e442abec8a961e5bf219db12cf">More...</a><br /></td></tr>
│ │  <tr class="separator:ac324e5e442abec8a961e5bf219db12cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:a2525aab4ba6978a1c273f74fef50e498"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtjtransform.html#a2525aab4ba6978a1c273f74fef50e498">op</a></td></tr>
│ │  <tr class="memdesc:a2525aab4ba6978a1c273f74fef50e498"><td class="mdescLeft">&#160;</td><td class="mdescRight">One of the <a class="el" href="group___turbo_j_p_e_g.html#ga2de531af4e7e6c4f124908376b354866">transform operations</a>.  <a href="structtjtransform.html#a2525aab4ba6978a1c273f74fef50e498">More...</a><br /></td></tr>
│ │  <tr class="separator:a2525aab4ba6978a1c273f74fef50e498"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:ac0e74655baa4402209a21e1ae481c8f6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtjtransform.html#ac0e74655baa4402209a21e1ae481c8f6">options</a></td></tr>
│ │ -<tr class="memdesc:ac0e74655baa4402209a21e1ae481c8f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The bitwise OR of one of more of the <a class="el" href="group___turbo_j_p_e_g.html#ga9c771a757fc1294add611906b89ab2d2">transform options</a>.  <a href="structtjtransform.html#ac0e74655baa4402209a21e1ae481c8f6">More...</a><br /></td></tr>
│ │ +<tr class="memdesc:ac0e74655baa4402209a21e1ae481c8f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The bitwise OR of one of more of the <a class="el" href="group___turbo_j_p_e_g.html#ga153b468cfb905d0de61706c838986fe8">transform options</a>.  <a href="structtjtransform.html#ac0e74655baa4402209a21e1ae481c8f6">More...</a><br /></td></tr>
│ │  <tr class="separator:ac0e74655baa4402209a21e1ae481c8f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:a688fe8f1a8ecc12a538d9e561cf338e3"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtjtransform.html#a688fe8f1a8ecc12a538d9e561cf338e3">data</a></td></tr>
│ │  <tr class="memdesc:a688fe8f1a8ecc12a538d9e561cf338e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Arbitrary data that can be accessed within the body of the callback function.  <a href="structtjtransform.html#a688fe8f1a8ecc12a538d9e561cf338e3">More...</a><br /></td></tr>
│ │  <tr class="separator:a688fe8f1a8ecc12a538d9e561cf338e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │  <tr class="memitem:afd7fc262df33f741e120ef4183202ef5"><td class="memItemLeft" align="right" valign="top">int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtjtransform.html#afd7fc262df33f741e120ef4183202ef5">customFilter</a> )(short *coeffs, <a class="el" href="structtjregion.html">tjregion</a> arrayRegion, <a class="el" href="structtjregion.html">tjregion</a> planeRegion, int componentIndex, int transformIndex, struct <a class="el" href="structtjtransform.html">tjtransform</a> *transform)</td></tr>
│ │  <tr class="memdesc:afd7fc262df33f741e120ef4183202ef5"><td class="mdescLeft">&#160;</td><td class="mdescRight">A callback function that can be used to modify the DCT coefficients after they are losslessly transformed but before they are transcoded to a new JPEG image.  <a href="structtjtransform.html#afd7fc262df33f741e120ef4183202ef5">More...</a><br /></td></tr>
│ │  <tr class="separator:afd7fc262df33f741e120ef4183202ef5"><td class="memSeparator" colspan="2">&#160;</td></tr>
│ │ @@ -111,15 +111,15 @@
│ │  <p>A callback function that can be used to modify the DCT coefficients after they are losslessly transformed but before they are transcoded to a new JPEG image. </p>
│ │  <p>This allows for custom filters or other transformations to be applied in the frequency domain.</p>
│ │  <dl class="params"><dt>Parameters</dt><dd>
│ │    <table class="params">
│ │      <tr><td class="paramname">coeffs</td><td>pointer to an array of transformed DCT coefficients. (NOTE: this pointer is not guaranteed to be valid once the callback returns, so applications wishing to hand off the DCT coefficients to another function or library should make a copy of them within the body of the callback.)</td></tr>
│ │      <tr><td class="paramname">arrayRegion</td><td><a class="el" href="structtjregion.html" title="Cropping region.">tjregion</a> structure containing the width and height of the array pointed to by <code>coeffs</code> as well as its offset relative to the component plane. TurboJPEG implementations may choose to split each component plane into multiple DCT coefficient arrays and call the callback function once for each array.</td></tr>
│ │      <tr><td class="paramname">planeRegion</td><td><a class="el" href="structtjregion.html" title="Cropping region.">tjregion</a> structure containing the width and height of the component plane to which <code>coeffs</code> belongs</td></tr>
│ │ -    <tr><td class="paramname">componentID</td><td>ID number of the component plane to which <code>coeffs</code> belongs (Y, Cb, and Cr have, respectively, ID's of 0, 1, and 2 in typical JPEG images.)</td></tr>
│ │ +    <tr><td class="paramname">componentID</td><td>ID number of the component plane to which <code>coeffs</code> belongs. (Y, Cb, and Cr have, respectively, ID's of 0, 1, and 2 in typical JPEG images.)</td></tr>
│ │      <tr><td class="paramname">transformID</td><td>ID number of the transformed image to which <code>coeffs</code> belongs. This is the same as the index of the transform in the <code>transforms</code> array that was passed to <a class="el" href="group___turbo_j_p_e_g.html#ga9cb8abf4cc91881e04a0329b2270be25" title="Losslessly transform a JPEG image into another JPEG image.">tjTransform()</a>.</td></tr>
│ │      <tr><td class="paramname">transform</td><td>a pointer to a <a class="el" href="structtjtransform.html" title="Lossless transform.">tjtransform</a> structure that specifies the parameters and/or cropping region for this transform</td></tr>
│ │    </table>
│ │    </dd>
│ │  </dl>
│ │  <dl class="section return"><dt>Returns</dt><dd>0 if the callback was successful, or -1 if an error occurred. </dd></dl>
│ │  
│ │ @@ -165,15 +165,15 @@
│ │        <table class="memname">
│ │          <tr>
│ │            <td class="memname">int tjtransform::options</td>
│ │          </tr>
│ │        </table>
│ │  </div><div class="memdoc">
│ │  
│ │ -<p>The bitwise OR of one of more of the <a class="el" href="group___turbo_j_p_e_g.html#ga9c771a757fc1294add611906b89ab2d2">transform options</a>. </p>
│ │ +<p>The bitwise OR of one of more of the <a class="el" href="group___turbo_j_p_e_g.html#ga153b468cfb905d0de61706c838986fe8">transform options</a>. </p>
│ │  
│ │  </div>
│ │  </div>
│ │  <a id="ac324e5e442abec8a961e5bf219db12cf"></a>
│ │  <h2 class="memtitle"><span class="permalink"><a href="#ac324e5e442abec8a961e5bf219db12cf">&#9670;&nbsp;</a></span>r</h2>
│ │  
│ │  <div class="memitem">
│ │ ├── html2text {}
│ │ │ @@ -53,15 +53,15 @@
│ │ │                    tjregion structure containing the width and height of the
│ │ │                    array pointed to by coeffs as well as its offset relative to
│ │ │        arrayRegion the component plane. TurboJPEG implementations may choose to
│ │ │                    split each component plane into multiple DCT coefficient
│ │ │                    arrays and call the callback function once for each array.
│ │ │        planeRegion tjregion structure containing the width and height of the
│ │ │                    component plane to which coeffs belongs
│ │ │ -                  ID number of the component plane to which coeffs belongs (Y,
│ │ │ +                  ID number of the component plane to which coeffs belongs. (Y,
│ │ │        componentID Cb, and Cr have, respectively, ID's of 0, 1, and 2 in typical
│ │ │                    JPEG images.)
│ │ │                    ID number of the transformed image to which coeffs belongs.
│ │ │        transformID This is the same as the index of the transform in the
│ │ │                    transforms array that was passed to tjTransform().
│ │ │        transform   a pointer to a tjtransform structure that specifies the
│ │ │                    parameters and/or cropping region for this transform
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/sync_off.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/sync_off.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/sync_on.png
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/sync_on.png
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/doc/html/tabs.css
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/doc/html/tabs.css
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/example.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/example.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/build.sh
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/build.sh
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/cjpeg.cc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/cjpeg.cc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/compress.cc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/compress.cc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/compress_yuv.cc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/compress_yuv.cc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/decompress.cc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/decompress.cc
│ │┄ Files 2% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2021 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2021, 2023 D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -84,15 +84,16 @@
│ │        goto bailout;
│ │  
│ │      if (tjDecompress2(handle, data, size, dstBuf, w, 0, h, pf, flags) == 0) {
│ │        /* Touch all of the output pixels in order to catch uninitialized reads
│ │           when using MemorySanitizer. */
│ │        for (i = 0; i < w * h * tjPixelSize[pf]; i++)
│ │          sum += dstBuf[i];
│ │ -    }
│ │ +    } else
│ │ +      goto bailout;
│ │  
│ │      free(dstBuf);
│ │      dstBuf = NULL;
│ │  
│ │      /* Prevent the code above from being optimized out.  This test should never
│ │         be true, but the compiler doesn't know that. */
│ │      if (sum > 255 * 1048576 * tjPixelSize[pf])
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/decompress_yuv.cc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/decompress_yuv.cc
│ │┄ Files 4% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2021 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2021, 2023 D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -86,15 +86,16 @@
│ │      if (tjDecompressToYUV2(handle, data, size, yuvBuf, w, 1, h, flags) == 0 &&
│ │          tjDecodeYUV(handle, yuvBuf, 1, jpegSubsamp, dstBuf, w, 0, h, pf,
│ │                      flags) == 0) {
│ │        /* Touch all of the output pixels in order to catch uninitialized reads
│ │           when using MemorySanitizer. */
│ │        for (i = 0; i < w * h * tjPixelSize[pf]; i++)
│ │          sum += dstBuf[i];
│ │ -    }
│ │ +    } else
│ │ +      goto bailout;
│ │  
│ │      free(dstBuf);
│ │      dstBuf = NULL;
│ │      free(yuvBuf);
│ │      yuvBuf = NULL;
│ │  
│ │      /* Prevent the code above from being optimized out.  This test should never
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/fuzz/transform.cc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/fuzz/transform.cc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jaricom.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jaricom.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/README
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/README
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/TJBench.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/TJBench.java
│ │┄ Files 3% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  /*
│ │ - * Copyright (C)2009-2014, 2016-2019, 2021 D. R. Commander.
│ │ - *                                         All Rights Reserved.
│ │ + * Copyright (C)2009-2014, 2016-2019, 2021, 2023 D. R. Commander.
│ │ + *                                               All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -33,15 +33,15 @@
│ │  import java.util.*;
│ │  import org.libjpegturbo.turbojpeg.*;
│ │  
│ │  final class TJBench {
│ │  
│ │    private TJBench() {}
│ │  
│ │ -  private static int flags = 0, quiet = 0, pf = TJ.PF_BGR, yuvPad = 1;
│ │ +  private static int flags = 0, quiet = 0, pf = TJ.PF_BGR, yuvAlign = 1;
│ │    private static boolean compOnly, decompOnly, doTile, doYUV, write = true;
│ │  
│ │    static final String[] PIXFORMATSTR = {
│ │      "RGB", "BGR", "RGBX", "BGRX", "XBGR", "XRGB", "GRAY"
│ │    };
│ │  
│ │    static final String[] SUBNAME_LONG = {
│ │ @@ -188,15 +188,15 @@
│ │         attempted to write to it */
│ │      Arrays.fill(dstBuf, (byte)127);
│ │  
│ │      if (doYUV) {
│ │        int width = doTile ? tilew : scaledw;
│ │        int height = doTile ? tileh : scaledh;
│ │  
│ │ -      yuvImage = new YUVImage(width, yuvPad, height, subsamp);
│ │ +      yuvImage = new YUVImage(width, yuvAlign, height, subsamp);
│ │        Arrays.fill(yuvImage.getBuf(), (byte)127);
│ │      }
│ │  
│ │      /* Benchmark */
│ │      iter = -1;
│ │      elapsed = elapsedDecode = 0.0;
│ │      while (true) {
│ │ @@ -208,15 +208,16 @@
│ │            int width = doTile ? Math.min(tilew, w - x) : scaledw;
│ │            int height = doTile ? Math.min(tileh, h - y) : scaledh;
│ │  
│ │            try {
│ │              tjd.setSourceImage(jpegBuf[tile], jpegSize[tile]);
│ │            } catch (TJException e) { handleTJException(e); }
│ │            if (doYUV) {
│ │ -            yuvImage.setBuf(yuvImage.getBuf(), width, yuvPad, height, subsamp);
│ │ +            yuvImage.setBuf(yuvImage.getBuf(), width, yuvAlign, height,
│ │ +                            subsamp);
│ │              try {
│ │                tjd.decompressToYUV(yuvImage, flags);
│ │              } catch (TJException e) { handleTJException(e); }
│ │              double startDecode = getTime();
│ │              tjd.setSourceImage(yuvImage);
│ │              try {
│ │                tjd.decompress(dstBuf, x, y, width, pitch, height, pf, flags);
│ │ @@ -368,15 +369,15 @@
│ │                            SUBNAME_LONG[subsamp], jpegQual);
│ │        for (i = 0; i < h; i++)
│ │          System.arraycopy(srcBuf, w * ps * i, tmpBuf, pitch * i, w * ps);
│ │        tjc.setJPEGQuality(jpegQual);
│ │        tjc.setSubsamp(subsamp);
│ │  
│ │        if (doYUV) {
│ │ -        yuvImage = new YUVImage(tilew, yuvPad, tileh, subsamp);
│ │ +        yuvImage = new YUVImage(tilew, yuvAlign, tileh, subsamp);
│ │          Arrays.fill(yuvImage.getBuf(), (byte)127);
│ │        }
│ │  
│ │        /* Benchmark */
│ │        iter = -1;
│ │        elapsed = elapsedEncode = 0.0;
│ │        while (true) {
│ │ @@ -389,15 +390,15 @@
│ │              int width = Math.min(tilew, w - x);
│ │              int height = Math.min(tileh, h - y);
│ │  
│ │              tjc.setSourceImage(srcBuf, x, y, width, pitch, height, pf);
│ │              if (doYUV) {
│ │                double startEncode = getTime();
│ │  
│ │ -              yuvImage.setBuf(yuvImage.getBuf(), width, yuvPad, height,
│ │ +              yuvImage.setBuf(yuvImage.getBuf(), width, yuvAlign, height,
│ │                                subsamp);
│ │                tjc.encodeYUV(yuvImage, flags);
│ │                if (iter >= 0)
│ │                  elapsedEncode += getTime() - startEncode;
│ │                tjc.setSourceImage(yuvImage);
│ │              }
│ │              tjc.compress(jpegBuf[tile], flags);
│ │ @@ -520,15 +521,15 @@
│ │      w = tjt.getWidth();
│ │      h = tjt.getHeight();
│ │      subsamp = tjt.getSubsamp();
│ │      cs = tjt.getColorspace();
│ │  
│ │      if (quiet == 1) {
│ │        System.out.println("All performance values in Mpixels/sec\n");
│ │ -      System.out.format("Bitmap     JPEG   JPEG     %s  %s   Xform   Comp    Decomp  ",
│ │ +      System.out.format("Pixel      JPEG   JPEG     %s  %s   Xform   Comp    Decomp  ",
│ │                          (doTile ? "Tile " : "Image"),
│ │                          (doTile ? "Tile " : "Image"));
│ │        if (doYUV)
│ │          System.out.print("Decode");
│ │        System.out.print("\n");
│ │        System.out.print("Format     CS     Subsamp  Width  Height  Perf    Ratio   Perf    ");
│ │        if (doYUV)
│ │ @@ -691,42 +692,38 @@
│ │    static void usage() throws Exception {
│ │      int i;
│ │      TJScalingFactor[] scalingFactors = TJ.getScalingFactors();
│ │      int nsf = scalingFactors.length;
│ │      String className = new TJBench().getClass().getName();
│ │  
│ │      System.out.println("\nUSAGE: java " + className);
│ │ -    System.out.println("       <Inputfile (BMP)> <Quality> [options]\n");
│ │ +    System.out.println("       <Inputimage (BMP)> <Quality> [options]\n");
│ │      System.out.println("       java " + className);
│ │ -    System.out.println("       <Inputfile (JPG)> [options]\n");
│ │ +    System.out.println("       <Inputimage (JPG)> [options]\n");
│ │      System.out.println("Options:\n");
│ │ -    System.out.println("-alloc = Dynamically allocate JPEG image buffers");
│ │ -    System.out.println("-bottomup = Test bottom-up compression/decompression");
│ │ -    System.out.println("-tile = Test performance of the codec when the image is encoded as separate");
│ │ -    System.out.println("     tiles of varying sizes.");
│ │ +    System.out.println("-bottomup = Use bottom-up row order for packed-pixel source/destination buffers");
│ │ +    System.out.println("-tile = Compress/transform the input image into separate JPEG tiles of varying");
│ │ +    System.out.println("     sizes (useful for measuring JPEG overhead)");
│ │      System.out.println("-rgb, -bgr, -rgbx, -bgrx, -xbgr, -xrgb =");
│ │ -    System.out.println("     Test the specified color conversion path in the codec (default = BGR)");
│ │ -    System.out.println("-fastupsample = Use the fastest chrominance upsampling algorithm available in");
│ │ -    System.out.println("     the underlying codec");
│ │ -    System.out.println("-fastdct = Use the fastest DCT/IDCT algorithms available in the underlying");
│ │ -    System.out.println("     codec");
│ │ -    System.out.println("-accuratedct = Use the most accurate DCT/IDCT algorithms available in the");
│ │ -    System.out.println("     underlying codec");
│ │ +    System.out.println("     Use the specified pixel format for packed-pixel source/destination buffers");
│ │ +    System.out.println("     [default = BGR]");
│ │ +    System.out.println("-fastupsample = Use the fastest chrominance upsampling algorithm available");
│ │ +    System.out.println("-fastdct = Use the fastest DCT/IDCT algorithm available");
│ │ +    System.out.println("-accuratedct = Use the most accurate DCT/IDCT algorithm available");
│ │      System.out.println("-progressive = Use progressive entropy coding in JPEG images generated by");
│ │ -    System.out.println("     compression and transform operations.");
│ │ -    System.out.println("-subsamp <s> = When testing JPEG compression, this option specifies the level");
│ │ -    System.out.println("     of chrominance subsampling to use (<s> = 444, 422, 440, 420, 411, or");
│ │ -    System.out.println("     GRAY).  The default is to test Grayscale, 4:2:0, 4:2:2, and 4:4:4 in");
│ │ -    System.out.println("     sequence.");
│ │ +    System.out.println("     compression and transform operations");
│ │ +    System.out.println("-subsamp <s> = When compressing, use the specified level of chrominance");
│ │ +    System.out.println("     subsampling (<s> = 444, 422, 440, 420, 411, or GRAY) [default = test");
│ │ +    System.out.println("     Grayscale, 4:2:0, 4:2:2, and 4:4:4 in sequence]");
│ │      System.out.println("-quiet = Output results in tabular rather than verbose format");
│ │ -    System.out.println("-yuv = Test YUV encoding/decoding functions");
│ │ -    System.out.println("-yuvpad <p> = If testing YUV encoding/decoding, this specifies the number of");
│ │ -    System.out.println("     bytes to which each row of each plane in the intermediate YUV image is");
│ │ -    System.out.println("     padded (default = 1)");
│ │ -    System.out.println("-scale M/N = Scale down the width/height of the decompressed JPEG image by a");
│ │ +    System.out.println("-yuv = Compress from/decompress to intermediate planar YUV images");
│ │ +    System.out.println("-yuvpad <p> = The number of bytes by which each row in each plane of an");
│ │ +    System.out.println("     intermediate YUV image is evenly divisible (must be a power of 2)");
│ │ +    System.out.println("     [default = 1]");
│ │ +    System.out.println("-scale M/N = When decompressing, scale the width/height of the JPEG image by a");
│ │      System.out.print("     factor of M/N (M/N = ");
│ │      for (i = 0; i < nsf; i++) {
│ │        System.out.format("%d/%d", scalingFactors[i].getNum(),
│ │                          scalingFactors[i].getDenom());
│ │        if (nsf == 2 && i != nsf - 1)
│ │          System.out.print(" or ");
│ │        else if (nsf > 2) {
│ │ @@ -736,32 +733,32 @@
│ │            System.out.print("or ");
│ │        }
│ │        if (i % 8 == 0 && i != 0)
│ │          System.out.print("\n     ");
│ │      }
│ │      System.out.println(")");
│ │      System.out.println("-hflip, -vflip, -transpose, -transverse, -rot90, -rot180, -rot270 =");
│ │ -    System.out.println("     Perform the corresponding lossless transform prior to");
│ │ -    System.out.println("     decompression (these options are mutually exclusive)");
│ │ -    System.out.println("-grayscale = Perform lossless grayscale conversion prior to decompression");
│ │ -    System.out.println("     test (can be combined with the other transforms above)");
│ │ +    System.out.println("     Perform the specified lossless transform operation on the input image");
│ │ +    System.out.println("     prior to decompression (these operations are mutually exclusive)");
│ │ +    System.out.println("-grayscale = Transform the input image into a grayscale JPEG image prior to");
│ │ +    System.out.println("     decompression (can be combined with the other transform operations above)");
│ │      System.out.println("-copynone = Do not copy any extra markers (including EXIF and ICC profile data)");
│ │ -    System.out.println("     when transforming the image.");
│ │ -    System.out.println("-benchtime <t> = Run each benchmark for at least <t> seconds (default = 5.0)");
│ │ -    System.out.println("-warmup <t> = Run each benchmark for <t> seconds (default = 1.0) prior to");
│ │ +    System.out.println("     when transforming the input image");
│ │ +    System.out.println("-benchtime <t> = Run each benchmark for at least <t> seconds [default = 5.0]");
│ │ +    System.out.println("-warmup <t> = Run each benchmark for <t> seconds [default = 1.0] prior to");
│ │      System.out.println("     starting the timer, in order to prime the caches and thus improve the");
│ │ -    System.out.println("     consistency of the results.");
│ │ +    System.out.println("     consistency of the benchmark results");
│ │      System.out.println("-componly = Stop after running compression tests.  Do not test decompression.");
│ │ -    System.out.println("-nowrite = Do not write reference or output images (improves consistency");
│ │ -    System.out.println("     of performance measurements.)");
│ │ +    System.out.println("-nowrite = Do not write reference or output images (improves consistency of");
│ │ +    System.out.println("     benchmark results)");
│ │      System.out.println("-limitscans = Refuse to decompress or transform progressive JPEG images that");
│ │      System.out.println("     have an unreasonably large number of scans");
│ │      System.out.println("-stoponwarning = Immediately discontinue the current");
│ │ -    System.out.println("     compression/decompression/transform operation if the underlying codec");
│ │ -    System.out.println("     throws a warning (non-fatal error)\n");
│ │ +    System.out.println("     compression/decompression/transform operation if a warning (non-fatal");
│ │ +    System.out.println("     error) occurs\n");
│ │      System.out.println("NOTE:  If the quality is specified as a range (e.g. 90-100), a separate");
│ │      System.out.println("test will be performed for all quality values in the range.\n");
│ │      System.exit(1);
│ │    }
│ │  
│ │  
│ │    public static void main(String[] argv) {
│ │ @@ -781,45 +778,46 @@
│ │  
│ │        System.out.println("");
│ │  
│ │        if (!decompOnly) {
│ │          minArg = 2;
│ │          if (argv.length < minArg)
│ │            usage();
│ │ +        String[] quals = argv[1].split("-", 2);
│ │          try {
│ │ -          minQual = Integer.parseInt(argv[1]);
│ │ +          minQual = Integer.parseInt(quals[0]);
│ │          } catch (NumberFormatException e) {}
│ │          if (minQual < 1 || minQual > 100)
│ │            throw new Exception("Quality must be between 1 and 100.");
│ │ -        int dashIndex = argv[1].indexOf('-');
│ │ -        if (dashIndex > 0 && argv[1].length() > dashIndex + 1) {
│ │ +        if (quals.length > 1) {
│ │            try {
│ │ -            maxQual = Integer.parseInt(argv[1].substring(dashIndex + 1));
│ │ +            maxQual = Integer.parseInt(quals[1]);
│ │            } catch (NumberFormatException e) {}
│ │          }
│ │ -        if (maxQual < 1 || maxQual > 100)
│ │ +        if (maxQual < 1 || maxQual > 100 || maxQual < minQual)
│ │            maxQual = minQual;
│ │        }
│ │  
│ │        if (argv.length > minArg) {
│ │          for (int i = minArg; i < argv.length; i++) {
│ │            if (argv[i].equalsIgnoreCase("-tile")) {
│ │              doTile = true;  xformOpt |= TJTransform.OPT_CROP;
│ │            } else if (argv[i].equalsIgnoreCase("-fastupsample")) {
│ │ -            System.out.println("Using fast upsampling code\n");
│ │ +            System.out.println("Using fastest upsampling algorithm\n");
│ │              flags |= TJ.FLAG_FASTUPSAMPLE;
│ │            } else if (argv[i].equalsIgnoreCase("-fastdct")) {
│ │              System.out.println("Using fastest DCT/IDCT algorithm\n");
│ │              flags |= TJ.FLAG_FASTDCT;
│ │            } else if (argv[i].equalsIgnoreCase("-accuratedct")) {
│ │              System.out.println("Using most accurate DCT/IDCT algorithm\n");
│ │              flags |= TJ.FLAG_ACCURATEDCT;
│ │            } else if (argv[i].equalsIgnoreCase("-progressive")) {
│ │              System.out.println("Using progressive entropy coding\n");
│ │              flags |= TJ.FLAG_PROGRESSIVE;
│ │ +            xformOpt |= TJTransform.OPT_PROGRESSIVE;
│ │            } else if (argv[i].equalsIgnoreCase("-rgb"))
│ │              pf = TJ.PF_RGB;
│ │            else if (argv[i].equalsIgnoreCase("-rgbx"))
│ │              pf = TJ.PF_RGBX;
│ │            else if (argv[i].equalsIgnoreCase("-bgr"))
│ │              pf = TJ.PF_BGR;
│ │            else if (argv[i].equalsIgnoreCase("-bgrx"))
│ │ @@ -898,25 +896,27 @@
│ │              } catch (NumberFormatException e) {}
│ │              if (temp >= 0.0) {
│ │                warmup = temp;
│ │                System.out.format("Warmup time = %.1f seconds\n\n", warmup);
│ │              } else
│ │                usage();
│ │            } else if (argv[i].equalsIgnoreCase("-yuv")) {
│ │ -            System.out.println("Testing YUV planar encoding/decoding\n");
│ │ +            System.out.println("Testing planar YUV encoding/decoding\n");
│ │              doYUV = true;
│ │            } else if (argv[i].equalsIgnoreCase("-yuvpad") &&
│ │                       i < argv.length - 1) {
│ │              int temp = 0;
│ │  
│ │              try {
│ │                temp = Integer.parseInt(argv[++i]);
│ │              } catch (NumberFormatException e) {}
│ │ -            if (temp >= 1)
│ │ -              yuvPad = temp;
│ │ +            if (temp >= 1 && (temp & (temp - 1)) == 0)
│ │ +              yuvAlign = temp;
│ │ +            else
│ │ +              usage();
│ │            } else if (argv[i].equalsIgnoreCase("-subsamp") &&
│ │                       i < argv.length - 1) {
│ │              i++;
│ │              if (argv[i].toUpperCase().startsWith("G"))
│ │                subsamp = TJ.SAMP_GRAY;
│ │              else if (argv[i].equals("444"))
│ │                subsamp = TJ.SAMP_444;
│ │ @@ -924,14 +924,16 @@
│ │                subsamp = TJ.SAMP_422;
│ │              else if (argv[i].equals("440"))
│ │                subsamp = TJ.SAMP_440;
│ │              else if (argv[i].equals("420"))
│ │                subsamp = TJ.SAMP_420;
│ │              else if (argv[i].equals("411"))
│ │                subsamp = TJ.SAMP_411;
│ │ +            else
│ │ +              usage();
│ │            } else if (argv[i].equalsIgnoreCase("-componly"))
│ │              compOnly = true;
│ │            else if (argv[i].equalsIgnoreCase("-nowrite"))
│ │              write = false;
│ │            else if (argv[i].equalsIgnoreCase("-limitscans"))
│ │              flags |= TJ.FLAG_LIMITSCANS;
│ │            else if (argv[i].equalsIgnoreCase("-stoponwarning"))
│ │ @@ -941,31 +943,32 @@
│ │        }
│ │  
│ │        if (sf == null)
│ │          sf = new TJScalingFactor(1, 1);
│ │  
│ │        if ((sf.getNum() != 1 || sf.getDenom() != 1) && doTile) {
│ │          System.out.println("Disabling tiled compression/decompression tests, because those tests do not");
│ │ -        System.out.println("work when scaled decompression is enabled.");
│ │ +        System.out.println("work when scaled decompression is enabled.\n");
│ │          doTile = false;
│ │ +        xformOpt &= (~TJTransform.OPT_CROP);
│ │        }
│ │  
│ │        if (!decompOnly) {
│ │          int[] width = new int[1], height = new int[1];
│ │  
│ │          srcBuf = loadImage(argv[0], width, height, pf);
│ │          w = width[0];  h = height[0];
│ │          int index = -1;
│ │          if ((index = argv[0].lastIndexOf('.')) >= 0)
│ │            argv[0] = argv[0].substring(0, index);
│ │        }
│ │  
│ │        if (quiet == 1 && !decompOnly) {
│ │          System.out.println("All performance values in Mpixels/sec\n");
│ │ -        System.out.format("Bitmap     JPEG     JPEG  %s  %s   ",
│ │ +        System.out.format("Pixel      JPEG     JPEG  %s  %s   ",
│ │                            (doTile ? "Tile " : "Image"),
│ │                            (doTile ? "Tile " : "Image"));
│ │          if (doYUV)
│ │            System.out.print("Encode  ");
│ │          System.out.print("Comp    Comp    Decomp  ");
│ │          if (doYUV)
│ │            System.out.print("Decode");
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/TJExample.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/TJExample.java
│ │┄ Files 6% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  /*
│ │ - * Copyright (C)2011-2012, 2014-2015, 2017-2018 D. R. Commander.
│ │ - *                                              All Rights Reserved.
│ │ + * Copyright (C)2011-2012, 2014-2015, 2017-2018, 2023 D. R. Commander.
│ │ + *                                                    All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -132,22 +132,19 @@
│ │  
│ │      System.out.println("General Options");
│ │      System.out.println("---------------\n");
│ │  
│ │      System.out.println("-display = Display output image (Output filename need not be specified in this");
│ │      System.out.println("     case.)\n");
│ │  
│ │ -    System.out.println("-fastupsample = Use the fastest chrominance upsampling algorithm available in");
│ │ -    System.out.println("     the underlying codec.\n");
│ │ +    System.out.println("-fastupsample = Use the fastest chrominance upsampling algorithm available\n");
│ │  
│ │ -    System.out.println("-fastdct = Use the fastest DCT/IDCT algorithms available in the underlying");
│ │ -    System.out.println("     codec.\n");
│ │ +    System.out.println("-fastdct = Use the fastest DCT/IDCT algorithm available\n");
│ │  
│ │ -    System.out.println("-accuratedct = Use the most accurate DCT/IDCT algorithms available in the");
│ │ -    System.out.println("     underlying codec.\n");
│ │ +    System.out.println("-accuratedct = Use the most accurate DCT/IDCT algorithm available\n");
│ │  
│ │      System.exit(1);
│ │    }
│ │  
│ │  
│ │    public static void main(String[] argv) {
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/TJUnitTest.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/TJUnitTest.java
│ │┄ Files 4% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2011-2018 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2011-2018, 2023 D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -44,18 +44,18 @@
│ │  
│ │    static final String CLASS_NAME =
│ │      new TJUnitTest().getClass().getName();
│ │  
│ │    static void usage() {
│ │      System.out.println("\nUSAGE: java " + CLASS_NAME + " [options]\n");
│ │      System.out.println("Options:");
│ │ -    System.out.println("-yuv = test YUV encoding/decoding support");
│ │ -    System.out.println("-noyuvpad = do not pad each line of each Y, U, and V plane to the nearest");
│ │ -    System.out.println("            4-byte boundary");
│ │ -    System.out.println("-bi = test BufferedImage support\n");
│ │ +    System.out.println("-yuv = test YUV encoding/compression/decompression/decoding");
│ │ +    System.out.println("-noyuvpad = do not pad each row in each Y, U, and V plane to the nearest");
│ │ +    System.out.println("            multiple of 4 bytes");
│ │ +    System.out.println("-bi = test BufferedImage I/O\n");
│ │      System.exit(1);
│ │    }
│ │  
│ │    static final String[] SUBNAME_LONG = {
│ │      "4:4:4", "4:2:2", "4:2:0", "GRAY", "4:4:0", "4:1:1"
│ │    };
│ │    static final String[] SUBNAME = {
│ │ @@ -88,15 +88,15 @@
│ │      BufferedImage.TYPE_BYTE_GRAY
│ │    };
│ │    static final int[] FORMATS_RGB = {
│ │      TJ.PF_RGB
│ │    };
│ │  
│ │    private static boolean doYUV = false;
│ │ -  private static int pad = 4;
│ │ +  private static int yuvAlign = 4;
│ │    private static boolean bi = false;
│ │  
│ │    private static int exitStatus = 0;
│ │  
│ │    static int biTypePF(int biType) {
│ │      ByteOrder byteOrder = ByteOrder.nativeOrder();
│ │      switch (biType) {
│ │ @@ -528,15 +528,15 @@
│ │  
│ │    static int checkBufYUV(byte[] buf, int size, int w, int h, int subsamp,
│ │                           TJScalingFactor sf) throws Exception {
│ │      int row, col;
│ │      int hsf = TJ.getMCUWidth(subsamp) / 8, vsf = TJ.getMCUHeight(subsamp) / 8;
│ │      int pw = pad(w, hsf), ph = pad(h, vsf);
│ │      int cw = pw / hsf, ch = ph / vsf;
│ │ -    int ypitch = pad(pw, pad), uvpitch = pad(cw, pad);
│ │ +    int ypitch = pad(pw, yuvAlign), uvpitch = pad(cw, yuvAlign);
│ │      int retval = 1;
│ │      int correctsize = ypitch * ph +
│ │                        (subsamp == TJ.SAMP_GRAY ? 0 : uvpitch * ch * 2);
│ │      int halfway = 16 * sf.getNum() / sf.getDenom();
│ │      int blockSize = 8 * sf.getNum() / sf.getDenom();
│ │  
│ │      try {
│ │ @@ -664,15 +664,15 @@
│ │      Arrays.fill(dstBuf, (byte)0);
│ │  
│ │      tjc.setSubsamp(subsamp);
│ │      tjc.setJPEGQuality(jpegQual);
│ │      if (doYUV) {
│ │        System.out.format("%s %s -> YUV %s ... ", pfStrLong, buStrLong,
│ │                          SUBNAME_LONG[subsamp]);
│ │ -      YUVImage yuvImage = tjc.encodeYUV(pad, flags);
│ │ +      YUVImage yuvImage = tjc.encodeYUV(yuvAlign, flags);
│ │        if (checkBufYUV(yuvImage.getBuf(), yuvImage.getSize(), w, h, subsamp,
│ │                        new TJScalingFactor(1, 1)) == 1)
│ │          System.out.print("Passed.\n");
│ │        else {
│ │          System.out.print("FAILED!\n");
│ │          exitStatus = -1;
│ │        }
│ │ @@ -729,16 +729,16 @@
│ │        throw new Exception("Scaled size mismatch");
│ │  
│ │      if (doYUV) {
│ │        System.out.format("JPEG -> YUV %s ", SUBNAME_LONG[subsamp]);
│ │        if (!sf.isOne())
│ │          System.out.format("%d/%d ... ", sf.getNum(), sf.getDenom());
│ │        else System.out.print("... ");
│ │ -      YUVImage yuvImage = tjd.decompressToYUV(scaledWidth, pad, scaledHeight,
│ │ -                                              flags);
│ │ +      YUVImage yuvImage = tjd.decompressToYUV(scaledWidth, yuvAlign,
│ │ +                                              scaledHeight, flags);
│ │        if (checkBufYUV(yuvImage.getBuf(), yuvImage.getSize(), scaledWidth,
│ │                        scaledHeight, subsamp, sf) == 1)
│ │          System.out.print("Passed.\n");
│ │        else {
│ │          System.out.print("FAILED!\n");  exitStatus = -1;
│ │        }
│ │  
│ │ @@ -833,14 +833,63 @@
│ │        if (tjd != null) tjd.close();
│ │        throw e;
│ │      }
│ │      if (tjc != null) tjc.close();
│ │      if (tjd != null) tjd.close();
│ │    }
│ │  
│ │ +  static void overflowTest() throws Exception {
│ │ +    /* Ensure that the various buffer size methods don't overflow */
│ │ +    int size = 0;
│ │ +    boolean exception = false;
│ │ +
│ │ +    try {
│ │ +      exception = false;
│ │ +      size = TJ.bufSize(18919, 18919, TJ.SAMP_444);
│ │ +    } catch (Exception e) { exception = true; }
│ │ +    if (!exception || size != 0)
│ │ +      throw new Exception("TJ.bufSize() overflow");
│ │ +    try {
│ │ +      exception = false;
│ │ +      size = TJ.bufSizeYUV(26755, 1, 26755, TJ.SAMP_444);
│ │ +    } catch (Exception e) { exception = true; }
│ │ +    if (!exception || size != 0)
│ │ +      throw new Exception("TJ.bufSizeYUV() overflow");
│ │ +    try {
│ │ +      exception = false;
│ │ +      size = TJ.bufSizeYUV(26754, 3, 26754, TJ.SAMP_444);
│ │ +    } catch (Exception e) { exception = true; }
│ │ +    if (!exception || size != 0)
│ │ +      throw new Exception("TJ.bufSizeYUV() overflow");
│ │ +    try {
│ │ +      exception = false;
│ │ +      size = TJ.bufSizeYUV(26754, -1, 26754, TJ.SAMP_444);
│ │ +    } catch (Exception e) { exception = true; }
│ │ +    if (!exception || size != 0)
│ │ +      throw new Exception("TJ.bufSizeYUV() overflow");
│ │ +    try {
│ │ +      exception = false;
│ │ +      size = TJ.planeSizeYUV(0, 46341, 0, 46341, TJ.SAMP_444);
│ │ +    } catch (Exception e) { exception = true; }
│ │ +    if (!exception || size != 0)
│ │ +      throw new Exception("TJ.planeSizeYUV() overflow");
│ │ +    try {
│ │ +      exception = false;
│ │ +      size = TJ.planeWidth(0, Integer.MAX_VALUE, TJ.SAMP_420);
│ │ +    } catch (Exception e) { exception = true; }
│ │ +    if (!exception || size != 0)
│ │ +      throw new Exception("TJ.planeWidth() overflow");
│ │ +    try {
│ │ +      exception = false;
│ │ +      size = TJ.planeHeight(0, Integer.MAX_VALUE, TJ.SAMP_420);
│ │ +    } catch (Exception e) { exception = true; }
│ │ +    if (!exception || size != 0)
│ │ +      throw new Exception("TJ.planeHeight() overflow");
│ │ +  }
│ │ +
│ │    static void bufSizeTest() throws Exception {
│ │      int w, h, i, subsamp;
│ │      byte[] srcBuf, dstBuf = null;
│ │      YUVImage dstImage = null;
│ │      TJCompressor tjc = null;
│ │      Random r = new Random();
│ │  
│ │ @@ -851,15 +900,15 @@
│ │          for (w = 1; w < 48; w++) {
│ │            int maxh = (w == 1) ? 2048 : 48;
│ │            for (h = 1; h < maxh; h++) {
│ │              if (h % 100 == 0)
│ │                System.out.format("%04d x %04d\b\b\b\b\b\b\b\b\b\b\b", w, h);
│ │              srcBuf = new byte[w * h * 4];
│ │              if (doYUV)
│ │ -              dstImage = new YUVImage(w, pad, h, subsamp);
│ │ +              dstImage = new YUVImage(w, yuvAlign, h, subsamp);
│ │              else
│ │                dstBuf = new byte[TJ.bufSize(w, h, subsamp)];
│ │              for (i = 0; i < w * h * 4; i++) {
│ │                srcBuf[i] = (byte)(r.nextInt(2) * 255);
│ │              }
│ │              tjc.setSourceImage(srcBuf, 0, 0, w, 0, h, TJ.PF_BGRX);
│ │              tjc.setSubsamp(subsamp);
│ │ @@ -867,15 +916,15 @@
│ │              if (doYUV)
│ │                tjc.encodeYUV(dstImage, 0);
│ │              else
│ │                tjc.compress(dstBuf, 0);
│ │  
│ │              srcBuf = new byte[h * w * 4];
│ │              if (doYUV)
│ │ -              dstImage = new YUVImage(h, pad, w, subsamp);
│ │ +              dstImage = new YUVImage(h, yuvAlign, w, subsamp);
│ │              else
│ │                dstBuf = new byte[TJ.bufSize(h, w, subsamp)];
│ │              for (i = 0; i < h * w * 4; i++) {
│ │                srcBuf[i] = (byte)(r.nextInt(2) * 255);
│ │              }
│ │              tjc.setSourceImage(srcBuf, 0, 0, h, 0, w, TJ.PF_BGRX);
│ │              if (doYUV)
│ │ @@ -899,23 +948,24 @@
│ │    public static void main(String[] argv) {
│ │      try {
│ │        String testName = "javatest";
│ │        for (int i = 0; i < argv.length; i++) {
│ │          if (argv[i].equalsIgnoreCase("-yuv"))
│ │            doYUV = true;
│ │          else if (argv[i].equalsIgnoreCase("-noyuvpad"))
│ │ -          pad = 1;
│ │ +          yuvAlign = 1;
│ │          else if (argv[i].equalsIgnoreCase("-bi")) {
│ │            bi = true;
│ │            testName = "javabitest";
│ │          } else
│ │            usage();
│ │        }
│ │        if (doYUV)
│ │          FORMATS_4BYTE[4] = -1;
│ │ +      overflowTest();
│ │        doTest(35, 39, bi ? FORMATS_3BYTEBI : FORMATS_3BYTE, TJ.SAMP_444,
│ │               testName);
│ │        doTest(39, 41, bi ? FORMATS_4BYTEBI : FORMATS_4BYTE, TJ.SAMP_444,
│ │               testName);
│ │        doTest(41, 35, bi ? FORMATS_3BYTEBI : FORMATS_3BYTE, TJ.SAMP_422,
│ │               testName);
│ │        doTest(35, 39, bi ? FORMATS_4BYTEBI : FORMATS_4BYTE, TJ.SAMP_422,
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/allclasses-frame.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/allclasses-frame.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/allclasses-noframe.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/allclasses-noframe.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/constant-values.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/constant-values.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/deprecated-list.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/deprecated-list.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/help-doc.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/help-doc.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/index-all.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/index-all.html
│ │┄ Files 0% similar despite different names
│ │ @@ -70,16 +70,17 @@
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#bufSize(int,%20int,%20int)">bufSize(int, int, int)</a></span> - Static method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the maximum size of the buffer (in bytes) required to hold a JPEG
│ │   image with the given width, height, and level of chrominance subsampling.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)">bufSizeYUV(int, int, int, int)</a></span> - Static method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │ -<div class="block">Returns the size of the buffer (in bytes) required to hold a YUV planar
│ │ - image with the given width, height, and level of chrominance subsampling.</div>
│ │ +<div class="block">Returns the size of the buffer (in bytes) required to hold a unified
│ │ + planar YUV image with the given width, height, and level of chrominance
│ │ + subsampling.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int)">bufSizeYUV(int, int, int)</a></span> - Static method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use <a href="./org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)"><code>TJ.bufSizeYUV(int, int, int, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │ @@ -99,21 +100,22 @@
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#close()">close()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Free the native structures associated with this decompressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#compress(byte[],%20int)">compress(byte[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Compress the uncompressed source image associated with this compressor
│ │ - instance and output a JPEG image to the given destination buffer.</div>
│ │ +<div class="block">Compress the packed-pixel or planar YUV source image associated with this
│ │ + compressor instance and output a JPEG image to the given destination
│ │ + buffer.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#compress(int)">compress(int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Compress the uncompressed source image associated with this compressor
│ │ - instance and return a buffer containing a JPEG image.</div>
│ │ +<div class="block">Compress the packed-pixel or planar YUV source image associated with this
│ │ + compressor instance and return a buffer containing a JPEG image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#compress(java.awt.image.BufferedImage,%20byte[],%20int)">compress(BufferedImage, byte[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use
│ │   <a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)"><code>TJCompressor.setSourceImage(BufferedImage, int, int, int, int)</code></a> and
│ │   <a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#compress(byte[],%20int)"><code>TJCompressor.compress(byte[], int)</code></a> instead.</i></div>
│ │ @@ -157,71 +159,74 @@
│ │  <a name="_D_">
│ │  <!--   -->
│ │  </a>
│ │  <h2 class="title">D</h2>
│ │  <dl>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)">decompress(byte[], int, int, int, int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ - to the given destination buffer.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + grayscale, RGB, or CMYK image to the given destination buffer.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int)">decompress(byte[], int, int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use
│ │   <a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)"><code>TJDecompressor.decompress(byte[], int, int, int, int, int, int, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(int,%20int,%20int,%20int,%20int)">decompress(int, int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance and return a buffer containing the decompressed image.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and return a buffer containing
│ │ + the packed-pixel decompressed image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(int[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)">decompress(int[], int, int, int, int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ - to the given destination buffer.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + grayscale, RGB, or CMYK image to the given destination buffer.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(java.awt.image.BufferedImage,%20int)">decompress(BufferedImage, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a decompressed/decoded image to
│ │ - the given <code>BufferedImage</code> instance.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + decompressed/decoded image to the given <code>BufferedImage</code>
│ │ + instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(int,%20int,%20int,%20int)">decompress(int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and return a <code>BufferedImage</code>
│ │ - instance containing the decompressed/decoded image.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and return a
│ │ + <code>BufferedImage</code> instance containing the packed-pixel
│ │ + decompressed/decoded image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(org.libjpegturbo.turbojpeg.YUVImage,%20int)">decompressToYUV(YUVImage, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance into a YUV planar image and store it in the given
│ │ - <code>YUVImage</code> instance.</div>
│ │ + instance into a planar YUV image and store it in the given
│ │ + <a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(byte[],%20int)">decompressToYUV(byte[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use <a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(org.libjpegturbo.turbojpeg.YUVImage,%20int)"><code>TJDecompressor.decompressToYUV(YUVImage, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(int,%20int[],%20int,%20int)">decompressToYUV(int, int[], int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │   instance into a set of Y, U (Cb), and V (Cr) image planes and return a
│ │ - <code>YUVImage</code> instance containing the decompressed image planes.</div>
│ │ + <a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the decompressed image planes.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(int,%20int,%20int,%20int)">decompressToYUV(int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance into a unified YUV planar image buffer and return a
│ │ - <code>YUVImage</code> instance containing the decompressed image.</div>
│ │ + instance into a unified planar YUV image and return a <a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>
│ │ + instance containing the decompressed image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(int)">decompressToYUV(int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use <a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(int,%20int,%20int,%20int)"><code>TJDecompressor.decompressToYUV(int, int, int, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │ @@ -229,35 +234,35 @@
│ │  <a name="_E_">
│ │  <!--   -->
│ │  </a>
│ │  <h2 class="title">E</h2>
│ │  <dl>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(org.libjpegturbo.turbojpeg.YUVImage,%20int)">encodeYUV(YUVImage, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ - instance into a YUV planar image and store it in the given
│ │ - <code>YUVImage</code> instance.</div>
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │ + instance into a planar YUV image and store it in the given
│ │ + <a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(byte[],%20int)">encodeYUV(byte[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use <a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(org.libjpegturbo.turbojpeg.YUVImage,%20int)"><code>TJCompressor.encodeYUV(YUVImage, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(int,%20int)">encodeYUV(int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ - instance into a unified YUV planar image buffer and return a
│ │ - <code>YUVImage</code> instance containing the encoded image.</div>
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │ + instance into a unified planar YUV image and return a <a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>
│ │ + instance containing the encoded image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(int[],%20int)">encodeYUV(int[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │   instance into separate Y, U (Cb), and V (Cr) image planes and return a
│ │ - <code>YUVImage</code> instance containing the encoded image planes.</div>
│ │ + <a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the encoded image planes.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(int)">encodeYUV(int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use <a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(int,%20int)"><code>TJCompressor.encodeYUV(int, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │ @@ -284,46 +289,44 @@
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#ERR_FATAL">ERR_FATAL</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block">The error was fatal and non-recoverable.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#ERR_WARNING">ERR_WARNING</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │ -<div class="block">The error was non-fatal and recoverable, but the image may still be
│ │ - corrupt.</div>
│ │ +<div class="block">The error was non-fatal and recoverable, but the destination image may
│ │ + still be corrupt.</div>
│ │  </dd>
│ │  </dl>
│ │  <a name="_F_">
│ │  <!--   -->
│ │  </a>
│ │  <h2 class="title">F</h2>
│ │  <dl>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#finalize()">finalize()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#finalize()">finalize()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#FLAG_ACCURATEDCT">FLAG_ACCURATEDCT</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │ -<div class="block">Use the most accurate DCT/IDCT algorithm available in the underlying
│ │ - codec.</div>
│ │ +<div class="block">Use the most accurate DCT/IDCT algorithm available.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP">FLAG_BOTTOMUP</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │ -<div class="block">The uncompressed source/destination image is stored in bottom-up (Windows,
│ │ - OpenGL) order, not top-down (X11) order.</div>
│ │ +<div class="block">Rows in the packed-pixel source/destination image are stored in bottom-up
│ │ + (Windows, OpenGL) order rather than in top-down (X11) order.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#FLAG_FASTDCT">FLAG_FASTDCT</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │ -<div class="block">Use the fastest DCT/IDCT algorithm available in the underlying codec.</div>
│ │ +<div class="block">Use the fastest DCT/IDCT algorithm available.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#FLAG_FASTUPSAMPLE">FLAG_FASTUPSAMPLE</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block">When decompressing an image that was compressed using chrominance
│ │ - subsampling, use the fastest chrominance upsampling algorithm available in
│ │ - the underlying codec.</div>
│ │ + subsampling, use the fastest chrominance upsampling algorithm available.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#FLAG_FORCEMMX">FLAG_FORCEMMX</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span></div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#FLAG_FORCESSE">FLAG_FORCESSE</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │ @@ -346,15 +349,15 @@
│ │  <dd>
│ │  <div class="block">Use progressive entropy coding in JPEG images generated by compression and
│ │   transform operations.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#FLAG_STOPONWARNING">FLAG_STOPONWARNING</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block">Immediately discontinue the current compression/decompression/transform
│ │ - operation if the underlying codec throws a warning (non-fatal error).</div>
│ │ + operation if a warning (non-fatal error) occurs.</div>
│ │  </dd>
│ │  </dl>
│ │  <a name="_G_">
│ │  <!--   -->
│ │  </a>
│ │  <h2 class="title">G</h2>
│ │  <dl>
│ │ @@ -366,16 +369,16 @@
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#getBlueOffset(int)">getBlueOffset(int)</a></span> - Static method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block">For the given pixel format, returns the number of bytes that the blue
│ │   component is offset from the start of the pixel.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getBuf()">getBuf()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │ -<div class="block">Returns the YUV image buffer (if this image is stored in a unified
│ │ - buffer rather than separate image planes.)</div>
│ │ +<div class="block">Returns the YUV buffer (if this image is stored in a unified buffer rather
│ │ + than separate image planes.)</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#getColorspace()">getColorspace()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the colorspace used in the source image (JPEG or YUV) associated
│ │   with this decompressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#getCompressedSize()">getCompressedSize()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │ @@ -404,15 +407,15 @@
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getHeight()">getHeight()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the height of the YUV image (or subregion.)</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#getJPEGBuf()">getJPEGBuf()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Returns the JPEG image buffer associated with this decompressor instance.</div>
│ │ +<div class="block">Returns the JPEG buffer associated with this decompressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#getJPEGSize()">getJPEGSize()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the size of the JPEG image (in bytes) associated with this
│ │   decompressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#getMCUHeight(int)">getMCUHeight(int)</a></span> - Static method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │ @@ -432,15 +435,15 @@
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getOffsets()">getOffsets()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the offsets (in bytes) of each plane within the planes of a larger
│ │   YUV image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getPad()">getPad()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │ -<div class="block">Returns the line padding used in the YUV image buffer (if this image is
│ │ +<div class="block">Returns the row alignment (in bytes) of the YUV buffer (if this image is
│ │   stored in a unified buffer rather than separate image planes.)</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#getPixelSize(int)">getPixelSize(int)</a></span> - Static method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the pixel size (in bytes) for the given pixel format.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getPlanes()">getPlanes()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │ @@ -466,39 +469,39 @@
│ │  <dd>
│ │  <div class="block">Returns the width of the largest scaled-down image that the TurboJPEG
│ │   decompressor can generate without exceeding the desired image width and
│ │   height.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJ.html#getScalingFactors()">getScalingFactors()</a></span> - Static method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg">TJ</a></dt>
│ │  <dd>
│ │ -<div class="block">Returns a list of fractional scaling factors that the JPEG decompressor in
│ │ - this implementation of TurboJPEG supports.</div>
│ │ +<div class="block">Returns a list of fractional scaling factors that the JPEG decompressor
│ │ + supports.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getSize()">getSize()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │ -<div class="block">Returns the size (in bytes) of the YUV image buffer (if this image is
│ │ - stored in a unified buffer rather than separate image planes.)</div>
│ │ +<div class="block">Returns the size (in bytes) of the YUV buffer (if this image is stored in
│ │ + a unified buffer rather than separate image planes.)</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getStrides()">getStrides()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │ -<div class="block">Returns the number of bytes per line of each plane in the YUV image.</div>
│ │ +<div class="block">Returns the number of bytes per row of each plane in the YUV image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#getSubsamp()">getSubsamp()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the level of chrominance subsampling used in the source image
│ │   (JPEG or YUV) associated with this decompressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getSubsamp()">getSubsamp()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the level of chrominance subsampling used in the YUV image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#getTransformedSizes()">getTransformedSizes()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransformer.html" title="class in org.libjpegturbo.turbojpeg">TJTransformer</a></dt>
│ │  <dd>
│ │  <div class="block">Returns an array containing the sizes of the transformed JPEG images
│ │ - generated by the most recent transform operation.</div>
│ │ + (in bytes) generated by the most recent transform operation.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#getWidth()">getWidth()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Returns the width of the source image (JPEG or YUV) associated with this
│ │   decompressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#getWidth()">getWidth()</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │ @@ -574,15 +577,15 @@
│ │  <a name="_O_">
│ │  <!--   -->
│ │  </a>
│ │  <h2 class="title">O</h2>
│ │  <dl>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#op">op</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │ -<div class="block">Transform operation (one of <code>OP_*</code>)</div>
│ │ +<div class="block">Transform operation (one of <a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OP_NONE"><code>OP_*</code></a>)</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OP_HFLIP">OP_HFLIP</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │  <div class="block">Flip (mirror) image horizontally.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OP_NONE">OP_NONE</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │ @@ -612,48 +615,49 @@
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OP_VFLIP">OP_VFLIP</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │  <div class="block">Flip (mirror) image vertically.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_COPYNONE">OPT_COPYNONE</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │  <div class="block">This option will prevent <a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> from copying any extra markers (including EXIF
│ │ - and ICC profile data) from the source image to the output image.</div>
│ │ + and ICC profile data) from the source image to the destination image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_CROP">OPT_CROP</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │  <div class="block">This option will enable lossless cropping.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_GRAY">OPT_GRAY</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │ -<div class="block">This option will discard the color data in the input image and produce
│ │ - a grayscale output image.</div>
│ │ +<div class="block">This option will discard the color data in the source image and produce a
│ │ + grayscale destination image.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_NOOUTPUT">OPT_NOOUTPUT</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │  <div class="block">This option will prevent <a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> from outputting a JPEG image for this
│ │   particular transform.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PERFECT">OPT_PERFECT</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │  <div class="block">This option will cause <a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> to throw an exception if the transform is not
│ │   perfect.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PROGRESSIVE">OPT_PROGRESSIVE</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │ -<div class="block">This option will enable progressive entropy coding in the output image
│ │ +<div class="block">This option will enable progressive entropy coding in the JPEG image
│ │   generated by this particular transform.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_TRIM">OPT_TRIM</a></span> - Static variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │  <div class="block">This option will discard any partial MCU blocks that cannot be
│ │   transformed.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransform.html#options">options</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a></dt>
│ │  <dd>
│ │ -<div class="block">Transform options (bitwise OR of one or more of <code>OPT_*</code>)</div>
│ │ +<div class="block">Transform options (bitwise OR of one or more of
│ │ + <a href="./org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PERFECT"><code>OPT_*</code></a>)</div>
│ │  </dd>
│ │  <dt><a href="./org/libjpegturbo/turbojpeg/package-summary.html">org.libjpegturbo.turbojpeg</a> - package org.libjpegturbo.turbojpeg</dt>
│ │  <dd>&nbsp;</dd>
│ │  </dl>
│ │  <a name="_P_">
│ │  <!--   -->
│ │  </a>
│ │ @@ -752,57 +756,56 @@
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#setBuf(byte[][],%20int[],%20int,%20int[],%20int,%20int)">setBuf(byte[][], int[], int, int[], int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │  <div class="block">Assign a set of image planes to this <code>YUVImage</code> instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#setBuf(byte[],%20int,%20int,%20int,%20int)">setBuf(byte[], int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │ -<div class="block">Assign a unified image buffer to this <code>YUVImage</code> instance.</div>
│ │ +<div class="block">Assign a unified buffer to this <code>YUVImage</code> instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#setJPEGImage(byte[],%20int)">setJPEGImage(byte[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use <a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#setSourceImage(byte[],%20int)"><code>TJDecompressor.setSourceImage(byte[], int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setJPEGQuality(int)">setJPEGQuality(int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Set the JPEG image quality level for subsequent compress operations.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)">setSourceImage(byte[], int, int, int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Associate an uncompressed RGB, grayscale, or CMYK source image with this
│ │ +<div class="block">Associate a packed-pixel RGB, grayscale, or CMYK source image with this
│ │   compressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int)">setSourceImage(byte[], int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use
│ │   <a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>TJCompressor.setSourceImage(byte[], int, int, int, int, int, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)">setSourceImage(BufferedImage, int, int, int, int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Associate an uncompressed RGB or grayscale source image with this
│ │ +<div class="block">Associate a packed-pixel RGB or grayscale source image with this
│ │   compressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(org.libjpegturbo.turbojpeg.YUVImage)">setSourceImage(YUVImage)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Associate an uncompressed YUV planar source image with this compressor
│ │ - instance.</div>
│ │ +<div class="block">Associate a planar YUV source image with this compressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#setSourceImage(byte[],%20int)">setSourceImage(byte[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Associate the JPEG image or "abbreviated table specification" (AKA
│ │   "tables-only") datastream of length <code>imageSize</code> bytes stored in
│ │   <code>jpegImage</code> with this decompressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#setSourceImage(org.libjpegturbo.turbojpeg.YUVImage)">setSourceImage(YUVImage)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Associate the specified YUV planar source image with this decompressor
│ │ +<div class="block">Associate the specified planar YUV source image with this decompressor
│ │   instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#setSubsamp(int)">setSubsamp(int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Set the level of chrominance subsampling for subsequent compress/encode
│ │   operations.</div>
│ │  </dd>
│ │ @@ -822,28 +825,28 @@
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor()">TJCompressor()</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Create a TurboJPEG compressor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor(byte[],%20int,%20int,%20int,%20int,%20int,%20int)">TJCompressor(byte[], int, int, int, int, int, int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +<div class="block">Create a TurboJPEG compressor instance and associate the packed-pixel
│ │   source image stored in <code>srcImage</code> with the newly created
│ │   instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor(byte[],%20int,%20int,%20int,%20int)">TJCompressor(byte[], int, int, int, int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │  <div class="block"><span class="strong">Deprecated.</span>
│ │  <div class="block"><i>Use
│ │   <a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>TJCompressor.TJCompressor(byte[], int, int, int, int, int, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)">TJCompressor(BufferedImage, int, int, int, int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJCompressor.html" title="class in org.libjpegturbo.turbojpeg">TJCompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +<div class="block">Create a TurboJPEG compressor instance and associate the packed-pixel
│ │   source image stored in <code>srcImage</code> with the newly created
│ │   instance.</div>
│ │  </dd>
│ │  <dt><a href="./org/libjpegturbo/turbojpeg/TJCustomFilter.html" title="interface in org.libjpegturbo.turbojpeg"><span class="strong">TJCustomFilter</span></a> - Interface in <a href="./org/libjpegturbo/turbojpeg/package-summary.html">org.libjpegturbo.turbojpeg</a></dt>
│ │  <dd>
│ │  <div class="block">Custom filter callback interface</div>
│ │  </dd>
│ │ @@ -854,25 +857,27 @@
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor()">TJDecompressor()</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Create a TurboJPEG decompresssor instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor(byte[])">TJDecompressor(byte[])</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ - image stored in <code>jpegImage</code> with the newly created instance.</div>
│ │ + image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ + stored in <code>jpegImage</code> with the newly created instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor(byte[],%20int)">TJDecompressor(byte[], int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │  <div class="block">Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ - image of length <code>imageSize</code> bytes stored in
│ │ - <code>jpegImage</code> with the newly created instance.</div>
│ │ + image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ + of length <code>imageSize</code> bytes stored in <code>jpegImage</code>
│ │ + with the newly created instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor(org.libjpegturbo.turbojpeg.YUVImage)">TJDecompressor(YUVImage)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>
│ │ -<div class="block">Create a TurboJPEG decompressor instance and associate the YUV planar
│ │ +<div class="block">Create a TurboJPEG decompressor instance and associate the planar YUV
│ │   source image stored in <code>yuvImage</code> with the newly created
│ │   instance.</div>
│ │  </dd>
│ │  <dt><a href="./org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg"><span class="strong">TJException</span></a> - Exception in <a href="./org/libjpegturbo/turbojpeg/package-summary.html">org.libjpegturbo.turbojpeg</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJException.html#TJException()">TJException()</a></span> - Constructor for exception org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></dt>
│ │  <dd>&nbsp;</dd>
│ │ @@ -915,73 +920,74 @@
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#TJTransformer()">TJTransformer()</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransformer.html" title="class in org.libjpegturbo.turbojpeg">TJTransformer</a></dt>
│ │  <dd>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#TJTransformer(byte[])">TJTransformer(byte[])</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransformer.html" title="class in org.libjpegturbo.turbojpeg">TJTransformer</a></dt>
│ │  <dd>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ - image stored in <code>jpegImage</code> with the newly created instance.</div>
│ │ + source image stored in <code>jpegImage</code> with the newly created
│ │ + instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#TJTransformer(byte[],%20int)">TJTransformer(byte[], int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransformer.html" title="class in org.libjpegturbo.turbojpeg">TJTransformer</a></dt>
│ │  <dd>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ - image of length <code>imageSize</code> bytes stored in
│ │ + source image of length <code>imageSize</code> bytes stored in
│ │   <code>jpegImage</code> with the newly created instance.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)">transform(byte[][], TJTransform[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransformer.html" title="class in org.libjpegturbo.turbojpeg">TJTransformer</a></dt>
│ │  <dd>
│ │ -<div class="block">Losslessly transform the JPEG image associated with this transformer
│ │ - instance into one or more JPEG images stored in the given destination
│ │ - buffers.</div>
│ │ +<div class="block">Losslessly transform the JPEG source image associated with this
│ │ + transformer instance into one or more JPEG images stored in the given
│ │ + destination buffers.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJTransformer.html#transform(org.libjpegturbo.turbojpeg.TJTransform[],%20int)">transform(TJTransform[], int)</a></span> - Method in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJTransformer.html" title="class in org.libjpegturbo.turbojpeg">TJTransformer</a></dt>
│ │  <dd>
│ │ -<div class="block">Losslessly transform the JPEG image associated with this transformer
│ │ - instance and return an array of <a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor</code></a> instances, each of
│ │ - which has a transformed JPEG image associated with it.</div>
│ │ +<div class="block">Losslessly transform the JPEG source image associated with this
│ │ + transformer instance and return an array of <a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor</code></a>
│ │ + instances, each of which has a transformed JPEG image associated with it.</div>
│ │  </dd>
│ │  </dl>
│ │  <a name="_Y_">
│ │  <!--   -->
│ │  </a>
│ │  <h2 class="title">Y</h2>
│ │  <dl>
│ │ +<dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvAlign">yuvAlign</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │ +<dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvHeight">yuvHeight</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html#yuvImage">yuvImage</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><span class="strong">YUVImage</span></a> - Class in <a href="./org/libjpegturbo/turbojpeg/package-summary.html">org.libjpegturbo.turbojpeg</a></dt>
│ │  <dd>
│ │ -<div class="block">This class encapsulates a YUV planar image and the metadata
│ │ +<div class="block">This class encapsulates a planar YUV image and the metadata
│ │   associated with it.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#YUVImage(int,%20int[],%20int,%20int)">YUVImage(int, int[], int, int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │  <div class="block">Create a new <code>YUVImage</code> instance backed by separate image
│ │   planes, and allocate memory for the image planes.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#YUVImage(int,%20int,%20int,%20int)">YUVImage(int, int, int, int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │ -<div class="block">Create a new <code>YUVImage</code> instance backed by a unified image
│ │ - buffer, and allocate memory for the image buffer.</div>
│ │ +<div class="block">Create a new <code>YUVImage</code> instance backed by a unified buffer,
│ │ + and allocate memory for the buffer.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#YUVImage(byte[][],%20int[],%20int,%20int[],%20int,%20int)">YUVImage(byte[][], int[], int, int[], int, int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │  <div class="block">Create a new <code>YUVImage</code> instance from a set of existing image
│ │   planes.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#YUVImage(byte[],%20int,%20int,%20int,%20int)">YUVImage(byte[], int, int, int, int)</a></span> - Constructor for class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>
│ │ -<div class="block">Create a new <code>YUVImage</code> instance from an existing unified image
│ │ +<div class="block">Create a new <code>YUVImage</code> instance from an existing unified
│ │   buffer.</div>
│ │  </dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvOffsets">yuvOffsets</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>&nbsp;</dd>
│ │ -<dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvPad">yuvPad</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │ -<dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvPlanes">yuvPlanes</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvStrides">yuvStrides</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvSubsamp">yuvSubsamp</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │  <dd>&nbsp;</dd>
│ │  <dt><span class="strong"><a href="./org/libjpegturbo/turbojpeg/YUVImage.html#yuvWidth">yuvWidth</a></span> - Variable in class org.libjpegturbo.turbojpeg.<a href="./org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></dt>
│ │ ├── html2text {}
│ │ │ @@ -16,34 +16,36 @@
│ │ │  B C D E F G H I J N O P S T Y 
│ │ │  ***** B *****
│ │ │    bufSize(int,_int,_int) - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Returns the maximum size of the buffer (in bytes) required to hold a JPEG
│ │ │        image with the given width, height, and level of chrominance subsampling.
│ │ │    bufSizeYUV(int,_int,_int,_int) - Static method in class
│ │ │    org.libjpegturbo.turbojpeg.TJ
│ │ │ -      Returns the size of the buffer (in bytes) required to hold a YUV planar
│ │ │ -      image with the given width, height, and level of chrominance subsampling.
│ │ │ +      Returns the size of the buffer (in bytes) required to hold a unified
│ │ │ +      planar YUV image with the given width, height, and level of chrominance
│ │ │ +      subsampling.
│ │ │    bufSizeYUV(int,_int,_int) - Static method in class
│ │ │    org.libjpegturbo.turbojpeg.TJ
│ │ │        Deprecated.
│ │ │        Use TJ.bufSizeYUV(int,_int,_int,_int) instead.
│ │ │  ***** C *****
│ │ │    cf - Variable in class org.libjpegturbo.turbojpeg.TJTransform
│ │ │        Custom filter instance
│ │ │    close() - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Free the native structures associated with this compressor instance.
│ │ │    close() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Free the native structures associated with this decompressor instance.
│ │ │    compress(byte[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Compress the uncompressed source image associated with this compressor
│ │ │ -      instance and output a JPEG image to the given destination buffer.
│ │ │ +      Compress the packed-pixel or planar YUV source image associated with this
│ │ │ +      compressor instance and output a JPEG image to the given destination
│ │ │ +      buffer.
│ │ │    compress(int) - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Compress the uncompressed source image associated with this compressor
│ │ │ -      instance and return a buffer containing a JPEG image.
│ │ │ +      Compress the packed-pixel or planar YUV source image associated with this
│ │ │ +      compressor instance and return a buffer containing a JPEG image.
│ │ │    compress(BufferedImage,_byte[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Deprecated.
│ │ │        Use TJCompressor.setSourceImage(BufferedImage,_int,_int,_int,_int) and
│ │ │        TJCompressor.compress(byte[],_int) instead.
│ │ │    compress(BufferedImage,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ @@ -64,81 +66,82 @@
│ │ │    Method in interface org.libjpegturbo.turbojpeg.TJCustomFilter
│ │ │        A callback function that can be used to modify the DCT coefficients after
│ │ │        they are losslessly transformed but before they are transcoded to a new
│ │ │        JPEG image.
│ │ │  ***** D *****
│ │ │    decompress(byte[],_int,_int,_int,_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Decompress the JPEG source image or decode the YUV source image
│ │ │ -      associated with this decompressor instance and output a grayscale, RGB,
│ │ │ -      or CMYK image to the given destination buffer.
│ │ │ +      Decompress the JPEG source image or decode the planar YUV source image
│ │ │ +      associated with this decompressor instance and output a packed-pixel
│ │ │ +      grayscale, RGB, or CMYK image to the given destination buffer.
│ │ │    decompress(byte[],_int,_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Deprecated.
│ │ │        Use TJDecompressor.decompress(byte[],_int,_int,_int,_int,_int,_int,_int)
│ │ │        instead.
│ │ │    decompress(int,_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Decompress the JPEG source image associated with this decompressor
│ │ │ -      instance and return a buffer containing the decompressed image.
│ │ │ +      Decompress the JPEG source image or decode the planar YUV source image
│ │ │ +      associated with this decompressor instance and return a buffer containing
│ │ │ +      the packed-pixel decompressed image.
│ │ │    decompress(int[],_int,_int,_int,_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Decompress the JPEG source image or decode the YUV source image
│ │ │ -      associated with this decompressor instance and output a grayscale, RGB,
│ │ │ -      or CMYK image to the given destination buffer.
│ │ │ +      Decompress the JPEG source image or decode the planar YUV source image
│ │ │ +      associated with this decompressor instance and output a packed-pixel
│ │ │ +      grayscale, RGB, or CMYK image to the given destination buffer.
│ │ │    decompress(BufferedImage,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Decompress the JPEG source image or decode the YUV source image
│ │ │ -      associated with this decompressor instance and output a decompressed/
│ │ │ -      decoded image to the given BufferedImage instance.
│ │ │ +      Decompress the JPEG source image or decode the planar YUV source image
│ │ │ +      associated with this decompressor instance and output a packed-pixel
│ │ │ +      decompressed/decoded image to the given BufferedImage instance.
│ │ │    decompress(int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Decompress the JPEG source image or decode the YUV source image
│ │ │ +      Decompress the JPEG source image or decode the planar YUV source image
│ │ │        associated with this decompressor instance and return a BufferedImage
│ │ │ -      instance containing the decompressed/decoded image.
│ │ │ +      instance containing the packed-pixel decompressed/decoded image.
│ │ │    decompressToYUV(YUVImage,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Decompress the JPEG source image associated with this decompressor
│ │ │ -      instance into a YUV planar image and store it in the given YUVImage
│ │ │ +      instance into a planar YUV image and store it in the given YUVImage
│ │ │        instance.
│ │ │    decompressToYUV(byte[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Deprecated.
│ │ │        Use TJDecompressor.decompressToYUV(YUVImage,_int) instead.
│ │ │    decompressToYUV(int,_int[],_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Decompress the JPEG source image associated with this decompressor
│ │ │        instance into a set of Y, U (Cb), and V (Cr) image planes and return a
│ │ │        YUVImage instance containing the decompressed image planes.
│ │ │    decompressToYUV(int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Decompress the JPEG source image associated with this decompressor
│ │ │ -      instance into a unified YUV planar image buffer and return a YUVImage
│ │ │ -      instance containing the decompressed image.
│ │ │ +      instance into a unified planar YUV image and return a YUVImage instance
│ │ │ +      containing the decompressed image.
│ │ │    decompressToYUV(int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Deprecated.
│ │ │        Use TJDecompressor.decompressToYUV(int,_int,_int,_int) instead.
│ │ │  ***** E *****
│ │ │    encodeYUV(YUVImage,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Encode the uncompressed source image associated with this compressor
│ │ │ -      instance into a YUV planar image and store it in the given YUVImage
│ │ │ +      Encode the packed-pixel source image associated with this compressor
│ │ │ +      instance into a planar YUV image and store it in the given YUVImage
│ │ │        instance.
│ │ │    encodeYUV(byte[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Deprecated.
│ │ │        Use TJCompressor.encodeYUV(YUVImage,_int) instead.
│ │ │    encodeYUV(int,_int) - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Encode the uncompressed source image associated with this compressor
│ │ │ -      instance into a unified YUV planar image buffer and return a YUVImage
│ │ │ -      instance containing the encoded image.
│ │ │ +      Encode the packed-pixel source image associated with this compressor
│ │ │ +      instance into a unified planar YUV image and return a YUVImage instance
│ │ │ +      containing the encoded image.
│ │ │    encodeYUV(int[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Encode the uncompressed source image associated with this compressor
│ │ │ +      Encode the packed-pixel source image associated with this compressor
│ │ │        instance into separate Y, U (Cb), and V (Cr) image planes and return a
│ │ │        YUVImage instance containing the encoded image planes.
│ │ │    encodeYUV(int) - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Deprecated.
│ │ │        Use TJCompressor.encodeYUV(int,_int) instead.
│ │ │    encodeYUV(BufferedImage,_byte[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ @@ -153,33 +156,31 @@
│ │ │    equals(TJScalingFactor) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJScalingFactor
│ │ │        Returns true or false, depending on whether this instance and other have
│ │ │        the same numerator and denominator.
│ │ │    ERR_FATAL - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        The error was fatal and non-recoverable.
│ │ │    ERR_WARNING - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │ -      The error was non-fatal and recoverable, but the image may still be
│ │ │ -      corrupt.
│ │ │ +      The error was non-fatal and recoverable, but the destination image may
│ │ │ +      still be corrupt.
│ │ │  ***** F *****
│ │ │    finalize() - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │         
│ │ │    finalize() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │         
│ │ │    FLAG_ACCURATEDCT - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │ -      Use the most accurate DCT/IDCT algorithm available in the underlying
│ │ │ -      codec.
│ │ │ +      Use the most accurate DCT/IDCT algorithm available.
│ │ │    FLAG_BOTTOMUP - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │ -      The uncompressed source/destination image is stored in bottom-up
│ │ │ -      (Windows, OpenGL) order, not top-down (X11) order.
│ │ │ +      Rows in the packed-pixel source/destination image are stored in bottom-up
│ │ │ +      (Windows, OpenGL) order rather than in top-down (X11) order.
│ │ │    FLAG_FASTDCT - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │ -      Use the fastest DCT/IDCT algorithm available in the underlying codec.
│ │ │ +      Use the fastest DCT/IDCT algorithm available.
│ │ │    FLAG_FASTUPSAMPLE - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        When decompressing an image that was compressed using chrominance
│ │ │ -      subsampling, use the fastest chrominance upsampling algorithm available
│ │ │ -      in the underlying codec.
│ │ │ +      subsampling, use the fastest chrominance upsampling algorithm available.
│ │ │    FLAG_FORCEMMX - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Deprecated.
│ │ │    FLAG_FORCESSE - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Deprecated.
│ │ │    FLAG_FORCESSE2 - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Deprecated.
│ │ │    FLAG_FORCESSE3 - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │ @@ -188,24 +189,24 @@
│ │ │        Limit the number of progressive JPEG scans that the decompression and
│ │ │        transform operations will process.
│ │ │    FLAG_PROGRESSIVE - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Use progressive entropy coding in JPEG images generated by compression
│ │ │        and transform operations.
│ │ │    FLAG_STOPONWARNING - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Immediately discontinue the current compression/decompression/transform
│ │ │ -      operation if the underlying codec throws a warning (non-fatal error).
│ │ │ +      operation if a warning (non-fatal error) occurs.
│ │ │  ***** G *****
│ │ │    getAlphaOffset(int) - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │        For the given pixel format, returns the number of bytes that the alpha
│ │ │        component is offset from the start of the pixel.
│ │ │    getBlueOffset(int) - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │        For the given pixel format, returns the number of bytes that the blue
│ │ │        component is offset from the start of the pixel.
│ │ │    getBuf() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -      Returns the YUV image buffer (if this image is stored in a unified buffer
│ │ │ +      Returns the YUV buffer (if this image is stored in a unified buffer
│ │ │        rather than separate image planes.)
│ │ │    getColorspace() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Returns the colorspace used in the source image (JPEG or YUV) associated
│ │ │        with this decompressor instance.
│ │ │    getCompressedSize() - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Returns the size of the image (in bytes) generated by the most recent
│ │ │        compress operation.
│ │ │ @@ -219,15 +220,15 @@
│ │ │        component is offset from the start of the pixel.
│ │ │    getHeight() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Returns the height of the source image (JPEG or YUV) associated with this
│ │ │        decompressor instance.
│ │ │    getHeight() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Returns the height of the YUV image (or subregion.)
│ │ │    getJPEGBuf() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Returns the JPEG image buffer associated with this decompressor instance.
│ │ │ +      Returns the JPEG buffer associated with this decompressor instance.
│ │ │    getJPEGSize() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Returns the size of the JPEG image (in bytes) associated with this
│ │ │        decompressor instance.
│ │ │    getMCUHeight(int) - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Returns the MCU block height for the given level of chrominance
│ │ │        subsampling.
│ │ │    getMCUWidth(int) - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │ @@ -235,15 +236,15 @@
│ │ │        subsampling.
│ │ │    getNum() - Method in class org.libjpegturbo.turbojpeg.TJScalingFactor
│ │ │        Returns numerator
│ │ │    getOffsets() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Returns the offsets (in bytes) of each plane within the planes of a
│ │ │        larger YUV image.
│ │ │    getPad() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -      Returns the line padding used in the YUV image buffer (if this image is
│ │ │ +      Returns the row alignment (in bytes) of the YUV buffer (if this image is
│ │ │        stored in a unified buffer rather than separate image planes.)
│ │ │    getPixelSize(int) - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Returns the pixel size (in bytes) for the given pixel format.
│ │ │    getPlanes() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Returns the YUV image planes.
│ │ │    getRedOffset(int) - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │        For the given pixel format, returns the number of bytes that the red
│ │ │ @@ -258,29 +259,29 @@
│ │ │    getScaledWidth(int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Returns the width of the largest scaled-down image that the TurboJPEG
│ │ │        decompressor can generate without exceeding the desired image width and
│ │ │        height.
│ │ │    getScalingFactors() - Static method in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Returns a list of fractional scaling factors that the JPEG decompressor
│ │ │ -      in this implementation of TurboJPEG supports.
│ │ │ +      supports.
│ │ │    getSize() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -      Returns the size (in bytes) of the YUV image buffer (if this image is
│ │ │ -      stored in a unified buffer rather than separate image planes.)
│ │ │ +      Returns the size (in bytes) of the YUV buffer (if this image is stored in
│ │ │ +      a unified buffer rather than separate image planes.)
│ │ │    getStrides() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -      Returns the number of bytes per line of each plane in the YUV image.
│ │ │ +      Returns the number of bytes per row of each plane in the YUV image.
│ │ │    getSubsamp() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Returns the level of chrominance subsampling used in the source image
│ │ │        (JPEG or YUV) associated with this decompressor instance.
│ │ │    getSubsamp() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Returns the level of chrominance subsampling used in the YUV image.
│ │ │    getTransformedSizes() - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJTransformer
│ │ │ -      Returns an array containing the sizes of the transformed JPEG images
│ │ │ -      generated by the most recent transform operation.
│ │ │ +      Returns an array containing the sizes of the transformed JPEG images (in
│ │ │ +      bytes) generated by the most recent transform operation.
│ │ │    getWidth() - Method in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Returns the width of the source image (JPEG or YUV) associated with this
│ │ │        decompressor instance.
│ │ │    getWidth() - Method in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Returns the width of the YUV image (or subregion.)
│ │ │  ***** H *****
│ │ │    handle - Variable in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ @@ -337,30 +338,30 @@
│ │ │        axis).
│ │ │    OP_VFLIP - Static variable in class org.libjpegturbo.turbojpeg.TJTransform
│ │ │        Flip (mirror) image vertically.
│ │ │    OPT_COPYNONE - Static variable in class
│ │ │    org.libjpegturbo.turbojpeg.TJTransform
│ │ │        This option will prevent TJTransformer.transform() from copying any extra
│ │ │        markers (including EXIF and ICC profile data) from the source image to
│ │ │ -      the output image.
│ │ │ +      the destination image.
│ │ │    OPT_CROP - Static variable in class org.libjpegturbo.turbojpeg.TJTransform
│ │ │        This option will enable lossless cropping.
│ │ │    OPT_GRAY - Static variable in class org.libjpegturbo.turbojpeg.TJTransform
│ │ │ -      This option will discard the color data in the input image and produce a
│ │ │ -      grayscale output image.
│ │ │ +      This option will discard the color data in the source image and produce a
│ │ │ +      grayscale destination image.
│ │ │    OPT_NOOUTPUT - Static variable in class
│ │ │    org.libjpegturbo.turbojpeg.TJTransform
│ │ │        This option will prevent TJTransformer.transform() from outputting a JPEG
│ │ │        image for this particular transform.
│ │ │    OPT_PERFECT - Static variable in class org.libjpegturbo.turbojpeg.TJTransform
│ │ │        This option will cause TJTransformer.transform() to throw an exception if
│ │ │        the transform is not perfect.
│ │ │    OPT_PROGRESSIVE - Static variable in class
│ │ │    org.libjpegturbo.turbojpeg.TJTransform
│ │ │ -      This option will enable progressive entropy coding in the output image
│ │ │ +      This option will enable progressive entropy coding in the JPEG image
│ │ │        generated by this particular transform.
│ │ │    OPT_TRIM - Static variable in class org.libjpegturbo.turbojpeg.TJTransform
│ │ │        This option will discard any partial MCU blocks that cannot be
│ │ │        transformed.
│ │ │    options - Variable in class org.libjpegturbo.turbojpeg.TJTransform
│ │ │        Transform options (bitwise OR of one or more of OPT_*)
│ │ │    org.libjpegturbo.turbojpeg - package org.libjpegturbo.turbojpeg
│ │ │ @@ -414,90 +415,91 @@
│ │ │    SAMP_GRAY - Static variable in class org.libjpegturbo.turbojpeg.TJ
│ │ │        Grayscale.
│ │ │    setBuf(byte[][],_int[],_int,_int[],_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Assign a set of image planes to this YUVImage instance.
│ │ │    setBuf(byte[],_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -      Assign a unified image buffer to this YUVImage instance.
│ │ │ +      Assign a unified buffer to this YUVImage instance.
│ │ │    setJPEGImage(byte[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Deprecated.
│ │ │        Use TJDecompressor.setSourceImage(byte[],_int) instead.
│ │ │    setJPEGQuality(int) - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Set the JPEG image quality level for subsequent compress operations.
│ │ │    setSourceImage(byte[],_int,_int,_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Associate an uncompressed RGB, grayscale, or CMYK source image with this
│ │ │ +      Associate a packed-pixel RGB, grayscale, or CMYK source image with this
│ │ │        compressor instance.
│ │ │    setSourceImage(byte[],_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Deprecated.
│ │ │        Use TJCompressor.setSourceImage(byte[],_int,_int,_int,_int,_int,_int)
│ │ │        instead.
│ │ │    setSourceImage(BufferedImage,_int,_int,_int,_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Associate an uncompressed RGB or grayscale source image with this
│ │ │ +      Associate a packed-pixel RGB or grayscale source image with this
│ │ │        compressor instance.
│ │ │    setSourceImage(YUVImage) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Associate an uncompressed YUV planar source image with this compressor
│ │ │ -      instance.
│ │ │ +      Associate a planar YUV source image with this compressor instance.
│ │ │    setSourceImage(byte[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Associate the JPEG image or "abbreviated table specification" (AKA
│ │ │        "tables-only") datastream of length imageSize bytes stored in jpegImage
│ │ │        with this decompressor instance.
│ │ │    setSourceImage(YUVImage) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Associate the specified YUV planar source image with this decompressor
│ │ │ +      Associate the specified planar YUV source image with this decompressor
│ │ │        instance.
│ │ │    setSubsamp(int) - Method in class org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Set the level of chrominance subsampling for subsequent compress/encode
│ │ │        operations.
│ │ │  ***** T *****
│ │ │    TJ - Class in org.libjpegturbo.turbojpeg
│ │ │        TurboJPEG utility class (cannot be instantiated)
│ │ │    TJCompressor - Class in org.libjpegturbo.turbojpeg
│ │ │        TurboJPEG compressor
│ │ │    TJCompressor() - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Create a TurboJPEG compressor instance.
│ │ │    TJCompressor(byte[],_int,_int,_int,_int,_int,_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Create a TurboJPEG compressor instance and associate the uncompressed
│ │ │ +      Create a TurboJPEG compressor instance and associate the packed-pixel
│ │ │        source image stored in srcImage with the newly created instance.
│ │ │    TJCompressor(byte[],_int,_int,_int,_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │        Deprecated.
│ │ │        Use TJCompressor.TJCompressor(byte[],_int,_int,_int,_int,_int,_int)
│ │ │        instead.
│ │ │    TJCompressor(BufferedImage,_int,_int,_int,_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJCompressor
│ │ │ -      Create a TurboJPEG compressor instance and associate the uncompressed
│ │ │ +      Create a TurboJPEG compressor instance and associate the packed-pixel
│ │ │        source image stored in srcImage with the newly created instance.
│ │ │    TJCustomFilter - Interface in org.libjpegturbo.turbojpeg
│ │ │        Custom filter callback interface
│ │ │    TJDecompressor - Class in org.libjpegturbo.turbojpeg
│ │ │        TurboJPEG decompressor
│ │ │    TJDecompressor() - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Create a TurboJPEG decompresssor instance.
│ │ │    TJDecompressor(byte[]) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ │ -      image stored in jpegImage with the newly created instance.
│ │ │ +      image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ │ +      stored in jpegImage with the newly created instance.
│ │ │    TJDecompressor(byte[],_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │        Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ │ -      image of length imageSize bytes stored in jpegImage with the newly
│ │ │ -      created instance.
│ │ │ +      image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ │ +      of length imageSize bytes stored in jpegImage with the newly created
│ │ │ +      instance.
│ │ │    TJDecompressor(YUVImage) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │ -      Create a TurboJPEG decompressor instance and associate the YUV planar
│ │ │ +      Create a TurboJPEG decompressor instance and associate the planar YUV
│ │ │        source image stored in yuvImage with the newly created instance.
│ │ │    TJException - Exception in org.libjpegturbo.turbojpeg
│ │ │         
│ │ │    TJException() - Constructor for exception
│ │ │    org.libjpegturbo.turbojpeg.TJException
│ │ │         
│ │ │    TJException(String,_Throwable) - Constructor for exception
│ │ │ @@ -531,56 +533,56 @@
│ │ │        TurboJPEG lossless transformer
│ │ │    TJTransformer() - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJTransformer
│ │ │        Create a TurboJPEG lossless transformer instance.
│ │ │    TJTransformer(byte[]) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJTransformer
│ │ │        Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ │ -      image stored in jpegImage with the newly created instance.
│ │ │ +      source image stored in jpegImage with the newly created instance.
│ │ │    TJTransformer(byte[],_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.TJTransformer
│ │ │        Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ │ -      image of length imageSize bytes stored in jpegImage with the newly
│ │ │ +      source image of length imageSize bytes stored in jpegImage with the newly
│ │ │        created instance.
│ │ │    transform(byte[][],_TJTransform[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJTransformer
│ │ │ -      Losslessly transform the JPEG image associated with this transformer
│ │ │ -      instance into one or more JPEG images stored in the given destination
│ │ │ -      buffers.
│ │ │ +      Losslessly transform the JPEG source image associated with this
│ │ │ +      transformer instance into one or more JPEG images stored in the given
│ │ │ +      destination buffers.
│ │ │    transform(TJTransform[],_int) - Method in class
│ │ │    org.libjpegturbo.turbojpeg.TJTransformer
│ │ │ -      Losslessly transform the JPEG image associated with this transformer
│ │ │ -      instance and return an array of TJDecompressor instances, each of which
│ │ │ -      has a transformed JPEG image associated with it.
│ │ │ +      Losslessly transform the JPEG source image associated with this
│ │ │ +      transformer instance and return an array of TJDecompressor instances,
│ │ │ +      each of which has a transformed JPEG image associated with it.
│ │ │  ***** Y *****
│ │ │ +  yuvAlign - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │ +       
│ │ │    yuvHeight - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │         
│ │ │    yuvImage - Variable in class org.libjpegturbo.turbojpeg.TJDecompressor
│ │ │         
│ │ │    YUVImage - Class in org.libjpegturbo.turbojpeg
│ │ │ -      This class encapsulates a YUV planar image and the metadata associated
│ │ │ +      This class encapsulates a planar YUV image and the metadata associated
│ │ │        with it.
│ │ │    YUVImage(int,_int[],_int,_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Create a new YUVImage instance backed by separate image planes, and
│ │ │        allocate memory for the image planes.
│ │ │    YUVImage(int,_int,_int,_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -      Create a new YUVImage instance backed by a unified image buffer, and
│ │ │ -      allocate memory for the image buffer.
│ │ │ +      Create a new YUVImage instance backed by a unified buffer, and allocate
│ │ │ +      memory for the buffer.
│ │ │    YUVImage(byte[][],_int[],_int,_int[],_int,_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.YUVImage
│ │ │        Create a new YUVImage instance from a set of existing image planes.
│ │ │    YUVImage(byte[],_int,_int,_int,_int) - Constructor for class
│ │ │    org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -      Create a new YUVImage instance from an existing unified image buffer.
│ │ │ +      Create a new YUVImage instance from an existing unified buffer.
│ │ │    yuvOffsets - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │         
│ │ │ -  yuvPad - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │ -       
│ │ │    yuvPlanes - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │         
│ │ │    yuvStrides - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │         
│ │ │    yuvSubsamp - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │ │         
│ │ │    yuvWidth - Variable in class org.libjpegturbo.turbojpeg.YUVImage
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/index.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/index.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJ.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJ.html
│ │┄ Files 1% similar despite different names
│ │ @@ -152,44 +152,42 @@
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#ERR_FATAL">ERR_FATAL</a></strong></code>
│ │  <div class="block">The error was fatal and non-recoverable.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#ERR_WARNING">ERR_WARNING</a></strong></code>
│ │ -<div class="block">The error was non-fatal and recoverable, but the image may still be
│ │ - corrupt.</div>
│ │ +<div class="block">The error was non-fatal and recoverable, but the destination image may
│ │ + still be corrupt.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_ACCURATEDCT">FLAG_ACCURATEDCT</a></strong></code>
│ │ -<div class="block">Use the most accurate DCT/IDCT algorithm available in the underlying
│ │ - codec.</div>
│ │ +<div class="block">Use the most accurate DCT/IDCT algorithm available.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP">FLAG_BOTTOMUP</a></strong></code>
│ │ -<div class="block">The uncompressed source/destination image is stored in bottom-up (Windows,
│ │ - OpenGL) order, not top-down (X11) order.</div>
│ │ +<div class="block">Rows in the packed-pixel source/destination image are stored in bottom-up
│ │ + (Windows, OpenGL) order rather than in top-down (X11) order.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_FASTDCT">FLAG_FASTDCT</a></strong></code>
│ │ -<div class="block">Use the fastest DCT/IDCT algorithm available in the underlying codec.</div>
│ │ +<div class="block">Use the fastest DCT/IDCT algorithm available.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_FASTUPSAMPLE">FLAG_FASTUPSAMPLE</a></strong></code>
│ │  <div class="block">When decompressing an image that was compressed using chrominance
│ │ - subsampling, use the fastest chrominance upsampling algorithm available in
│ │ - the underlying codec.</div>
│ │ + subsampling, use the fastest chrominance upsampling algorithm available.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_FORCEMMX">FLAG_FORCEMMX</a></strong></code>
│ │  <div class="block"><strong>Deprecated.</strong>&nbsp;</div>
│ │  </td>
│ │ @@ -226,15 +224,15 @@
│ │   transform operations.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_STOPONWARNING">FLAG_STOPONWARNING</a></strong></code>
│ │  <div class="block">Immediately discontinue the current compression/decompression/transform
│ │ - operation if the underlying codec throws a warning (non-fatal error).</div>
│ │ + operation if a warning (non-fatal error) occurs.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#NUMCS">NUMCS</a></strong></code>
│ │  <div class="block">The number of JPEG colorspaces</div>
│ │  </td>
│ │ @@ -398,19 +396,20 @@
│ │  <div class="block"><i>Use <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)"><code>bufSizeYUV(int, int, int, int)</code></a> instead.</i></div>
│ │  </div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)">bufSizeYUV</a></strong>(int&nbsp;width,
│ │ -          int&nbsp;pad,
│ │ +          int&nbsp;align,
│ │            int&nbsp;height,
│ │            int&nbsp;subsamp)</code>
│ │ -<div class="block">Returns the size of the buffer (in bytes) required to hold a YUV planar
│ │ - image with the given width, height, and level of chrominance subsampling.</div>
│ │ +<div class="block">Returns the size of the buffer (in bytes) required to hold a unified
│ │ + planar YUV image with the given width, height, and level of chrominance
│ │ + subsampling.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getAlphaOffset(int)">getAlphaOffset</a></strong>(int&nbsp;pixelFormat)</code>
│ │  <div class="block">For the given pixel format, returns the number of bytes that the alpha
│ │   component is offset from the start of the pixel.</div>
│ │ @@ -456,16 +455,16 @@
│ │  <div class="block">For the given pixel format, returns the number of bytes that the red
│ │   component is offset from the start of the pixel.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static <a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html" title="class in org.libjpegturbo.turbojpeg">TJScalingFactor</a>[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getScalingFactors()">getScalingFactors</a></strong>()</code>
│ │ -<div class="block">Returns a list of fractional scaling factors that the JPEG decompressor in
│ │ - this implementation of TurboJPEG supports.</div>
│ │ +<div class="block">Returns a list of fractional scaling factors that the JPEG decompressor
│ │ + supports.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#planeHeight(int,%20int,%20int)">planeHeight</a></strong>(int&nbsp;componentID,
│ │             int&nbsp;height,
│ │             int&nbsp;subsamp)</code>
│ │ @@ -774,16 +773,16 @@
│ │   magenta, yellow, or black ink that is applied to a white background.  In
│ │   order to convert between CMYK and RGB, it is necessary to use a color
│ │   management system (CMS.)  A CMS will attempt to map colors within the
│ │   printer's gamut to perceptually similar colors in the display's gamut and
│ │   vice versa, but the mapping is typically not 1:1 or reversible, nor can it
│ │   be defined with a simple formula.  Thus, such a conversion is out of scope
│ │   for a codec library.  However, the TurboJPEG API allows for compressing
│ │ - CMYK pixels into a YCCK JPEG image (see <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#CS_YCCK"><code>CS_YCCK</code></a>) and
│ │ - decompressing YCCK JPEG images into CMYK pixels.</div>
│ │ + packed-pixel CMYK images into YCCK JPEG images (see <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#CS_YCCK"><code>CS_YCCK</code></a>) and
│ │ + decompressing YCCK JPEG images into packed-pixel CMYK images.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.PF_CMYK">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="NUMCS">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -800,16 +799,17 @@
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>CS_RGB</h4>
│ │  <pre>public static final&nbsp;int CS_RGB</pre>
│ │  <div class="block">RGB colorspace.  When compressing the JPEG image, the R, G, and B
│ │   components in the source image are reordered into image planes, but no
│ │   colorspace conversion or subsampling is performed.  RGB JPEG images can be
│ │ - decompressed to any of the extended RGB pixel formats or grayscale, but
│ │ - they cannot be decompressed to YUV images.</div>
│ │ + decompressed to packed-pixel images with any of the extended RGB or
│ │ + grayscale pixel formats, but they cannot be decompressed to planar YUV
│ │ + images.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.CS_RGB">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="CS_YCbCr">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -822,47 +822,49 @@
│ │   actually be displayed.  In the YCbCr colorspace, the Y (luminance)
│ │   component represents the black &amp; white portion of the original image,
│ │   and the Cb and Cr (chrominance) components represent the color portion of
│ │   the original image.  Originally, the analog equivalent of this
│ │   transformation allowed the same signal to drive both black &amp; white and
│ │   color televisions, but JPEG images use YCbCr primarily because it allows
│ │   the color data to be optionally subsampled for the purposes of reducing
│ │ - bandwidth or disk space.  YCbCr is the most common JPEG colorspace, and
│ │ - YCbCr JPEG images can be compressed from and decompressed to any of the
│ │ - extended RGB pixel formats or grayscale, or they can be decompressed to
│ │ - YUV planar images.</div>
│ │ + network or disk usage.  YCbCr is the most common JPEG colorspace, and
│ │ + YCbCr JPEG images can be compressed from and decompressed to packed-pixel
│ │ + images with any of the extended RGB or grayscale pixel formats.  YCbCr
│ │ + JPEG images can also be compressed from and decompressed to planar YUV
│ │ + images.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.CS_YCbCr">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="CS_GRAY">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>CS_GRAY</h4>
│ │  <pre>public static final&nbsp;int CS_GRAY</pre>
│ │  <div class="block">Grayscale colorspace.  The JPEG image retains only the luminance data (Y
│ │   component), and any color data from the source image is discarded.
│ │ - Grayscale JPEG images can be compressed from and decompressed to any of
│ │ - the extended RGB pixel formats or grayscale, or they can be decompressed
│ │ - to YUV planar images.</div>
│ │ + Grayscale JPEG images can be compressed from and decompressed to
│ │ + packed-pixel images with any of the extended RGB or grayscale pixel
│ │ + formats, or they can be compressed from and decompressed to planar YUV
│ │ + images.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.CS_GRAY">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="CS_CMYK">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>CS_CMYK</h4>
│ │  <pre>public static final&nbsp;int CS_CMYK</pre>
│ │  <div class="block">CMYK colorspace.  When compressing the JPEG image, the C, M, Y, and K
│ │   components in the source image are reordered into image planes, but no
│ │   colorspace conversion or subsampling is performed.  CMYK JPEG images can
│ │ - only be decompressed to CMYK pixels.</div>
│ │ + only be decompressed to packed-pixel images with the CMYK pixel format.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.CS_CMYK">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="CS_YCCK">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -871,27 +873,27 @@
│ │  <pre>public static final&nbsp;int CS_YCCK</pre>
│ │  <div class="block">YCCK colorspace.  YCCK (AKA "YCbCrK") is not an absolute colorspace but
│ │   rather a mathematical transformation of CMYK designed solely for storage
│ │   and transmission.  It is to CMYK as YCbCr is to RGB.  CMYK pixels can be
│ │   reversibly transformed into YCCK, and as with YCbCr, the chrominance
│ │   components in the YCCK pixels can be subsampled without incurring major
│ │   perceptual loss.  YCCK JPEG images can only be compressed from and
│ │ - decompressed to CMYK pixels.</div>
│ │ + decompressed to packed-pixel images with the CMYK pixel format.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.CS_YCCK">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="FLAG_BOTTOMUP">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>FLAG_BOTTOMUP</h4>
│ │  <pre>public static final&nbsp;int FLAG_BOTTOMUP</pre>
│ │ -<div class="block">The uncompressed source/destination image is stored in bottom-up (Windows,
│ │ - OpenGL) order, not top-down (X11) order.</div>
│ │ +<div class="block">Rows in the packed-pixel source/destination image are stored in bottom-up
│ │ + (Windows, OpenGL) order rather than in top-down (X11) order.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.FLAG_BOTTOMUP">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="FLAG_FORCEMMX">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -943,70 +945,68 @@
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>FLAG_FASTUPSAMPLE</h4>
│ │  <pre>public static final&nbsp;int FLAG_FASTUPSAMPLE</pre>
│ │  <div class="block">When decompressing an image that was compressed using chrominance
│ │ - subsampling, use the fastest chrominance upsampling algorithm available in
│ │ - the underlying codec.  The default is to use smooth upsampling, which
│ │ - creates a smooth transition between neighboring chrominance components in
│ │ - order to reduce upsampling artifacts in the decompressed image.</div>
│ │ + subsampling, use the fastest chrominance upsampling algorithm available.
│ │ + The default is to use smooth upsampling, which creates a smooth transition
│ │ + between neighboring chrominance components in order to reduce upsampling
│ │ + artifacts in the decompressed image.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.FLAG_FASTUPSAMPLE">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="FLAG_FASTDCT">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>FLAG_FASTDCT</h4>
│ │  <pre>public static final&nbsp;int FLAG_FASTDCT</pre>
│ │ -<div class="block">Use the fastest DCT/IDCT algorithm available in the underlying codec.  The
│ │ - default if this flag is not specified is implementation-specific.  For
│ │ - example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast
│ │ - algorithm by default when compressing, because this has been shown to have
│ │ - only a very slight effect on accuracy, but it uses the accurate algorithm
│ │ - when decompressing, because this has been shown to have a larger effect.</div>
│ │ +<div class="block">Use the fastest DCT/IDCT algorithm available.  The default if this flag is
│ │ + not specified is implementation-specific.  For example, the implementation
│ │ + of the TurboJPEG API in libjpeg-turbo uses the fast algorithm by default
│ │ + when compressing, because this has been shown to have only a very slight
│ │ + effect on accuracy, but it uses the accurate algorithm when decompressing,
│ │ + because this has been shown to have a larger effect.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.FLAG_FASTDCT">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="FLAG_ACCURATEDCT">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>FLAG_ACCURATEDCT</h4>
│ │  <pre>public static final&nbsp;int FLAG_ACCURATEDCT</pre>
│ │ -<div class="block">Use the most accurate DCT/IDCT algorithm available in the underlying
│ │ - codec.  The default if this flag is not specified is
│ │ - implementation-specific.  For example, the implementation of TurboJPEG for
│ │ - libjpeg[-turbo] uses the fast algorithm by default when compressing,
│ │ - because this has been shown to have only a very slight effect on accuracy,
│ │ - but it uses the accurate algorithm when decompressing, because this has
│ │ - been shown to have a larger effect.</div>
│ │ +<div class="block">Use the most accurate DCT/IDCT algorithm available.  The default if this
│ │ + flag is not specified is implementation-specific.  For example, the
│ │ + implementation of the TurboJPEG API in libjpeg-turbo uses the fast
│ │ + algorithm by default when compressing, because this has been shown to have
│ │ + only a very slight effect on accuracy, but it uses the accurate algorithm
│ │ + when decompressing, because this has been shown to have a larger effect.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.FLAG_ACCURATEDCT">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="FLAG_STOPONWARNING">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>FLAG_STOPONWARNING</h4>
│ │  <pre>public static final&nbsp;int FLAG_STOPONWARNING</pre>
│ │  <div class="block">Immediately discontinue the current compression/decompression/transform
│ │ - operation if the underlying codec throws a warning (non-fatal error).  The
│ │ - default behavior is to allow the operation to complete unless a fatal
│ │ - error is encountered.
│ │ + operation if a warning (non-fatal error) occurs.  The default behavior is
│ │ + to allow the operation to complete unless a fatal error is encountered.
│ │   <p>
│ │   NOTE: due to the design of the TurboJPEG Java API, only certain methods
│ │   (specifically, <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor.decompress*()</code></a> methods
│ │ - with a void return type) will complete and leave the output image in a
│ │ - fully recoverable state after a non-fatal error occurs.</div>
│ │ + with a void return type) will complete and leave the destination image in
│ │ + a fully recoverable state after a non-fatal error occurs.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.FLAG_STOPONWARNING">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="FLAG_PROGRESSIVE">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -1051,21 +1051,21 @@
│ │  <a name="ERR_WARNING">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>ERR_WARNING</h4>
│ │  <pre>public static final&nbsp;int ERR_WARNING</pre>
│ │ -<div class="block">The error was non-fatal and recoverable, but the image may still be
│ │ - corrupt.
│ │ +<div class="block">The error was non-fatal and recoverable, but the destination image may
│ │ + still be corrupt.
│ │   <p>
│ │   NOTE: due to the design of the TurboJPEG Java API, only certain methods
│ │   (specifically, <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor.decompress*()</code></a> methods
│ │ - with a void return type) will complete and leave the output image in a
│ │ - fully recoverable state after a non-fatal error occurs.</div>
│ │ + with a void return type) will complete and leave the destination image in
│ │ + a fully recoverable state after a non-fatal error occurs.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJ.ERR_WARNING">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="ERR_FATAL">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │ @@ -1090,43 +1090,43 @@
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>getMCUWidth</h4>
│ │  <pre>public static&nbsp;int&nbsp;getMCUWidth(int&nbsp;subsamp)</pre>
│ │  <div class="block">Returns the MCU block width for the given level of chrominance
│ │   subsampling.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>subsamp</code> - the level of chrominance subsampling (one of
│ │ - <code>SAMP_*</code>)</dd>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>SAMP_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the MCU block width for the given level of chrominance
│ │   subsampling.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getMCUHeight(int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>getMCUHeight</h4>
│ │  <pre>public static&nbsp;int&nbsp;getMCUHeight(int&nbsp;subsamp)</pre>
│ │  <div class="block">Returns the MCU block height for the given level of chrominance
│ │   subsampling.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>subsamp</code> - the level of chrominance subsampling (one of
│ │ - <code>SAMP_*</code>)</dd>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>SAMP_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the MCU block height for the given level of chrominance
│ │   subsampling.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getPixelSize(int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>getPixelSize</h4>
│ │  <pre>public static&nbsp;int&nbsp;getPixelSize(int&nbsp;pixelFormat)</pre>
│ │  <div class="block">Returns the pixel size (in bytes) for the given pixel format.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <code>PF_*</code>)</dd>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>PF_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the pixel size (in bytes) for the given pixel format.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getRedOffset(int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -1134,15 +1134,15 @@
│ │  <h4>getRedOffset</h4>
│ │  <pre>public static&nbsp;int&nbsp;getRedOffset(int&nbsp;pixelFormat)</pre>
│ │  <div class="block">For the given pixel format, returns the number of bytes that the red
│ │   component is offset from the start of the pixel.  For instance, if a pixel
│ │   of format <code>TJ.PF_BGRX</code> is stored in <code>char pixel[]</code>,
│ │   then the red component will be
│ │   <code>pixel[TJ.getRedOffset(TJ.PF_BGRX)]</code>.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <code>PF_*</code>)</dd>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>PF_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the red offset for the given pixel format, or -1 if the pixel
│ │   format does not have a red component.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getGreenOffset(int)">
│ │  <!--   -->
│ │  </a>
│ │ @@ -1151,15 +1151,15 @@
│ │  <h4>getGreenOffset</h4>
│ │  <pre>public static&nbsp;int&nbsp;getGreenOffset(int&nbsp;pixelFormat)</pre>
│ │  <div class="block">For the given pixel format, returns the number of bytes that the green
│ │   component is offset from the start of the pixel.  For instance, if a pixel
│ │   of format <code>TJ.PF_BGRX</code> is stored in <code>char pixel[]</code>,
│ │   then the green component will be
│ │   <code>pixel[TJ.getGreenOffset(TJ.PF_BGRX)]</code>.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <code>PF_*</code>)</dd>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>PF_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the green offset for the given pixel format, or -1 if the pixel
│ │   format does not have a green component.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getBlueOffset(int)">
│ │  <!--   -->
│ │  </a>
│ │ @@ -1168,15 +1168,15 @@
│ │  <h4>getBlueOffset</h4>
│ │  <pre>public static&nbsp;int&nbsp;getBlueOffset(int&nbsp;pixelFormat)</pre>
│ │  <div class="block">For the given pixel format, returns the number of bytes that the blue
│ │   component is offset from the start of the pixel.  For instance, if a pixel
│ │   of format <code>TJ.PF_BGRX</code> is stored in <code>char pixel[]</code>,
│ │   then the blue component will be
│ │   <code>pixel[TJ.getBlueOffset(TJ.PF_BGRX)]</code>.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <code>PF_*</code>)</dd>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>PF_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the blue offset for the given pixel format, or -1 if the pixel
│ │   format does not have a blue component.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getAlphaOffset(int)">
│ │  <!--   -->
│ │  </a>
│ │ @@ -1185,15 +1185,15 @@
│ │  <h4>getAlphaOffset</h4>
│ │  <pre>public static&nbsp;int&nbsp;getAlphaOffset(int&nbsp;pixelFormat)</pre>
│ │  <div class="block">For the given pixel format, returns the number of bytes that the alpha
│ │   component is offset from the start of the pixel.  For instance, if a pixel
│ │   of format <code>TJ.PF_BGRA</code> is stored in <code>char pixel[]</code>,
│ │   then the alpha component will be
│ │   <code>pixel[TJ.getAlphaOffset(TJ.PF_BGRA)]</code>.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <code>PF_*</code>)</dd>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pixelFormat</code> - the pixel format (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>PF_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the alpha offset for the given pixel format, or -1 if the pixel
│ │   format does not have a alpha component.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="bufSize(int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │ @@ -1202,36 +1202,40 @@
│ │  <h4>bufSize</h4>
│ │  <pre>public static&nbsp;int&nbsp;bufSize(int&nbsp;width,
│ │            int&nbsp;height,
│ │            int&nbsp;jpegSubsamp)</pre>
│ │  <div class="block">Returns the maximum size of the buffer (in bytes) required to hold a JPEG
│ │   image with the given width, height, and level of chrominance subsampling.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>width</code> - the width (in pixels) of the JPEG image</dd><dd><code>height</code> - the height (in pixels) of the JPEG image</dd><dd><code>jpegSubsamp</code> - the level of chrominance subsampling to be used when
│ │ - generating the JPEG image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg"><code>TJ.SAMP_*</code></a>)</dd>
│ │ + generating the JPEG image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the maximum size of the buffer (in bytes) required to hold a JPEG
│ │   image with the given width, height, and level of chrominance subsampling.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="bufSizeYUV(int, int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>bufSizeYUV</h4>
│ │  <pre>public static&nbsp;int&nbsp;bufSizeYUV(int&nbsp;width,
│ │ -             int&nbsp;pad,
│ │ +             int&nbsp;align,
│ │               int&nbsp;height,
│ │               int&nbsp;subsamp)</pre>
│ │ -<div class="block">Returns the size of the buffer (in bytes) required to hold a YUV planar
│ │ - image with the given width, height, and level of chrominance subsampling.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>width</code> - the width (in pixels) of the YUV image</dd><dd><code>pad</code> - the width of each line in each plane of the image is padded to
│ │ - the nearest multiple of this number of bytes (must be a power of 2.)</dd><dd><code>height</code> - the height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │ - image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg"><code>TJ.SAMP_*</code></a>)</dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>the size of the buffer (in bytes) required to hold a YUV planar
│ │ - image with the given width, height, and level of chrominance subsampling.</dd></dl>
│ │ +<div class="block">Returns the size of the buffer (in bytes) required to hold a unified
│ │ + planar YUV image with the given width, height, and level of chrominance
│ │ + subsampling.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>width</code> - the width (in pixels) of the YUV image</dd><dd><code>align</code> - row alignment (in bytes) of the YUV image (must be a power of
│ │ + 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ + the YUV image will be padded to the nearest multiple of n bytes
│ │ + (1 = unpadded.)</dd><dd><code>height</code> - the height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │ + image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd>
│ │ +<dt><span class="strong">Returns:</span></dt><dd>the size of the buffer (in bytes) required to hold a unified
│ │ + planar YUV image with the given width, height, and level of chrominance
│ │ + subsampling.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="bufSizeYUV(int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │ @@ -1254,19 +1258,19 @@
│ │                 int&nbsp;stride,
│ │                 int&nbsp;height,
│ │                 int&nbsp;subsamp)</pre>
│ │  <div class="block">Returns the size of the buffer (in bytes) required to hold a YUV image
│ │   plane with the given parameters.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>componentID</code> - ID number of the image plane (0 = Y, 1 = U/Cb,
│ │   2 = V/Cr)</dd><dd><code>width</code> - width (in pixels) of the YUV image.  NOTE: this is the width
│ │ - of the whole image, not the plane width.</dd><dd><code>stride</code> - bytes per line in the image plane.</dd><dd><code>height</code> - height (in pixels) of the YUV image.  NOTE: this is the
│ │ + of the whole image, not the plane width.</dd><dd><code>stride</code> - bytes per row in the image plane.</dd><dd><code>height</code> - height (in pixels) of the YUV image.  NOTE: this is the
│ │   height of the whole image, not the plane height.</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │ - image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg"><code>TJ.SAMP_*</code></a>)</dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>the size of the buffer (in bytes) required to hold a YUV planar
│ │ - image with the given parameters.</dd></dl>
│ │ + image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd>
│ │ +<dt><span class="strong">Returns:</span></dt><dd>the size of the buffer (in bytes) required to hold a YUV image
│ │ + plane with the given parameters.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="planeWidth(int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │ @@ -1274,15 +1278,15 @@
│ │  <pre>public static&nbsp;int&nbsp;planeWidth(int&nbsp;componentID,
│ │               int&nbsp;width,
│ │               int&nbsp;subsamp)</pre>
│ │  <div class="block">Returns the plane width of a YUV image plane with the given parameters.
│ │   Refer to <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> for a description of plane width.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>componentID</code> - ID number of the image plane (0 = Y, 1 = U/Cb,
│ │   2 = V/Cr)</dd><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV image
│ │ - (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg"><code>TJ.SAMP_*</code></a>)</dd>
│ │ + (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the plane width of a YUV image plane with the given parameters.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="planeHeight(int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -1291,29 +1295,29 @@
│ │  <pre>public static&nbsp;int&nbsp;planeHeight(int&nbsp;componentID,
│ │                int&nbsp;height,
│ │                int&nbsp;subsamp)</pre>
│ │  <div class="block">Returns the plane height of a YUV image plane with the given parameters.
│ │   Refer to <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> for a description of plane height.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>componentID</code> - ID number of the image plane (0 = Y, 1 = U/Cb,
│ │   2 = V/Cr)</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV image
│ │ - (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html" title="class in org.libjpegturbo.turbojpeg"><code>TJ.SAMP_*</code></a>)</dd>
│ │ + (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the plane height of a YUV image plane with the given parameters.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getScalingFactors()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │  <h4>getScalingFactors</h4>
│ │  <pre>public static&nbsp;<a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html" title="class in org.libjpegturbo.turbojpeg">TJScalingFactor</a>[]&nbsp;getScalingFactors()</pre>
│ │ -<div class="block">Returns a list of fractional scaling factors that the JPEG decompressor in
│ │ - this implementation of TurboJPEG supports.</div>
│ │ -<dl><dt><span class="strong">Returns:</span></dt><dd>a list of fractional scaling factors that the JPEG decompressor in
│ │ - this implementation of TurboJPEG supports.</dd></dl>
│ │ +<div class="block">Returns a list of fractional scaling factors that the JPEG decompressor
│ │ + supports.</div>
│ │ +<dl><dt><span class="strong">Returns:</span></dt><dd>a list of fractional scaling factors that the JPEG decompressor
│ │ + supports.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </div>
│ │ ├── html2text {}
│ │ │ @@ -45,30 +45,28 @@
│ │ │                                YCbCr colorspace.
│ │ │              static int        CS_YCCK
│ │ │                                YCCK colorspace.
│ │ │              static int        ERR_FATAL
│ │ │                                The error was fatal and non-recoverable.
│ │ │                                ERR_WARNING
│ │ │              static int        The error was non-fatal and recoverable, but the
│ │ │ -                              image may still be corrupt.
│ │ │ +                              destination image may still be corrupt.
│ │ │                                FLAG_ACCURATEDCT
│ │ │              static int        Use the most accurate DCT/IDCT algorithm
│ │ │ -                              available in the underlying codec.
│ │ │ +                              available.
│ │ │                                FLAG_BOTTOMUP
│ │ │ -            static int        The uncompressed source/destination image is
│ │ │ -                              stored in bottom-up (Windows, OpenGL) order, not
│ │ │ -                              top-down (X11) order.
│ │ │ -                              FLAG_FASTDCT
│ │ │ -            static int        Use the fastest DCT/IDCT algorithm available in
│ │ │ -                              the underlying codec.
│ │ │ +            static int        Rows in the packed-pixel source/destination image
│ │ │ +                              are stored in bottom-up (Windows, OpenGL) order
│ │ │ +                              rather than in top-down (X11) order.
│ │ │ +            static int        FLAG_FASTDCT
│ │ │ +                              Use the fastest DCT/IDCT algorithm available.
│ │ │                                FLAG_FASTUPSAMPLE
│ │ │ -                              When decompressing an image that was compressed
│ │ │ -            static int        using chrominance subsampling, use the fastest
│ │ │ -                              chrominance upsampling algorithm available in the
│ │ │ -                              underlying codec.
│ │ │ +            static int        When decompressing an image that was compressed
│ │ │ +                              using chrominance subsampling, use the fastest
│ │ │ +                              chrominance upsampling algorithm available.
│ │ │              static int        FLAG_FORCEMMX
│ │ │                                Deprecated. 
│ │ │              static int        FLAG_FORCESSE
│ │ │                                Deprecated. 
│ │ │              static int        FLAG_FORCESSE2
│ │ │                                Deprecated. 
│ │ │              static int        FLAG_FORCESSE3
│ │ │ @@ -78,18 +76,17 @@
│ │ │                                the decompression and transform operations will
│ │ │                                process.
│ │ │                                FLAG_PROGRESSIVE
│ │ │              static int        Use progressive entropy coding in JPEG images
│ │ │                                generated by compression and transform
│ │ │                                operations.
│ │ │                                FLAG_STOPONWARNING
│ │ │ -                              Immediately discontinue the current compression/
│ │ │ -            static int        decompression/transform operation if the
│ │ │ -                              underlying codec throws a warning (non-fatal
│ │ │ -                              error).
│ │ │ +            static int        Immediately discontinue the current compression/
│ │ │ +                              decompression/transform operation if a warning
│ │ │ +                              (non-fatal error) occurs.
│ │ │              static int        NUMCS
│ │ │                                The number of JPEG colorspaces
│ │ │              static int        NUMERR
│ │ │                                The number of error codes
│ │ │              static int        NUMPF
│ │ │                                The number of pixel formats
│ │ │              static int        NUMSAMP
│ │ │ @@ -138,18 +135,18 @@
│ │ │                              bufSize(int width, int height, int jpegSubsamp)
│ │ │              static int      Returns the maximum size of the buffer (in bytes) required to hold a
│ │ │                              JPEG image with the given width, height, and level of chrominance
│ │ │                              subsampling.
│ │ │                              bufSizeYUV(int width, int height, int subsamp)
│ │ │              static int      Deprecated. 
│ │ │                              Use bufSizeYUV(int,_int,_int,_int) instead.
│ │ │ -                            bufSizeYUV(int width, int pad, int height, int subsamp)
│ │ │ -            static int      Returns the size of the buffer (in bytes) required to hold a YUV
│ │ │ -                            planar image with the given width, height, and level of chrominance
│ │ │ -                            subsampling.
│ │ │ +                            bufSizeYUV(int width, int align, int height, int subsamp)
│ │ │ +            static int      Returns the size of the buffer (in bytes) required to hold a unified
│ │ │ +                            planar YUV image with the given width, height, and level of
│ │ │ +                            chrominance subsampling.
│ │ │                              getAlphaOffset(int pixelFormat)
│ │ │              static int      For the given pixel format, returns the number of bytes that the
│ │ │                              alpha component is offset from the start of the pixel.
│ │ │                              getBlueOffset(int pixelFormat)
│ │ │              static int      For the given pixel format, returns the number of bytes that the
│ │ │                              blue component is offset from the start of the pixel.
│ │ │                              getGreenOffset(int pixelFormat)
│ │ │ @@ -164,15 +161,15 @@
│ │ │              static int      getPixelSize(int pixelFormat)
│ │ │                              Returns the pixel size (in bytes) for the given pixel format.
│ │ │                              getRedOffset(int pixelFormat)
│ │ │              static int      For the given pixel format, returns the number of bytes that the red
│ │ │                              component is offset from the start of the pixel.
│ │ │              static          getScalingFactors()
│ │ │              TJScalingFactor Returns a list of fractional scaling factors that the JPEG
│ │ │ -            []              decompressor in this implementation of TurboJPEG supports.
│ │ │ +            []              decompressor supports.
│ │ │                              planeHeight(int componentID, int height, int subsamp)
│ │ │              static int      Returns the plane height of a YUV image plane with the given
│ │ │                              parameters.
│ │ │                              planeSizeYUV(int componentID, int width, int stride, int height,
│ │ │              static int      int subsamp)
│ │ │                              Returns the size of the buffer (in bytes) required to hold a YUV
│ │ │                              image plane with the given parameters.
│ │ │ @@ -336,32 +333,33 @@
│ │ │                    background. In order to convert between CMYK and RGB, it is
│ │ │                    necessary to use a color management system (CMS.) A CMS will
│ │ │                    attempt to map colors within the printer's gamut to
│ │ │                    perceptually similar colors in the display's gamut and vice
│ │ │                    versa, but the mapping is typically not 1:1 or reversible,
│ │ │                    nor can it be defined with a simple formula. Thus, such a
│ │ │                    conversion is out of scope for a codec library. However, the
│ │ │ -                  TurboJPEG API allows for compressing CMYK pixels into a YCCK
│ │ │ -                  JPEG image (see CS_YCCK) and decompressing YCCK JPEG images
│ │ │ -                  into CMYK pixels.
│ │ │ +                  TurboJPEG API allows for compressing packed-pixel CMYK images
│ │ │ +                  into YCCK JPEG images (see CS_YCCK) and decompressing YCCK
│ │ │ +                  JPEG images into packed-pixel CMYK images.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** NUMCS ***
│ │ │                    public static final int NUMCS
│ │ │                    The number of JPEG colorspaces
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** CS_RGB ***
│ │ │                    public static final int CS_RGB
│ │ │                    RGB colorspace. When compressing the JPEG image, the R, G,
│ │ │                    and B components in the source image are reordered into image
│ │ │                    planes, but no colorspace conversion or subsampling is
│ │ │ -                  performed. RGB JPEG images can be decompressed to any of the
│ │ │ -                  extended RGB pixel formats or grayscale, but they cannot be
│ │ │ -                  decompressed to YUV images.
│ │ │ +                  performed. RGB JPEG images can be decompressed to packed-
│ │ │ +                  pixel images with any of the extended RGB or grayscale pixel
│ │ │ +                  formats, but they cannot be decompressed to planar YUV
│ │ │ +                  images.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** CS_YCbCr ***
│ │ │                    public static final int CS_YCbCr
│ │ │                    YCbCr colorspace. YCbCr is not an absolute colorspace but
│ │ │                    rather a mathematical transformation of RGB designed solely
│ │ │                    for storage and transmission. YCbCr images must be converted
│ │ │ @@ -369,56 +367,59 @@
│ │ │                    colorspace, the Y (luminance) component represents the black
│ │ │                    & white portion of the original image, and the Cb and Cr
│ │ │                    (chrominance) components represent the color portion of the
│ │ │                    original image. Originally, the analog equivalent of this
│ │ │                    transformation allowed the same signal to drive both black &
│ │ │                    white and color televisions, but JPEG images use YCbCr
│ │ │                    primarily because it allows the color data to be optionally
│ │ │ -                  subsampled for the purposes of reducing bandwidth or disk
│ │ │ -                  space. YCbCr is the most common JPEG colorspace, and YCbCr
│ │ │ -                  JPEG images can be compressed from and decompressed to any of
│ │ │ -                  the extended RGB pixel formats or grayscale, or they can be
│ │ │ -                  decompressed to YUV planar images.
│ │ │ +                  subsampled for the purposes of reducing network or disk
│ │ │ +                  usage. YCbCr is the most common JPEG colorspace, and YCbCr
│ │ │ +                  JPEG images can be compressed from and decompressed to
│ │ │ +                  packed-pixel images with any of the extended RGB or grayscale
│ │ │ +                  pixel formats. YCbCr JPEG images can also be compressed from
│ │ │ +                  and decompressed to planar YUV images.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** CS_GRAY ***
│ │ │                    public static final int CS_GRAY
│ │ │                    Grayscale colorspace. The JPEG image retains only the
│ │ │                    luminance data (Y component), and any color data from the
│ │ │                    source image is discarded. Grayscale JPEG images can be
│ │ │ -                  compressed from and decompressed to any of the extended RGB
│ │ │ -                  pixel formats or grayscale, or they can be decompressed to
│ │ │ -                  YUV planar images.
│ │ │ +                  compressed from and decompressed to packed-pixel images with
│ │ │ +                  any of the extended RGB or grayscale pixel formats, or they
│ │ │ +                  can be compressed from and decompressed to planar YUV images.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** CS_CMYK ***
│ │ │                    public static final int CS_CMYK
│ │ │                    CMYK colorspace. When compressing the JPEG image, the C, M,
│ │ │                    Y, and K components in the source image are reordered into
│ │ │                    image planes, but no colorspace conversion or subsampling is
│ │ │ -                  performed. CMYK JPEG images can only be decompressed to CMYK
│ │ │ -                  pixels.
│ │ │ +                  performed. CMYK JPEG images can only be decompressed to
│ │ │ +                  packed-pixel images with the CMYK pixel format.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** CS_YCCK ***
│ │ │                    public static final int CS_YCCK
│ │ │                    YCCK colorspace. YCCK (AKA "YCbCrK") is not an absolute
│ │ │                    colorspace but rather a mathematical transformation of CMYK
│ │ │                    designed solely for storage and transmission. It is to CMYK
│ │ │                    as YCbCr is to RGB. CMYK pixels can be reversibly transformed
│ │ │                    into YCCK, and as with YCbCr, the chrominance components in
│ │ │                    the YCCK pixels can be subsampled without incurring major
│ │ │                    perceptual loss. YCCK JPEG images can only be compressed from
│ │ │ -                  and decompressed to CMYK pixels.
│ │ │ +                  and decompressed to packed-pixel images with the CMYK pixel
│ │ │ +                  format.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** FLAG_BOTTOMUP ***
│ │ │                    public static final int FLAG_BOTTOMUP
│ │ │ -                  The uncompressed source/destination image is stored in
│ │ │ -                  bottom-up (Windows, OpenGL) order, not top-down (X11) order.
│ │ │ +                  Rows in the packed-pixel source/destination image are stored
│ │ │ +                  in bottom-up (Windows, OpenGL) order rather than in top-down
│ │ │ +                  (X11) order.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** FLAG_FORCEMMX ***
│ │ │                    @Deprecated
│ │ │                    public static final int FLAG_FORCEMMX
│ │ │                    Deprecated. 
│ │ │                      See Also:
│ │ │ @@ -441,57 +442,55 @@
│ │ │                    Deprecated. 
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** FLAG_FASTUPSAMPLE ***
│ │ │                    public static final int FLAG_FASTUPSAMPLE
│ │ │                    When decompressing an image that was compressed using
│ │ │                    chrominance subsampling, use the fastest chrominance
│ │ │ -                  upsampling algorithm available in the underlying codec. The
│ │ │ -                  default is to use smooth upsampling, which creates a smooth
│ │ │ -                  transition between neighboring chrominance components in
│ │ │ -                  order to reduce upsampling artifacts in the decompressed
│ │ │ -                  image.
│ │ │ +                  upsampling algorithm available. The default is to use smooth
│ │ │ +                  upsampling, which creates a smooth transition between
│ │ │ +                  neighboring chrominance components in order to reduce
│ │ │ +                  upsampling artifacts in the decompressed image.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** FLAG_FASTDCT ***
│ │ │                    public static final int FLAG_FASTDCT
│ │ │ -                  Use the fastest DCT/IDCT algorithm available in the
│ │ │ -                  underlying codec. The default if this flag is not specified
│ │ │ -                  is implementation-specific. For example, the implementation
│ │ │ -                  of TurboJPEG for libjpeg[-turbo] uses the fast algorithm by
│ │ │ -                  default when compressing, because this has been shown to have
│ │ │ -                  only a very slight effect on accuracy, but it uses the
│ │ │ -                  accurate algorithm when decompressing, because this has been
│ │ │ -                  shown to have a larger effect.
│ │ │ +                  Use the fastest DCT/IDCT algorithm available. The default if
│ │ │ +                  this flag is not specified is implementation-specific. For
│ │ │ +                  example, the implementation of the TurboJPEG API in libjpeg-
│ │ │ +                  turbo uses the fast algorithm by default when compressing,
│ │ │ +                  because this has been shown to have only a very slight effect
│ │ │ +                  on accuracy, but it uses the accurate algorithm when
│ │ │ +                  decompressing, because this has been shown to have a larger
│ │ │ +                  effect.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** FLAG_ACCURATEDCT ***
│ │ │                    public static final int FLAG_ACCURATEDCT
│ │ │ -                  Use the most accurate DCT/IDCT algorithm available in the
│ │ │ -                  underlying codec. The default if this flag is not specified
│ │ │ -                  is implementation-specific. For example, the implementation
│ │ │ -                  of TurboJPEG for libjpeg[-turbo] uses the fast algorithm by
│ │ │ -                  default when compressing, because this has been shown to have
│ │ │ -                  only a very slight effect on accuracy, but it uses the
│ │ │ -                  accurate algorithm when decompressing, because this has been
│ │ │ -                  shown to have a larger effect.
│ │ │ +                  Use the most accurate DCT/IDCT algorithm available. The
│ │ │ +                  default if this flag is not specified is implementation-
│ │ │ +                  specific. For example, the implementation of the TurboJPEG
│ │ │ +                  API in libjpeg-turbo uses the fast algorithm by default when
│ │ │ +                  compressing, because this has been shown to have only a very
│ │ │ +                  slight effect on accuracy, but it uses the accurate algorithm
│ │ │ +                  when decompressing, because this has been shown to have a
│ │ │ +                  larger effect.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** FLAG_STOPONWARNING ***
│ │ │                    public static final int FLAG_STOPONWARNING
│ │ │                    Immediately discontinue the current compression/
│ │ │ -                  decompression/transform operation if the underlying codec
│ │ │ -                  throws a warning (non-fatal error). The default behavior is
│ │ │ -                  to allow the operation to complete unless a fatal error is
│ │ │ -                  encountered.
│ │ │ +                  decompression/transform operation if a warning (non-fatal
│ │ │ +                  error) occurs. The default behavior is to allow the operation
│ │ │ +                  to complete unless a fatal error is encountered.
│ │ │                    NOTE: due to the design of the TurboJPEG Java API, only
│ │ │                    certain methods (specifically, TJDecompressor.decompress*()
│ │ │                    methods with a void return type) will complete and leave the
│ │ │ -                  output image in a fully recoverable state after a non-fatal
│ │ │ -                  error occurs.
│ │ │ +                  destination image in a fully recoverable state after a non-
│ │ │ +                  fatal error occurs.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** FLAG_PROGRESSIVE ***
│ │ │                    public static final int FLAG_PROGRESSIVE
│ │ │                    Use progressive entropy coding in JPEG images generated by
│ │ │                    compression and transform operations. Progressive entropy
│ │ │                    coding will generally improve compression relative to
│ │ │ @@ -514,21 +513,21 @@
│ │ │                  # *** NUMERR ***
│ │ │                    public static final int NUMERR
│ │ │                    The number of error codes
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** ERR_WARNING ***
│ │ │                    public static final int ERR_WARNING
│ │ │ -                  The error was non-fatal and recoverable, but the image may
│ │ │ -                  still be corrupt.
│ │ │ +                  The error was non-fatal and recoverable, but the destination
│ │ │ +                  image may still be corrupt.
│ │ │                    NOTE: due to the design of the TurboJPEG Java API, only
│ │ │                    certain methods (specifically, TJDecompressor.decompress*()
│ │ │                    methods with a void return type) will complete and leave the
│ │ │ -                  output image in a fully recoverable state after a non-fatal
│ │ │ -                  error occurs.
│ │ │ +                  destination image in a fully recoverable state after a non-
│ │ │ +                  fatal error occurs.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** ERR_FATAL ***
│ │ │                    public static final int ERR_FATAL
│ │ │                    The error was fatal and non-recoverable.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │ @@ -623,32 +622,34 @@
│ │ │                          TJ.SAMP_*)
│ │ │                      Returns:
│ │ │                          the maximum size of the buffer (in bytes) required to
│ │ │                          hold a JPEG image with the given width, height, and
│ │ │                          level of chrominance subsampling.
│ │ │                  # *** bufSizeYUV ***
│ │ │                    public static int bufSizeYUV(int width,
│ │ │ -                               int pad,
│ │ │ +                               int align,
│ │ │                                 int height,
│ │ │                                 int subsamp)
│ │ │                    Returns the size of the buffer (in bytes) required to hold a
│ │ │ -                  YUV planar image with the given width, height, and level of
│ │ │ -                  chrominance subsampling.
│ │ │ +                  unified planar YUV image with the given width, height, and
│ │ │ +                  level of chrominance subsampling.
│ │ │                      Parameters:
│ │ │                          width - the width (in pixels) of the YUV image
│ │ │ -                        pad - the width of each line in each plane of the image
│ │ │ -                        is padded to the nearest multiple of this number of
│ │ │ -                        bytes (must be a power of 2.)
│ │ │ +                        align - row alignment (in bytes) of the YUV image (must
│ │ │ +                        be a power of 2.) Setting this parameter to n specifies
│ │ │ +                        that each row in each plane of the YUV image will be
│ │ │ +                        padded to the nearest multiple of n bytes (1 =
│ │ │ +                        unpadded.)
│ │ │                          height - the height (in pixels) of the YUV image
│ │ │                          subsamp - the level of chrominance subsampling used in
│ │ │                          the YUV image (one of TJ.SAMP_*)
│ │ │                      Returns:
│ │ │                          the size of the buffer (in bytes) required to hold a
│ │ │ -                        YUV planar image with the given width, height, and
│ │ │ -                        level of chrominance subsampling.
│ │ │ +                        unified planar YUV image with the given width, height,
│ │ │ +                        and level of chrominance subsampling.
│ │ │                  # *** bufSizeYUV ***
│ │ │                    @Deprecated
│ │ │                    public static int bufSizeYUV(int width,
│ │ │                                            int height,
│ │ │                                            int subsamp)
│ │ │                    Deprecated. Use bufSizeYUV(int,_int,_int,_int) instead.
│ │ │                  # *** planeSizeYUV ***
│ │ │ @@ -660,23 +661,23 @@
│ │ │                    Returns the size of the buffer (in bytes) required to hold a
│ │ │                    YUV image plane with the given parameters.
│ │ │                      Parameters:
│ │ │                          componentID - ID number of the image plane (0 = Y, 1 =
│ │ │                          U/Cb, 2 = V/Cr)
│ │ │                          width - width (in pixels) of the YUV image. NOTE: this
│ │ │                          is the width of the whole image, not the plane width.
│ │ │ -                        stride - bytes per line in the image plane.
│ │ │ +                        stride - bytes per row in the image plane.
│ │ │                          height - height (in pixels) of the YUV image. NOTE:
│ │ │                          this is the height of the whole image, not the plane
│ │ │                          height.
│ │ │                          subsamp - the level of chrominance subsampling used in
│ │ │                          the YUV image (one of TJ.SAMP_*)
│ │ │                      Returns:
│ │ │                          the size of the buffer (in bytes) required to hold a
│ │ │ -                        YUV planar image with the given parameters.
│ │ │ +                        YUV image plane with the given parameters.
│ │ │                  # *** planeWidth ***
│ │ │                    public static int planeWidth(int componentID,
│ │ │                                 int width,
│ │ │                                 int subsamp)
│ │ │                    Returns the plane width of a YUV image plane with the given
│ │ │                    parameters. Refer to YUVImage for a description of plane
│ │ │                    width.
│ │ │ @@ -704,19 +705,18 @@
│ │ │                          the YUV image (one of TJ.SAMP_*)
│ │ │                      Returns:
│ │ │                          the plane height of a YUV image plane with the given
│ │ │                          parameters.
│ │ │                  # *** getScalingFactors ***
│ │ │                    public static TJScalingFactor[] getScalingFactors()
│ │ │                    Returns a list of fractional scaling factors that the JPEG
│ │ │ -                  decompressor in this implementation of TurboJPEG supports.
│ │ │ +                  decompressor supports.
│ │ │                      Returns:
│ │ │                          a list of fractional scaling factors that the JPEG
│ │ │ -                        decompressor in this implementation of TurboJPEG
│ │ │ -                        supports.
│ │ │ +                        decompressor supports.
│ │ │  
│ │ │      * Package
│ │ │      * Class
│ │ │      * Tree
│ │ │      * Deprecated
│ │ │      * Index
│ │ │      * Help
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html
│ │┄ Files 4% similar despite different names
│ │ @@ -128,15 +128,15 @@
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)">TJCompressor</a></strong>(java.awt.image.BufferedImage&nbsp;srcImage,
│ │              int&nbsp;x,
│ │              int&nbsp;y,
│ │              int&nbsp;width,
│ │              int&nbsp;height)</code>
│ │ -<div class="block">Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +<div class="block">Create a TurboJPEG compressor instance and associate the packed-pixel
│ │   source image stored in <code>srcImage</code> with the newly created
│ │   instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor(byte[],%20int,%20int,%20int,%20int)">TJCompressor</a></strong>(byte[]&nbsp;srcImage,
│ │              int&nbsp;width,
│ │ @@ -153,15 +153,15 @@
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#TJCompressor(byte[],%20int,%20int,%20int,%20int,%20int,%20int)">TJCompressor</a></strong>(byte[]&nbsp;srcImage,
│ │              int&nbsp;x,
│ │              int&nbsp;y,
│ │              int&nbsp;width,
│ │              int&nbsp;pitch,
│ │              int&nbsp;height,
│ │              int&nbsp;pixelFormat)</code>
│ │ -<div class="block">Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +<div class="block">Create a TurboJPEG compressor instance and associate the packed-pixel
│ │   source image stored in <code>srcImage</code> with the newly created
│ │   instance.</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  </li>
│ │  </ul>
│ │ @@ -206,23 +206,24 @@
│ │  </div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#compress(byte[],%20int)">compress</a></strong>(byte[]&nbsp;dstBuf,
│ │          int&nbsp;flags)</code>
│ │ -<div class="block">Compress the uncompressed source image associated with this compressor
│ │ - instance and output a JPEG image to the given destination buffer.</div>
│ │ +<div class="block">Compress the packed-pixel or planar YUV source image associated with this
│ │ + compressor instance and output a JPEG image to the given destination
│ │ + buffer.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>byte[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#compress(int)">compress</a></strong>(int&nbsp;flags)</code>
│ │ -<div class="block">Compress the uncompressed source image associated with this compressor
│ │ - instance and return a buffer containing a JPEG image.</div>
│ │ +<div class="block">Compress the packed-pixel or planar YUV source image associated with this
│ │ + compressor instance and return a buffer containing a JPEG image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(java.awt.image.BufferedImage,%20byte[],%20int)">encodeYUV</a></strong>(java.awt.image.BufferedImage&nbsp;srcImage,
│ │           byte[]&nbsp;dstBuf,
│ │           int&nbsp;flags)</code>
│ │ @@ -261,35 +262,35 @@
│ │  </div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(int[],%20int)">encodeYUV</a></strong>(int[]&nbsp;strides,
│ │           int&nbsp;flags)</code>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │   instance into separate Y, U (Cb), and V (Cr) image planes and return a
│ │ - <code>YUVImage</code> instance containing the encoded image planes.</div>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the encoded image planes.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></code></td>
│ │ -<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(int,%20int)">encodeYUV</a></strong>(int&nbsp;pad,
│ │ +<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(int,%20int)">encodeYUV</a></strong>(int&nbsp;align,
│ │           int&nbsp;flags)</code>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ - instance into a unified YUV planar image buffer and return a
│ │ - <code>YUVImage</code> instance containing the encoded image.</div>
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │ + instance into a unified planar YUV image and return a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>
│ │ + instance containing the encoded image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#encodeYUV(org.libjpegturbo.turbojpeg.YUVImage,%20int)">encodeYUV</a></strong>(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;dstImage,
│ │           int&nbsp;flags)</code>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ - instance into a YUV planar image and store it in the given
│ │ - <code>YUVImage</code> instance.</div>
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │ + instance into a planar YUV image and store it in the given
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>protected void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#finalize()">finalize</a></strong>()</code>&nbsp;</td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │ @@ -308,15 +309,15 @@
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)">setSourceImage</a></strong>(java.awt.image.BufferedImage&nbsp;srcImage,
│ │                int&nbsp;x,
│ │                int&nbsp;y,
│ │                int&nbsp;width,
│ │                int&nbsp;height)</code>
│ │ -<div class="block">Associate an uncompressed RGB or grayscale source image with this
│ │ +<div class="block">Associate a packed-pixel RGB or grayscale source image with this
│ │   compressor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int)">setSourceImage</a></strong>(byte[]&nbsp;srcImage,
│ │                int&nbsp;width,
│ │ @@ -334,23 +335,22 @@
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)">setSourceImage</a></strong>(byte[]&nbsp;srcImage,
│ │                int&nbsp;x,
│ │                int&nbsp;y,
│ │                int&nbsp;width,
│ │                int&nbsp;pitch,
│ │                int&nbsp;height,
│ │                int&nbsp;pixelFormat)</code>
│ │ -<div class="block">Associate an uncompressed RGB, grayscale, or CMYK source image with this
│ │ +<div class="block">Associate a packed-pixel RGB, grayscale, or CMYK source image with this
│ │   compressor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(org.libjpegturbo.turbojpeg.YUVImage)">setSourceImage</a></strong>(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;srcImage)</code>
│ │ -<div class="block">Associate an uncompressed YUV planar source image with this compressor
│ │ - instance.</div>
│ │ +<div class="block">Associate a planar YUV source image with this compressor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSubsamp(int)">setSubsamp</a></strong>(int&nbsp;newSubsamp)</code>
│ │  <div class="block">Set the level of chrominance subsampling for subsequent compress/encode
│ │   operations.</div>
│ │ @@ -401,15 +401,15 @@
│ │              int&nbsp;x,
│ │              int&nbsp;y,
│ │              int&nbsp;width,
│ │              int&nbsp;pitch,
│ │              int&nbsp;height,
│ │              int&nbsp;pixelFormat)
│ │               throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +<div class="block">Create a TurboJPEG compressor instance and associate the packed-pixel
│ │   source image stored in <code>srcImage</code> with the newly created
│ │   instance.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - see <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>setSourceImage(byte[], int, int, int, int, int, int)</code></a> for description</dd><dd><code>x</code> - see <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>setSourceImage(byte[], int, int, int, int, int, int)</code></a> for description</dd><dd><code>y</code> - see <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>setSourceImage(byte[], int, int, int, int, int, int)</code></a> for description</dd><dd><code>width</code> - see <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>setSourceImage(byte[], int, int, int, int, int, int)</code></a> for description</dd><dd><code>pitch</code> - see <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>setSourceImage(byte[], int, int, int, int, int, int)</code></a> for description</dd><dd><code>height</code> - see <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(byte[],%20int,%20int,%20int,%20int,%20int,%20int)"><code>setSourceImage(byte[], int, int, int, int, int, int)</code></a> for description</dd><dd><code>pixelFormat</code> - pixel format of the source image (one of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>TJ.PF_*</code></a>)</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │ @@ -441,15 +441,15 @@
│ │  <h4>TJCompressor</h4>
│ │  <pre>public&nbsp;TJCompressor(java.awt.image.BufferedImage&nbsp;srcImage,
│ │              int&nbsp;x,
│ │              int&nbsp;y,
│ │              int&nbsp;width,
│ │              int&nbsp;height)
│ │               throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +<div class="block">Create a TurboJPEG compressor instance and associate the packed-pixel
│ │   source image stored in <code>srcImage</code> with the newly created
│ │   instance.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)"><code>setSourceImage(BufferedImage, int, int, int, int)</code></a> for description</dd><dd><code>x</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)"><code>setSourceImage(BufferedImage, int, int, int, int)</code></a> for description</dd><dd><code>y</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)"><code>setSourceImage(BufferedImage, int, int, int, int)</code></a> for description</dd><dd><code>width</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#setSourceImage(java.awt.image.BufferedImage,%20int,%20int,%20int,%20int)"><code>setSourceImage(BufferedImage, int, int, int, int)</code></a> for description</dd><dd><code>height</code> - see
│ │ @@ -476,28 +476,30 @@
│ │                    int&nbsp;x,
│ │                    int&nbsp;y,
│ │                    int&nbsp;width,
│ │                    int&nbsp;pitch,
│ │                    int&nbsp;height,
│ │                    int&nbsp;pixelFormat)
│ │                      throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Associate an uncompressed RGB, grayscale, or CMYK source image with this
│ │ +<div class="block">Associate a packed-pixel RGB, grayscale, or CMYK source image with this
│ │   compressor instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - image buffer containing RGB, grayscale, or CMYK pixels to
│ │ - be compressed or encoded.  This buffer is not modified.</dd><dd><code>x</code> - x offset (in pixels) of the region in the source image from which
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - buffer containing a packed-pixel RGB, grayscale, or CMYK
│ │ + source image to be compressed or encoded.  This buffer is not modified.</dd><dd><code>x</code> - x offset (in pixels) of the region in the source image from which
│ │   the JPEG or YUV image should be compressed/encoded</dd><dd><code>y</code> - y offset (in pixels) of the region in the source image from which
│ │   the JPEG or YUV image should be compressed/encoded</dd><dd><code>width</code> - width (in pixels) of the region in the source image from
│ │ - which the JPEG or YUV image should be compressed/encoded</dd><dd><code>pitch</code> - bytes per line of the source image.  Normally, this should be
│ │ - <code>width * TJ.pixelSize(pixelFormat)</code> if the source image is
│ │ - unpadded, but you can use this parameter to, for instance, specify that
│ │ - the scanlines in the source image are padded to a 4-byte boundary or to
│ │ - compress/encode a JPEG or YUV image from a region of a larger source
│ │ - image.  You can also be clever and use this parameter to skip lines, etc.
│ │ - Setting this parameter to 0 is the equivalent of setting it to
│ │ - <code>width * TJ.pixelSize(pixelFormat)</code>.</dd><dd><code>height</code> - height (in pixels) of the region in the source image from
│ │ + which the JPEG or YUV image should be compressed/encoded</dd><dd><code>pitch</code> - bytes per row in the source image.  Normally this should be
│ │ + <code>width *
│ │ + </code><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getPixelSize(int)"><code>TJ.getPixelSize</code></a><code>(pixelFormat)</code>,
│ │ + if the source image is unpadded.  However, you can use this parameter to,
│ │ + for instance, specify that the rows in the source image are padded to the
│ │ + nearest multiple of 4 bytes or to compress/encode a JPEG or YUV image from
│ │ + a region of a larger source image.  You can also be clever and use this
│ │ + parameter to skip rows, etc.  Setting this parameter to 0 is the
│ │ + equivalent of setting it to <code>width *
│ │ + </code><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getPixelSize(int)"><code>TJ.getPixelSize</code></a><code>(pixelFormat)</code>.</dd><dd><code>height</code> - height (in pixels) of the region in the source image from
│ │   which the JPEG or YUV image should be compressed/encoded</dd><dd><code>pixelFormat</code> - pixel format of the source image (one of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>TJ.PF_*</code></a>)</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="setSourceImage(byte[], int, int, int, int)">
│ │ @@ -527,18 +529,19 @@
│ │  <h4>setSourceImage</h4>
│ │  <pre>public&nbsp;void&nbsp;setSourceImage(java.awt.image.BufferedImage&nbsp;srcImage,
│ │                    int&nbsp;x,
│ │                    int&nbsp;y,
│ │                    int&nbsp;width,
│ │                    int&nbsp;height)
│ │                      throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Associate an uncompressed RGB or grayscale source image with this
│ │ +<div class="block">Associate a packed-pixel RGB or grayscale source image with this
│ │   compressor instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - a <code>BufferedImage</code> instance containing RGB or
│ │ - grayscale pixels to be compressed or encoded.  This image is not modified.</dd><dd><code>x</code> - x offset (in pixels) of the region in the source image from which
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - a <code>BufferedImage</code> instance containing a
│ │ + packed-pixel RGB or grayscale source image to be compressed or encoded.
│ │ + This image is not modified.</dd><dd><code>x</code> - x offset (in pixels) of the region in the source image from which
│ │   the JPEG or YUV image should be compressed/encoded</dd><dd><code>y</code> - y offset (in pixels) of the region in the source image from which
│ │   the JPEG or YUV image should be compressed/encoded</dd><dd><code>width</code> - width (in pixels) of the region in the source image from
│ │   which the JPEG or YUV image should be compressed/encoded (0 = use the
│ │   width of the source image)</dd><dd><code>height</code> - height (in pixels) of the region in the source image from
│ │   which the JPEG or YUV image should be compressed/encoded (0 = use the
│ │   height of the source image)</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │ @@ -549,18 +552,17 @@
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>setSourceImage</h4>
│ │  <pre>public&nbsp;void&nbsp;setSourceImage(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;srcImage)
│ │                      throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Associate an uncompressed YUV planar source image with this compressor
│ │ - instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - YUV planar image to be compressed.  This image is not
│ │ - modified.</dd>
│ │ +<div class="block">Associate a planar YUV source image with this compressor instance.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - planar YUV source image to be compressed.  This image is
│ │ + not modified.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="setSubsamp(int)">
│ │  <!--   -->
│ │  </a>
│ │ @@ -569,24 +571,24 @@
│ │  <h4>setSubsamp</h4>
│ │  <pre>public&nbsp;void&nbsp;setSubsamp(int&nbsp;newSubsamp)</pre>
│ │  <div class="block">Set the level of chrominance subsampling for subsequent compress/encode
│ │   operations.  When pixels are converted from RGB to YCbCr (see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#CS_YCbCr"><code>TJ.CS_YCbCr</code></a>) or from CMYK to YCCK (see <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#CS_YCCK"><code>TJ.CS_YCCK</code></a>) as part
│ │   of the JPEG compression process, some of the Cb and Cr (chrominance)
│ │   components can be discarded or averaged together to produce a smaller
│ │ - image with little perceptible loss of image clarity (the human eye is more
│ │ - sensitive to small changes in brightness than to small changes in color.)
│ │ - This is called "chrominance subsampling".
│ │ + image with little perceptible loss of image clarity.  (The human eye is
│ │ + more sensitive to small changes in brightness than to small changes in
│ │ + color.)  This is called "chrominance subsampling".
│ │   <p>
│ │ - NOTE: This method has no effect when compressing a JPEG image from a YUV
│ │ - planar source.  In that case, the level of chrominance subsampling in
│ │ - the JPEG image is determined by the source.  Furthermore, this method has
│ │ - no effect when encoding to a pre-allocated <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.  In
│ │ - that case, the level of chrominance subsampling is determined by the
│ │ - destination.</div>
│ │ + NOTE: This method has no effect when compressing a JPEG image from a
│ │ + planar YUV source image.  In that case, the level of chrominance
│ │ + subsampling in the JPEG image is determined by the source image.
│ │ + Furthermore, this method has no effect when encoding to a pre-allocated
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.  In that case, the level of chrominance
│ │ + subsampling is determined by the destination image.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>newSubsamp</code> - the level of chrominance subsampling to use in
│ │   subsequent compress/encode oeprations (one of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="setJPEGQuality(int)">
│ │  <!--   -->
│ │ @@ -605,16 +607,17 @@
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>compress</h4>
│ │  <pre>public&nbsp;void&nbsp;compress(byte[]&nbsp;dstBuf,
│ │              int&nbsp;flags)
│ │                throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Compress the uncompressed source image associated with this compressor
│ │ - instance and output a JPEG image to the given destination buffer.</div>
│ │ +<div class="block">Compress the packed-pixel or planar YUV source image associated with this
│ │ + compressor instance and output a JPEG image to the given destination
│ │ + buffer.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstBuf</code> - buffer that will receive the JPEG image.  Use
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSize(int,%20int,%20int)"><code>TJ.bufSize(int, int, int)</code></a> to determine the maximum size for this buffer based on
│ │   the source image's width and height and the desired level of chrominance
│ │   subsampling.</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │ @@ -624,16 +627,16 @@
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>compress</h4>
│ │  <pre>public&nbsp;byte[]&nbsp;compress(int&nbsp;flags)
│ │                  throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Compress the uncompressed source image associated with this compressor
│ │ - instance and return a buffer containing a JPEG image.</div>
│ │ +<div class="block">Compress the packed-pixel or planar YUV source image associated with this
│ │ + compressor instance and return a buffer containing a JPEG image.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>a buffer containing a JPEG image.  The length of this buffer will
│ │   not be equal to the size of the JPEG image.  Use <a href="../../../org/libjpegturbo/turbojpeg/TJCompressor.html#getCompressedSize()"><code>getCompressedSize()</code></a> to obtain the size of the JPEG image.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │ @@ -678,21 +681,21 @@
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>encodeYUV</h4>
│ │  <pre>public&nbsp;void&nbsp;encodeYUV(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;dstImage,
│ │               int&nbsp;flags)
│ │                 throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ - instance into a YUV planar image and store it in the given
│ │ - <code>YUVImage</code> instance.   This method uses the accelerated color
│ │ - conversion routines in TurboJPEG's underlying codec but does not execute
│ │ - any of the other steps in the JPEG compression process.  Encoding
│ │ - CMYK source images to YUV is not supported.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance that will receive the YUV planar
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │ + instance into a planar YUV image and store it in the given
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.  This method performs color conversion (which
│ │ + is accelerated in the libjpeg-turbo implementation) but does not execute
│ │ + any of the other steps in the JPEG compression process.  Encoding CMYK
│ │ + source images into YUV images is not supported.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance that will receive the planar YUV
│ │   image</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="encodeYUV(byte[], int)">
│ │ @@ -712,56 +715,58 @@
│ │  </ul>
│ │  <a name="encodeYUV(int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>encodeYUV</h4>
│ │ -<pre>public&nbsp;<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;encodeYUV(int&nbsp;pad,
│ │ +<pre>public&nbsp;<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;encodeYUV(int&nbsp;align,
│ │                   int&nbsp;flags)
│ │                     throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ - instance into a unified YUV planar image buffer and return a
│ │ - <code>YUVImage</code> instance containing the encoded image.  This method
│ │ - uses the accelerated color conversion routines in TurboJPEG's underlying
│ │ - codec but does not execute any of the other steps in the JPEG compression
│ │ - process.  Encoding CMYK source images to YUV is not supported.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>pad</code> - the width of each line in each plane of the YUV image will be
│ │ - padded to the nearest multiple of this number of bytes (must be a power of
│ │ - 2.)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │ + instance into a unified planar YUV image and return a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>
│ │ + instance containing the encoded image.  This method performs color
│ │ + conversion (which is accelerated in the libjpeg-turbo implementation) but
│ │ + does not execute any of the other steps in the JPEG compression process.
│ │ + Encoding CMYK source images into YUV images is not supported.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>align</code> - row alignment (in bytes) of the YUV image (must be a power of
│ │ + 2.)  Setting this parameter to n will cause each row in each plane of the
│ │ + YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>a YUV planar image.</dd>
│ │ +<dt><span class="strong">Returns:</span></dt><dd>a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the unified planar YUV
│ │ + encoded image</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="encodeYUV(int[], int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>encodeYUV</h4>
│ │  <pre>public&nbsp;<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;encodeYUV(int[]&nbsp;strides,
│ │                   int&nbsp;flags)
│ │                     throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Encode the uncompressed source image associated with this compressor
│ │ +<div class="block">Encode the packed-pixel source image associated with this compressor
│ │   instance into separate Y, U (Cb), and V (Cr) image planes and return a
│ │ - <code>YUVImage</code> instance containing the encoded image planes.  This
│ │ - method uses the accelerated color conversion routines in TurboJPEG's
│ │ - underlying codec but does not execute any of the other steps in the JPEG
│ │ - compression process.  Encoding CMYK source images to YUV is not supported.</div>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the encoded image planes.  This
│ │ + method performs color conversion (which is accelerated in the
│ │ + libjpeg-turbo implementation) but does not execute any of the other steps
│ │ + in the JPEG compression process.  Encoding CMYK source images into YUV
│ │ + images is not supported.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>strides</code> - an array of integers, each specifying the number of bytes
│ │ - per line in the corresponding plane of the output image.  Setting the
│ │ - stride for any plane to 0 is the same as setting it to the component width
│ │ - of the plane.  If <code>strides</code> is null, then the strides for all
│ │ - planes will be set to their respective component widths.  You can adjust
│ │ - the strides in order to add an arbitrary amount of line padding to each
│ │ - plane.</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │ + per row in the corresponding plane of the YUV source image.  Setting the
│ │ + stride for any plane to 0 is the same as setting it to the plane width
│ │ + (see <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>.)  If <code>strides</code> is null, then the strides
│ │ + for all planes will be set to their respective plane widths.  You can
│ │ + adjust the strides in order to add an arbitrary amount of row padding to
│ │ + each plane.</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>a YUV planar image.</dd>
│ │ +<dt><span class="strong">Returns:</span></dt><dd>a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the encoded image planes</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="encodeYUV(int)">
│ │  <!--   -->
│ │  </a>
│ │ ├── html2text {}
│ │ │ @@ -38,23 +38,23 @@
│ │ │      *     o **** Constructor Summary ****
│ │ │                                          Constructors 
│ │ │              Constructor and Description
│ │ │              TJCompressor()
│ │ │              Create a TurboJPEG compressor instance.
│ │ │              TJCompressor(java.awt.image.BufferedImage srcImage, int x, int y,
│ │ │              int width, int height)
│ │ │ -            Create a TurboJPEG compressor instance and associate the uncompressed
│ │ │ +            Create a TurboJPEG compressor instance and associate the packed-pixel
│ │ │              source image stored in srcImage with the newly created instance.
│ │ │              TJCompressor(byte[] srcImage, int width, int pitch, int height,
│ │ │              int pixelFormat)
│ │ │              Deprecated. 
│ │ │              Use TJCompressor(byte[],_int,_int,_int,_int,_int,_int) instead.
│ │ │              TJCompressor(byte[] srcImage, int x, int y, int width, int pitch,
│ │ │              int height, int pixelFormat)
│ │ │ -            Create a TurboJPEG compressor instance and associate the uncompressed
│ │ │ +            Create a TurboJPEG compressor instance and associate the packed-pixel
│ │ │              source image stored in srcImage with the newly created instance.
│ │ │            o **** Method Summary ****
│ │ │                                                 Methods 
│ │ │              Modifier  Method and Description
│ │ │              and Type
│ │ │              void      close()
│ │ │                        Free the native structures associated with this compressor instance.
│ │ │ @@ -64,20 +64,20 @@
│ │ │                        Use setSourceImage(BufferedImage,_int,_int,_int,_int) and compress
│ │ │                        (byte[],_int) instead.
│ │ │                        compress(java.awt.image.BufferedImage srcImage, int flags)
│ │ │              byte[]    Deprecated. 
│ │ │                        Use setSourceImage(BufferedImage,_int,_int,_int,_int) and compress
│ │ │                        (int) instead.
│ │ │                        compress(byte[] dstBuf, int flags)
│ │ │ -            void      Compress the uncompressed source image associated with this
│ │ │ -                      compressor instance and output a JPEG image to the given destination
│ │ │ -                      buffer.
│ │ │ +            void      Compress the packed-pixel or planar YUV source image associated with
│ │ │ +                      this compressor instance and output a JPEG image to the given
│ │ │ +                      destination buffer.
│ │ │                        compress(int flags)
│ │ │ -            byte[]    Compress the uncompressed source image associated with this
│ │ │ -                      compressor instance and return a buffer containing a JPEG image.
│ │ │ +            byte[]    Compress the packed-pixel or planar YUV source image associated with
│ │ │ +                      this compressor instance and return a buffer containing a JPEG image.
│ │ │                        encodeYUV(java.awt.image.BufferedImage srcImage, byte[] dstBuf,
│ │ │                        int flags)
│ │ │              void      Deprecated. 
│ │ │                        Use setSourceImage(BufferedImage,_int,_int,_int,_int) and encodeYUV
│ │ │                        (byte[],_int) instead.
│ │ │                        encodeYUV(java.awt.image.BufferedImage srcImage, int flags)
│ │ │              byte[]    Deprecated. 
│ │ │ @@ -86,47 +86,46 @@
│ │ │                        encodeYUV(byte[] dstBuf, int flags)
│ │ │              void      Deprecated. 
│ │ │                        Use encodeYUV(YUVImage,_int) instead.
│ │ │                        encodeYUV(int flags)
│ │ │              byte[]    Deprecated. 
│ │ │                        Use encodeYUV(int,_int) instead.
│ │ │                        encodeYUV(int[] strides, int flags)
│ │ │ -            YUVImage  Encode the uncompressed source image associated with this compressor
│ │ │ +            YUVImage  Encode the packed-pixel source image associated with this compressor
│ │ │                        instance into separate Y, U (Cb), and V (Cr) image planes and return
│ │ │                        a YUVImage instance containing the encoded image planes.
│ │ │ -                      encodeYUV(int pad, int flags)
│ │ │ -            YUVImage  Encode the uncompressed source image associated with this compressor
│ │ │ -                      instance into a unified YUV planar image buffer and return a YUVImage
│ │ │ +                      encodeYUV(int align, int flags)
│ │ │ +            YUVImage  Encode the packed-pixel source image associated with this compressor
│ │ │ +                      instance into a unified planar YUV image and return a YUVImage
│ │ │                        instance containing the encoded image.
│ │ │                        encodeYUV(YUVImage dstImage, int flags)
│ │ │ -            void      Encode the uncompressed source image associated with this compressor
│ │ │ -                      instance into a YUV planar image and store it in the given YUVImage
│ │ │ +            void      Encode the packed-pixel source image associated with this compressor
│ │ │ +                      instance into a planar YUV image and store it in the given YUVImage
│ │ │                        instance.
│ │ │              protected finalize() 
│ │ │              void
│ │ │                        getCompressedSize()
│ │ │              int       Returns the size of the image (in bytes) generated by the most recent
│ │ │                        compress operation.
│ │ │              void      setJPEGQuality(int quality)
│ │ │                        Set the JPEG image quality level for subsequent compress operations.
│ │ │                        setSourceImage(java.awt.image.BufferedImage srcImage, int x, int y,
│ │ │              void      int width, int height)
│ │ │ -                      Associate an uncompressed RGB or grayscale source image with this
│ │ │ +                      Associate a packed-pixel RGB or grayscale source image with this
│ │ │                        compressor instance.
│ │ │                        setSourceImage(byte[] srcImage, int width, int pitch, int height,
│ │ │              void      int pixelFormat)
│ │ │                        Deprecated. 
│ │ │                        Use setSourceImage(byte[],_int,_int,_int,_int,_int,_int) instead.
│ │ │                        setSourceImage(byte[] srcImage, int x, int y, int width, int pitch,
│ │ │              void      int height, int pixelFormat)
│ │ │ -                      Associate an uncompressed RGB, grayscale, or CMYK source image with
│ │ │ +                      Associate a packed-pixel RGB, grayscale, or CMYK source image with
│ │ │                        this compressor instance.
│ │ │ -                      setSourceImage(YUVImage srcImage)
│ │ │ -            void      Associate an uncompressed YUV planar source image with this
│ │ │ -                      compressor instance.
│ │ │ +            void      setSourceImage(YUVImage srcImage)
│ │ │ +                      Associate a planar YUV source image with this compressor instance.
│ │ │                        setSubsamp(int newSubsamp)
│ │ │              void      Set the level of chrominance subsampling for subsequent compress/
│ │ │                        encode operations.
│ │ │                  # **** Methods inherited from class java.lang.Object ****
│ │ │                    clone, equals, getClass, hashCode, notify, notifyAll,
│ │ │                    toString, wait, wait, wait
│ │ │      *     o **** Constructor Detail ****
│ │ │ @@ -142,15 +141,15 @@
│ │ │                                int y,
│ │ │                                int width,
│ │ │                                int pitch,
│ │ │                                int height,
│ │ │                                int pixelFormat)
│ │ │                                 throws TJException
│ │ │                    Create a TurboJPEG compressor instance and associate the
│ │ │ -                  uncompressed source image stored in srcImage with the newly
│ │ │ +                  packed-pixel source image stored in srcImage with the newly
│ │ │                    created instance.
│ │ │                      Parameters:
│ │ │                          srcImage - see setSourceImage(byte[],_int,_int,_int,
│ │ │                          int,_int,_int) for description
│ │ │                          x - see setSourceImage(byte[],_int,_int,_int,_int,_int,
│ │ │                          int) for description
│ │ │                          y - see setSourceImage(byte[],_int,_int,_int,_int,_int,
│ │ │ @@ -181,15 +180,15 @@
│ │ │                    public TJCompressor(java.awt.image.BufferedImage srcImage,
│ │ │                                int x,
│ │ │                                int y,
│ │ │                                int width,
│ │ │                                int height)
│ │ │                                 throws TJException
│ │ │                    Create a TurboJPEG compressor instance and associate the
│ │ │ -                  uncompressed source image stored in srcImage with the newly
│ │ │ +                  packed-pixel source image stored in srcImage with the newly
│ │ │                    created instance.
│ │ │                      Parameters:
│ │ │                          srcImage - see setSourceImage(BufferedImage,_int,_int,
│ │ │                          int,_int) for description
│ │ │                          x - see setSourceImage(BufferedImage,_int,_int,_int,
│ │ │                          int) for description
│ │ │                          y - see setSourceImage(BufferedImage,_int,_int,_int,
│ │ │ @@ -206,39 +205,39 @@
│ │ │                                      int x,
│ │ │                                      int y,
│ │ │                                      int width,
│ │ │                                      int pitch,
│ │ │                                      int height,
│ │ │                                      int pixelFormat)
│ │ │                                        throws TJException
│ │ │ -                  Associate an uncompressed RGB, grayscale, or CMYK source
│ │ │ -                  image with this compressor instance.
│ │ │ +                  Associate a packed-pixel RGB, grayscale, or CMYK source image
│ │ │ +                  with this compressor instance.
│ │ │                      Parameters:
│ │ │ -                        srcImage - image buffer containing RGB, grayscale, or
│ │ │ -                        CMYK pixels to be compressed or encoded. This buffer is
│ │ │ -                        not modified.
│ │ │ +                        srcImage - buffer containing a packed-pixel RGB,
│ │ │ +                        grayscale, or CMYK source image to be compressed or
│ │ │ +                        encoded. This buffer is not modified.
│ │ │                          x - x offset (in pixels) of the region in the source
│ │ │                          image from which the JPEG or YUV image should be
│ │ │                          compressed/encoded
│ │ │                          y - y offset (in pixels) of the region in the source
│ │ │                          image from which the JPEG or YUV image should be
│ │ │                          compressed/encoded
│ │ │                          width - width (in pixels) of the region in the source
│ │ │                          image from which the JPEG or YUV image should be
│ │ │                          compressed/encoded
│ │ │ -                        pitch - bytes per line of the source image. Normally,
│ │ │ -                        this should be width * TJ.pixelSize(pixelFormat) if the
│ │ │ -                        source image is unpadded, but you can use this
│ │ │ -                        parameter to, for instance, specify that the scanlines
│ │ │ -                        in the source image are padded to a 4-byte boundary or
│ │ │ -                        to compress/encode a JPEG or YUV image from a region of
│ │ │ -                        a larger source image. You can also be clever and use
│ │ │ -                        this parameter to skip lines, etc. Setting this
│ │ │ -                        parameter to 0 is the equivalent of setting it to width
│ │ │ -                        * TJ.pixelSize(pixelFormat).
│ │ │ +                        pitch - bytes per row in the source image. Normally
│ │ │ +                        this should be width *TJ.getPixelSize(pixelFormat), if
│ │ │ +                        the source image is unpadded. However, you can use this
│ │ │ +                        parameter to, for instance, specify that the rows in
│ │ │ +                        the source image are padded to the nearest multiple of
│ │ │ +                        4 bytes or to compress/encode a JPEG or YUV image from
│ │ │ +                        a region of a larger source image. You can also be
│ │ │ +                        clever and use this parameter to skip rows, etc.
│ │ │ +                        Setting this parameter to 0 is the equivalent of
│ │ │ +                        setting it to width *TJ.getPixelSize(pixelFormat).
│ │ │                          height - height (in pixels) of the region in the source
│ │ │                          image from which the JPEG or YUV image should be
│ │ │                          compressed/encoded
│ │ │                          pixelFormat - pixel format of the source image (one of
│ │ │                          TJ.PF_*)
│ │ │                      Throws:
│ │ │                          TJException
│ │ │ @@ -258,20 +257,20 @@
│ │ │                    public void setSourceImage
│ │ │                    (java.awt.image.BufferedImage srcImage,
│ │ │                                      int x,
│ │ │                                      int y,
│ │ │                                      int width,
│ │ │                                      int height)
│ │ │                                        throws TJException
│ │ │ -                  Associate an uncompressed RGB or grayscale source image with
│ │ │ +                  Associate a packed-pixel RGB or grayscale source image with
│ │ │                    this compressor instance.
│ │ │                      Parameters:
│ │ │ -                        srcImage - a BufferedImage instance containing RGB or
│ │ │ -                        grayscale pixels to be compressed or encoded. This
│ │ │ -                        image is not modified.
│ │ │ +                        srcImage - a BufferedImage instance containing a
│ │ │ +                        packed-pixel RGB or grayscale source image to be
│ │ │ +                        compressed or encoded. This image is not modified.
│ │ │                          x - x offset (in pixels) of the region in the source
│ │ │                          image from which the JPEG or YUV image should be
│ │ │                          compressed/encoded
│ │ │                          y - y offset (in pixels) of the region in the source
│ │ │                          image from which the JPEG or YUV image should be
│ │ │                          compressed/encoded
│ │ │                          width - width (in pixels) of the region in the source
│ │ │ @@ -283,39 +282,39 @@
│ │ │                          compressed/encoded (0 = use the height of the source
│ │ │                          image)
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** setSourceImage ***
│ │ │                    public void setSourceImage(YUVImage srcImage)
│ │ │                                        throws TJException
│ │ │ -                  Associate an uncompressed YUV planar source image with this
│ │ │ -                  compressor instance.
│ │ │ +                  Associate a planar YUV source image with this compressor
│ │ │ +                  instance.
│ │ │                      Parameters:
│ │ │ -                        srcImage - YUV planar image to be compressed. This
│ │ │ -                        image is not modified.
│ │ │ +                        srcImage - planar YUV source image to be compressed.
│ │ │ +                        This image is not modified.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** setSubsamp ***
│ │ │                    public void setSubsamp(int newSubsamp)
│ │ │                    Set the level of chrominance subsampling for subsequent
│ │ │                    compress/encode operations. When pixels are converted from
│ │ │                    RGB to YCbCr (see TJ.CS_YCbCr) or from CMYK to YCCK (see
│ │ │                    TJ.CS_YCCK) as part of the JPEG compression process, some of
│ │ │                    the Cb and Cr (chrominance) components can be discarded or
│ │ │                    averaged together to produce a smaller image with little
│ │ │ -                  perceptible loss of image clarity (the human eye is more
│ │ │ +                  perceptible loss of image clarity. (The human eye is more
│ │ │                    sensitive to small changes in brightness than to small
│ │ │                    changes in color.) This is called "chrominance subsampling".
│ │ │                    NOTE: This method has no effect when compressing a JPEG image
│ │ │ -                  from a YUV planar source. In that case, the level of
│ │ │ +                  from a planar YUV source image. In that case, the level of
│ │ │                    chrominance subsampling in the JPEG image is determined by
│ │ │ -                  the source. Furthermore, this method has no effect when
│ │ │ +                  the source image. Furthermore, this method has no effect when
│ │ │                    encoding to a pre-allocated YUVImage instance. In that case,
│ │ │                    the level of chrominance subsampling is determined by the
│ │ │ -                  destination.
│ │ │ +                  destination image.
│ │ │                      Parameters:
│ │ │                          newSubsamp - the level of chrominance subsampling to
│ │ │                          use in subsequent compress/encode oeprations (one of
│ │ │                          TJ.SAMP_*)
│ │ │                  # *** setJPEGQuality ***
│ │ │                    public void setJPEGQuality(int quality)
│ │ │                    Set the JPEG image quality level for subsequent compress
│ │ │ @@ -323,32 +322,32 @@
│ │ │                      Parameters:
│ │ │                          quality - the new JPEG image quality level (1 to 100, 1
│ │ │                          = worst, 100 = best)
│ │ │                  # *** compress ***
│ │ │                    public void compress(byte[] dstBuf,
│ │ │                                int flags)
│ │ │                                  throws TJException
│ │ │ -                  Compress the uncompressed source image associated with this
│ │ │ -                  compressor instance and output a JPEG image to the given
│ │ │ -                  destination buffer.
│ │ │ +                  Compress the packed-pixel or planar YUV source image
│ │ │ +                  associated with this compressor instance and output a JPEG
│ │ │ +                  image to the given destination buffer.
│ │ │                      Parameters:
│ │ │                          dstBuf - buffer that will receive the JPEG image. Use
│ │ │                          TJ.bufSize(int,_int,_int) to determine the maximum size
│ │ │                          for this buffer based on the source image's width and
│ │ │                          height and the desired level of chrominance
│ │ │                          subsampling.
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** compress ***
│ │ │                    public byte[] compress(int flags)
│ │ │                                    throws TJException
│ │ │ -                  Compress the uncompressed source image associated with this
│ │ │ -                  compressor instance and return a buffer containing a JPEG
│ │ │ -                  image.
│ │ │ +                  Compress the packed-pixel or planar YUV source image
│ │ │ +                  associated with this compressor instance and return a buffer
│ │ │ +                  containing a JPEG image.
│ │ │                      Parameters:
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │                          a buffer containing a JPEG image. The length of this
│ │ │                          buffer will not be equal to the size of the JPEG image.
│ │ │                          Use getCompressedSize() to obtain the size of the JPEG
│ │ │                          image.
│ │ │ @@ -373,78 +372,82 @@
│ │ │                    int) and compress(int) instead.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** encodeYUV ***
│ │ │                    public void encodeYUV(YUVImage dstImage,
│ │ │                                 int flags)
│ │ │                                   throws TJException
│ │ │ -                  Encode the uncompressed source image associated with this
│ │ │ -                  compressor instance into a YUV planar image and store it in
│ │ │ -                  the given YUVImage instance. This method uses the accelerated
│ │ │ -                  color conversion routines in TurboJPEG's underlying codec but
│ │ │ -                  does not execute any of the other steps in the JPEG
│ │ │ -                  compression process. Encoding CMYK source images to YUV is
│ │ │ -                  not supported.
│ │ │ +                  Encode the packed-pixel source image associated with this
│ │ │ +                  compressor instance into a planar YUV image and store it in
│ │ │ +                  the given YUVImage instance. This method performs color
│ │ │ +                  conversion (which is accelerated in the libjpeg-turbo
│ │ │ +                  implementation) but does not execute any of the other steps
│ │ │ +                  in the JPEG compression process. Encoding CMYK source images
│ │ │ +                  into YUV images is not supported.
│ │ │                      Parameters:
│ │ │ -                        dstImage - YUVImage instance that will receive the YUV
│ │ │ -                        planar image
│ │ │ +                        dstImage - YUVImage instance that will receive the
│ │ │ +                        planar YUV image
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** encodeYUV ***
│ │ │                    @Deprecated
│ │ │                    public void encodeYUV(byte[] dstBuf,
│ │ │                                            int flags)
│ │ │                                   throws TJException
│ │ │                    Deprecated. Use encodeYUV(YUVImage,_int) instead.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** encodeYUV ***
│ │ │ -                  public YUVImage encodeYUV(int pad,
│ │ │ +                  public YUVImage encodeYUV(int align,
│ │ │                                     int flags)
│ │ │                                       throws TJException
│ │ │ -                  Encode the uncompressed source image associated with this
│ │ │ -                  compressor instance into a unified YUV planar image buffer
│ │ │ -                  and return a YUVImage instance containing the encoded image.
│ │ │ -                  This method uses the accelerated color conversion routines in
│ │ │ -                  TurboJPEG's underlying codec but does not execute any of the
│ │ │ +                  Encode the packed-pixel source image associated with this
│ │ │ +                  compressor instance into a unified planar YUV image and
│ │ │ +                  return a YUVImage instance containing the encoded image. This
│ │ │ +                  method performs color conversion (which is accelerated in the
│ │ │ +                  libjpeg-turbo implementation) but does not execute any of the
│ │ │                    other steps in the JPEG compression process. Encoding CMYK
│ │ │ -                  source images to YUV is not supported.
│ │ │ +                  source images into YUV images is not supported.
│ │ │                      Parameters:
│ │ │ -                        pad - the width of each line in each plane of the YUV
│ │ │ -                        image will be padded to the nearest multiple of this
│ │ │ -                        number of bytes (must be a power of 2.)
│ │ │ +                        align - row alignment (in bytes) of the YUV image (must
│ │ │ +                        be a power of 2.) Setting this parameter to n will
│ │ │ +                        cause each row in each plane of the YUV image to be
│ │ │ +                        padded to the nearest multiple of n bytes (1 =
│ │ │ +                        unpadded.)
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │ -                        a YUV planar image.
│ │ │ +                        a YUVImage instance containing the unified planar YUV
│ │ │ +                        encoded image
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** encodeYUV ***
│ │ │                    public YUVImage encodeYUV(int[] strides,
│ │ │                                     int flags)
│ │ │                                       throws TJException
│ │ │ -                  Encode the uncompressed source image associated with this
│ │ │ +                  Encode the packed-pixel source image associated with this
│ │ │                    compressor instance into separate Y, U (Cb), and V (Cr) image
│ │ │                    planes and return a YUVImage instance containing the encoded
│ │ │ -                  image planes. This method uses the accelerated color
│ │ │ -                  conversion routines in TurboJPEG's underlying codec but does
│ │ │ -                  not execute any of the other steps in the JPEG compression
│ │ │ -                  process. Encoding CMYK source images to YUV is not supported.
│ │ │ +                  image planes. This method performs color conversion (which is
│ │ │ +                  accelerated in the libjpeg-turbo implementation) but does not
│ │ │ +                  execute any of the other steps in the JPEG compression
│ │ │ +                  process. Encoding CMYK source images into YUV images is not
│ │ │ +                  supported.
│ │ │                      Parameters:
│ │ │                          strides - an array of integers, each specifying the
│ │ │ -                        number of bytes per line in the corresponding plane of
│ │ │ -                        the output image. Setting the stride for any plane to 0
│ │ │ -                        is the same as setting it to the component width of the
│ │ │ -                        plane. If strides is null, then the strides for all
│ │ │ -                        planes will be set to their respective component
│ │ │ -                        widths. You can adjust the strides in order to add an
│ │ │ -                        arbitrary amount of line padding to each plane.
│ │ │ +                        number of bytes per row in the corresponding plane of
│ │ │ +                        the YUV source image. Setting the stride for any plane
│ │ │ +                        to 0 is the same as setting it to the plane width (see
│ │ │ +                        YUVImage.) If strides is null, then the strides for all
│ │ │ +                        planes will be set to their respective plane widths.
│ │ │ +                        You can adjust the strides in order to add an arbitrary
│ │ │ +                        amount of row padding to each plane.
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │ -                        a YUV planar image.
│ │ │ +                        a YUVImage instance containing the encoded image planes
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** encodeYUV ***
│ │ │                    @Deprecated
│ │ │                    public byte[] encodeYUV(int flags)
│ │ │                                     throws TJException
│ │ │                    Deprecated. Use encodeYUV(int,_int) instead.
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJCustomFilter.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJCustomFilter.html
│ │┄ Files 0% similar despite different names
│ │ @@ -159,15 +159,15 @@
│ │   another function or library should make a copy of them within the body of
│ │   the callback.)</dd><dd><code>bufferRegion</code> - rectangle containing the width and height of
│ │   <code>coeffBuffer</code> as well as its offset relative to the component
│ │   plane.  TurboJPEG implementations may choose to split each component plane
│ │   into multiple DCT coefficient buffers and call the callback function once
│ │   for each buffer.</dd><dd><code>planeRegion</code> - rectangle containing the width and height of the
│ │   component plane to which <code>coeffBuffer</code> belongs</dd><dd><code>componentID</code> - ID number of the component plane to which
│ │ - <code>coeffBuffer</code> belongs (Y, Cb, and Cr have, respectively, ID's
│ │ + <code>coeffBuffer</code> belongs.  (Y, Cb, and Cr have, respectively, ID's
│ │   of 0, 1, and 2 in typical JPEG images.)</dd><dd><code>transformID</code> - ID number of the transformed image to which
│ │   <code>coeffBuffer</code> belongs.  This is the same as the index of the
│ │   transform in the <code>transforms</code> array that was passed to <a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a>.</dd><dd><code>transform</code> - a <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg"><code>TJTransform</code></a> instance that specifies the
│ │   parameters and/or cropping region for this transform</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │ ├── html2text {}
│ │ │ @@ -65,15 +65,15 @@
│ │ │                          the component plane. TurboJPEG implementations may
│ │ │                          choose to split each component plane into multiple DCT
│ │ │                          coefficient buffers and call the callback function once
│ │ │                          for each buffer.
│ │ │                          planeRegion - rectangle containing the width and height
│ │ │                          of the component plane to which coeffBuffer belongs
│ │ │                          componentID - ID number of the component plane to which
│ │ │ -                        coeffBuffer belongs (Y, Cb, and Cr have, respectively,
│ │ │ +                        coeffBuffer belongs. (Y, Cb, and Cr have, respectively,
│ │ │                          ID's of 0, 1, and 2 in typical JPEG images.)
│ │ │                          transformID - ID number of the transformed image to
│ │ │                          which coeffBuffer belongs. This is the same as the
│ │ │                          index of the transform in the transforms array that was
│ │ │                          passed to TJTransformer.transform().
│ │ │                          transform - a TJTransform instance that specifies the
│ │ │                          parameters and/or cropping region for this transform
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html
│ │┄ Files 2% similar despite different names
│ │ @@ -176,28 +176,30 @@
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor()">TJDecompressor</a></strong>()</code>
│ │  <div class="block">Create a TurboJPEG decompresssor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor(byte[])">TJDecompressor</a></strong>(byte[]&nbsp;jpegImage)</code>
│ │  <div class="block">Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ - image stored in <code>jpegImage</code> with the newly created instance.</div>
│ │ + image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ + stored in <code>jpegImage</code> with the newly created instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor(byte[],%20int)">TJDecompressor</a></strong>(byte[]&nbsp;jpegImage,
│ │                int&nbsp;imageSize)</code>
│ │  <div class="block">Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ - image of length <code>imageSize</code> bytes stored in
│ │ - <code>jpegImage</code> with the newly created instance.</div>
│ │ + image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ + of length <code>imageSize</code> bytes stored in <code>jpegImage</code>
│ │ + with the newly created instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#TJDecompressor(org.libjpegturbo.turbojpeg.YUVImage)">TJDecompressor</a></strong>(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;yuvImage)</code>
│ │ -<div class="block">Create a TurboJPEG decompressor instance and associate the YUV planar
│ │ +<div class="block">Create a TurboJPEG decompressor instance and associate the planar YUV
│ │   source image stored in <code>yuvImage</code> with the newly created
│ │   instance.</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  </li>
│ │  </ul>
│ │ @@ -219,17 +221,18 @@
│ │  <div class="block">Free the native structures associated with this decompressor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(java.awt.image.BufferedImage,%20int)">decompress</a></strong>(java.awt.image.BufferedImage&nbsp;dstImage,
│ │            int&nbsp;flags)</code>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a decompressed/decoded image to
│ │ - the given <code>BufferedImage</code> instance.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + decompressed/decoded image to the given <code>BufferedImage</code>
│ │ + instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int)">decompress</a></strong>(byte[]&nbsp;dstBuf,
│ │            int&nbsp;desiredWidth,
│ │            int&nbsp;pitch,
│ │ @@ -248,54 +251,56 @@
│ │            int&nbsp;x,
│ │            int&nbsp;y,
│ │            int&nbsp;desiredWidth,
│ │            int&nbsp;pitch,
│ │            int&nbsp;desiredHeight,
│ │            int&nbsp;pixelFormat,
│ │            int&nbsp;flags)</code>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ - to the given destination buffer.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + grayscale, RGB, or CMYK image to the given destination buffer.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(int[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)">decompress</a></strong>(int[]&nbsp;dstBuf,
│ │            int&nbsp;x,
│ │            int&nbsp;y,
│ │            int&nbsp;desiredWidth,
│ │            int&nbsp;stride,
│ │            int&nbsp;desiredHeight,
│ │            int&nbsp;pixelFormat,
│ │            int&nbsp;flags)</code>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ - to the given destination buffer.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + grayscale, RGB, or CMYK image to the given destination buffer.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>java.awt.image.BufferedImage</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(int,%20int,%20int,%20int)">decompress</a></strong>(int&nbsp;desiredWidth,
│ │            int&nbsp;desiredHeight,
│ │            int&nbsp;bufferedImageType,
│ │            int&nbsp;flags)</code>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and return a <code>BufferedImage</code>
│ │ - instance containing the decompressed/decoded image.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and return a
│ │ + <code>BufferedImage</code> instance containing the packed-pixel
│ │ + decompressed/decoded image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>byte[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(int,%20int,%20int,%20int,%20int)">decompress</a></strong>(int&nbsp;desiredWidth,
│ │            int&nbsp;pitch,
│ │            int&nbsp;desiredHeight,
│ │            int&nbsp;pixelFormat,
│ │            int&nbsp;flags)</code>
│ │ -<div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance and return a buffer containing the decompressed image.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and return a buffer containing
│ │ + the packed-pixel decompressed image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(byte[],%20int)">decompressToYUV</a></strong>(byte[]&nbsp;dstBuf,
│ │                 int&nbsp;flags)</code>
│ │  <div class="block"><strong>Deprecated.</strong>&nbsp;
│ │ @@ -315,35 +320,35 @@
│ │  <td class="colFirst"><code><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(int,%20int[],%20int,%20int)">decompressToYUV</a></strong>(int&nbsp;desiredWidth,
│ │                 int[]&nbsp;strides,
│ │                 int&nbsp;desiredHeight,
│ │                 int&nbsp;flags)</code>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │   instance into a set of Y, U (Cb), and V (Cr) image planes and return a
│ │ - <code>YUVImage</code> instance containing the decompressed image planes.</div>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the decompressed image planes.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(int,%20int,%20int,%20int)">decompressToYUV</a></strong>(int&nbsp;desiredWidth,
│ │ -               int&nbsp;pad,
│ │ +               int&nbsp;align,
│ │                 int&nbsp;desiredHeight,
│ │                 int&nbsp;flags)</code>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance into a unified YUV planar image buffer and return a
│ │ - <code>YUVImage</code> instance containing the decompressed image.</div>
│ │ + instance into a unified planar YUV image and return a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>
│ │ + instance containing the decompressed image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompressToYUV(org.libjpegturbo.turbojpeg.YUVImage,%20int)">decompressToYUV</a></strong>(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;dstImage,
│ │                 int&nbsp;flags)</code>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance into a YUV planar image and store it in the given
│ │ - <code>YUVImage</code> instance.</div>
│ │ + instance into a planar YUV image and store it in the given
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>protected void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#finalize()">finalize</a></strong>()</code>&nbsp;</td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │ @@ -359,15 +364,15 @@
│ │  <div class="block">Returns the height of the source image (JPEG or YUV) associated with this
│ │   decompressor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>byte[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getJPEGBuf()">getJPEGBuf</a></strong>()</code>
│ │ -<div class="block">Returns the JPEG image buffer associated with this decompressor instance.</div>
│ │ +<div class="block">Returns the JPEG buffer associated with this decompressor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getJPEGSize()">getJPEGSize</a></strong>()</code>
│ │  <div class="block">Returns the size of the JPEG image (in bytes) associated with this
│ │   decompressor instance.</div>
│ │ @@ -422,15 +427,15 @@
│ │   "tables-only") datastream of length <code>imageSize</code> bytes stored in
│ │   <code>jpegImage</code> with this decompressor instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#setSourceImage(org.libjpegturbo.turbojpeg.YUVImage)">setSourceImage</a></strong>(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;srcImage)</code>
│ │ -<div class="block">Associate the specified YUV planar source image with this decompressor
│ │ +<div class="block">Associate the specified planar YUV source image with this decompressor
│ │   instance.</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  <ul class="blockList">
│ │  <li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
│ │  <!--   -->
│ │ @@ -550,50 +555,55 @@
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>TJDecompressor</h4>
│ │  <pre>public&nbsp;TJDecompressor(byte[]&nbsp;jpegImage)
│ │                 throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ - image stored in <code>jpegImage</code> with the newly created instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - JPEG image buffer (size of the JPEG image is assumed to
│ │ - be the length of the array.)  This buffer is not modified.</dd>
│ │ + image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ + stored in <code>jpegImage</code> with the newly created instance.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - buffer containing a JPEG source image or tables-only
│ │ + datastream.  (The size of the JPEG image or datastream is assumed to be
│ │ + the length of the array.)  This buffer is not modified.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="TJDecompressor(byte[], int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>TJDecompressor</h4>
│ │  <pre>public&nbsp;TJDecompressor(byte[]&nbsp;jpegImage,
│ │                int&nbsp;imageSize)
│ │                 throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ - image of length <code>imageSize</code> bytes stored in
│ │ - <code>jpegImage</code> with the newly created instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - JPEG image buffer.  This buffer is not modified.</dd><dd><code>imageSize</code> - size of the JPEG image (in bytes)</dd>
│ │ + image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ + of length <code>imageSize</code> bytes stored in <code>jpegImage</code>
│ │ + with the newly created instance.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - buffer containing a JPEG source image or tables-only
│ │ + datastream.  This buffer is not modified.</dd><dd><code>imageSize</code> - size of the JPEG source image or tables-only datastream
│ │ + (in bytes)</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="TJDecompressor(org.libjpegturbo.turbojpeg.YUVImage)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │  <h4>TJDecompressor</h4>
│ │  <pre>public&nbsp;TJDecompressor(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;yuvImage)
│ │                 throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Create a TurboJPEG decompressor instance and associate the YUV planar
│ │ +<div class="block">Create a TurboJPEG decompressor instance and associate the planar YUV
│ │   source image stored in <code>yuvImage</code> with the newly created
│ │   instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>yuvImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing a YUV planar
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>yuvImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing a planar YUV source
│ │   image to be decoded.  This image is not modified.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │ @@ -612,23 +622,23 @@
│ │  <pre>public&nbsp;void&nbsp;setSourceImage(byte[]&nbsp;jpegImage,
│ │                    int&nbsp;imageSize)
│ │                      throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Associate the JPEG image or "abbreviated table specification" (AKA
│ │   "tables-only") datastream of length <code>imageSize</code> bytes stored in
│ │   <code>jpegImage</code> with this decompressor instance.  If
│ │   <code>jpegImage</code> contains a JPEG image, then this image will be used
│ │ - as the source image for subsequent decompress operations.  Passing a
│ │ + as the source image for subsequent decompression operations.  Passing a
│ │   tables-only datastream to this method primes the decompressor with
│ │   quantization and Huffman tables that can be used when decompressing
│ │   subsequent "abbreviated image" datastreams.  This is useful, for instance,
│ │   when decompressing video streams in which all frames share the same
│ │   quantization and Huffman tables.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - buffer containing a JPEG image or an "abbreviated table
│ │ - specification" (AKA "tables-only") datastream.  This buffer is not
│ │ - modified.</dd><dd><code>imageSize</code> - size of the JPEG image (in bytes)</dd>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - buffer containing a JPEG source image or tables-only
│ │ + datastream.  This buffer is not modified.</dd><dd><code>imageSize</code> - size of the JPEG source image or tables-only datastream
│ │ + (in bytes)</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="setJPEGImage(byte[], int)">
│ │  <!--   -->
│ │  </a>
│ │ @@ -647,19 +657,19 @@
│ │  <a name="setSourceImage(org.libjpegturbo.turbojpeg.YUVImage)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>setSourceImage</h4>
│ │  <pre>public&nbsp;void&nbsp;setSourceImage(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;srcImage)</pre>
│ │ -<div class="block">Associate the specified YUV planar source image with this decompressor
│ │ - instance.  Subsequent decompress operations will decode this image into an
│ │ - RGB or grayscale destination image.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing a YUV planar image to
│ │ - be decoded.  This image is not modified.</dd></dl>
│ │ +<div class="block">Associate the specified planar YUV source image with this decompressor
│ │ + instance.  Subsequent decompression operations will decode this image into
│ │ + a packed-pixel RGB or grayscale destination image.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>srcImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing a planar YUV source
│ │ + image to be decoded.  This image is not modified.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getWidth()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │ @@ -715,16 +725,16 @@
│ │  <a name="getJPEGBuf()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>getJPEGBuf</h4>
│ │  <pre>public&nbsp;byte[]&nbsp;getJPEGBuf()</pre>
│ │ -<div class="block">Returns the JPEG image buffer associated with this decompressor instance.</div>
│ │ -<dl><dt><span class="strong">Returns:</span></dt><dd>the JPEG image buffer associated with this decompressor instance.</dd></dl>
│ │ +<div class="block">Returns the JPEG buffer associated with this decompressor instance.</div>
│ │ +<dl><dt><span class="strong">Returns:</span></dt><dd>the JPEG buffer associated with this decompressor instance.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getJPEGSize()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │ @@ -744,20 +754,20 @@
│ │  <h4>getScaledWidth</h4>
│ │  <pre>public&nbsp;int&nbsp;getScaledWidth(int&nbsp;desiredWidth,
│ │                   int&nbsp;desiredHeight)</pre>
│ │  <div class="block">Returns the width of the largest scaled-down image that the TurboJPEG
│ │   decompressor can generate without exceeding the desired image width and
│ │   height.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>desiredWidth</code> - desired width (in pixels) of the decompressed image.
│ │ - Setting this to 0 is the same as setting it to the width of the JPEG image
│ │ - (in other words, the width will not be considered when determining the
│ │ - scaled image size.)</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the decompressed image.
│ │ + Setting this to 0 is the same as setting it to the width of the JPEG
│ │ + image.  (In other words, the width will not be considered when determining
│ │ + the scaled image size.)</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the decompressed image.
│ │   Setting this to 0 is the same as setting it to the height of the JPEG
│ │ - image (in other words, the height will not be considered when determining
│ │ - the scaled image size.)</dd>
│ │ + image.  (In other words, the height will not be considered when
│ │ + determining the scaled image size.)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the width of the largest scaled-down image that the TurboJPEG
│ │   decompressor can generate without exceeding the desired image width and
│ │   height.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getScaledHeight(int, int)">
│ │  <!--   -->
│ │ @@ -767,20 +777,20 @@
│ │  <h4>getScaledHeight</h4>
│ │  <pre>public&nbsp;int&nbsp;getScaledHeight(int&nbsp;desiredWidth,
│ │                    int&nbsp;desiredHeight)</pre>
│ │  <div class="block">Returns the height of the largest scaled-down image that the TurboJPEG
│ │   decompressor can generate without exceeding the desired image width and
│ │   height.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>desiredWidth</code> - desired width (in pixels) of the decompressed image.
│ │ - Setting this to 0 is the same as setting it to the width of the JPEG image
│ │ - (in other words, the width will not be considered when determining the
│ │ - scaled image size.)</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the decompressed image.
│ │ + Setting this to 0 is the same as setting it to the width of the JPEG
│ │ + image.  (In other words, the width will not be considered when determining
│ │ + the scaled image size.)</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the decompressed image.
│ │   Setting this to 0 is the same as setting it to the height of the JPEG
│ │ - image (in other words, the height will not be considered when determining
│ │ - the scaled image size.)</dd>
│ │ + image.  (In other words, the height will not be considered when
│ │ + determining the scaled image size.)</dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>the height of the largest scaled-down image that the TurboJPEG
│ │   decompressor can generate without exceeding the desired image width and
│ │   height.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="decompress(byte[], int, int, int, int, int, int, int)">
│ │  <!--   -->
│ │ @@ -793,61 +803,64 @@
│ │                int&nbsp;y,
│ │                int&nbsp;desiredWidth,
│ │                int&nbsp;pitch,
│ │                int&nbsp;desiredHeight,
│ │                int&nbsp;pixelFormat,
│ │                int&nbsp;flags)
│ │                  throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ - to the given destination buffer.
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + grayscale, RGB, or CMYK image to the given destination buffer.
│ │   <p>
│ │ - NOTE: The output image is fully recoverable if this method throws a
│ │ + NOTE: The destination image is fully recoverable if this method throws a
│ │   non-fatal <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg"><code>TJException</code></a> (unless
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_STOPONWARNING"><code>TJ.FLAG_STOPONWARNING</code></a> is specified.)</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstBuf</code> - buffer that will receive the decompressed/decoded image.
│ │ - If the source image is a JPEG image, then this buffer should normally be
│ │ - <code>pitch * scaledHeight</code> bytes in size, where
│ │ - <code>scaledHeight</code> can be determined by calling <code>
│ │ - scalingFactor.<a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a>(jpegHeight)
│ │ - </code> with one of the scaling factors returned from <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getScalingFactors()"><code>TJ.getScalingFactors()</code></a> or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledHeight(int,%20int)"><code>getScaledHeight(int, int)</code></a>.  If the
│ │ - source image is a YUV image, then this buffer should normally be
│ │ - <code>pitch * height</code> bytes in size, where <code>height</code> is
│ │ - the height of the YUV image.  However, the buffer may also be larger than
│ │ - the dimensions of the source image, in which case the <code>x</code>,
│ │ - <code>y</code>, and <code>pitch</code> parameters can be used to specify
│ │ - the region into which the source image should be decompressed/decoded.</dd><dd><code>x</code> - x offset (in pixels) of the region in the destination image into
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstBuf</code> - buffer that will receive the packed-pixel
│ │ + decompressed/decoded image.  If the source image is a JPEG image, then
│ │ + this buffer should normally be <code>pitch * scaledHeight</code> bytes in
│ │ + size, where <code>scaledHeight</code> can be determined by calling
│ │ + <code>scalingFactor.</code><a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a><code>(jpegHeight)</code>
│ │ + with one of the scaling factors returned from <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getScalingFactors()"><code>TJ.getScalingFactors()</code></a>
│ │ + or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledHeight(int,%20int)"><code>getScaledHeight(int, int)</code></a>.  If the source image is a YUV
│ │ + image, then this buffer should normally be <code>pitch * height</code>
│ │ + bytes in size, where <code>height</code> is the height of the YUV image.
│ │ + However, the buffer may also be larger than the dimensions of the source
│ │ + image, in which case the <code>x</code>, <code>y</code>, and
│ │ + <code>pitch</code> parameters can be used to specify the region into which
│ │ + the source image should be decompressed/decoded.</dd><dd><code>x</code> - x offset (in pixels) of the region in the destination image into
│ │   which the source image should be decompressed/decoded</dd><dd><code>y</code> - y offset (in pixels) of the region in the destination image into
│ │   which the source image should be decompressed/decoded</dd><dd><code>desiredWidth</code> - If the source image is a JPEG image, then this
│ │   specifies the desired width (in pixels) of the decompressed image (or
│ │   image region.)  If the desired destination image dimensions are different
│ │   than the source image dimensions, then TurboJPEG will use scaling in the
│ │   JPEG decompressor to generate the largest possible image that will fit
│ │   within the desired dimensions.  Setting this to 0 is the same as setting
│ │ - it to the width of the JPEG image (in other words, the width will not be
│ │ + it to the width of the JPEG image.  (In other words, the width will not be
│ │   considered when determining the scaled image size.)  This parameter is
│ │ - ignored if the source image is a YUV image.</dd><dd><code>pitch</code> - bytes per line of the destination image.  Normally, this
│ │ - should be set to <code>scaledWidth * TJ.pixelSize(pixelFormat)</code> if
│ │ - the destination image is unpadded, but you can use this to, for instance,
│ │ - pad each line of the destination image to a 4-byte boundary or to
│ │ - decompress/decode the source image into a region of a larger image.  NOTE:
│ │ - if the source image is a JPEG image, then <code>scaledWidth</code> can be
│ │ - determined by calling <code>
│ │ - scalingFactor.<a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a>(jpegWidth)
│ │ - </code> or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledWidth(int,%20int)"><code>getScaledWidth(int, int)</code></a>.  If the source image is a
│ │ - YUV image, then <code>scaledWidth</code> is the width of the YUV image.
│ │ + ignored if the source image is a YUV image.</dd><dd><code>pitch</code> - bytes per row in the destination image.  Normally this should
│ │ + be set to <code>scaledWidth *
│ │ + </code><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getPixelSize(int)"><code>TJ.getPixelSize</code></a><code>(pixelFormat)</code>,
│ │ + if the destination image will be unpadded.  However, you can use this to,
│ │ + for instance, pad each row of the destination image to the nearest
│ │ + multiple of 4 bytes or to decompress/decode the source image into a region
│ │ + of a larger image.  NOTE: if the source image is a JPEG image, then
│ │ + <code>scaledWidth</code> can be determined by calling
│ │ + <code>scalingFactor.</code><a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a><code>(jpegWidth)</code>
│ │ + or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledWidth(int,%20int)"><code>getScaledWidth(int, int)</code></a>.  If the source image is a YUV
│ │ + image, then <code>scaledWidth</code> is the width of the YUV image.
│ │   Setting this parameter to 0 is the equivalent of setting it to
│ │ - <code>scaledWidth * TJ.pixelSize(pixelFormat)</code>.</dd><dd><code>desiredHeight</code> - If the source image is a JPEG image, then this
│ │ + <code>scaledWidth *
│ │ + </code><a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getPixelSize(int)"><code>TJ.getPixelSize</code></a><code>(pixelFormat)</code>.</dd><dd><code>desiredHeight</code> - If the source image is a JPEG image, then this
│ │   specifies the desired height (in pixels) of the decompressed image (or
│ │   image region.)  If the desired destination image dimensions are different
│ │   than the source image dimensions, then TurboJPEG will use scaling in the
│ │   JPEG decompressor to generate the largest possible image that will fit
│ │   within the desired dimensions.  Setting this to 0 is the same as setting
│ │ - it to the height of the JPEG image (in other words, the height will not be
│ │ - considered when determining the scaled image size.)  This parameter is
│ │ + it to the height of the JPEG image.  (In other words, the height will not
│ │ + be considered when determining the scaled image size.)  This parameter is
│ │   ignored if the source image is a YUV image.</dd><dd><code>pixelFormat</code> - pixel format of the decompressed/decoded image (one of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>TJ.PF_*</code></a>)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │ @@ -879,55 +892,56 @@
│ │  <h4>decompress</h4>
│ │  <pre>public&nbsp;byte[]&nbsp;decompress(int&nbsp;desiredWidth,
│ │                  int&nbsp;pitch,
│ │                  int&nbsp;desiredHeight,
│ │                  int&nbsp;pixelFormat,
│ │                  int&nbsp;flags)
│ │                    throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance and return a buffer containing the decompressed image.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and return a buffer containing
│ │ + the packed-pixel decompressed image.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>desiredWidth</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)"><code>decompress(byte[], int, int, int, int, int, int, int)</code></a>
│ │   for description</dd><dd><code>pitch</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)"><code>decompress(byte[], int, int, int, int, int, int, int)</code></a>
│ │   for description</dd><dd><code>desiredHeight</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)"><code>decompress(byte[], int, int, int, int, int, int, int)</code></a>
│ │   for description</dd><dd><code>pixelFormat</code> - pixel format of the decompressed image (one of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>TJ.PF_*</code></a>)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>a buffer containing the decompressed image.</dd>
│ │ +<dt><span class="strong">Returns:</span></dt><dd>a buffer containing the packed-pixel decompressed image.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="decompressToYUV(org.libjpegturbo.turbojpeg.YUVImage, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>decompressToYUV</h4>
│ │  <pre>public&nbsp;void&nbsp;decompressToYUV(<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;dstImage,
│ │                     int&nbsp;flags)
│ │                       throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance into a YUV planar image and store it in the given
│ │ - <code>YUVImage</code> instance.  This method performs JPEG decompression
│ │ - but leaves out the color conversion step, so a planar YUV image is
│ │ - generated instead of an RGB or grayscale image.  This method cannot be
│ │ - used to decompress JPEG source images with the CMYK or YCCK colorspace.
│ │ + instance into a planar YUV image and store it in the given
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance.  This method performs JPEG decompression but
│ │ + leaves out the color conversion step, so a planar YUV image is generated
│ │ + instead of a packed-pixel image.  This method cannot be used to decompress
│ │ + JPEG source images with the CMYK or YCCK colorspace.
│ │   <p>
│ │ - NOTE: The YUV planar output image is fully recoverable if this method
│ │ + NOTE: The planar YUV destination image is fully recoverable if this method
│ │   throws a non-fatal <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg"><code>TJException</code></a> (unless
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_STOPONWARNING"><code>TJ.FLAG_STOPONWARNING</code></a> is specified.)</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance that will receive the YUV planar
│ │ - image.  The level of subsampling specified in this <code>YUVImage</code>
│ │ - instance must match that of the JPEG image, and the width and height
│ │ - specified in the <code>YUVImage</code> instance must match one of the
│ │ - scaled image sizes that TurboJPEG is capable of generating from the JPEG
│ │ - source image.</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstImage</code> - <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance that will receive the planar YUV
│ │ + decompressed image.  The level of subsampling specified in this
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance must match that of the JPEG image, and the width
│ │ + and height specified in the <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance must match one of
│ │ + the scaled image sizes that the decompressor is capable of generating from
│ │ + the JPEG source image.</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="decompressToYUV(byte[], int)">
│ │  <!--   -->
│ │ @@ -953,79 +967,80 @@
│ │  <pre>public&nbsp;<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;decompressToYUV(int&nbsp;desiredWidth,
│ │                         int[]&nbsp;strides,
│ │                         int&nbsp;desiredHeight,
│ │                         int&nbsp;flags)
│ │                           throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │   instance into a set of Y, U (Cb), and V (Cr) image planes and return a
│ │ - <code>YUVImage</code> instance containing the decompressed image planes.
│ │ - This method performs JPEG decompression but leaves out the color
│ │ - conversion step, so a planar YUV image is generated instead of an RGB or
│ │ - grayscale image.  This method cannot be used to decompress JPEG source
│ │ - images with the CMYK or YCCK colorspace.</div>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the decompressed image planes.  This
│ │ + method performs JPEG decompression but leaves out the color conversion
│ │ + step, so a planar YUV image is generated instead of a packed-pixel image.
│ │ + This method cannot be used to decompress JPEG source images with the CMYK
│ │ + or YCCK colorspace.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>desiredWidth</code> - desired width (in pixels) of the YUV image.  If the
│ │   desired image dimensions are different than the dimensions of the JPEG
│ │   image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │   decompressor to generate the largest possible image that will fit within
│ │   the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ - the width of the JPEG image (in other words, the width will not be
│ │ + the width of the JPEG image.  (In other words, the width will not be
│ │   considered when determining the scaled image size.)</dd><dd><code>strides</code> - an array of integers, each specifying the number of bytes
│ │ - per line in the corresponding plane of the output image.  Setting the
│ │ - stride for any plane to 0 is the same as setting it to the scaled
│ │ - component width of the plane.  If <tt>strides</tt> is NULL, then the
│ │ - strides for all planes will be set to their respective scaled component
│ │ - widths.  You can adjust the strides in order to add an arbitrary amount of
│ │ - line padding to each plane.</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the YUV image.  If the
│ │ + per row in the corresponding plane of the YUV image.  Setting the stride
│ │ + for any plane to 0 is the same as setting it to the scaled plane width
│ │ + (see <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>.)  If <code>strides</code> is null, then the strides
│ │ + for all planes will be set to their respective scaled plane widths.  You
│ │ + can adjust the strides in order to add an arbitrary amount of row padding
│ │ + to each plane.</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the YUV image.  If the
│ │   desired image dimensions are different than the dimensions of the JPEG
│ │   image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │   decompressor to generate the largest possible image that will fit within
│ │   the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ - the height of the JPEG image (in other words, the height will not be
│ │ + the height of the JPEG image.  (In other words, the height will not be
│ │   considered when determining the scaled image size.)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>a YUV planar image.</dd>
│ │ +<dt><span class="strong">Returns:</span></dt><dd>a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the decompressed image
│ │ + planes</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="decompressToYUV(int, int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>decompressToYUV</h4>
│ │  <pre>public&nbsp;<a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a>&nbsp;decompressToYUV(int&nbsp;desiredWidth,
│ │ -                       int&nbsp;pad,
│ │ +                       int&nbsp;align,
│ │                         int&nbsp;desiredHeight,
│ │                         int&nbsp;flags)
│ │                           throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Decompress the JPEG source image associated with this decompressor
│ │ - instance into a unified YUV planar image buffer and return a
│ │ - <code>YUVImage</code> instance containing the decompressed image.  This
│ │ - method performs JPEG decompression but leaves out the color conversion
│ │ - step, so a planar YUV image is generated instead of an RGB or grayscale
│ │ - image.  This method cannot be used to decompress JPEG source images with
│ │ - the CMYK or YCCK colorspace.</div>
│ │ + instance into a unified planar YUV image and return a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a>
│ │ + instance containing the decompressed image.  This method performs JPEG
│ │ + decompression but leaves out the color conversion step, so a planar YUV
│ │ + image is generated instead of a packed-pixel image.  This method cannot be
│ │ + used to decompress JPEG source images with the CMYK or YCCK colorspace.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>desiredWidth</code> - desired width (in pixels) of the YUV image.  If the
│ │   desired image dimensions are different than the dimensions of the JPEG
│ │   image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │   decompressor to generate the largest possible image that will fit within
│ │   the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ - the width of the JPEG image (in other words, the width will not be
│ │ - considered when determining the scaled image size.)</dd><dd><code>pad</code> - the width of each line in each plane of the YUV image will be
│ │ - padded to the nearest multiple of this number of bytes (must be a power of
│ │ - 2.)</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the YUV image.  If the
│ │ + the width of the JPEG image.  (In other words, the width will not be
│ │ + considered when determining the scaled image size.)</dd><dd><code>align</code> - row alignment (in bytes) of the YUV image (must be a power of
│ │ + 2.)  Setting this parameter to n will cause each row in each plane of the
│ │ + YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.)</dd><dd><code>desiredHeight</code> - desired height (in pixels) of the YUV image.  If the
│ │   desired image dimensions are different than the dimensions of the JPEG
│ │   image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │   decompressor to generate the largest possible image that will fit within
│ │   the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ - the height of the JPEG image (in other words, the height will not be
│ │ + the height of the JPEG image.  (In other words, the height will not be
│ │   considered when determining the scaled image size.)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>a YUV planar image.</dd>
│ │ +<dt><span class="strong">Returns:</span></dt><dd>a <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>YUVImage</code></a> instance containing the unified planar YUV
│ │ + decompressed image</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="decompressToYUV(int)">
│ │  <!--   -->
│ │  </a>
│ │ @@ -1051,59 +1066,60 @@
│ │                int&nbsp;y,
│ │                int&nbsp;desiredWidth,
│ │                int&nbsp;stride,
│ │                int&nbsp;desiredHeight,
│ │                int&nbsp;pixelFormat,
│ │                int&nbsp;flags)
│ │                  throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ - to the given destination buffer.
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + grayscale, RGB, or CMYK image to the given destination buffer.
│ │   <p>
│ │ - NOTE: The output image is fully recoverable if this method throws a
│ │ + NOTE: The destination image is fully recoverable if this method throws a
│ │   non-fatal <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg"><code>TJException</code></a> (unless
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_STOPONWARNING"><code>TJ.FLAG_STOPONWARNING</code></a> is specified.)</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstBuf</code> - buffer that will receive the decompressed/decoded image.
│ │ - If the source image is a JPEG image, then this buffer should normally be
│ │ - <code>stride * scaledHeight</code> pixels in size, where
│ │ - <code>scaledHeight</code> can be determined by calling <code>
│ │ - scalingFactor.<a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a>(jpegHeight)
│ │ - </code> with one of the scaling factors returned from <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getScalingFactors()"><code>TJ.getScalingFactors()</code></a> or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledHeight(int,%20int)"><code>getScaledHeight(int, int)</code></a>.  If the
│ │ - source image is a YUV image, then this buffer should normally be
│ │ - <code>stride * height</code> pixels in size, where <code>height</code> is
│ │ - the height of the YUV image.  However, the buffer may also be larger than
│ │ - the dimensions of the JPEG image, in which case the <code>x</code>,
│ │ - <code>y</code>, and <code>stride</code> parameters can be used to specify
│ │ - the region into which the source image should be decompressed.</dd><dd><code>x</code> - x offset (in pixels) of the region in the destination image into
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstBuf</code> - buffer that will receive the packed-pixel
│ │ + decompressed/decoded image.  If the source image is a JPEG image, then
│ │ + this buffer should normally be <code>stride * scaledHeight</code> pixels
│ │ + in size, where <code>scaledHeight</code> can be determined by calling
│ │ + <code>scalingFactor.</code><a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a><code>(jpegHeight)</code>
│ │ + with one of the scaling factors returned from <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getScalingFactors()"><code>TJ.getScalingFactors()</code></a>
│ │ + or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledHeight(int,%20int)"><code>getScaledHeight(int, int)</code></a>.  If the source image is a YUV
│ │ + image, then this buffer should normally be <code>stride * height</code>
│ │ + pixels in size, where <code>height</code> is the height of the YUV image.
│ │ + However, the buffer may also be larger than the dimensions of the JPEG
│ │ + image, in which case the <code>x</code>, <code>y</code>, and
│ │ + <code>stride</code> parameters can be used to specify the region into
│ │ + which the source image should be decompressed.</dd><dd><code>x</code> - x offset (in pixels) of the region in the destination image into
│ │   which the source image should be decompressed/decoded</dd><dd><code>y</code> - y offset (in pixels) of the region in the destination image into
│ │   which the source image should be decompressed/decoded</dd><dd><code>desiredWidth</code> - If the source image is a JPEG image, then this
│ │   specifies the desired width (in pixels) of the decompressed image (or
│ │   image region.)  If the desired destination image dimensions are different
│ │   than the source image dimensions, then TurboJPEG will use scaling in the
│ │   JPEG decompressor to generate the largest possible image that will fit
│ │   within the desired dimensions.  Setting this to 0 is the same as setting
│ │ - it to the width of the JPEG image (in other words, the width will not be
│ │ + it to the width of the JPEG image.  (In other words, the width will not be
│ │   considered when determining the scaled image size.)  This parameter is
│ │ - ignored if the source image is a YUV image.</dd><dd><code>stride</code> - pixels per line of the destination image.  Normally, this
│ │ + ignored if the source image is a YUV image.</dd><dd><code>stride</code> - pixels per row in the destination image.  Normally this
│ │   should be set to <code>scaledWidth</code>, but you can use this to, for
│ │   instance, decompress the JPEG image into a region of a larger image.
│ │   NOTE: if the source image is a JPEG image, then <code>scaledWidth</code>
│ │ - can be determined by calling <code>
│ │ - scalingFactor.<a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a>(jpegWidth)
│ │ - </code> or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledWidth(int,%20int)"><code>getScaledWidth(int, int)</code></a>.  If the source image is a
│ │ - YUV image, then <code>scaledWidth</code> is the width of the YUV image.
│ │ + can be determined by calling
│ │ + <code>scalingFactor.</code><a href="../../../org/libjpegturbo/turbojpeg/TJScalingFactor.html#getScaled(int)"><code>getScaled</code></a><code>(jpegWidth)</code>
│ │ + or by calling <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#getScaledWidth(int,%20int)"><code>getScaledWidth(int, int)</code></a>.  If the source image is a YUV
│ │ + image, then <code>scaledWidth</code> is the width of the YUV image.
│ │   Setting this parameter to 0 is the equivalent of setting it to
│ │   <code>scaledWidth</code>.</dd><dd><code>desiredHeight</code> - If the source image is a JPEG image, then this
│ │   specifies the desired height (in pixels) of the decompressed image (or
│ │   image region.)  If the desired destination image dimensions are different
│ │   than the source image dimensions, then TurboJPEG will use scaling in the
│ │   JPEG decompressor to generate the largest possible image that will fit
│ │   within the desired dimensions.  Setting this to 0 is the same as setting
│ │ - it to the height of the JPEG image (in other words, the height will not be
│ │ - considered when determining the scaled image size.)  This parameter is
│ │ + it to the height of the JPEG image.  (In other words, the height will not
│ │ + be considered when determining the scaled image size.)  This parameter is
│ │   ignored if the source image is a YUV image.</dd><dd><code>pixelFormat</code> - pixel format of the decompressed image (one of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#PF_RGB"><code>TJ.PF_*</code></a>)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │ @@ -1112,28 +1128,29 @@
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>decompress</h4>
│ │  <pre>public&nbsp;void&nbsp;decompress(java.awt.image.BufferedImage&nbsp;dstImage,
│ │                int&nbsp;flags)
│ │                  throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and output a decompressed/decoded image to
│ │ - the given <code>BufferedImage</code> instance.
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and output a packed-pixel
│ │ + decompressed/decoded image to the given <code>BufferedImage</code>
│ │ + instance.
│ │   <p>
│ │ - NOTE: The output image is fully recoverable if this method throws a
│ │ + NOTE: The destination image is fully recoverable if this method throws a
│ │   non-fatal <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg"><code>TJException</code></a> (unless
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_STOPONWARNING"><code>TJ.FLAG_STOPONWARNING</code></a> is specified.)</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstImage</code> - a <code>BufferedImage</code> instance that will receive
│ │ - the decompressed/decoded image.  If the source image is a JPEG image, then
│ │ - the width and height of the <code>BufferedImage</code> instance must match
│ │ - one of the scaled image sizes that TurboJPEG is capable of generating from
│ │ - the JPEG image.  If the source image is a YUV image, then the width and
│ │ - height of the <code>BufferedImage</code> instance must match the width and
│ │ - height of the YUV image.</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │ + the packed-pixel decompressed/decoded image.  If the source image is a
│ │ + JPEG image, then the width and height of the <code>BufferedImage</code>
│ │ + instance must match one of the scaled image sizes that the decompressor is
│ │ + capable of generating from the JPEG image.  If the source image is a YUV
│ │ + image, then the width and height of the <code>BufferedImage</code>
│ │ + instance must match the width and height of the YUV image.</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="decompress(int, int, int, int)">
│ │  <!--   -->
│ │ @@ -1142,26 +1159,27 @@
│ │  <li class="blockList">
│ │  <h4>decompress</h4>
│ │  <pre>public&nbsp;java.awt.image.BufferedImage&nbsp;decompress(int&nbsp;desiredWidth,
│ │                                        int&nbsp;desiredHeight,
│ │                                        int&nbsp;bufferedImageType,
│ │                                        int&nbsp;flags)
│ │                                          throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Decompress the JPEG source image or decode the YUV source image associated
│ │ - with this decompressor instance and return a <code>BufferedImage</code>
│ │ - instance containing the decompressed/decoded image.</div>
│ │ +<div class="block">Decompress the JPEG source image or decode the planar YUV source image
│ │ + associated with this decompressor instance and return a
│ │ + <code>BufferedImage</code> instance containing the packed-pixel
│ │ + decompressed/decoded image.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>desiredWidth</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)"><code>decompress(byte[], int, int, int, int, int, int, int)</code></a> for
│ │   description</dd><dd><code>desiredHeight</code> - see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html#decompress(byte[],%20int,%20int,%20int,%20int,%20int,%20int,%20int)"><code>decompress(byte[], int, int, int, int, int, int, int)</code></a> for
│ │   description</dd><dd><code>bufferedImageType</code> - the image type of the <code>BufferedImage</code>
│ │   instance that will be created (for instance,
│ │   <code>BufferedImage.TYPE_INT_RGB</code>)</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │ -<dt><span class="strong">Returns:</span></dt><dd>a <code>BufferedImage</code> instance containing the
│ │ +<dt><span class="strong">Returns:</span></dt><dd>a <code>BufferedImage</code> instance containing the packed-pixel
│ │   decompressed/decoded image.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="close()">
│ │  <!--   -->
│ │ ├── html2text {}
│ │ │ @@ -45,122 +45,127 @@
│ │ │              protected int      jpegBufSize 
│ │ │              protected int      jpegColorspace 
│ │ │              protected int      jpegHeight 
│ │ │              protected int      jpegSubsamp 
│ │ │              protected int      jpegWidth 
│ │ │              protected YUVImage yuvImage 
│ │ │            o **** Constructor Summary ****
│ │ │ -                                       Constructors 
│ │ │ +                                      Constructors 
│ │ │              Constructor and Description
│ │ │              TJDecompressor()
│ │ │              Create a TurboJPEG decompresssor instance.
│ │ │              TJDecompressor(byte[] jpegImage)
│ │ │              Create a TurboJPEG decompressor instance and associate the JPEG
│ │ │ -            source image stored in jpegImage with the newly created instance.
│ │ │ +            source image or "abbreviated table specification" (AKA "tables-
│ │ │ +            only") datastream stored in jpegImage with the newly created
│ │ │ +            instance.
│ │ │              TJDecompressor(byte[] jpegImage, int imageSize)
│ │ │              Create a TurboJPEG decompressor instance and associate the JPEG
│ │ │ -            source image of length imageSize bytes stored in jpegImage with the
│ │ │ -            newly created instance.
│ │ │ +            source image or "abbreviated table specification" (AKA "tables-
│ │ │ +            only") datastream of length imageSize bytes stored in jpegImage
│ │ │ +            with the newly created instance.
│ │ │              TJDecompressor(YUVImage yuvImage)
│ │ │ -            Create a TurboJPEG decompressor instance and associate the YUV
│ │ │ -            planar source image stored in yuvImage with the newly created
│ │ │ +            Create a TurboJPEG decompressor instance and associate the planar
│ │ │ +            YUV source image stored in yuvImage with the newly created
│ │ │              instance.
│ │ │            o **** Method Summary ****
│ │ │ -                                                      Methods 
│ │ │ +                                                       Methods 
│ │ │              Modifier and Type            Method and Description
│ │ │                                           close()
│ │ │              void                         Free the native structures associated with this decompressor
│ │ │                                           instance.
│ │ │                                           decompress(java.awt.image.BufferedImage dstImage, int flags)
│ │ │ -            void                         Decompress the JPEG source image or decode the YUV source image
│ │ │ -                                         associated with this decompressor instance and output a
│ │ │ -                                         decompressed/decoded image to the given BufferedImage instance.
│ │ │ +                                         Decompress the JPEG source image or decode the planar YUV source
│ │ │ +            void                         image associated with this decompressor instance and output a
│ │ │ +                                         packed-pixel decompressed/decoded image to the given BufferedImage
│ │ │ +                                         instance.
│ │ │                                           decompress(byte[] dstBuf, int desiredWidth, int pitch,
│ │ │ -                                         int desiredHeight, int pixelFormat, int flags)
│ │ │ -            void                         Deprecated. 
│ │ │ -                                         Use decompress(byte[],_int,_int,_int,_int,_int,_int,_int)
│ │ │ -                                         instead.
│ │ │ +            void                         int desiredHeight, int pixelFormat, int flags)
│ │ │ +                                         Deprecated. 
│ │ │ +                                         Use decompress(byte[],_int,_int,_int,_int,_int,_int,_int) instead.
│ │ │                                           decompress(byte[] dstBuf, int x, int y, int desiredWidth,
│ │ │                                           int pitch, int desiredHeight, int pixelFormat, int flags)
│ │ │ -            void                         Decompress the JPEG source image or decode the YUV source image
│ │ │ -                                         associated with this decompressor instance and output a
│ │ │ -                                         grayscale, RGB, or CMYK image to the given destination buffer.
│ │ │ +            void                         Decompress the JPEG source image or decode the planar YUV source
│ │ │ +                                         image associated with this decompressor instance and output a
│ │ │ +                                         packed-pixel grayscale, RGB, or CMYK image to the given
│ │ │ +                                         destination buffer.
│ │ │                                           decompress(int[] dstBuf, int x, int y, int desiredWidth,
│ │ │                                           int stride, int desiredHeight, int pixelFormat, int flags)
│ │ │ -            void                         Decompress the JPEG source image or decode the YUV source image
│ │ │ -                                         associated with this decompressor instance and output a
│ │ │ -                                         grayscale, RGB, or CMYK image to the given destination buffer.
│ │ │ +            void                         Decompress the JPEG source image or decode the planar YUV source
│ │ │ +                                         image associated with this decompressor instance and output a
│ │ │ +                                         packed-pixel grayscale, RGB, or CMYK image to the given
│ │ │ +                                         destination buffer.
│ │ │                                           decompress(int desiredWidth, int desiredHeight,
│ │ │                                           int bufferedImageType, int flags)
│ │ │ -            java.awt.image.BufferedImage Decompress the JPEG source image or decode the YUV source image
│ │ │ -                                         associated with this decompressor instance and return a
│ │ │ -                                         BufferedImage instance containing the decompressed/decoded
│ │ │ -                                         image.
│ │ │ +            java.awt.image.BufferedImage Decompress the JPEG source image or decode the planar YUV source
│ │ │ +                                         image associated with this decompressor instance and return a
│ │ │ +                                         BufferedImage instance containing the packed-pixel decompressed/
│ │ │ +                                         decoded image.
│ │ │                                           decompress(int desiredWidth, int pitch, int desiredHeight,
│ │ │                                           int pixelFormat, int flags)
│ │ │ -            byte[]                       Decompress the JPEG source image associated with this
│ │ │ -                                         decompressor instance and return a buffer containing the
│ │ │ -                                         decompressed image.
│ │ │ +            byte[]                       Decompress the JPEG source image or decode the planar YUV source
│ │ │ +                                         image associated with this decompressor instance and return a
│ │ │ +                                         buffer containing the packed-pixel decompressed image.
│ │ │                                           decompressToYUV(byte[] dstBuf, int flags)
│ │ │              void                         Deprecated. 
│ │ │                                           Use decompressToYUV(YUVImage,_int) instead.
│ │ │                                           decompressToYUV(int flags)
│ │ │              byte[]                       Deprecated. 
│ │ │                                           Use decompressToYUV(int,_int,_int,_int) instead.
│ │ │                                           decompressToYUV(int desiredWidth, int[] strides,
│ │ │                                           int desiredHeight, int flags)
│ │ │ -            YUVImage                     Decompress the JPEG source image associated with this
│ │ │ -                                         decompressor instance into a set of Y, U (Cb), and V (Cr) image
│ │ │ -                                         planes and return a YUVImage instance containing the
│ │ │ -                                         decompressed image planes.
│ │ │ -                                         decompressToYUV(int desiredWidth, int pad, int desiredHeight,
│ │ │ +            YUVImage                     Decompress the JPEG source image associated with this decompressor
│ │ │ +                                         instance into a set of Y, U (Cb), and V (Cr) image planes and
│ │ │ +                                         return a YUVImage instance containing the decompressed image
│ │ │ +                                         planes.
│ │ │ +                                         decompressToYUV(int desiredWidth, int align, int desiredHeight,
│ │ │                                           int flags)
│ │ │ -            YUVImage                     Decompress the JPEG source image associated with this
│ │ │ -                                         decompressor instance into a unified YUV planar image buffer and
│ │ │ -                                         return a YUVImage instance containing the decompressed image.
│ │ │ +            YUVImage                     Decompress the JPEG source image associated with this decompressor
│ │ │ +                                         instance into a unified planar YUV image and return a YUVImage
│ │ │ +                                         instance containing the decompressed image.
│ │ │                                           decompressToYUV(YUVImage dstImage, int flags)
│ │ │ -            void                         Decompress the JPEG source image associated with this
│ │ │ -                                         decompressor instance into a YUV planar image and store it in
│ │ │ -                                         the given YUVImage instance.
│ │ │ +            void                         Decompress the JPEG source image associated with this decompressor
│ │ │ +                                         instance into a planar YUV image and store it in the given
│ │ │ +                                         YUVImage instance.
│ │ │              protected void               finalize() 
│ │ │                                           getColorspace()
│ │ │              int                          Returns the colorspace used in the source image (JPEG or YUV)
│ │ │                                           associated with this decompressor instance.
│ │ │                                           getHeight()
│ │ │              int                          Returns the height of the source image (JPEG or YUV) associated
│ │ │                                           with this decompressor instance.
│ │ │                                           getJPEGBuf()
│ │ │ -            byte[]                       Returns the JPEG image buffer associated with this decompressor
│ │ │ +            byte[]                       Returns the JPEG buffer associated with this decompressor
│ │ │                                           instance.
│ │ │                                           getJPEGSize()
│ │ │ -            int                          Returns the size of the JPEG image (in bytes) associated with
│ │ │ -                                         this decompressor instance.
│ │ │ +            int                          Returns the size of the JPEG image (in bytes) associated with this
│ │ │ +                                         decompressor instance.
│ │ │                                           getScaledHeight(int desiredWidth, int desiredHeight)
│ │ │              int                          Returns the height of the largest scaled-down image that the
│ │ │ -                                         TurboJPEG decompressor can generate without exceeding the
│ │ │ -                                         desired image width and height.
│ │ │ +                                         TurboJPEG decompressor can generate without exceeding the desired
│ │ │ +                                         image width and height.
│ │ │                                           getScaledWidth(int desiredWidth, int desiredHeight)
│ │ │              int                          Returns the width of the largest scaled-down image that the
│ │ │ -                                         TurboJPEG decompressor can generate without exceeding the
│ │ │ -                                         desired image width and height.
│ │ │ +                                         TurboJPEG decompressor can generate without exceeding the desired
│ │ │ +                                         image width and height.
│ │ │                                           getSubsamp()
│ │ │              int                          Returns the level of chrominance subsampling used in the source
│ │ │                                           image (JPEG or YUV) associated with this decompressor instance.
│ │ │                                           getWidth()
│ │ │              int                          Returns the width of the source image (JPEG or YUV) associated
│ │ │                                           with this decompressor instance.
│ │ │                                           setJPEGImage(byte[] jpegImage, int imageSize)
│ │ │              void                         Deprecated. 
│ │ │                                           Use setSourceImage(byte[],_int) instead.
│ │ │                                           setSourceImage(byte[] jpegImage, int imageSize)
│ │ │ -            void                         Associate the JPEG image or "abbreviated table specification"
│ │ │ -                                         (AKA "tables-only") datastream of length imageSize bytes stored
│ │ │ -                                         in jpegImage with this decompressor instance.
│ │ │ +            void                         Associate the JPEG image or "abbreviated table specification" (AKA
│ │ │ +                                         "tables-only") datastream of length imageSize bytes stored in
│ │ │ +                                         jpegImage with this decompressor instance.
│ │ │                                           setSourceImage(YUVImage srcImage)
│ │ │ -            void                         Associate the specified YUV planar source image with this
│ │ │ +            void                         Associate the specified planar YUV source image with this
│ │ │                                           decompressor instance.
│ │ │                  # **** Methods inherited from class java.lang.Object ****
│ │ │                    clone, equals, getClass, hashCode, notify, notifyAll,
│ │ │                    toString, wait, wait, wait
│ │ │      *     o **** Field Detail ****
│ │ │                  # *** handle ***
│ │ │                    protected long handle
│ │ │ @@ -185,85 +190,90 @@
│ │ │                    Create a TurboJPEG decompresssor instance.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** TJDecompressor ***
│ │ │                    public TJDecompressor(byte[] jpegImage)
│ │ │                                   throws TJException
│ │ │                    Create a TurboJPEG decompressor instance and associate the
│ │ │ -                  JPEG source image stored in jpegImage with the newly created
│ │ │ -                  instance.
│ │ │ +                  JPEG source image or "abbreviated table specification" (AKA
│ │ │ +                  "tables-only") datastream stored in jpegImage with the newly
│ │ │ +                  created instance.
│ │ │                      Parameters:
│ │ │ -                        jpegImage - JPEG image buffer (size of the JPEG image
│ │ │ -                        is assumed to be the length of the array.) This buffer
│ │ │ -                        is not modified.
│ │ │ +                        jpegImage - buffer containing a JPEG source image or
│ │ │ +                        tables-only datastream. (The size of the JPEG image or
│ │ │ +                        datastream is assumed to be the length of the array.)
│ │ │ +                        This buffer is not modified.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** TJDecompressor ***
│ │ │                    public TJDecompressor(byte[] jpegImage,
│ │ │                                  int imageSize)
│ │ │                                   throws TJException
│ │ │                    Create a TurboJPEG decompressor instance and associate the
│ │ │ -                  JPEG source image of length imageSize bytes stored in
│ │ │ +                  JPEG source image or "abbreviated table specification" (AKA
│ │ │ +                  "tables-only") datastream of length imageSize bytes stored in
│ │ │                    jpegImage with the newly created instance.
│ │ │                      Parameters:
│ │ │ -                        jpegImage - JPEG image buffer. This buffer is not
│ │ │ -                        modified.
│ │ │ -                        imageSize - size of the JPEG image (in bytes)
│ │ │ +                        jpegImage - buffer containing a JPEG source image or
│ │ │ +                        tables-only datastream. This buffer is not modified.
│ │ │ +                        imageSize - size of the JPEG source image or tables-
│ │ │ +                        only datastream (in bytes)
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** TJDecompressor ***
│ │ │                    public TJDecompressor(YUVImage yuvImage)
│ │ │                                   throws TJException
│ │ │                    Create a TurboJPEG decompressor instance and associate the
│ │ │ -                  YUV planar source image stored in yuvImage with the newly
│ │ │ +                  planar YUV source image stored in yuvImage with the newly
│ │ │                    created instance.
│ │ │                      Parameters:
│ │ │ -                        yuvImage - YUVImage instance containing a YUV planar
│ │ │ -                        image to be decoded. This image is not modified.
│ │ │ +                        yuvImage - YUVImage instance containing a planar YUV
│ │ │ +                        source image to be decoded. This image is not modified.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │            o **** Method Detail ****
│ │ │                  # *** setSourceImage ***
│ │ │                    public void setSourceImage(byte[] jpegImage,
│ │ │                                      int imageSize)
│ │ │                                        throws TJException
│ │ │                    Associate the JPEG image or "abbreviated table specification"
│ │ │                    (AKA "tables-only") datastream of length imageSize bytes
│ │ │                    stored in jpegImage with this decompressor instance. If
│ │ │                    jpegImage contains a JPEG image, then this image will be used
│ │ │ -                  as the source image for subsequent decompress operations.
│ │ │ +                  as the source image for subsequent decompression operations.
│ │ │                    Passing a tables-only datastream to this method primes the
│ │ │                    decompressor with quantization and Huffman tables that can be
│ │ │                    used when decompressing subsequent "abbreviated image"
│ │ │                    datastreams. This is useful, for instance, when decompressing
│ │ │                    video streams in which all frames share the same quantization
│ │ │                    and Huffman tables.
│ │ │                      Parameters:
│ │ │ -                        jpegImage - buffer containing a JPEG image or an
│ │ │ -                        "abbreviated table specification" (AKA "tables-only")
│ │ │ -                        datastream. This buffer is not modified.
│ │ │ -                        imageSize - size of the JPEG image (in bytes)
│ │ │ +                        jpegImage - buffer containing a JPEG source image or
│ │ │ +                        tables-only datastream. This buffer is not modified.
│ │ │ +                        imageSize - size of the JPEG source image or tables-
│ │ │ +                        only datastream (in bytes)
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** setJPEGImage ***
│ │ │                    @Deprecated
│ │ │                    public void setJPEGImage(byte[] jpegImage,
│ │ │                                               int imageSize)
│ │ │                                      throws TJException
│ │ │                    Deprecated. Use setSourceImage(byte[],_int) instead.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** setSourceImage ***
│ │ │                    public void setSourceImage(YUVImage srcImage)
│ │ │ -                  Associate the specified YUV planar source image with this
│ │ │ -                  decompressor instance. Subsequent decompress operations will
│ │ │ -                  decode this image into an RGB or grayscale destination image.
│ │ │ +                  Associate the specified planar YUV source image with this
│ │ │ +                  decompressor instance. Subsequent decompression operations
│ │ │ +                  will decode this image into a packed-pixel RGB or grayscale
│ │ │ +                  destination image.
│ │ │                      Parameters:
│ │ │ -                        srcImage - YUVImage instance containing a YUV planar
│ │ │ -                        image to be decoded. This image is not modified.
│ │ │ +                        srcImage - YUVImage instance containing a planar YUV
│ │ │ +                        source image to be decoded. This image is not modified.
│ │ │                  # *** getWidth ***
│ │ │                    public int getWidth()
│ │ │                    Returns the width of the source image (JPEG or YUV)
│ │ │                    associated with this decompressor instance.
│ │ │                      Returns:
│ │ │                          the width of the source image (JPEG or YUV) associated
│ │ │                          with this decompressor instance.
│ │ │ @@ -290,18 +300,18 @@
│ │ │                    the source image is YUV, then this always returns
│ │ │                    TJ.CS_YCbCr.
│ │ │                      Returns:
│ │ │                          the colorspace used in the source image (JPEG or YUV)
│ │ │                          associated with this decompressor instance.
│ │ │                  # *** getJPEGBuf ***
│ │ │                    public byte[] getJPEGBuf()
│ │ │ -                  Returns the JPEG image buffer associated with this
│ │ │ -                  decompressor instance.
│ │ │ +                  Returns the JPEG buffer associated with this decompressor
│ │ │ +                  instance.
│ │ │                      Returns:
│ │ │ -                        the JPEG image buffer associated with this decompressor
│ │ │ +                        the JPEG buffer associated with this decompressor
│ │ │                          instance.
│ │ │                  # *** getJPEGSize ***
│ │ │                    public int getJPEGSize()
│ │ │                    Returns the size of the JPEG image (in bytes) associated with
│ │ │                    this decompressor instance.
│ │ │                      Returns:
│ │ │                          the size of the JPEG image (in bytes) associated with
│ │ │ @@ -311,20 +321,20 @@
│ │ │                                     int desiredHeight)
│ │ │                    Returns the width of the largest scaled-down image that the
│ │ │                    TurboJPEG decompressor can generate without exceeding the
│ │ │                    desired image width and height.
│ │ │                      Parameters:
│ │ │                          desiredWidth - desired width (in pixels) of the
│ │ │                          decompressed image. Setting this to 0 is the same as
│ │ │ -                        setting it to the width of the JPEG image (in other
│ │ │ +                        setting it to the width of the JPEG image. (In other
│ │ │                          words, the width will not be considered when
│ │ │                          determining the scaled image size.)
│ │ │                          desiredHeight - desired height (in pixels) of the
│ │ │                          decompressed image. Setting this to 0 is the same as
│ │ │ -                        setting it to the height of the JPEG image (in other
│ │ │ +                        setting it to the height of the JPEG image. (In other
│ │ │                          words, the height will not be considered when
│ │ │                          determining the scaled image size.)
│ │ │                      Returns:
│ │ │                          the width of the largest scaled-down image that the
│ │ │                          TurboJPEG decompressor can generate without exceeding
│ │ │                          the desired image width and height.
│ │ │                  # *** getScaledHeight ***
│ │ │ @@ -332,20 +342,20 @@
│ │ │                                      int desiredHeight)
│ │ │                    Returns the height of the largest scaled-down image that the
│ │ │                    TurboJPEG decompressor can generate without exceeding the
│ │ │                    desired image width and height.
│ │ │                      Parameters:
│ │ │                          desiredWidth - desired width (in pixels) of the
│ │ │                          decompressed image. Setting this to 0 is the same as
│ │ │ -                        setting it to the width of the JPEG image (in other
│ │ │ +                        setting it to the width of the JPEG image. (In other
│ │ │                          words, the width will not be considered when
│ │ │                          determining the scaled image size.)
│ │ │                          desiredHeight - desired height (in pixels) of the
│ │ │                          decompressed image. Setting this to 0 is the same as
│ │ │ -                        setting it to the height of the JPEG image (in other
│ │ │ +                        setting it to the height of the JPEG image. (In other
│ │ │                          words, the height will not be considered when
│ │ │                          determining the scaled image size.)
│ │ │                      Returns:
│ │ │                          the height of the largest scaled-down image that the
│ │ │                          TurboJPEG decompressor can generate without exceeding
│ │ │                          the desired image width and height.
│ │ │                  # *** decompress ***
│ │ │ @@ -354,25 +364,25 @@
│ │ │                                  int y,
│ │ │                                  int desiredWidth,
│ │ │                                  int pitch,
│ │ │                                  int desiredHeight,
│ │ │                                  int pixelFormat,
│ │ │                                  int flags)
│ │ │                                    throws TJException
│ │ │ -                  Decompress the JPEG source image or decode the YUV source
│ │ │ -                  image associated with this decompressor instance and output a
│ │ │ -                  grayscale, RGB, or CMYK image to the given destination
│ │ │ -                  buffer.
│ │ │ -                  NOTE: The output image is fully recoverable if this method
│ │ │ -                  throws a non-fatal TJException (unless TJ.FLAG_STOPONWARNING
│ │ │ -                  is specified.)
│ │ │ -                    Parameters:
│ │ │ -                        dstBuf - buffer that will receive the decompressed/
│ │ │ -                        decoded image. If the source image is a JPEG image,
│ │ │ -                        then this buffer should normally be pitch *
│ │ │ +                  Decompress the JPEG source image or decode the planar YUV
│ │ │ +                  source image associated with this decompressor instance and
│ │ │ +                  output a packed-pixel grayscale, RGB, or CMYK image to the
│ │ │ +                  given destination buffer.
│ │ │ +                  NOTE: The destination image is fully recoverable if this
│ │ │ +                  method throws a non-fatal TJException (unless
│ │ │ +                  TJ.FLAG_STOPONWARNING is specified.)
│ │ │ +                    Parameters:
│ │ │ +                        dstBuf - buffer that will receive the packed-pixel
│ │ │ +                        decompressed/decoded image. If the source image is a
│ │ │ +                        JPEG image, then this buffer should normally be pitch *
│ │ │                          scaledHeight bytes in size, where scaledHeight can be
│ │ │                          determined by calling scalingFactor.getScaled
│ │ │                          (jpegHeight) with one of the scaling factors returned
│ │ │                          from TJ.getScalingFactors() or by calling
│ │ │                          getScaledHeight(int,_int). If the source image is a YUV
│ │ │                          image, then this buffer should normally be pitch *
│ │ │                          height bytes in size, where height is the height of the
│ │ │ @@ -391,40 +401,41 @@
│ │ │                          then this specifies the desired width (in pixels) of
│ │ │                          the decompressed image (or image region.) If the
│ │ │                          desired destination image dimensions are different than
│ │ │                          the source image dimensions, then TurboJPEG will use
│ │ │                          scaling in the JPEG decompressor to generate the
│ │ │                          largest possible image that will fit within the desired
│ │ │                          dimensions. Setting this to 0 is the same as setting it
│ │ │ -                        to the width of the JPEG image (in other words, the
│ │ │ +                        to the width of the JPEG image. (In other words, the
│ │ │                          width will not be considered when determining the
│ │ │                          scaled image size.) This parameter is ignored if the
│ │ │                          source image is a YUV image.
│ │ │ -                        pitch - bytes per line of the destination image.
│ │ │ -                        Normally, this should be set to scaledWidth *
│ │ │ -                        TJ.pixelSize(pixelFormat) if the destination image is
│ │ │ -                        unpadded, but you can use this to, for instance, pad
│ │ │ -                        each line of the destination image to a 4-byte boundary
│ │ │ -                        or to decompress/decode the source image into a region
│ │ │ -                        of a larger image. NOTE: if the source image is a JPEG
│ │ │ -                        image, then scaledWidth can be determined by calling
│ │ │ -                        scalingFactor.getScaled(jpegWidth) or by calling
│ │ │ -                        getScaledWidth(int,_int). If the source image is a YUV
│ │ │ -                        image, then scaledWidth is the width of the YUV image.
│ │ │ -                        Setting this parameter to 0 is the equivalent of
│ │ │ -                        setting it to scaledWidth * TJ.pixelSize(pixelFormat).
│ │ │ +                        pitch - bytes per row in the destination image.
│ │ │ +                        Normally this should be set to scaledWidth
│ │ │ +                        *TJ.getPixelSize(pixelFormat), if the destination image
│ │ │ +                        will be unpadded. However, you can use this to, for
│ │ │ +                        instance, pad each row of the destination image to the
│ │ │ +                        nearest multiple of 4 bytes or to decompress/decode the
│ │ │ +                        source image into a region of a larger image. NOTE: if
│ │ │ +                        the source image is a JPEG image, then scaledWidth can
│ │ │ +                        be determined by calling scalingFactor.getScaled
│ │ │ +                        (jpegWidth) or by calling getScaledWidth(int,_int). If
│ │ │ +                        the source image is a YUV image, then scaledWidth is
│ │ │ +                        the width of the YUV image. Setting this parameter to 0
│ │ │ +                        is the equivalent of setting it to scaledWidth
│ │ │ +                        *TJ.getPixelSize(pixelFormat).
│ │ │                          desiredHeight - If the source image is a JPEG image,
│ │ │                          then this specifies the desired height (in pixels) of
│ │ │                          the decompressed image (or image region.) If the
│ │ │                          desired destination image dimensions are different than
│ │ │                          the source image dimensions, then TurboJPEG will use
│ │ │                          scaling in the JPEG decompressor to generate the
│ │ │                          largest possible image that will fit within the desired
│ │ │                          dimensions. Setting this to 0 is the same as setting it
│ │ │ -                        to the height of the JPEG image (in other words, the
│ │ │ +                        to the height of the JPEG image. (In other words, the
│ │ │                          height will not be considered when determining the
│ │ │                          scaled image size.) This parameter is ignored if the
│ │ │                          source image is a YUV image.
│ │ │                          pixelFormat - pixel format of the decompressed/decoded
│ │ │                          image (one of TJ.PF_*)
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Throws:
│ │ │ @@ -445,53 +456,55 @@
│ │ │                  # *** decompress ***
│ │ │                    public byte[] decompress(int desiredWidth,
│ │ │                                    int pitch,
│ │ │                                    int desiredHeight,
│ │ │                                    int pixelFormat,
│ │ │                                    int flags)
│ │ │                                      throws TJException
│ │ │ -                  Decompress the JPEG source image associated with this
│ │ │ -                  decompressor instance and return a buffer containing the
│ │ │ -                  decompressed image.
│ │ │ +                  Decompress the JPEG source image or decode the planar YUV
│ │ │ +                  source image associated with this decompressor instance and
│ │ │ +                  return a buffer containing the packed-pixel decompressed
│ │ │ +                  image.
│ │ │                      Parameters:
│ │ │                          desiredWidth - see decompress(byte[],_int,_int,_int,
│ │ │                          int,_int,_int,_int) for description
│ │ │                          pitch - see decompress(byte[],_int,_int,_int,_int,_int,
│ │ │                          int,_int) for description
│ │ │                          desiredHeight - see decompress(byte[],_int,_int,_int,
│ │ │                          int,_int,_int,_int) for description
│ │ │                          pixelFormat - pixel format of the decompressed image
│ │ │                          (one of TJ.PF_*)
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │ -                        a buffer containing the decompressed image.
│ │ │ +                        a buffer containing the packed-pixel decompressed
│ │ │ +                        image.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** decompressToYUV ***
│ │ │                    public void decompressToYUV(YUVImage dstImage,
│ │ │                                       int flags)
│ │ │                                         throws TJException
│ │ │                    Decompress the JPEG source image associated with this
│ │ │ -                  decompressor instance into a YUV planar image and store it in
│ │ │ +                  decompressor instance into a planar YUV image and store it in
│ │ │                    the given YUVImage instance. This method performs JPEG
│ │ │                    decompression but leaves out the color conversion step, so a
│ │ │ -                  planar YUV image is generated instead of an RGB or grayscale
│ │ │ +                  planar YUV image is generated instead of a packed-pixel
│ │ │                    image. This method cannot be used to decompress JPEG source
│ │ │                    images with the CMYK or YCCK colorspace.
│ │ │ -                  NOTE: The YUV planar output image is fully recoverable if
│ │ │ -                  this method throws a non-fatal TJException (unless
│ │ │ +                  NOTE: The planar YUV destination image is fully recoverable
│ │ │ +                  if this method throws a non-fatal TJException (unless
│ │ │                    TJ.FLAG_STOPONWARNING is specified.)
│ │ │                      Parameters:
│ │ │ -                        dstImage - YUVImage instance that will receive the YUV
│ │ │ -                        planar image. The level of subsampling specified in
│ │ │ -                        this YUVImage instance must match that of the JPEG
│ │ │ -                        image, and the width and height specified in the
│ │ │ -                        YUVImage instance must match one of the scaled image
│ │ │ -                        sizes that TurboJPEG is capable of generating from the
│ │ │ -                        JPEG source image.
│ │ │ +                        dstImage - YUVImage instance that will receive the
│ │ │ +                        planar YUV decompressed image. The level of subsampling
│ │ │ +                        specified in this YUVImage instance must match that of
│ │ │ +                        the JPEG image, and the width and height specified in
│ │ │ +                        the YUVImage instance must match one of the scaled
│ │ │ +                        image sizes that the decompressor is capable of
│ │ │ +                        generating from the JPEG source image.
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** decompressToYUV ***
│ │ │                    @Deprecated
│ │ │                    public void decompressToYUV(byte[] dstBuf,
│ │ │                                                  int flags)
│ │ │ @@ -506,93 +519,96 @@
│ │ │                                           int flags)
│ │ │                                             throws TJException
│ │ │                    Decompress the JPEG source image associated with this
│ │ │                    decompressor instance into a set of Y, U (Cb), and V (Cr)
│ │ │                    image planes and return a YUVImage instance containing the
│ │ │                    decompressed image planes. This method performs JPEG
│ │ │                    decompression but leaves out the color conversion step, so a
│ │ │ -                  planar YUV image is generated instead of an RGB or grayscale
│ │ │ +                  planar YUV image is generated instead of a packed-pixel
│ │ │                    image. This method cannot be used to decompress JPEG source
│ │ │                    images with the CMYK or YCCK colorspace.
│ │ │                      Parameters:
│ │ │                          desiredWidth - desired width (in pixels) of the YUV
│ │ │                          image. If the desired image dimensions are different
│ │ │                          than the dimensions of the JPEG image being
│ │ │                          decompressed, then TurboJPEG will use scaling in the
│ │ │                          JPEG decompressor to generate the largest possible
│ │ │                          image that will fit within the desired dimensions.
│ │ │                          Setting this to 0 is the same as setting it to the
│ │ │ -                        width of the JPEG image (in other words, the width will
│ │ │ -                        not be considered when determining the scaled image
│ │ │ -                        size.)
│ │ │ +                        width of the JPEG image. (In other words, the width
│ │ │ +                        will not be considered when determining the scaled
│ │ │ +                        image size.)
│ │ │                          strides - an array of integers, each specifying the
│ │ │ -                        number of bytes per line in the corresponding plane of
│ │ │ -                        the output image. Setting the stride for any plane to 0
│ │ │ -                        is the same as setting it to the scaled component width
│ │ │ -                        of the plane. If strides is NULL, then the strides for
│ │ │ -                        all planes will be set to their respective scaled
│ │ │ -                        component widths. You can adjust the strides in order
│ │ │ -                        to add an arbitrary amount of line padding to each
│ │ │ -                        plane.
│ │ │ +                        number of bytes per row in the corresponding plane of
│ │ │ +                        the YUV image. Setting the stride for any plane to 0 is
│ │ │ +                        the same as setting it to the scaled plane width (see
│ │ │ +                        YUVImage.) If strides is null, then the strides for all
│ │ │ +                        planes will be set to their respective scaled plane
│ │ │ +                        widths. You can adjust the strides in order to add an
│ │ │ +                        arbitrary amount of row padding to each plane.
│ │ │                          desiredHeight - desired height (in pixels) of the YUV
│ │ │                          image. If the desired image dimensions are different
│ │ │                          than the dimensions of the JPEG image being
│ │ │                          decompressed, then TurboJPEG will use scaling in the
│ │ │                          JPEG decompressor to generate the largest possible
│ │ │                          image that will fit within the desired dimensions.
│ │ │                          Setting this to 0 is the same as setting it to the
│ │ │ -                        height of the JPEG image (in other words, the height
│ │ │ +                        height of the JPEG image. (In other words, the height
│ │ │                          will not be considered when determining the scaled
│ │ │                          image size.)
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │ -                        a YUV planar image.
│ │ │ +                        a YUVImage instance containing the decompressed image
│ │ │ +                        planes
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** decompressToYUV ***
│ │ │                    public YUVImage decompressToYUV(int desiredWidth,
│ │ │ -                                         int pad,
│ │ │ +                                         int align,
│ │ │                                           int desiredHeight,
│ │ │                                           int flags)
│ │ │                                             throws TJException
│ │ │                    Decompress the JPEG source image associated with this
│ │ │ -                  decompressor instance into a unified YUV planar image buffer
│ │ │ -                  and return a YUVImage instance containing the decompressed
│ │ │ -                  image. This method performs JPEG decompression but leaves out
│ │ │ -                  the color conversion step, so a planar YUV image is generated
│ │ │ -                  instead of an RGB or grayscale image. This method cannot be
│ │ │ -                  used to decompress JPEG source images with the CMYK or YCCK
│ │ │ +                  decompressor instance into a unified planar YUV image and
│ │ │ +                  return a YUVImage instance containing the decompressed image.
│ │ │ +                  This method performs JPEG decompression but leaves out the
│ │ │ +                  color conversion step, so a planar YUV image is generated
│ │ │ +                  instead of a packed-pixel image. This method cannot be used
│ │ │ +                  to decompress JPEG source images with the CMYK or YCCK
│ │ │                    colorspace.
│ │ │                      Parameters:
│ │ │                          desiredWidth - desired width (in pixels) of the YUV
│ │ │                          image. If the desired image dimensions are different
│ │ │                          than the dimensions of the JPEG image being
│ │ │                          decompressed, then TurboJPEG will use scaling in the
│ │ │                          JPEG decompressor to generate the largest possible
│ │ │                          image that will fit within the desired dimensions.
│ │ │                          Setting this to 0 is the same as setting it to the
│ │ │ -                        width of the JPEG image (in other words, the width will
│ │ │ -                        not be considered when determining the scaled image
│ │ │ -                        size.)
│ │ │ -                        pad - the width of each line in each plane of the YUV
│ │ │ -                        image will be padded to the nearest multiple of this
│ │ │ -                        number of bytes (must be a power of 2.)
│ │ │ +                        width of the JPEG image. (In other words, the width
│ │ │ +                        will not be considered when determining the scaled
│ │ │ +                        image size.)
│ │ │ +                        align - row alignment (in bytes) of the YUV image (must
│ │ │ +                        be a power of 2.) Setting this parameter to n will
│ │ │ +                        cause each row in each plane of the YUV image to be
│ │ │ +                        padded to the nearest multiple of n bytes (1 =
│ │ │ +                        unpadded.)
│ │ │                          desiredHeight - desired height (in pixels) of the YUV
│ │ │                          image. If the desired image dimensions are different
│ │ │                          than the dimensions of the JPEG image being
│ │ │                          decompressed, then TurboJPEG will use scaling in the
│ │ │                          JPEG decompressor to generate the largest possible
│ │ │                          image that will fit within the desired dimensions.
│ │ │                          Setting this to 0 is the same as setting it to the
│ │ │ -                        height of the JPEG image (in other words, the height
│ │ │ +                        height of the JPEG image. (In other words, the height
│ │ │                          will not be considered when determining the scaled
│ │ │                          image size.)
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │ -                        a YUV planar image.
│ │ │ +                        a YUVImage instance containing the unified planar YUV
│ │ │ +                        decompressed image
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** decompressToYUV ***
│ │ │                    @Deprecated
│ │ │                    public byte[] decompressToYUV(int flags)
│ │ │                                           throws TJException
│ │ │                    Deprecated. Use decompressToYUV(int,_int,_int,_int) instead.
│ │ │ @@ -604,27 +620,27 @@
│ │ │                                  int y,
│ │ │                                  int desiredWidth,
│ │ │                                  int stride,
│ │ │                                  int desiredHeight,
│ │ │                                  int pixelFormat,
│ │ │                                  int flags)
│ │ │                                    throws TJException
│ │ │ -                  Decompress the JPEG source image or decode the YUV source
│ │ │ -                  image associated with this decompressor instance and output a
│ │ │ -                  grayscale, RGB, or CMYK image to the given destination
│ │ │ -                  buffer.
│ │ │ -                  NOTE: The output image is fully recoverable if this method
│ │ │ -                  throws a non-fatal TJException (unless TJ.FLAG_STOPONWARNING
│ │ │ -                  is specified.)
│ │ │ -                    Parameters:
│ │ │ -                        dstBuf - buffer that will receive the decompressed/
│ │ │ -                        decoded image. If the source image is a JPEG image,
│ │ │ -                        then this buffer should normally be stride *
│ │ │ -                        scaledHeight pixels in size, where scaledHeight can be
│ │ │ -                        determined by calling scalingFactor.getScaled
│ │ │ +                  Decompress the JPEG source image or decode the planar YUV
│ │ │ +                  source image associated with this decompressor instance and
│ │ │ +                  output a packed-pixel grayscale, RGB, or CMYK image to the
│ │ │ +                  given destination buffer.
│ │ │ +                  NOTE: The destination image is fully recoverable if this
│ │ │ +                  method throws a non-fatal TJException (unless
│ │ │ +                  TJ.FLAG_STOPONWARNING is specified.)
│ │ │ +                    Parameters:
│ │ │ +                        dstBuf - buffer that will receive the packed-pixel
│ │ │ +                        decompressed/decoded image. If the source image is a
│ │ │ +                        JPEG image, then this buffer should normally be stride
│ │ │ +                        * scaledHeight pixels in size, where scaledHeight can
│ │ │ +                        be determined by calling scalingFactor.getScaled
│ │ │                          (jpegHeight) with one of the scaling factors returned
│ │ │                          from TJ.getScalingFactors() or by calling
│ │ │                          getScaledHeight(int,_int). If the source image is a YUV
│ │ │                          image, then this buffer should normally be stride *
│ │ │                          height pixels in size, where height is the height of
│ │ │                          the YUV image. However, the buffer may also be larger
│ │ │                          than the dimensions of the JPEG image, in which case
│ │ │ @@ -641,92 +657,92 @@
│ │ │                          then this specifies the desired width (in pixels) of
│ │ │                          the decompressed image (or image region.) If the
│ │ │                          desired destination image dimensions are different than
│ │ │                          the source image dimensions, then TurboJPEG will use
│ │ │                          scaling in the JPEG decompressor to generate the
│ │ │                          largest possible image that will fit within the desired
│ │ │                          dimensions. Setting this to 0 is the same as setting it
│ │ │ -                        to the width of the JPEG image (in other words, the
│ │ │ +                        to the width of the JPEG image. (In other words, the
│ │ │                          width will not be considered when determining the
│ │ │                          scaled image size.) This parameter is ignored if the
│ │ │                          source image is a YUV image.
│ │ │ -                        stride - pixels per line of the destination image.
│ │ │ -                        Normally, this should be set to scaledWidth, but you
│ │ │ -                        can use this to, for instance, decompress the JPEG
│ │ │ -                        image into a region of a larger image. NOTE: if the
│ │ │ -                        source image is a JPEG image, then scaledWidth can be
│ │ │ +                        stride - pixels per row in the destination image.
│ │ │ +                        Normally this should be set to scaledWidth, but you can
│ │ │ +                        use this to, for instance, decompress the JPEG image
│ │ │ +                        into a region of a larger image. NOTE: if the source
│ │ │ +                        image is a JPEG image, then scaledWidth can be
│ │ │                          determined by calling scalingFactor.getScaled
│ │ │                          (jpegWidth) or by calling getScaledWidth(int,_int). If
│ │ │                          the source image is a YUV image, then scaledWidth is
│ │ │                          the width of the YUV image. Setting this parameter to 0
│ │ │                          is the equivalent of setting it to scaledWidth.
│ │ │                          desiredHeight - If the source image is a JPEG image,
│ │ │                          then this specifies the desired height (in pixels) of
│ │ │                          the decompressed image (or image region.) If the
│ │ │                          desired destination image dimensions are different than
│ │ │                          the source image dimensions, then TurboJPEG will use
│ │ │                          scaling in the JPEG decompressor to generate the
│ │ │                          largest possible image that will fit within the desired
│ │ │                          dimensions. Setting this to 0 is the same as setting it
│ │ │ -                        to the height of the JPEG image (in other words, the
│ │ │ +                        to the height of the JPEG image. (In other words, the
│ │ │                          height will not be considered when determining the
│ │ │                          scaled image size.) This parameter is ignored if the
│ │ │                          source image is a YUV image.
│ │ │                          pixelFormat - pixel format of the decompressed image
│ │ │                          (one of TJ.PF_*)
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** decompress ***
│ │ │                    public void decompress(java.awt.image.BufferedImage dstImage,
│ │ │                                  int flags)
│ │ │                                    throws TJException
│ │ │ -                  Decompress the JPEG source image or decode the YUV source
│ │ │ -                  image associated with this decompressor instance and output a
│ │ │ -                  decompressed/decoded image to the given BufferedImage
│ │ │ -                  instance.
│ │ │ -                  NOTE: The output image is fully recoverable if this method
│ │ │ -                  throws a non-fatal TJException (unless TJ.FLAG_STOPONWARNING
│ │ │ -                  is specified.)
│ │ │ +                  Decompress the JPEG source image or decode the planar YUV
│ │ │ +                  source image associated with this decompressor instance and
│ │ │ +                  output a packed-pixel decompressed/decoded image to the given
│ │ │ +                  BufferedImage instance.
│ │ │ +                  NOTE: The destination image is fully recoverable if this
│ │ │ +                  method throws a non-fatal TJException (unless
│ │ │ +                  TJ.FLAG_STOPONWARNING is specified.)
│ │ │                      Parameters:
│ │ │                          dstImage - a BufferedImage instance that will receive
│ │ │ -                        the decompressed/decoded image. If the source image is
│ │ │ -                        a JPEG image, then the width and height of the
│ │ │ -                        BufferedImage instance must match one of the scaled
│ │ │ -                        image sizes that TurboJPEG is capable of generating
│ │ │ -                        from the JPEG image. If the source image is a YUV
│ │ │ -                        image, then the width and height of the BufferedImage
│ │ │ -                        instance must match the width and height of the YUV
│ │ │ -                        image.
│ │ │ +                        the packed-pixel decompressed/decoded image. If the
│ │ │ +                        source image is a JPEG image, then the width and height
│ │ │ +                        of the BufferedImage instance must match one of the
│ │ │ +                        scaled image sizes that the decompressor is capable of
│ │ │ +                        generating from the JPEG image. If the source image is
│ │ │ +                        a YUV image, then the width and height of the
│ │ │ +                        BufferedImage instance must match the width and height
│ │ │ +                        of the YUV image.
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** decompress ***
│ │ │                    public java.awt.image.BufferedImage decompress
│ │ │                    (int desiredWidth,
│ │ │                                                          int desiredHeight,
│ │ │                                                          int bufferedImageType,
│ │ │                                                          int flags)
│ │ │                                                            throws TJException
│ │ │ -                  Decompress the JPEG source image or decode the YUV source
│ │ │ -                  image associated with this decompressor instance and return a
│ │ │ -                  BufferedImage instance containing the decompressed/decoded
│ │ │ -                  image.
│ │ │ +                  Decompress the JPEG source image or decode the planar YUV
│ │ │ +                  source image associated with this decompressor instance and
│ │ │ +                  return a BufferedImage instance containing the packed-pixel
│ │ │ +                  decompressed/decoded image.
│ │ │                      Parameters:
│ │ │                          desiredWidth - see decompress(byte[],_int,_int,_int,
│ │ │                          int,_int,_int,_int) for description
│ │ │                          desiredHeight - see decompress(byte[],_int,_int,_int,
│ │ │                          int,_int,_int,_int) for description
│ │ │                          bufferedImageType - the image type of the BufferedImage
│ │ │                          instance that will be created (for instance,
│ │ │                          BufferedImage.TYPE_INT_RGB)
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │ -                        a BufferedImage instance containing the decompressed/
│ │ │ -                        decoded image.
│ │ │ +                        a BufferedImage instance containing the packed-pixel
│ │ │ +                        decompressed/decoded image.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** close ***
│ │ │                    public void close()
│ │ │                               throws TJException
│ │ │                    Free the native structures associated with this decompressor
│ │ │                    instance.
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJException.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJException.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJScalingFactor.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJScalingFactor.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJTransform.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJTransform.html
│ │┄ Files 2% similar despite different names
│ │ @@ -163,15 +163,15 @@
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#NUMOP">NUMOP</a></strong></code>
│ │  <div class="block">The number of lossless transform operations</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#op">op</a></strong></code>
│ │ -<div class="block">Transform operation (one of <code>OP_*</code>)</div>
│ │ +<div class="block">Transform operation (one of <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OP_NONE"><code>OP_*</code></a>)</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OP_HFLIP">OP_HFLIP</a></strong></code>
│ │  <div class="block">Flip (mirror) image horizontally.</div>
│ │  </td>
│ │ @@ -219,28 +219,28 @@
│ │  <div class="block">Flip (mirror) image vertically.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_COPYNONE">OPT_COPYNONE</a></strong></code>
│ │  <div class="block">This option will prevent <a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> from copying any extra markers (including EXIF
│ │ - and ICC profile data) from the source image to the output image.</div>
│ │ + and ICC profile data) from the source image to the destination image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_CROP">OPT_CROP</a></strong></code>
│ │  <div class="block">This option will enable lossless cropping.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_GRAY">OPT_GRAY</a></strong></code>
│ │ -<div class="block">This option will discard the color data in the input image and produce
│ │ - a grayscale output image.</div>
│ │ +<div class="block">This option will discard the color data in the source image and produce a
│ │ + grayscale destination image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_NOOUTPUT">OPT_NOOUTPUT</a></strong></code>
│ │  <div class="block">This option will prevent <a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> from outputting a JPEG image for this
│ │   particular transform.</div>
│ │ @@ -252,29 +252,30 @@
│ │  <div class="block">This option will cause <a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> to throw an exception if the transform is not
│ │   perfect.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PROGRESSIVE">OPT_PROGRESSIVE</a></strong></code>
│ │ -<div class="block">This option will enable progressive entropy coding in the output image
│ │ +<div class="block">This option will enable progressive entropy coding in the JPEG image
│ │   generated by this particular transform.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>static int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_TRIM">OPT_TRIM</a></strong></code>
│ │  <div class="block">This option will discard any partial MCU blocks that cannot be
│ │   transformed.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#options">options</a></strong></code>
│ │ -<div class="block">Transform options (bitwise OR of one or more of <code>OPT_*</code>)</div>
│ │ +<div class="block">Transform options (bitwise OR of one or more of
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PERFECT"><code>OPT_*</code></a>)</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  <ul class="blockList">
│ │  <li class="blockList"><a name="fields_inherited_from_class_java.awt.Rectangle">
│ │  <!--   -->
│ │  </a>
│ │ @@ -505,15 +506,15 @@
│ │  <h4>OPT_PERFECT</h4>
│ │  <pre>public static final&nbsp;int OPT_PERFECT</pre>
│ │  <div class="block">This option will cause <a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> to throw an exception if the transform is not
│ │   perfect.  Lossless transforms operate on MCU blocks, whose size depends on
│ │   the level of chrominance subsampling used.  If the image's width or height
│ │   is not evenly divisible by the MCU block size (see <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getMCUWidth(int)"><code>TJ.getMCUWidth(int)</code></a>
│ │   and <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getMCUHeight(int)"><code>TJ.getMCUHeight(int)</code></a>), then there will be partial MCU blocks on the
│ │ - right and/or bottom edges.   It is not possible to move these partial MCU
│ │ + right and/or bottom edges.  It is not possible to move these partial MCU
│ │   blocks to the top or left of the image, so any transform that would
│ │   require that is "imperfect."  If this option is not specified, then any
│ │   partial MCU blocks that cannot be transformed will be left in place, which
│ │   will create odd-looking strips on the right or bottom edge of the image.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJTransform.OPT_PERFECT">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │ @@ -543,16 +544,16 @@
│ │  <a name="OPT_GRAY">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>OPT_GRAY</h4>
│ │  <pre>public static final&nbsp;int OPT_GRAY</pre>
│ │ -<div class="block">This option will discard the color data in the input image and produce
│ │ - a grayscale output image.</div>
│ │ +<div class="block">This option will discard the color data in the source image and produce a
│ │ + grayscale destination image.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJTransform.OPT_GRAY">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="OPT_NOOUTPUT">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -569,52 +570,52 @@
│ │  <a name="OPT_PROGRESSIVE">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>OPT_PROGRESSIVE</h4>
│ │  <pre>public static final&nbsp;int OPT_PROGRESSIVE</pre>
│ │ -<div class="block">This option will enable progressive entropy coding in the output image
│ │ +<div class="block">This option will enable progressive entropy coding in the JPEG image
│ │   generated by this particular transform.  Progressive entropy coding will
│ │   generally improve compression relative to baseline entropy coding (the
│ │ - default), but it will reduce compression and decompression performance
│ │ - considerably.</div>
│ │ + default), but it will reduce decompression performance considerably.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJTransform.OPT_PROGRESSIVE">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="OPT_COPYNONE">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>OPT_COPYNONE</h4>
│ │  <pre>public static final&nbsp;int OPT_COPYNONE</pre>
│ │  <div class="block">This option will prevent <a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)"><code>TJTransformer.transform()</code></a> from copying any extra markers (including EXIF
│ │ - and ICC profile data) from the source image to the output image.</div>
│ │ + and ICC profile data) from the source image to the destination image.</div>
│ │  <dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#org.libjpegturbo.turbojpeg.TJTransform.OPT_COPYNONE">Constant Field Values</a></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="op">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>op</h4>
│ │  <pre>public&nbsp;int op</pre>
│ │ -<div class="block">Transform operation (one of <code>OP_*</code>)</div>
│ │ +<div class="block">Transform operation (one of <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OP_NONE"><code>OP_*</code></a>)</div>
│ │  </li>
│ │  </ul>
│ │  <a name="options">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>options</h4>
│ │  <pre>public&nbsp;int options</pre>
│ │ -<div class="block">Transform options (bitwise OR of one or more of <code>OPT_*</code>)</div>
│ │ +<div class="block">Transform options (bitwise OR of one or more of
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PERFECT"><code>OPT_*</code></a>)</div>
│ │  </li>
│ │  </ul>
│ │  <a name="cf">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │ @@ -657,16 +658,16 @@
│ │  <div class="block">Create a new lossless transform instance with the given parameters.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>x</code> - the left boundary of the cropping region.  This must be evenly
│ │   divisible by the MCU block width (see <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getMCUWidth(int)"><code>TJ.getMCUWidth(int)</code></a>)</dd><dd><code>y</code> - the upper boundary of the cropping region.  This must be evenly
│ │   divisible by the MCU block height (see <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#getMCUHeight(int)"><code>TJ.getMCUHeight(int)</code></a>)</dd><dd><code>w</code> - the width of the cropping region.  Setting this to 0 is the
│ │   equivalent of setting it to (width of the source JPEG image -
│ │   <code>x</code>).</dd><dd><code>h</code> - the height of the cropping region.  Setting this to 0 is the
│ │   equivalent of setting it to (height of the source JPEG image -
│ │ - <code>y</code>).</dd><dd><code>op</code> - one of the transform operations (<code>OP_*</code>)</dd><dd><code>options</code> - the bitwise OR of one or more of the transform options
│ │ - (<code>OPT_*</code>)</dd><dd><code>cf</code> - an instance of an object that implements the <a href="../../../org/libjpegturbo/turbojpeg/TJCustomFilter.html" title="interface in org.libjpegturbo.turbojpeg"><code>TJCustomFilter</code></a> interface, or null if no custom filter is needed</dd></dl>
│ │ + <code>y</code>).</dd><dd><code>op</code> - one of the transform operations (<a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OP_NONE"><code>OP_*</code></a>)</dd><dd><code>options</code> - the bitwise OR of one or more of the transform options
│ │ + (<a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PERFECT"><code>OPT_*</code></a>)</dd><dd><code>cf</code> - an instance of an object that implements the <a href="../../../org/libjpegturbo/turbojpeg/TJCustomFilter.html" title="interface in org.libjpegturbo.turbojpeg"><code>TJCustomFilter</code></a> interface, or null if no custom filter is needed</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="TJTransform(java.awt.Rectangle, int, int, org.libjpegturbo.turbojpeg.TJCustomFilter)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │ @@ -674,16 +675,16 @@
│ │  <pre>public&nbsp;TJTransform(java.awt.Rectangle&nbsp;r,
│ │             int&nbsp;op,
│ │             int&nbsp;options,
│ │             <a href="../../../org/libjpegturbo/turbojpeg/TJCustomFilter.html" title="interface in org.libjpegturbo.turbojpeg">TJCustomFilter</a>&nbsp;cf)</pre>
│ │  <div class="block">Create a new lossless transform instance with the given parameters.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>r</code> - a <code>Rectangle</code> instance that specifies the cropping
│ │   region.  See <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#TJTransform(int,%20int,%20int,%20int,%20int,%20int,%20org.libjpegturbo.turbojpeg.TJCustomFilter)"><code>TJTransform(int, int, int, int, int, int, TJCustomFilter)</code></a> for more
│ │ - detail.</dd><dd><code>op</code> - one of the transform operations (<code>OP_*</code>)</dd><dd><code>options</code> - the bitwise OR of one or more of the transform options
│ │ - (<code>OPT_*</code>)</dd><dd><code>cf</code> - an instance of an object that implements the <a href="../../../org/libjpegturbo/turbojpeg/TJCustomFilter.html" title="interface in org.libjpegturbo.turbojpeg"><code>TJCustomFilter</code></a> interface, or null if no custom filter is needed</dd></dl>
│ │ + detail.</dd><dd><code>op</code> - one of the transform operations (<a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OP_NONE"><code>OP_*</code></a>)</dd><dd><code>options</code> - the bitwise OR of one or more of the transform options
│ │ + (<a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PERFECT"><code>OPT_*</code></a>)</dd><dd><code>cf</code> - an instance of an object that implements the <a href="../../../org/libjpegturbo/turbojpeg/TJCustomFilter.html" title="interface in org.libjpegturbo.turbojpeg"><code>TJCustomFilter</code></a> interface, or null if no custom filter is needed</dd></dl>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </div>
│ │ ├── html2text {}
│ │ │ @@ -72,31 +72,32 @@
│ │ │                                upper right to lower left axis).
│ │ │              static int        OP_VFLIP
│ │ │                                Flip (mirror) image vertically.
│ │ │                                OPT_COPYNONE
│ │ │                                This option will prevent TJTransformer.transform
│ │ │              static int        () from copying any extra markers (including EXIF
│ │ │                                and ICC profile data) from the source image to
│ │ │ -                              the output image.
│ │ │ +                              the destination image.
│ │ │              static int        OPT_CROP
│ │ │                                This option will enable lossless cropping.
│ │ │                                OPT_GRAY
│ │ │              static int        This option will discard the color data in the
│ │ │ -                              input image and produce a grayscale output image.
│ │ │ +                              source image and produce a grayscale destination
│ │ │ +                              image.
│ │ │                                OPT_NOOUTPUT
│ │ │              static int        This option will prevent TJTransformer.transform
│ │ │                                () from outputting a JPEG image for this
│ │ │                                particular transform.
│ │ │                                OPT_PERFECT
│ │ │              static int        This option will cause TJTransformer.transform()
│ │ │                                to throw an exception if the transform is not
│ │ │                                perfect.
│ │ │                                OPT_PROGRESSIVE
│ │ │              static int        This option will enable progressive entropy
│ │ │ -                              coding in the output image generated by this
│ │ │ +                              coding in the JPEG image generated by this
│ │ │                                particular transform.
│ │ │                                OPT_TRIM
│ │ │              static int        This option will discard any partial MCU blocks
│ │ │                                that cannot be transformed.
│ │ │                                options
│ │ │              int               Transform options (bitwise OR of one or more of
│ │ │                                OPT_*)
│ │ │ @@ -224,41 +225,40 @@
│ │ │                  # *** OPT_CROP ***
│ │ │                    public static final int OPT_CROP
│ │ │                    This option will enable lossless cropping.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** OPT_GRAY ***
│ │ │                    public static final int OPT_GRAY
│ │ │ -                  This option will discard the color data in the input image
│ │ │ -                  and produce a grayscale output image.
│ │ │ +                  This option will discard the color data in the source image
│ │ │ +                  and produce a grayscale destination image.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** OPT_NOOUTPUT ***
│ │ │                    public static final int OPT_NOOUTPUT
│ │ │                    This option will prevent TJTransformer.transform() from
│ │ │                    outputting a JPEG image for this particular transform. This
│ │ │                    can be used in conjunction with a custom filter to capture
│ │ │                    the transformed DCT coefficients without transcoding them.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** OPT_PROGRESSIVE ***
│ │ │                    public static final int OPT_PROGRESSIVE
│ │ │                    This option will enable progressive entropy coding in the
│ │ │ -                  output image generated by this particular transform.
│ │ │ +                  JPEG image generated by this particular transform.
│ │ │                    Progressive entropy coding will generally improve compression
│ │ │                    relative to baseline entropy coding (the default), but it
│ │ │ -                  will reduce compression and decompression performance
│ │ │ -                  considerably.
│ │ │ +                  will reduce decompression performance considerably.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** OPT_COPYNONE ***
│ │ │                    public static final int OPT_COPYNONE
│ │ │                    This option will prevent TJTransformer.transform() from
│ │ │                    copying any extra markers (including EXIF and ICC profile
│ │ │ -                  data) from the source image to the output image.
│ │ │ +                  data) from the source image to the destination image.
│ │ │                      See Also:
│ │ │                          Constant_Field_Values
│ │ │                  # *** op ***
│ │ │                    public int op
│ │ │                    Transform operation (one of OP_*)
│ │ │                  # *** options ***
│ │ │                    public int options
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html
│ │┄ Files 2% similar despite different names
│ │ @@ -144,22 +144,23 @@
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#TJTransformer()">TJTransformer</a></strong>()</code>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#TJTransformer(byte[])">TJTransformer</a></strong>(byte[]&nbsp;jpegImage)</code>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ - image stored in <code>jpegImage</code> with the newly created instance.</div>
│ │ + source image stored in <code>jpegImage</code> with the newly created
│ │ + instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#TJTransformer(byte[],%20int)">TJTransformer</a></strong>(byte[]&nbsp;jpegImage,
│ │               int&nbsp;imageSize)</code>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ - image of length <code>imageSize</code> bytes stored in
│ │ + source image of length <code>imageSize</code> bytes stored in
│ │   <code>jpegImage</code> with the newly created instance.</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  </li>
│ │  </ul>
│ │  <!-- ========== METHOD SUMMARY =========== -->
│ │ @@ -174,34 +175,34 @@
│ │  <th class="colFirst" scope="col">Modifier and Type</th>
│ │  <th class="colLast" scope="col">Method and Description</th>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>int[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#getTransformedSizes()">getTransformedSizes</a></strong>()</code>
│ │  <div class="block">Returns an array containing the sizes of the transformed JPEG images
│ │ - generated by the most recent transform operation.</div>
│ │ + (in bytes) generated by the most recent transform operation.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(byte[][],%20org.libjpegturbo.turbojpeg.TJTransform[],%20int)">transform</a></strong>(byte[][]&nbsp;dstBufs,
│ │           <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a>[]&nbsp;transforms,
│ │           int&nbsp;flags)</code>
│ │ -<div class="block">Losslessly transform the JPEG image associated with this transformer
│ │ - instance into one or more JPEG images stored in the given destination
│ │ - buffers.</div>
│ │ +<div class="block">Losslessly transform the JPEG source image associated with this
│ │ + transformer instance into one or more JPEG images stored in the given
│ │ + destination buffers.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code><a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a>[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/TJTransformer.html#transform(org.libjpegturbo.turbojpeg.TJTransform[],%20int)">transform</a></strong>(<a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a>[]&nbsp;transforms,
│ │           int&nbsp;flags)</code>
│ │ -<div class="block">Losslessly transform the JPEG image associated with this transformer
│ │ - instance and return an array of <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor</code></a> instances, each of
│ │ - which has a transformed JPEG image associated with it.</div>
│ │ +<div class="block">Losslessly transform the JPEG source image associated with this
│ │ + transformer instance and return an array of <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor</code></a>
│ │ + instances, each of which has a transformed JPEG image associated with it.</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  <ul class="blockList">
│ │  <li class="blockList"><a name="methods_inherited_from_class_org.libjpegturbo.turbojpeg.TJDecompressor">
│ │  <!--   -->
│ │  </a>
│ │ @@ -247,34 +248,37 @@
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>TJTransformer</h4>
│ │  <pre>public&nbsp;TJTransformer(byte[]&nbsp;jpegImage)
│ │                throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ - image stored in <code>jpegImage</code> with the newly created instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - JPEG image buffer (size of the JPEG image is assumed to
│ │ - be the length of the array.)  This buffer is not modified.</dd>
│ │ + source image stored in <code>jpegImage</code> with the newly created
│ │ + instance.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - buffer containing the JPEG source image to transform.
│ │ + (The size of the JPEG image is assumed to be the length of the array.)
│ │ + This buffer is not modified.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="TJTransformer(byte[], int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │  <h4>TJTransformer</h4>
│ │  <pre>public&nbsp;TJTransformer(byte[]&nbsp;jpegImage,
│ │               int&nbsp;imageSize)
│ │                throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │  <div class="block">Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ - image of length <code>imageSize</code> bytes stored in
│ │ + source image of length <code>imageSize</code> bytes stored in
│ │   <code>jpegImage</code> with the newly created instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - JPEG image buffer.  This buffer is not modified.</dd><dd><code>imageSize</code> - size of the JPEG image (in bytes)</dd>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jpegImage</code> - buffer containing the JPEG source image to transform.
│ │ + This buffer is not modified.</dd><dd><code>imageSize</code> - size of the JPEG source image (in bytes)</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  <!-- ============ METHOD DETAIL ========== -->
│ │ @@ -289,53 +293,54 @@
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>transform</h4>
│ │  <pre>public&nbsp;void&nbsp;transform(byte[][]&nbsp;dstBufs,
│ │               <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a>[]&nbsp;transforms,
│ │               int&nbsp;flags)
│ │                 throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Losslessly transform the JPEG image associated with this transformer
│ │ - instance into one or more JPEG images stored in the given destination
│ │ - buffers.  Lossless transforms work by moving the raw coefficients from one
│ │ - JPEG image structure to another without altering the values of the
│ │ - coefficients.  While this is typically faster than decompressing the
│ │ - image, transforming it, and re-compressing it, lossless transforms are not
│ │ - free.  Each lossless transform requires reading and performing Huffman
│ │ - decoding on all of the coefficients in the source image, regardless of the
│ │ - size of the destination image.  Thus, this method provides a means of
│ │ - generating multiple transformed images from the same source or of applying
│ │ - multiple transformations simultaneously, in order to eliminate the need to
│ │ - read the source coefficients multiple times.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstBufs</code> - an array of image buffers.  <code>dstbufs[i]</code> will
│ │ - receive a JPEG image that has been transformed using the parameters in
│ │ - <code>transforms[i]</code>.  Use <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSize(int,%20int,%20int)"><code>TJ.bufSize(int, int, int)</code></a> to determine the
│ │ - maximum size for each buffer based on the transformed or cropped width and
│ │ - height and the level of subsampling used in the source image.</dd><dd><code>transforms</code> - an array of <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg"><code>TJTransform</code></a> instances, each of
│ │ +<div class="block">Losslessly transform the JPEG source image associated with this
│ │ + transformer instance into one or more JPEG images stored in the given
│ │ + destination buffers.  Lossless transforms work by moving the raw
│ │ + coefficients from one JPEG image structure to another without altering the
│ │ + values of the coefficients.  While this is typically faster than
│ │ + decompressing the image, transforming it, and re-compressing it, lossless
│ │ + transforms are not free.  Each lossless transform requires reading and
│ │ + performing Huffman decoding on all of the coefficients in the source
│ │ + image, regardless of the size of the destination image.  Thus, this method
│ │ + provides a means of generating multiple transformed images from the same
│ │ + source or of applying multiple transformations simultaneously, in order to
│ │ + eliminate the need to read the source coefficients multiple times.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dstBufs</code> - an array of JPEG destination buffers.
│ │ + <code>dstbufs[i]</code> will receive a JPEG image that has been
│ │ + transformed using the parameters in <code>transforms[i]</code>.  Use
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSize(int,%20int,%20int)"><code>TJ.bufSize(int, int, int)</code></a> to determine the maximum size for each buffer based on
│ │ + the transformed or cropped width and height and the level of subsampling
│ │ + used in the source image.</dd><dd><code>transforms</code> - an array of <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg"><code>TJTransform</code></a> instances, each of
│ │   which specifies the transform parameters and/or cropping region for the
│ │ - corresponding transformed output image</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │ + corresponding transformed JPEG image</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="transform(org.libjpegturbo.turbojpeg.TJTransform[], int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>transform</h4>
│ │  <pre>public&nbsp;<a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg">TJDecompressor</a>[]&nbsp;transform(<a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg">TJTransform</a>[]&nbsp;transforms,
│ │                           int&nbsp;flags)
│ │                             throws <a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></pre>
│ │ -<div class="block">Losslessly transform the JPEG image associated with this transformer
│ │ - instance and return an array of <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor</code></a> instances, each of
│ │ - which has a transformed JPEG image associated with it.</div>
│ │ +<div class="block">Losslessly transform the JPEG source image associated with this
│ │ + transformer instance and return an array of <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor</code></a>
│ │ + instances, each of which has a transformed JPEG image associated with it.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>transforms</code> - an array of <a href="../../../org/libjpegturbo/turbojpeg/TJTransform.html" title="class in org.libjpegturbo.turbojpeg"><code>TJTransform</code></a> instances, each of
│ │   which specifies the transform parameters and/or cropping region for the
│ │ - corresponding transformed output image</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │ + corresponding transformed JPEG image</dd><dd><code>flags</code> - the bitwise OR of one or more of
│ │   <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#FLAG_BOTTOMUP"><code>TJ.FLAG_*</code></a></dd>
│ │  <dt><span class="strong">Returns:</span></dt><dd>an array of <a href="../../../org/libjpegturbo/turbojpeg/TJDecompressor.html" title="class in org.libjpegturbo.turbojpeg"><code>TJDecompressor</code></a> instances, each of
│ │   which has a transformed JPEG image associated with it.</dd>
│ │  <dt><span class="strong">Throws:</span></dt>
│ │  <dd><code><a href="../../../org/libjpegturbo/turbojpeg/TJException.html" title="class in org.libjpegturbo.turbojpeg">TJException</a></code></dd></dl>
│ │  </li>
│ │  </ul>
│ │ @@ -343,17 +348,17 @@
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │  <h4>getTransformedSizes</h4>
│ │  <pre>public&nbsp;int[]&nbsp;getTransformedSizes()</pre>
│ │  <div class="block">Returns an array containing the sizes of the transformed JPEG images
│ │ - generated by the most recent transform operation.</div>
│ │ + (in bytes) generated by the most recent transform operation.</div>
│ │  <dl><dt><span class="strong">Returns:</span></dt><dd>an array containing the sizes of the transformed JPEG images
│ │ - generated by the most recent transform operation.</dd></dl>
│ │ + (in bytes) generated by the most recent transform operation.</dd></dl>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </div>
│ │ ├── html2text {}
│ │ │ @@ -43,32 +43,33 @@
│ │ │            o **** Constructor Summary ****
│ │ │                                        Constructors 
│ │ │              Constructor and Description
│ │ │              TJTransformer()
│ │ │              Create a TurboJPEG lossless transformer instance.
│ │ │              TJTransformer(byte[] jpegImage)
│ │ │              Create a TurboJPEG lossless transformer instance and associate the
│ │ │ -            JPEG image stored in jpegImage with the newly created instance.
│ │ │ +            JPEG source image stored in jpegImage with the newly created
│ │ │ +            instance.
│ │ │              TJTransformer(byte[] jpegImage, int imageSize)
│ │ │              Create a TurboJPEG lossless transformer instance and associate the
│ │ │ -            JPEG image of length imageSize bytes stored in jpegImage with the
│ │ │ -            newly created instance.
│ │ │ +            JPEG source image of length imageSize bytes stored in jpegImage
│ │ │ +            with the newly created instance.
│ │ │            o **** Method Summary ****
│ │ │                                                   Methods 
│ │ │              Modifier and   Method and Description
│ │ │              Type
│ │ │                             getTransformedSizes()
│ │ │              int[]          Returns an array containing the sizes of the transformed JPEG
│ │ │ -                           images generated by the most recent transform operation.
│ │ │ +                           images (in bytes) generated by the most recent transform operation.
│ │ │                             transform(byte[][] dstBufs, TJTransform[] transforms, int flags)
│ │ │ -            void           Losslessly transform the JPEG image associated with this
│ │ │ +            void           Losslessly transform the JPEG source image associated with this
│ │ │                             transformer instance into one or more JPEG images stored in the
│ │ │                             given destination buffers.
│ │ │                             transform(TJTransform[] transforms, int flags)
│ │ │ -            TJDecompressor Losslessly transform the JPEG image associated with this
│ │ │ +            TJDecompressor Losslessly transform the JPEG source image associated with this
│ │ │              []             transformer instance and return an array of TJDecompressor
│ │ │                             instances, each of which has a transformed JPEG image associated
│ │ │                             with it.
│ │ │                  # **** Methods inherited from
│ │ │                    class org.libjpegturbo.turbojpeg.TJDecompressor ****
│ │ │                    close, decompress, decompress, decompress, decompress,
│ │ │                    decompress, decompress, decompressToYUV, decompressToYUV,
│ │ │ @@ -86,97 +87,99 @@
│ │ │                    Create a TurboJPEG lossless transformer instance.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** TJTransformer ***
│ │ │                    public TJTransformer(byte[] jpegImage)
│ │ │                                  throws TJException
│ │ │                    Create a TurboJPEG lossless transformer instance and
│ │ │ -                  associate the JPEG image stored in jpegImage with the newly
│ │ │ -                  created instance.
│ │ │ +                  associate the JPEG source image stored in jpegImage with the
│ │ │ +                  newly created instance.
│ │ │                      Parameters:
│ │ │ -                        jpegImage - JPEG image buffer (size of the JPEG image
│ │ │ -                        is assumed to be the length of the array.) This buffer
│ │ │ -                        is not modified.
│ │ │ +                        jpegImage - buffer containing the JPEG source image to
│ │ │ +                        transform. (The size of the JPEG image is assumed to be
│ │ │ +                        the length of the array.) This buffer is not modified.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** TJTransformer ***
│ │ │                    public TJTransformer(byte[] jpegImage,
│ │ │                                 int imageSize)
│ │ │                                  throws TJException
│ │ │                    Create a TurboJPEG lossless transformer instance and
│ │ │ -                  associate the JPEG image of length imageSize bytes stored in
│ │ │ -                  jpegImage with the newly created instance.
│ │ │ +                  associate the JPEG source image of length imageSize bytes
│ │ │ +                  stored in jpegImage with the newly created instance.
│ │ │                      Parameters:
│ │ │ -                        jpegImage - JPEG image buffer. This buffer is not
│ │ │ -                        modified.
│ │ │ -                        imageSize - size of the JPEG image (in bytes)
│ │ │ +                        jpegImage - buffer containing the JPEG source image to
│ │ │ +                        transform. This buffer is not modified.
│ │ │ +                        imageSize - size of the JPEG source image (in bytes)
│ │ │                      Throws:
│ │ │                          TJException
│ │ │            o **** Method Detail ****
│ │ │                  # *** transform ***
│ │ │                    public void transform(byte[][] dstBufs,
│ │ │                                 TJTransform[] transforms,
│ │ │                                 int flags)
│ │ │                                   throws TJException
│ │ │ -                  Losslessly transform the JPEG image associated with this
│ │ │ -                  transformer instance into one or more JPEG images stored in
│ │ │ -                  the given destination buffers. Lossless transforms work by
│ │ │ +                  Losslessly transform the JPEG source image associated with
│ │ │ +                  this transformer instance into one or more JPEG images stored
│ │ │ +                  in the given destination buffers. Lossless transforms work by
│ │ │                    moving the raw coefficients from one JPEG image structure to
│ │ │                    another without altering the values of the coefficients.
│ │ │                    While this is typically faster than decompressing the image,
│ │ │                    transforming it, and re-compressing it, lossless transforms
│ │ │                    are not free. Each lossless transform requires reading and
│ │ │                    performing Huffman decoding on all of the coefficients in the
│ │ │                    source image, regardless of the size of the destination
│ │ │                    image. Thus, this method provides a means of generating
│ │ │                    multiple transformed images from the same source or of
│ │ │                    applying multiple transformations simultaneously, in order to
│ │ │                    eliminate the need to read the source coefficients multiple
│ │ │                    times.
│ │ │                      Parameters:
│ │ │ -                        dstBufs - an array of image buffers. dstbufs[i] will
│ │ │ -                        receive a JPEG image that has been transformed using
│ │ │ -                        the parameters in transforms[i]. Use TJ.bufSize(int,
│ │ │ -                        int,_int) to determine the maximum size for each buffer
│ │ │ -                        based on the transformed or cropped width and height
│ │ │ -                        and the level of subsampling used in the source image.
│ │ │ +                        dstBufs - an array of JPEG destination buffers. dstbufs
│ │ │ +                        [i] will receive a JPEG image that has been transformed
│ │ │ +                        using the parameters in transforms[i]. Use TJ.bufSize
│ │ │ +                        (int,_int,_int) to determine the maximum size for each
│ │ │ +                        buffer based on the transformed or cropped width and
│ │ │ +                        height and the level of subsampling used in the source
│ │ │ +                        image.
│ │ │                          transforms - an array of TJTransform instances, each of
│ │ │                          which specifies the transform parameters and/or
│ │ │ -                        cropping region for the corresponding transformed
│ │ │ -                        output image
│ │ │ +                        cropping region for the corresponding transformed JPEG
│ │ │ +                        image
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** transform ***
│ │ │                    public TJDecompressor[] transform(TJTransform[] transforms,
│ │ │                                             int flags)
│ │ │                                               throws TJException
│ │ │ -                  Losslessly transform the JPEG image associated with this
│ │ │ -                  transformer instance and return an array of TJDecompressor
│ │ │ -                  instances, each of which has a transformed JPEG image
│ │ │ -                  associated with it.
│ │ │ +                  Losslessly transform the JPEG source image associated with
│ │ │ +                  this transformer instance and return an array of
│ │ │ +                  TJDecompressor instances, each of which has a transformed
│ │ │ +                  JPEG image associated with it.
│ │ │                      Parameters:
│ │ │                          transforms - an array of TJTransform instances, each of
│ │ │                          which specifies the transform parameters and/or
│ │ │ -                        cropping region for the corresponding transformed
│ │ │ -                        output image
│ │ │ +                        cropping region for the corresponding transformed JPEG
│ │ │ +                        image
│ │ │                          flags - the bitwise OR of one or more of TJ.FLAG_*
│ │ │                      Returns:
│ │ │                          an array of TJDecompressor instances, each of which has
│ │ │                          a transformed JPEG image associated with it.
│ │ │                      Throws:
│ │ │                          TJException
│ │ │                  # *** getTransformedSizes ***
│ │ │                    public int[] getTransformedSizes()
│ │ │                    Returns an array containing the sizes of the transformed JPEG
│ │ │ -                  images generated by the most recent transform operation.
│ │ │ +                  images (in bytes) generated by the most recent transform
│ │ │ +                  operation.
│ │ │                      Returns:
│ │ │                          an array containing the sizes of the transformed JPEG
│ │ │ -                        images generated by the most recent transform
│ │ │ -                        operation.
│ │ │ +                        images (in bytes) generated by the most recent
│ │ │ +                        transform operation.
│ │ │  
│ │ │      * Package
│ │ │      * Class
│ │ │      * Tree
│ │ │      * Deprecated
│ │ │      * Index
│ │ │      * Help
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/YUVImage.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/YUVImage.html
│ │┄ Files 3% similar despite different names
│ │ @@ -94,46 +94,48 @@
│ │  <div class="description">
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <hr>
│ │  <br>
│ │  <pre>public class <span class="strong">YUVImage</span>
│ │  extends java.lang.Object</pre>
│ │ -<div class="block">This class encapsulates a YUV planar image and the metadata
│ │ +<div class="block">This class encapsulates a planar YUV image and the metadata
│ │   associated with it.  The TurboJPEG API allows both the JPEG compression and
│ │   decompression pipelines to be split into stages:  YUV encode, compress from
│ │   YUV, decompress to YUV, and YUV decode.  A <code>YUVImage</code> instance
│ │   serves as the destination image for YUV encode and decompress-to-YUV
│ │   operations and as the source image for compress-from-YUV and YUV decode
│ │   operations.
│ │   <p>
│ │ - Technically, the JPEG format uses the YCbCr colorspace (which technically is
│ │ - not a "colorspace" but rather a "color transform"), but per the convention
│ │ - of the digital video community, the TurboJPEG API uses "YUV" to refer to an
│ │ - image format consisting of Y, Cb, and Cr image planes.
│ │ + Technically, the JPEG format uses the YCbCr colorspace (which is technically
│ │ + not a colorspace but a color transform), but per the convention of the
│ │ + digital video community, the TurboJPEG API uses "YUV" to refer to an image
│ │ + format consisting of Y, Cb, and Cr image planes.
│ │   <p>
│ │   Each plane is simply a 2D array of bytes, each byte representing the value
│ │   of one of the components (Y, Cb, or Cr) at a particular location in the
│ │   image.  The width and height of each plane are determined by the image
│ │   width, height, and level of chrominance subsampling.  The luminance plane
│ │   width is the image width padded to the nearest multiple of the horizontal
│ │ - subsampling factor (2 in the case of 4:2:0 and 4:2:2, 4 in the case of
│ │ - 4:1:1, 1 in the case of 4:4:4 or grayscale.)  Similarly, the luminance plane
│ │ - height is the image height padded to the nearest multiple of the vertical
│ │ - subsampling factor (2 in the case of 4:2:0 or 4:4:0, 1 in the case of 4:4:4
│ │ - or grayscale.)  The chrominance plane width is equal to the luminance plane
│ │ - width divided by the horizontal subsampling factor, and the chrominance
│ │ - plane height is equal to the luminance plane height divided by the vertical
│ │ - subsampling factor.
│ │ + subsampling factor (1 in the case of 4:4:4, grayscale, or 4:4:0; 2 in the
│ │ + case of 4:2:2 or 4:2:0; 4 in the case of 4:1:1.)  Similarly, the luminance
│ │ + plane height is the image height padded to the nearest multiple of the
│ │ + vertical subsampling factor (1 in the case of 4:4:4, 4:2:2, grayscale, or
│ │ + 4:1:1; 2 in the case of 4:2:0 or 4:4:0.)  This is irrespective of any
│ │ + additional padding that may be specified as an argument to the various
│ │ + YUVImage methods.  The chrominance plane width is equal to the luminance
│ │ + plane width divided by the horizontal subsampling factor, and the
│ │ + chrominance plane height is equal to the luminance plane height divided by
│ │ + the vertical subsampling factor.
│ │   <p>
│ │   For example, if the source image is 35 x 35 pixels and 4:2:2 subsampling is
│ │   used, then the luminance plane would be 36 x 35 bytes, and each of the
│ │ - chrominance planes would be 18 x 35 bytes.  If you specify a line padding of
│ │ - 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes, and
│ │ - each of the chrominance planes would be 20 x 35 bytes.</div>
│ │ + chrominance planes would be 18 x 35 bytes.  If you specify a row alignment
│ │ + of 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes,
│ │ + and each of the chrominance planes would be 20 x 35 bytes.</div>
│ │  </li>
│ │  </ul>
│ │  </div>
│ │  <div class="summary">
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <!-- =========== FIELD SUMMARY =========== -->
│ │ @@ -150,23 +152,23 @@
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>protected long</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#handle">handle</a></strong></code>&nbsp;</td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>protected int</code></td>
│ │ -<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#yuvHeight">yuvHeight</a></strong></code>&nbsp;</td>
│ │ +<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#yuvAlign">yuvAlign</a></strong></code>&nbsp;</td>
│ │  </tr>
│ │  <tr class="altColor">
│ │ -<td class="colFirst"><code>protected int[]</code></td>
│ │ -<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#yuvOffsets">yuvOffsets</a></strong></code>&nbsp;</td>
│ │ +<td class="colFirst"><code>protected int</code></td>
│ │ +<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#yuvHeight">yuvHeight</a></strong></code>&nbsp;</td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │ -<td class="colFirst"><code>protected int</code></td>
│ │ -<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#yuvPad">yuvPad</a></strong></code>&nbsp;</td>
│ │ +<td class="colFirst"><code>protected int[]</code></td>
│ │ +<td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#yuvOffsets">yuvOffsets</a></strong></code>&nbsp;</td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>protected byte[][]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#yuvPlanes">yuvPlanes</a></strong></code>&nbsp;</td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>protected int[]</code></td>
│ │ @@ -204,37 +206,37 @@
│ │  <div class="block">Create a new <code>YUVImage</code> instance from a set of existing image
│ │   planes.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#YUVImage(byte[],%20int,%20int,%20int,%20int)">YUVImage</a></strong>(byte[]&nbsp;yuvImage,
│ │          int&nbsp;width,
│ │ -        int&nbsp;pad,
│ │ +        int&nbsp;align,
│ │          int&nbsp;height,
│ │          int&nbsp;subsamp)</code>
│ │ -<div class="block">Create a new <code>YUVImage</code> instance from an existing unified image
│ │ +<div class="block">Create a new <code>YUVImage</code> instance from an existing unified
│ │   buffer.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#YUVImage(int,%20int[],%20int,%20int)">YUVImage</a></strong>(int&nbsp;width,
│ │          int[]&nbsp;strides,
│ │          int&nbsp;height,
│ │          int&nbsp;subsamp)</code>
│ │  <div class="block">Create a new <code>YUVImage</code> instance backed by separate image
│ │   planes, and allocate memory for the image planes.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colOne"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#YUVImage(int,%20int,%20int,%20int)">YUVImage</a></strong>(int&nbsp;width,
│ │ -        int&nbsp;pad,
│ │ +        int&nbsp;align,
│ │          int&nbsp;height,
│ │          int&nbsp;subsamp)</code>
│ │ -<div class="block">Create a new <code>YUVImage</code> instance backed by a unified image
│ │ - buffer, and allocate memory for the image buffer.</div>
│ │ +<div class="block">Create a new <code>YUVImage</code> instance backed by a unified buffer,
│ │ + and allocate memory for the buffer.</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  </li>
│ │  </ul>
│ │  <!-- ========== METHOD SUMMARY =========== -->
│ │  <ul class="blockList">
│ │ @@ -247,16 +249,16 @@
│ │  <tr>
│ │  <th class="colFirst" scope="col">Modifier and Type</th>
│ │  <th class="colLast" scope="col">Method and Description</th>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>byte[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#getBuf()">getBuf</a></strong>()</code>
│ │ -<div class="block">Returns the YUV image buffer (if this image is stored in a unified
│ │ - buffer rather than separate image planes.)</div>
│ │ +<div class="block">Returns the YUV buffer (if this image is stored in a unified buffer rather
│ │ + than separate image planes.)</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#getHeight()">getHeight</a></strong>()</code>
│ │  <div class="block">Returns the height of the YUV image (or subregion.)</div>
│ │  </td>
│ │ @@ -267,35 +269,35 @@
│ │  <div class="block">Returns the offsets (in bytes) of each plane within the planes of a larger
│ │   YUV image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#getPad()">getPad</a></strong>()</code>
│ │ -<div class="block">Returns the line padding used in the YUV image buffer (if this image is
│ │ +<div class="block">Returns the row alignment (in bytes) of the YUV buffer (if this image is
│ │   stored in a unified buffer rather than separate image planes.)</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>byte[][]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#getPlanes()">getPlanes</a></strong>()</code>
│ │  <div class="block">Returns the YUV image planes.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#getSize()">getSize</a></strong>()</code>
│ │ -<div class="block">Returns the size (in bytes) of the YUV image buffer (if this image is
│ │ - stored in a unified buffer rather than separate image planes.)</div>
│ │ +<div class="block">Returns the size (in bytes) of the YUV buffer (if this image is stored in
│ │ + a unified buffer rather than separate image planes.)</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>int[]</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#getStrides()">getStrides</a></strong>()</code>
│ │ -<div class="block">Returns the number of bytes per line of each plane in the YUV image.</div>
│ │ +<div class="block">Returns the number of bytes per row of each plane in the YUV image.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="rowColor">
│ │  <td class="colFirst"><code>int</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#getSubsamp()">getSubsamp</a></strong>()</code>
│ │  <div class="block">Returns the level of chrominance subsampling used in the YUV image.</div>
│ │  </td>
│ │ @@ -317,18 +319,18 @@
│ │  <div class="block">Assign a set of image planes to this <code>YUVImage</code> instance.</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><code>void</code></td>
│ │  <td class="colLast"><code><strong><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html#setBuf(byte[],%20int,%20int,%20int,%20int)">setBuf</a></strong>(byte[]&nbsp;yuvImage,
│ │        int&nbsp;width,
│ │ -      int&nbsp;pad,
│ │ +      int&nbsp;align,
│ │        int&nbsp;height,
│ │        int&nbsp;subsamp)</code>
│ │ -<div class="block">Assign a unified image buffer to this <code>YUVImage</code> instance.</div>
│ │ +<div class="block">Assign a unified buffer to this <code>YUVImage</code> instance.</div>
│ │  </td>
│ │  </tr>
│ │  </table>
│ │  <ul class="blockList">
│ │  <li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
│ │  <!--   -->
│ │  </a>
│ │ @@ -381,21 +383,21 @@
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>yuvStrides</h4>
│ │  <pre>protected&nbsp;int[] yuvStrides</pre>
│ │  </li>
│ │  </ul>
│ │ -<a name="yuvPad">
│ │ +<a name="yuvAlign">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │ -<h4>yuvPad</h4>
│ │ -<pre>protected&nbsp;int yuvPad</pre>
│ │ +<h4>yuvAlign</h4>
│ │ +<pre>protected&nbsp;int yuvAlign</pre>
│ │  </li>
│ │  </ul>
│ │  <a name="yuvWidth">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │ @@ -438,15 +440,15 @@
│ │  <pre>public&nbsp;YUVImage(int&nbsp;width,
│ │          int[]&nbsp;strides,
│ │          int&nbsp;height,
│ │          int&nbsp;subsamp)</pre>
│ │  <div class="block">Create a new <code>YUVImage</code> instance backed by separate image
│ │   planes, and allocate memory for the image planes.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>strides</code> - an array of integers, each specifying the number of bytes
│ │ - per line in the corresponding plane of the YUV image.  Setting the stride
│ │ + per row in the corresponding plane of the YUV image.  Setting the stride
│ │   for any plane to 0 is the same as setting it to the plane width (see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>above</code></a>.)  If <code>strides</code> is null, then the
│ │   strides for all planes will be set to their respective plane widths.  When
│ │   using this constructor, the stride for each plane must be equal to or
│ │   greater than the plane width.</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling to be used in the YUV
│ │   image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd></dl>
│ │  </li>
│ │ @@ -454,21 +456,23 @@
│ │  <a name="YUVImage(int, int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>YUVImage</h4>
│ │  <pre>public&nbsp;YUVImage(int&nbsp;width,
│ │ -        int&nbsp;pad,
│ │ +        int&nbsp;align,
│ │          int&nbsp;height,
│ │          int&nbsp;subsamp)</pre>
│ │ -<div class="block">Create a new <code>YUVImage</code> instance backed by a unified image
│ │ - buffer, and allocate memory for the image buffer.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>pad</code> - Each line of each plane in the YUV image buffer will be padded
│ │ - to this number of bytes (must be a power of 2.)</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling to be used in the YUV
│ │ +<div class="block">Create a new <code>YUVImage</code> instance backed by a unified buffer,
│ │ + and allocate memory for the buffer.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>align</code> - row alignment (in bytes) of the YUV image (must be a power of
│ │ + 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ + the YUV image will be padded to the nearest multiple of n bytes
│ │ + (1 = unpadded.)</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling to be used in the YUV
│ │   image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="YUVImage(byte[][], int[], int, int[], int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -481,52 +485,53 @@
│ │          int&nbsp;height,
│ │          int&nbsp;subsamp)</pre>
│ │  <div class="block">Create a new <code>YUVImage</code> instance from a set of existing image
│ │   planes.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>planes</code> - an array of buffers representing the Y, U (Cb), and V (Cr)
│ │   image planes (or just the Y plane, if the image is grayscale.)   These
│ │   planes can be contiguous or non-contiguous in memory.  Plane
│ │ - <code>i</code> should be at least <code>offsets[i] +
│ │ - <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#planeSizeYUV(int,%20int,%20int,%20int,%20int)"><code>TJ.planeSizeYUV</code></a>(i, width, strides[i], height, subsamp)</code>
│ │ + <code>i</code> should be at least <code>offsets[i] + </code>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#planeSizeYUV(int,%20int,%20int,%20int,%20int)"><code>TJ.planeSizeYUV</code></a><code>(i, width, strides[i], height, subsamp)</code>
│ │   bytes in size.</dd><dd><code>offsets</code> - If this <code>YUVImage</code> instance represents a
│ │   subregion of a larger image, then <code>offsets[i]</code> specifies the
│ │   offset (in bytes) of the subregion within plane <code>i</code> of the
│ │   larger image.  Setting this to null is the same as setting the offsets for
│ │   all planes to 0.</dd><dd><code>width</code> - width (in pixels) of the new YUV image (or subregion)</dd><dd><code>strides</code> - an array of integers, each specifying the number of bytes
│ │ - per line in the corresponding plane of the YUV image.  Setting the stride
│ │ + per row in the corresponding plane of the YUV image.  Setting the stride
│ │   for any plane to 0 is the same as setting it to the plane width (see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>above</code></a>.)  If <code>strides</code> is null, then the
│ │   strides for all planes will be set to their respective plane widths.  You
│ │ - can adjust the strides in order to add an arbitrary amount of line padding
│ │ + can adjust the strides in order to add an arbitrary amount of row padding
│ │   to each plane or to specify that this <code>YUVImage</code> instance is a
│ │   subregion of a larger image (in which case, <code>strides[i]</code> should
│ │   be set to the plane width of plane <code>i</code> in the larger image.)</dd><dd><code>height</code> - height (in pixels) of the new YUV image (or subregion)</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │   image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="YUVImage(byte[], int, int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │  <h4>YUVImage</h4>
│ │  <pre>public&nbsp;YUVImage(byte[]&nbsp;yuvImage,
│ │          int&nbsp;width,
│ │ -        int&nbsp;pad,
│ │ +        int&nbsp;align,
│ │          int&nbsp;height,
│ │          int&nbsp;subsamp)</pre>
│ │ -<div class="block">Create a new <code>YUVImage</code> instance from an existing unified image
│ │ +<div class="block">Create a new <code>YUVImage</code> instance from an existing unified
│ │   buffer.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>yuvImage</code> - image buffer that contains or will contain YUV planar
│ │ - image data.  Use <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)"><code>TJ.bufSizeYUV(int, int, int, int)</code></a> to determine the minimum size for
│ │ - this buffer.  The Y, U (Cb), and V (Cr) image planes are stored
│ │ - sequentially in the buffer (see <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>above</code></a> for a description
│ │ - of the image format.)</dd><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>pad</code> - the line padding used in the YUV image buffer.  For
│ │ - instance, if each line in each plane of the buffer is padded to the
│ │ - nearest multiple of 4 bytes, then <code>pad</code> should be set to 4.</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>yuvImage</code> - buffer that contains or will receive a unified planar YUV
│ │ + image.  Use <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)"><code>TJ.bufSizeYUV(int, int, int, int)</code></a> to determine the minimum size for this
│ │ + buffer.  The Y, U (Cb), and V (Cr) image planes are stored sequentially in
│ │ + the buffer.  (See <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>above</code></a> for a description of the image
│ │ + format.)</dd><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>align</code> - row alignment (in bytes) of the YUV image (must be a power of
│ │ + 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ + the YUV image will be padded to the nearest multiple of n bytes
│ │ + (1 = unpadded.)</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │   image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd></dl>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  <!-- ============ METHOD DETAIL ========== -->
│ │  <ul class="blockList">
│ │ @@ -546,51 +551,52 @@
│ │            int[]&nbsp;strides,
│ │            int&nbsp;height,
│ │            int&nbsp;subsamp)</pre>
│ │  <div class="block">Assign a set of image planes to this <code>YUVImage</code> instance.</div>
│ │  <dl><dt><span class="strong">Parameters:</span></dt><dd><code>planes</code> - an array of buffers representing the Y, U (Cb), and V (Cr)
│ │   image planes (or just the Y plane, if the image is grayscale.)  These
│ │   planes can be contiguous or non-contiguous in memory.  Plane
│ │ - <code>i</code> should be at least <code>offsets[i] +
│ │ - <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#planeSizeYUV(int,%20int,%20int,%20int,%20int)"><code>TJ.planeSizeYUV</code></a>(i, width, strides[i], height, subsamp)</code>
│ │ + <code>i</code> should be at least <code>offsets[i] + </code>
│ │ + <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#planeSizeYUV(int,%20int,%20int,%20int,%20int)"><code>TJ.planeSizeYUV</code></a><code>(i, width, strides[i], height, subsamp)</code>
│ │   bytes in size.</dd><dd><code>offsets</code> - If this <code>YUVImage</code> instance represents a
│ │   subregion of a larger image, then <code>offsets[i]</code> specifies the
│ │   offset (in bytes) of the subregion within plane <code>i</code> of the
│ │   larger image.  Setting this to null is the same as setting the offsets for
│ │   all planes to 0.</dd><dd><code>width</code> - width (in pixels) of the YUV image (or subregion)</dd><dd><code>strides</code> - an array of integers, each specifying the number of bytes
│ │ - per line in the corresponding plane of the YUV image.  Setting the stride
│ │ + per row in the corresponding plane of the YUV image.  Setting the stride
│ │   for any plane to 0 is the same as setting it to the plane width (see
│ │   <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>above</code></a>.)  If <code>strides</code> is null, then the
│ │   strides for all planes will be set to their respective plane widths.  You
│ │ - can adjust the strides in order to add an arbitrary amount of line padding
│ │ - to each plane or to specify that this <code>YUVImage</code> image is a
│ │ + can adjust the strides in order to add an arbitrary amount of row padding
│ │ + to each plane or to specify that this <code>YUVImage</code> instance is a
│ │   subregion of a larger image (in which case, <code>strides[i]</code> should
│ │   be set to the plane width of plane <code>i</code> in the larger image.)</dd><dd><code>height</code> - height (in pixels) of the YUV image (or subregion)</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │   image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="setBuf(byte[], int, int, int, int)">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>setBuf</h4>
│ │  <pre>public&nbsp;void&nbsp;setBuf(byte[]&nbsp;yuvImage,
│ │            int&nbsp;width,
│ │ -          int&nbsp;pad,
│ │ +          int&nbsp;align,
│ │            int&nbsp;height,
│ │            int&nbsp;subsamp)</pre>
│ │ -<div class="block">Assign a unified image buffer to this <code>YUVImage</code> instance.</div>
│ │ -<dl><dt><span class="strong">Parameters:</span></dt><dd><code>yuvImage</code> - image buffer that contains or will contain YUV planar
│ │ - image data.  Use <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)"><code>TJ.bufSizeYUV(int, int, int, int)</code></a> to determine the minimum size for
│ │ - this buffer.  The Y, U (Cb), and V (Cr) image planes are stored
│ │ - sequentially in the buffer (see <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>above</code></a> for a description
│ │ - of the image format.)</dd><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>pad</code> - the line padding used in the YUV image buffer.  For
│ │ - instance, if each line in each plane of the buffer is padded to the
│ │ - nearest multiple of 4 bytes, then <code>pad</code> should be set to 4.</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │ +<div class="block">Assign a unified buffer to this <code>YUVImage</code> instance.</div>
│ │ +<dl><dt><span class="strong">Parameters:</span></dt><dd><code>yuvImage</code> - buffer that contains or will receive a unified planar YUV
│ │ + image.  Use <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#bufSizeYUV(int,%20int,%20int,%20int)"><code>TJ.bufSizeYUV(int, int, int, int)</code></a> to determine the minimum size for this
│ │ + buffer.  The Y, U (Cb), and V (Cr) image planes are stored sequentially in
│ │ + the buffer.  (See <a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg"><code>above</code></a> for a description of the image
│ │ + format.)</dd><dd><code>width</code> - width (in pixels) of the YUV image</dd><dd><code>align</code> - row alignment (in bytes) of the YUV image (must be a power of
│ │ + 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ + the YUV image will be padded to the nearest multiple of n bytes
│ │ + (1 = unpadded.)</dd><dd><code>height</code> - height (in pixels) of the YUV image</dd><dd><code>subsamp</code> - the level of chrominance subsampling used in the YUV
│ │   image (one of <a href="../../../org/libjpegturbo/turbojpeg/TJ.html#SAMP_444"><code>TJ.SAMP_*</code></a>)</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getWidth()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │ @@ -615,28 +621,28 @@
│ │  <a name="getPad()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>getPad</h4>
│ │  <pre>public&nbsp;int&nbsp;getPad()</pre>
│ │ -<div class="block">Returns the line padding used in the YUV image buffer (if this image is
│ │ +<div class="block">Returns the row alignment (in bytes) of the YUV buffer (if this image is
│ │   stored in a unified buffer rather than separate image planes.)</div>
│ │ -<dl><dt><span class="strong">Returns:</span></dt><dd>the line padding used in the YUV image buffer</dd></dl>
│ │ +<dl><dt><span class="strong">Returns:</span></dt><dd>the row alignment of the YUV buffer</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getStrides()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>getStrides</h4>
│ │  <pre>public&nbsp;int[]&nbsp;getStrides()</pre>
│ │ -<div class="block">Returns the number of bytes per line of each plane in the YUV image.</div>
│ │ -<dl><dt><span class="strong">Returns:</span></dt><dd>the number of bytes per line of each plane in the YUV image</dd></dl>
│ │ +<div class="block">Returns the number of bytes per row of each plane in the YUV image.</div>
│ │ +<dl><dt><span class="strong">Returns:</span></dt><dd>the number of bytes per row of each plane in the YUV image</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getOffsets()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │ @@ -675,29 +681,29 @@
│ │  <a name="getBuf()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>getBuf</h4>
│ │  <pre>public&nbsp;byte[]&nbsp;getBuf()</pre>
│ │ -<div class="block">Returns the YUV image buffer (if this image is stored in a unified
│ │ - buffer rather than separate image planes.)</div>
│ │ -<dl><dt><span class="strong">Returns:</span></dt><dd>the YUV image buffer</dd></dl>
│ │ +<div class="block">Returns the YUV buffer (if this image is stored in a unified buffer rather
│ │ + than separate image planes.)</div>
│ │ +<dl><dt><span class="strong">Returns:</span></dt><dd>the YUV buffer</dd></dl>
│ │  </li>
│ │  </ul>
│ │  <a name="getSize()">
│ │  <!--   -->
│ │  </a>
│ │  <ul class="blockListLast">
│ │  <li class="blockList">
│ │  <h4>getSize</h4>
│ │  <pre>public&nbsp;int&nbsp;getSize()</pre>
│ │ -<div class="block">Returns the size (in bytes) of the YUV image buffer (if this image is
│ │ - stored in a unified buffer rather than separate image planes.)</div>
│ │ -<dl><dt><span class="strong">Returns:</span></dt><dd>the size (in bytes) of the YUV image buffer</dd></dl>
│ │ +<div class="block">Returns the size (in bytes) of the YUV buffer (if this image is stored in
│ │ + a unified buffer rather than separate image planes.)</div>
│ │ +<dl><dt><span class="strong">Returns:</span></dt><dd>the size (in bytes) of the YUV buffer</dd></dl>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </li>
│ │  </ul>
│ │  </div>
│ │ ├── html2text {}
│ │ │ @@ -27,112 +27,117 @@
│ │ │  ***** Class YUVImage *****
│ │ │      * java.lang.Object
│ │ │      *     o org.libjpegturbo.turbojpeg.YUVImage
│ │ │      * =========================================================================
│ │ │  
│ │ │        public class YUVImage
│ │ │        extends java.lang.Object
│ │ │ -      This class encapsulates a YUV planar image and the metadata associated
│ │ │ +      This class encapsulates a planar YUV image and the metadata associated
│ │ │        with it. The TurboJPEG API allows both the JPEG compression and
│ │ │        decompression pipelines to be split into stages: YUV encode, compress
│ │ │        from YUV, decompress to YUV, and YUV decode. A YUVImage instance serves
│ │ │        as the destination image for YUV encode and decompress-to-YUV operations
│ │ │        and as the source image for compress-from-YUV and YUV decode operations.
│ │ │ -      Technically, the JPEG format uses the YCbCr colorspace (which technically
│ │ │ -      is not a "colorspace" but rather a "color transform"), but per the
│ │ │ +      Technically, the JPEG format uses the YCbCr colorspace (which is
│ │ │ +      technically not a colorspace but a color transform), but per the
│ │ │        convention of the digital video community, the TurboJPEG API uses "YUV"
│ │ │        to refer to an image format consisting of Y, Cb, and Cr image planes.
│ │ │        Each plane is simply a 2D array of bytes, each byte representing the
│ │ │        value of one of the components (Y, Cb, or Cr) at a particular location in
│ │ │        the image. The width and height of each plane are determined by the image
│ │ │        width, height, and level of chrominance subsampling. The luminance plane
│ │ │        width is the image width padded to the nearest multiple of the horizontal
│ │ │ -      subsampling factor (2 in the case of 4:2:0 and 4:2:2, 4 in the case of 4:
│ │ │ -      1:1, 1 in the case of 4:4:4 or grayscale.) Similarly, the luminance plane
│ │ │ -      height is the image height padded to the nearest multiple of the vertical
│ │ │ -      subsampling factor (2 in the case of 4:2:0 or 4:4:0, 1 in the case of 4:
│ │ │ -      4:4 or grayscale.) The chrominance plane width is equal to the luminance
│ │ │ +      subsampling factor (1 in the case of 4:4:4, grayscale, or 4:4:0; 2 in the
│ │ │ +      case of 4:2:2 or 4:2:0; 4 in the case of 4:1:1.) Similarly, the luminance
│ │ │ +      plane height is the image height padded to the nearest multiple of the
│ │ │ +      vertical subsampling factor (1 in the case of 4:4:4, 4:2:2, grayscale, or
│ │ │ +      4:1:1; 2 in the case of 4:2:0 or 4:4:0.) This is irrespective of any
│ │ │ +      additional padding that may be specified as an argument to the various
│ │ │ +      YUVImage methods. The chrominance plane width is equal to the luminance
│ │ │        plane width divided by the horizontal subsampling factor, and the
│ │ │        chrominance plane height is equal to the luminance plane height divided
│ │ │        by the vertical subsampling factor.
│ │ │        For example, if the source image is 35 x 35 pixels and 4:2:2 subsampling
│ │ │        is used, then the luminance plane would be 36 x 35 bytes, and each of the
│ │ │ -      chrominance planes would be 18 x 35 bytes. If you specify a line padding
│ │ │ +      chrominance planes would be 18 x 35 bytes. If you specify a row alignment
│ │ │        of 4 bytes on top of this, then the luminance plane would be 36 x 35
│ │ │        bytes, and each of the chrominance planes would be 20 x 35 bytes.
│ │ │      *     o **** Field Summary ****
│ │ │                              Fields 
│ │ │              Modifier and Type  Field and Description
│ │ │              protected long     handle 
│ │ │ +            protected int      yuvAlign 
│ │ │              protected int      yuvHeight 
│ │ │              protected int[]    yuvOffsets 
│ │ │ -            protected int      yuvPad 
│ │ │              protected byte[][] yuvPlanes 
│ │ │              protected int[]    yuvStrides 
│ │ │              protected int      yuvSubsamp 
│ │ │              protected int      yuvWidth 
│ │ │            o **** Constructor Summary ****
│ │ │                                          Constructors 
│ │ │              Constructor and Description
│ │ │              YUVImage(byte[][] planes, int[] offsets, int width, int[] strides,
│ │ │              int height, int subsamp)
│ │ │              Create a new YUVImage instance from a set of existing image planes.
│ │ │ -            YUVImage(byte[] yuvImage, int width, int pad, int height, int subsamp)
│ │ │ -            Create a new YUVImage instance from an existing unified image buffer.
│ │ │ +            YUVImage(byte[] yuvImage, int width, int align, int height,
│ │ │ +            int subsamp)
│ │ │ +            Create a new YUVImage instance from an existing unified buffer.
│ │ │              YUVImage(int width, int[] strides, int height, int subsamp)
│ │ │              Create a new YUVImage instance backed by separate image planes, and
│ │ │              allocate memory for the image planes.
│ │ │ -            YUVImage(int width, int pad, int height, int subsamp)
│ │ │ -            Create a new YUVImage instance backed by a unified image buffer, and
│ │ │ -            allocate memory for the image buffer.
│ │ │ +            YUVImage(int width, int align, int height, int subsamp)
│ │ │ +            Create a new YUVImage instance backed by a unified buffer, and
│ │ │ +            allocate memory for the buffer.
│ │ │            o **** Method Summary ****
│ │ │                                                Methods 
│ │ │              Modifier Method and Description
│ │ │              and Type
│ │ │                       getBuf()
│ │ │ -            byte[]   Returns the YUV image buffer (if this image is stored in a unified
│ │ │ -                     buffer rather than separate image planes.)
│ │ │ +            byte[]   Returns the YUV buffer (if this image is stored in a unified buffer
│ │ │ +                     rather than separate image planes.)
│ │ │              int      getHeight()
│ │ │                       Returns the height of the YUV image (or subregion.)
│ │ │                       getOffsets()
│ │ │              int[]    Returns the offsets (in bytes) of each plane within the planes of a
│ │ │                       larger YUV image.
│ │ │                       getPad()
│ │ │ -            int      Returns the line padding used in the YUV image buffer (if this image
│ │ │ -                     is stored in a unified buffer rather than separate image planes.)
│ │ │ +            int      Returns the row alignment (in bytes) of the YUV buffer (if this
│ │ │ +                     image is stored in a unified buffer rather than separate image
│ │ │ +                     planes.)
│ │ │              byte[][] getPlanes()
│ │ │                       Returns the YUV image planes.
│ │ │                       getSize()
│ │ │ -            int      Returns the size (in bytes) of the YUV image buffer (if this image
│ │ │ -                     is stored in a unified buffer rather than separate image planes.)
│ │ │ +            int      Returns the size (in bytes) of the YUV buffer (if this image is
│ │ │ +                     stored in a unified buffer rather than separate image planes.)
│ │ │              int[]    getStrides()
│ │ │ -                     Returns the number of bytes per line of each plane in the YUV image.
│ │ │ +                     Returns the number of bytes per row of each plane in the YUV image.
│ │ │              int      getSubsamp()
│ │ │                       Returns the level of chrominance subsampling used in the YUV image.
│ │ │              int      getWidth()
│ │ │                       Returns the width of the YUV image (or subregion.)
│ │ │                       setBuf(byte[][] planes, int[] offsets, int width, int[] strides,
│ │ │              void     int height, int subsamp)
│ │ │                       Assign a set of image planes to this YUVImage instance.
│ │ │ -            void     setBuf(byte[] yuvImage, int width, int pad, int height, int subsamp)
│ │ │ -                     Assign a unified image buffer to this YUVImage instance.
│ │ │ +                     setBuf(byte[] yuvImage, int width, int align, int height,
│ │ │ +            void     int subsamp)
│ │ │ +                     Assign a unified buffer to this YUVImage instance.
│ │ │                  # **** Methods inherited from class java.lang.Object ****
│ │ │                    clone, equals, finalize, getClass, hashCode, notify,
│ │ │                    notifyAll, toString, wait, wait, wait
│ │ │      *     o **** Field Detail ****
│ │ │                  # *** handle ***
│ │ │                    protected long handle
│ │ │                  # *** yuvPlanes ***
│ │ │                    protected byte[][] yuvPlanes
│ │ │                  # *** yuvOffsets ***
│ │ │                    protected int[] yuvOffsets
│ │ │                  # *** yuvStrides ***
│ │ │                    protected int[] yuvStrides
│ │ │ -                # *** yuvPad ***
│ │ │ -                  protected int yuvPad
│ │ │ +                # *** yuvAlign ***
│ │ │ +                  protected int yuvAlign
│ │ │                  # *** yuvWidth ***
│ │ │                    protected int yuvWidth
│ │ │                  # *** yuvHeight ***
│ │ │                    protected int yuvHeight
│ │ │                  # *** yuvSubsamp ***
│ │ │                    protected int yuvSubsamp
│ │ │            o **** Constructor Detail ****
│ │ │ @@ -142,36 +147,38 @@
│ │ │                            int height,
│ │ │                            int subsamp)
│ │ │                    Create a new YUVImage instance backed by separate image
│ │ │                    planes, and allocate memory for the image planes.
│ │ │                      Parameters:
│ │ │                          width - width (in pixels) of the YUV image
│ │ │                          strides - an array of integers, each specifying the
│ │ │ -                        number of bytes per line in the corresponding plane of
│ │ │ +                        number of bytes per row in the corresponding plane of
│ │ │                          the YUV image. Setting the stride for any plane to 0 is
│ │ │                          the same as setting it to the plane width (see above.)
│ │ │                          If strides is null, then the strides for all planes
│ │ │                          will be set to their respective plane widths. When
│ │ │                          using this constructor, the stride for each plane must
│ │ │                          be equal to or greater than the plane width.
│ │ │                          height - height (in pixels) of the YUV image
│ │ │                          subsamp - the level of chrominance subsampling to be
│ │ │                          used in the YUV image (one of TJ.SAMP_*)
│ │ │                  # *** YUVImage ***
│ │ │                    public YUVImage(int width,
│ │ │ -                          int pad,
│ │ │ +                          int align,
│ │ │                            int height,
│ │ │                            int subsamp)
│ │ │ -                  Create a new YUVImage instance backed by a unified image
│ │ │ -                  buffer, and allocate memory for the image buffer.
│ │ │ +                  Create a new YUVImage instance backed by a unified buffer,
│ │ │ +                  and allocate memory for the buffer.
│ │ │                      Parameters:
│ │ │                          width - width (in pixels) of the YUV image
│ │ │ -                        pad - Each line of each plane in the YUV image buffer
│ │ │ -                        will be padded to this number of bytes (must be a power
│ │ │ -                        of 2.)
│ │ │ +                        align - row alignment (in bytes) of the YUV image (must
│ │ │ +                        be a power of 2.) Setting this parameter to n specifies
│ │ │ +                        that each row in each plane of the YUV image will be
│ │ │ +                        padded to the nearest multiple of n bytes (1 =
│ │ │ +                        unpadded.)
│ │ │                          height - height (in pixels) of the YUV image
│ │ │                          subsamp - the level of chrominance subsampling to be
│ │ │                          used in the YUV image (one of TJ.SAMP_*)
│ │ │                  # *** YUVImage ***
│ │ │                    public YUVImage(byte[][] planes,
│ │ │                            int[] offsets,
│ │ │                            int width,
│ │ │ @@ -191,48 +198,49 @@
│ │ │                          subregion of a larger image, then offsets[i] specifies
│ │ │                          the offset (in bytes) of the subregion within plane i
│ │ │                          of the larger image. Setting this to null is the same
│ │ │                          as setting the offsets for all planes to 0.
│ │ │                          width - width (in pixels) of the new YUV image (or
│ │ │                          subregion)
│ │ │                          strides - an array of integers, each specifying the
│ │ │ -                        number of bytes per line in the corresponding plane of
│ │ │ +                        number of bytes per row in the corresponding plane of
│ │ │                          the YUV image. Setting the stride for any plane to 0 is
│ │ │                          the same as setting it to the plane width (see above.)
│ │ │                          If strides is null, then the strides for all planes
│ │ │                          will be set to their respective plane widths. You can
│ │ │                          adjust the strides in order to add an arbitrary amount
│ │ │ -                        of line padding to each plane or to specify that this
│ │ │ +                        of row padding to each plane or to specify that this
│ │ │                          YUVImage instance is a subregion of a larger image (in
│ │ │                          which case, strides[i] should be set to the plane width
│ │ │                          of plane i in the larger image.)
│ │ │                          height - height (in pixels) of the new YUV image (or
│ │ │                          subregion)
│ │ │                          subsamp - the level of chrominance subsampling used in
│ │ │                          the YUV image (one of TJ.SAMP_*)
│ │ │                  # *** YUVImage ***
│ │ │                    public YUVImage(byte[] yuvImage,
│ │ │                            int width,
│ │ │ -                          int pad,
│ │ │ +                          int align,
│ │ │                            int height,
│ │ │                            int subsamp)
│ │ │ -                  Create a new YUVImage instance from an existing unified image
│ │ │ +                  Create a new YUVImage instance from an existing unified
│ │ │                    buffer.
│ │ │                      Parameters:
│ │ │ -                        yuvImage - image buffer that contains or will contain
│ │ │ -                        YUV planar image data. Use TJ.bufSizeYUV(int,_int,_int,
│ │ │ -                        int) to determine the minimum size for this buffer. The
│ │ │ -                        Y, U (Cb), and V (Cr) image planes are stored
│ │ │ -                        sequentially in the buffer (see above for a description
│ │ │ -                        of the image format.)
│ │ │ +                        yuvImage - buffer that contains or will receive a
│ │ │ +                        unified planar YUV image. Use TJ.bufSizeYUV(int,_int,
│ │ │ +                        int,_int) to determine the minimum size for this
│ │ │ +                        buffer. The Y, U (Cb), and V (Cr) image planes are
│ │ │ +                        stored sequentially in the buffer. (See above for a
│ │ │ +                        description of the image format.)
│ │ │                          width - width (in pixels) of the YUV image
│ │ │ -                        pad - the line padding used in the YUV image buffer.
│ │ │ -                        For instance, if each line in each plane of the buffer
│ │ │ -                        is padded to the nearest multiple of 4 bytes, then pad
│ │ │ -                        should be set to 4.
│ │ │ +                        align - row alignment (in bytes) of the YUV image (must
│ │ │ +                        be a power of 2.) Setting this parameter to n specifies
│ │ │ +                        that each row in each plane of the YUV image will be
│ │ │ +                        padded to the nearest multiple of n bytes (1 =
│ │ │ +                        unpadded.)
│ │ │                          height - height (in pixels) of the YUV image
│ │ │                          subsamp - the level of chrominance subsampling used in
│ │ │                          the YUV image (one of TJ.SAMP_*)
│ │ │            o **** Method Detail ****
│ │ │                  # *** setBuf ***
│ │ │                    public void setBuf(byte[][] planes,
│ │ │                              int[] offsets,
│ │ │ @@ -252,47 +260,48 @@
│ │ │                          subregion of a larger image, then offsets[i] specifies
│ │ │                          the offset (in bytes) of the subregion within plane i
│ │ │                          of the larger image. Setting this to null is the same
│ │ │                          as setting the offsets for all planes to 0.
│ │ │                          width - width (in pixels) of the YUV image (or
│ │ │                          subregion)
│ │ │                          strides - an array of integers, each specifying the
│ │ │ -                        number of bytes per line in the corresponding plane of
│ │ │ +                        number of bytes per row in the corresponding plane of
│ │ │                          the YUV image. Setting the stride for any plane to 0 is
│ │ │                          the same as setting it to the plane width (see above.)
│ │ │                          If strides is null, then the strides for all planes
│ │ │                          will be set to their respective plane widths. You can
│ │ │                          adjust the strides in order to add an arbitrary amount
│ │ │ -                        of line padding to each plane or to specify that this
│ │ │ -                        YUVImage image is a subregion of a larger image (in
│ │ │ +                        of row padding to each plane or to specify that this
│ │ │ +                        YUVImage instance is a subregion of a larger image (in
│ │ │                          which case, strides[i] should be set to the plane width
│ │ │                          of plane i in the larger image.)
│ │ │                          height - height (in pixels) of the YUV image (or
│ │ │                          subregion)
│ │ │                          subsamp - the level of chrominance subsampling used in
│ │ │                          the YUV image (one of TJ.SAMP_*)
│ │ │                  # *** setBuf ***
│ │ │                    public void setBuf(byte[] yuvImage,
│ │ │                              int width,
│ │ │ -                            int pad,
│ │ │ +                            int align,
│ │ │                              int height,
│ │ │                              int subsamp)
│ │ │ -                  Assign a unified image buffer to this YUVImage instance.
│ │ │ +                  Assign a unified buffer to this YUVImage instance.
│ │ │                      Parameters:
│ │ │ -                        yuvImage - image buffer that contains or will contain
│ │ │ -                        YUV planar image data. Use TJ.bufSizeYUV(int,_int,_int,
│ │ │ -                        int) to determine the minimum size for this buffer. The
│ │ │ -                        Y, U (Cb), and V (Cr) image planes are stored
│ │ │ -                        sequentially in the buffer (see above for a description
│ │ │ -                        of the image format.)
│ │ │ +                        yuvImage - buffer that contains or will receive a
│ │ │ +                        unified planar YUV image. Use TJ.bufSizeYUV(int,_int,
│ │ │ +                        int,_int) to determine the minimum size for this
│ │ │ +                        buffer. The Y, U (Cb), and V (Cr) image planes are
│ │ │ +                        stored sequentially in the buffer. (See above for a
│ │ │ +                        description of the image format.)
│ │ │                          width - width (in pixels) of the YUV image
│ │ │ -                        pad - the line padding used in the YUV image buffer.
│ │ │ -                        For instance, if each line in each plane of the buffer
│ │ │ -                        is padded to the nearest multiple of 4 bytes, then pad
│ │ │ -                        should be set to 4.
│ │ │ +                        align - row alignment (in bytes) of the YUV image (must
│ │ │ +                        be a power of 2.) Setting this parameter to n specifies
│ │ │ +                        that each row in each plane of the YUV image will be
│ │ │ +                        padded to the nearest multiple of n bytes (1 =
│ │ │ +                        unpadded.)
│ │ │                          height - height (in pixels) of the YUV image
│ │ │                          subsamp - the level of chrominance subsampling used in
│ │ │                          the YUV image (one of TJ.SAMP_*)
│ │ │                  # *** getWidth ***
│ │ │                    public int getWidth()
│ │ │                    Returns the width of the YUV image (or subregion.)
│ │ │                      Returns:
│ │ │ @@ -300,25 +309,25 @@
│ │ │                  # *** getHeight ***
│ │ │                    public int getHeight()
│ │ │                    Returns the height of the YUV image (or subregion.)
│ │ │                      Returns:
│ │ │                          the height of the YUV image (or subregion)
│ │ │                  # *** getPad ***
│ │ │                    public int getPad()
│ │ │ -                  Returns the line padding used in the YUV image buffer (if
│ │ │ +                  Returns the row alignment (in bytes) of the YUV buffer (if
│ │ │                    this image is stored in a unified buffer rather than separate
│ │ │                    image planes.)
│ │ │                      Returns:
│ │ │ -                        the line padding used in the YUV image buffer
│ │ │ +                        the row alignment of the YUV buffer
│ │ │                  # *** getStrides ***
│ │ │                    public int[] getStrides()
│ │ │ -                  Returns the number of bytes per line of each plane in the YUV
│ │ │ +                  Returns the number of bytes per row of each plane in the YUV
│ │ │                    image.
│ │ │                      Returns:
│ │ │ -                        the number of bytes per line of each plane in the YUV
│ │ │ +                        the number of bytes per row of each plane in the YUV
│ │ │                          image
│ │ │                  # *** getOffsets ***
│ │ │                    public int[] getOffsets()
│ │ │                    Returns the offsets (in bytes) of each plane within the
│ │ │                    planes of a larger YUV image.
│ │ │                      Returns:
│ │ │                          the offsets (in bytes) of each plane within the planes
│ │ │ @@ -335,25 +344,25 @@
│ │ │                    Returns the YUV image planes. If the image is stored in a
│ │ │                    unified buffer, then all image planes will point to that
│ │ │                    buffer.
│ │ │                      Returns:
│ │ │                          the YUV image planes
│ │ │                  # *** getBuf ***
│ │ │                    public byte[] getBuf()
│ │ │ -                  Returns the YUV image buffer (if this image is stored in a
│ │ │ -                  unified buffer rather than separate image planes.)
│ │ │ +                  Returns the YUV buffer (if this image is stored in a unified
│ │ │ +                  buffer rather than separate image planes.)
│ │ │                      Returns:
│ │ │ -                        the YUV image buffer
│ │ │ +                        the YUV buffer
│ │ │                  # *** getSize ***
│ │ │                    public int getSize()
│ │ │ -                  Returns the size (in bytes) of the YUV image buffer (if this
│ │ │ -                  image is stored in a unified buffer rather than separate
│ │ │ -                  image planes.)
│ │ │ +                  Returns the size (in bytes) of the YUV buffer (if this image
│ │ │ +                  is stored in a unified buffer rather than separate image
│ │ │ +                  planes.)
│ │ │                      Returns:
│ │ │ -                        the size (in bytes) of the YUV image buffer
│ │ │ +                        the size (in bytes) of the YUV buffer
│ │ │  
│ │ │      * Package
│ │ │      * Class
│ │ │      * Tree
│ │ │      * Deprecated
│ │ │      * Index
│ │ │      * Help
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-frame.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-frame.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-summary.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-summary.html
│ │┄ Files 0% similar despite different names
│ │ @@ -127,15 +127,15 @@
│ │  <td class="colLast">
│ │  <div class="block">TurboJPEG lossless transformer</div>
│ │  </td>
│ │  </tr>
│ │  <tr class="altColor">
│ │  <td class="colFirst"><a href="../../../org/libjpegturbo/turbojpeg/YUVImage.html" title="class in org.libjpegturbo.turbojpeg">YUVImage</a></td>
│ │  <td class="colLast">
│ │ -<div class="block">This class encapsulates a YUV planar image and the metadata
│ │ +<div class="block">This class encapsulates a planar YUV image and the metadata
│ │   associated with it.</div>
│ │  </td>
│ │  </tr>
│ │  </tbody>
│ │  </table>
│ │  </li>
│ │  <li class="blockList">
│ │ ├── html2text {}
│ │ │ @@ -21,15 +21,15 @@
│ │ │        Class           Description
│ │ │        TJ              TurboJPEG utility class (cannot be instantiated)
│ │ │        TJCompressor    TurboJPEG compressor
│ │ │        TJDecompressor  TurboJPEG decompressor
│ │ │        TJScalingFactor Fractional scaling factor
│ │ │        TJTransform     Lossless transform parameters
│ │ │        TJTransformer   TurboJPEG lossless transformer
│ │ │ -      YUVImage        This class encapsulates a YUV planar image and the
│ │ │ +      YUVImage        This class encapsulates a planar YUV image and the
│ │ │                        metadata associated with it.
│ │ │      *   Exception Summary 
│ │ │        Exception   Description
│ │ │        TJException  
│ │ │      * Package
│ │ │      * Class
│ │ │      * Tree
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-tree.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-tree.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/overview-tree.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/overview-tree.html
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/background.gif
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/background.gif
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/titlebar.gif
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/titlebar.gif
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/resources/titlebar_end.gif
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/resources/titlebar_end.gif
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/script.js
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/script.js
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/serialized-form.html
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/serialized-form.html
│ │┄ Files 4% similar despite different names
│ │ @@ -105,20 +105,21 @@
│ │  <!--   -->
│ │  </a>
│ │  <h3>Serialized Fields</h3>
│ │  <ul class="blockList">
│ │  <li class="blockList">
│ │  <h4>op</h4>
│ │  <pre>int op</pre>
│ │ -<div class="block">Transform operation (one of <code>OP_*</code>)</div>
│ │ +<div class="block">Transform operation (one of <a href="org/libjpegturbo/turbojpeg/TJTransform.html#OP_NONE"><code>OP_*</code></a>)</div>
│ │  </li>
│ │  <li class="blockList">
│ │  <h4>options</h4>
│ │  <pre>int options</pre>
│ │ -<div class="block">Transform options (bitwise OR of one or more of <code>OPT_*</code>)</div>
│ │ +<div class="block">Transform options (bitwise OR of one or more of
│ │ + <a href="org/libjpegturbo/turbojpeg/TJTransform.html#OPT_PERFECT"><code>OPT_*</code></a>)</div>
│ │  </li>
│ │  <li class="blockListLast">
│ │  <h4>cf</h4>
│ │  <pre><a href="org/libjpegturbo/turbojpeg/TJCustomFilter.html" title="interface in org.libjpegturbo.turbojpeg">TJCustomFilter</a> cf</pre>
│ │  <div class="block">Custom filter instance</div>
│ │  </li>
│ │  </ul>
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/doc/stylesheet.css
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/doc/stylesheet.css
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJ.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJ.java
│ │┄ Files 3% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  /*
│ │ - * Copyright (C)2011-2013, 2017-2018, 2020-2021 D. R. Commander.
│ │ - *                                              All Rights Reserved.
│ │ + * Copyright (C)2011-2013, 2017-2018, 2020-2021, 2023 D. R. Commander.
│ │ + *                                                    All Rights Reserved.
│ │   * Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │ @@ -81,15 +81,15 @@
│ │  
│ │  
│ │    /**
│ │     * Returns the MCU block width for the given level of chrominance
│ │     * subsampling.
│ │     *
│ │     * @param subsamp the level of chrominance subsampling (one of
│ │ -   * <code>SAMP_*</code>)
│ │ +   * {@link #SAMP_444 SAMP_*})
│ │     *
│ │     * @return the MCU block width for the given level of chrominance
│ │     * subsampling.
│ │     */
│ │    public static int getMCUWidth(int subsamp) {
│ │      checkSubsampling(subsamp);
│ │      return MCU_WIDTH[subsamp];
│ │ @@ -101,15 +101,15 @@
│ │  
│ │  
│ │    /**
│ │     * Returns the MCU block height for the given level of chrominance
│ │     * subsampling.
│ │     *
│ │     * @param subsamp the level of chrominance subsampling (one of
│ │ -   * <code>SAMP_*</code>)
│ │ +   * {@link #SAMP_444 SAMP_*})
│ │     *
│ │     * @return the MCU block height for the given level of chrominance
│ │     * subsampling.
│ │     */
│ │    public static int getMCUHeight(int subsamp) {
│ │      checkSubsampling(subsamp);
│ │      return MCU_HEIGHT[subsamp];
│ │ @@ -201,24 +201,24 @@
│ │     * magenta, yellow, or black ink that is applied to a white background.  In
│ │     * order to convert between CMYK and RGB, it is necessary to use a color
│ │     * management system (CMS.)  A CMS will attempt to map colors within the
│ │     * printer's gamut to perceptually similar colors in the display's gamut and
│ │     * vice versa, but the mapping is typically not 1:1 or reversible, nor can it
│ │     * be defined with a simple formula.  Thus, such a conversion is out of scope
│ │     * for a codec library.  However, the TurboJPEG API allows for compressing
│ │ -   * CMYK pixels into a YCCK JPEG image (see {@link #CS_YCCK}) and
│ │ -   * decompressing YCCK JPEG images into CMYK pixels.
│ │ +   * packed-pixel CMYK images into YCCK JPEG images (see {@link #CS_YCCK}) and
│ │ +   * decompressing YCCK JPEG images into packed-pixel CMYK images.
│ │     */
│ │    public static final int PF_CMYK = 11;
│ │  
│ │  
│ │    /**
│ │     * Returns the pixel size (in bytes) for the given pixel format.
│ │     *
│ │ -   * @param pixelFormat the pixel format (one of <code>PF_*</code>)
│ │ +   * @param pixelFormat the pixel format (one of {@link #PF_RGB PF_*})
│ │     *
│ │     * @return the pixel size (in bytes) for the given pixel format.
│ │     */
│ │    public static int getPixelSize(int pixelFormat) {
│ │      checkPixelFormat(pixelFormat);
│ │      return PIXEL_SIZE[pixelFormat];
│ │    }
│ │ @@ -231,15 +231,15 @@
│ │    /**
│ │     * For the given pixel format, returns the number of bytes that the red
│ │     * component is offset from the start of the pixel.  For instance, if a pixel
│ │     * of format <code>TJ.PF_BGRX</code> is stored in <code>char pixel[]</code>,
│ │     * then the red component will be
│ │     * <code>pixel[TJ.getRedOffset(TJ.PF_BGRX)]</code>.
│ │     *
│ │ -   * @param pixelFormat the pixel format (one of <code>PF_*</code>)
│ │ +   * @param pixelFormat the pixel format (one of {@link #PF_RGB PF_*})
│ │     *
│ │     * @return the red offset for the given pixel format, or -1 if the pixel
│ │     * format does not have a red component.
│ │     */
│ │    public static int getRedOffset(int pixelFormat) {
│ │      checkPixelFormat(pixelFormat);
│ │      return RED_OFFSET[pixelFormat];
│ │ @@ -253,15 +253,15 @@
│ │    /**
│ │     * For the given pixel format, returns the number of bytes that the green
│ │     * component is offset from the start of the pixel.  For instance, if a pixel
│ │     * of format <code>TJ.PF_BGRX</code> is stored in <code>char pixel[]</code>,
│ │     * then the green component will be
│ │     * <code>pixel[TJ.getGreenOffset(TJ.PF_BGRX)]</code>.
│ │     *
│ │ -   * @param pixelFormat the pixel format (one of <code>PF_*</code>)
│ │ +   * @param pixelFormat the pixel format (one of {@link #PF_RGB PF_*})
│ │     *
│ │     * @return the green offset for the given pixel format, or -1 if the pixel
│ │     * format does not have a green component.
│ │     */
│ │    public static int getGreenOffset(int pixelFormat) {
│ │      checkPixelFormat(pixelFormat);
│ │      return GREEN_OFFSET[pixelFormat];
│ │ @@ -275,15 +275,15 @@
│ │    /**
│ │     * For the given pixel format, returns the number of bytes that the blue
│ │     * component is offset from the start of the pixel.  For instance, if a pixel
│ │     * of format <code>TJ.PF_BGRX</code> is stored in <code>char pixel[]</code>,
│ │     * then the blue component will be
│ │     * <code>pixel[TJ.getBlueOffset(TJ.PF_BGRX)]</code>.
│ │     *
│ │ -   * @param pixelFormat the pixel format (one of <code>PF_*</code>)
│ │ +   * @param pixelFormat the pixel format (one of {@link #PF_RGB PF_*})
│ │     *
│ │     * @return the blue offset for the given pixel format, or -1 if the pixel
│ │     * format does not have a blue component.
│ │     */
│ │    public static int getBlueOffset(int pixelFormat) {
│ │      checkPixelFormat(pixelFormat);
│ │      return BLUE_OFFSET[pixelFormat];
│ │ @@ -297,15 +297,15 @@
│ │    /**
│ │     * For the given pixel format, returns the number of bytes that the alpha
│ │     * component is offset from the start of the pixel.  For instance, if a pixel
│ │     * of format <code>TJ.PF_BGRA</code> is stored in <code>char pixel[]</code>,
│ │     * then the alpha component will be
│ │     * <code>pixel[TJ.getAlphaOffset(TJ.PF_BGRA)]</code>.
│ │     *
│ │ -   * @param pixelFormat the pixel format (one of <code>PF_*</code>)
│ │ +   * @param pixelFormat the pixel format (one of {@link #PF_RGB PF_*})
│ │     *
│ │     * @return the alpha offset for the given pixel format, or -1 if the pixel
│ │     * format does not have a alpha component.
│ │     */
│ │    public static int getAlphaOffset(int pixelFormat) {
│ │      checkPixelFormat(pixelFormat);
│ │      return ALPHA_OFFSET[pixelFormat];
│ │ @@ -320,66 +320,69 @@
│ │     * The number of JPEG colorspaces
│ │     */
│ │    public static final int NUMCS = 5;
│ │    /**
│ │     * RGB colorspace.  When compressing the JPEG image, the R, G, and B
│ │     * components in the source image are reordered into image planes, but no
│ │     * colorspace conversion or subsampling is performed.  RGB JPEG images can be
│ │ -   * decompressed to any of the extended RGB pixel formats or grayscale, but
│ │ -   * they cannot be decompressed to YUV images.
│ │ +   * decompressed to packed-pixel images with any of the extended RGB or
│ │ +   * grayscale pixel formats, but they cannot be decompressed to planar YUV
│ │ +   * images.
│ │     */
│ │    public static final int CS_RGB = 0;
│ │    /**
│ │     * YCbCr colorspace.  YCbCr is not an absolute colorspace but rather a
│ │     * mathematical transformation of RGB designed solely for storage and
│ │     * transmission.  YCbCr images must be converted to RGB before they can
│ │     * actually be displayed.  In the YCbCr colorspace, the Y (luminance)
│ │     * component represents the black &amp; white portion of the original image,
│ │     * and the Cb and Cr (chrominance) components represent the color portion of
│ │     * the original image.  Originally, the analog equivalent of this
│ │     * transformation allowed the same signal to drive both black &amp; white and
│ │     * color televisions, but JPEG images use YCbCr primarily because it allows
│ │     * the color data to be optionally subsampled for the purposes of reducing
│ │ -   * bandwidth or disk space.  YCbCr is the most common JPEG colorspace, and
│ │ -   * YCbCr JPEG images can be compressed from and decompressed to any of the
│ │ -   * extended RGB pixel formats or grayscale, or they can be decompressed to
│ │ -   * YUV planar images.
│ │ +   * network or disk usage.  YCbCr is the most common JPEG colorspace, and
│ │ +   * YCbCr JPEG images can be compressed from and decompressed to packed-pixel
│ │ +   * images with any of the extended RGB or grayscale pixel formats.  YCbCr
│ │ +   * JPEG images can also be compressed from and decompressed to planar YUV
│ │ +   * images.
│ │     */
│ │    @SuppressWarnings("checkstyle:ConstantName")
│ │    public static final int CS_YCbCr = 1;
│ │    /**
│ │     * Grayscale colorspace.  The JPEG image retains only the luminance data (Y
│ │     * component), and any color data from the source image is discarded.
│ │ -   * Grayscale JPEG images can be compressed from and decompressed to any of
│ │ -   * the extended RGB pixel formats or grayscale, or they can be decompressed
│ │ -   * to YUV planar images.
│ │ +   * Grayscale JPEG images can be compressed from and decompressed to
│ │ +   * packed-pixel images with any of the extended RGB or grayscale pixel
│ │ +   * formats, or they can be compressed from and decompressed to planar YUV
│ │ +   * images.
│ │     */
│ │    public static final int CS_GRAY = 2;
│ │    /**
│ │     * CMYK colorspace.  When compressing the JPEG image, the C, M, Y, and K
│ │     * components in the source image are reordered into image planes, but no
│ │     * colorspace conversion or subsampling is performed.  CMYK JPEG images can
│ │ -   * only be decompressed to CMYK pixels.
│ │ +   * only be decompressed to packed-pixel images with the CMYK pixel format.
│ │     */
│ │    public static final int CS_CMYK = 3;
│ │    /**
│ │     * YCCK colorspace.  YCCK (AKA "YCbCrK") is not an absolute colorspace but
│ │     * rather a mathematical transformation of CMYK designed solely for storage
│ │     * and transmission.  It is to CMYK as YCbCr is to RGB.  CMYK pixels can be
│ │     * reversibly transformed into YCCK, and as with YCbCr, the chrominance
│ │     * components in the YCCK pixels can be subsampled without incurring major
│ │     * perceptual loss.  YCCK JPEG images can only be compressed from and
│ │ -   * decompressed to CMYK pixels.
│ │ +   * decompressed to packed-pixel images with the CMYK pixel format.
│ │     */
│ │    public static final int CS_YCCK = 4;
│ │  
│ │  
│ │    /**
│ │ -   * The uncompressed source/destination image is stored in bottom-up (Windows,
│ │ -   * OpenGL) order, not top-down (X11) order.
│ │ +   * Rows in the packed-pixel source/destination image are stored in bottom-up
│ │ +   * (Windows, OpenGL) order rather than in top-down (X11) order.
│ │     */
│ │    public static final int FLAG_BOTTOMUP      = 2;
│ │  
│ │    @SuppressWarnings("checkstyle:JavadocVariable")
│ │    @Deprecated
│ │    public static final int FLAG_FORCEMMX      = 8;
│ │    @SuppressWarnings("checkstyle:JavadocVariable")
│ │ @@ -390,49 +393,47 @@
│ │    public static final int FLAG_FORCESSE2     = 32;
│ │    @SuppressWarnings("checkstyle:JavadocVariable")
│ │    @Deprecated
│ │    public static final int FLAG_FORCESSE3     = 128;
│ │  
│ │    /**
│ │     * When decompressing an image that was compressed using chrominance
│ │ -   * subsampling, use the fastest chrominance upsampling algorithm available in
│ │ -   * the underlying codec.  The default is to use smooth upsampling, which
│ │ -   * creates a smooth transition between neighboring chrominance components in
│ │ -   * order to reduce upsampling artifacts in the decompressed image.
│ │ +   * subsampling, use the fastest chrominance upsampling algorithm available.
│ │ +   * The default is to use smooth upsampling, which creates a smooth transition
│ │ +   * between neighboring chrominance components in order to reduce upsampling
│ │ +   * artifacts in the decompressed image.
│ │     */
│ │    public static final int FLAG_FASTUPSAMPLE  = 256;
│ │    /**
│ │ -   * Use the fastest DCT/IDCT algorithm available in the underlying codec.  The
│ │ -   * default if this flag is not specified is implementation-specific.  For
│ │ -   * example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast
│ │ -   * algorithm by default when compressing, because this has been shown to have
│ │ -   * only a very slight effect on accuracy, but it uses the accurate algorithm
│ │ -   * when decompressing, because this has been shown to have a larger effect.
│ │ +   * Use the fastest DCT/IDCT algorithm available.  The default if this flag is
│ │ +   * not specified is implementation-specific.  For example, the implementation
│ │ +   * of the TurboJPEG API in libjpeg-turbo uses the fast algorithm by default
│ │ +   * when compressing, because this has been shown to have only a very slight
│ │ +   * effect on accuracy, but it uses the accurate algorithm when decompressing,
│ │ +   * because this has been shown to have a larger effect.
│ │     */
│ │    public static final int FLAG_FASTDCT       = 2048;
│ │    /**
│ │ -   * Use the most accurate DCT/IDCT algorithm available in the underlying
│ │ -   * codec.  The default if this flag is not specified is
│ │ -   * implementation-specific.  For example, the implementation of TurboJPEG for
│ │ -   * libjpeg[-turbo] uses the fast algorithm by default when compressing,
│ │ -   * because this has been shown to have only a very slight effect on accuracy,
│ │ -   * but it uses the accurate algorithm when decompressing, because this has
│ │ -   * been shown to have a larger effect.
│ │ +   * Use the most accurate DCT/IDCT algorithm available.  The default if this
│ │ +   * flag is not specified is implementation-specific.  For example, the
│ │ +   * implementation of the TurboJPEG API in libjpeg-turbo uses the fast
│ │ +   * algorithm by default when compressing, because this has been shown to have
│ │ +   * only a very slight effect on accuracy, but it uses the accurate algorithm
│ │ +   * when decompressing, because this has been shown to have a larger effect.
│ │     */
│ │    public static final int FLAG_ACCURATEDCT   = 4096;
│ │    /**
│ │     * Immediately discontinue the current compression/decompression/transform
│ │ -   * operation if the underlying codec throws a warning (non-fatal error).  The
│ │ -   * default behavior is to allow the operation to complete unless a fatal
│ │ -   * error is encountered.
│ │ +   * operation if a warning (non-fatal error) occurs.  The default behavior is
│ │ +   * to allow the operation to complete unless a fatal error is encountered.
│ │     * <p>
│ │     * NOTE: due to the design of the TurboJPEG Java API, only certain methods
│ │     * (specifically, {@link TJDecompressor TJDecompressor.decompress*()} methods
│ │ -   * with a void return type) will complete and leave the output image in a
│ │ -   * fully recoverable state after a non-fatal error occurs.
│ │ +   * with a void return type) will complete and leave the destination image in
│ │ +   * a fully recoverable state after a non-fatal error occurs.
│ │     */
│ │    public static final int FLAG_STOPONWARNING = 8192;
│ │    /**
│ │     * Use progressive entropy coding in JPEG images generated by compression and
│ │     * transform operations.  Progressive entropy coding will generally improve
│ │     * compression relative to baseline entropy coding (the default), but it will
│ │     * reduce compression and decompression performance considerably.
│ │ @@ -451,21 +452,21 @@
│ │  
│ │  
│ │    /**
│ │     * The number of error codes
│ │     */
│ │    public static final int NUMERR = 2;
│ │    /**
│ │ -   * The error was non-fatal and recoverable, but the image may still be
│ │ -   * corrupt.
│ │ +   * The error was non-fatal and recoverable, but the destination image may
│ │ +   * still be corrupt.
│ │     * <p>
│ │     * NOTE: due to the design of the TurboJPEG Java API, only certain methods
│ │     * (specifically, {@link TJDecompressor TJDecompressor.decompress*()} methods
│ │ -   * with a void return type) will complete and leave the output image in a
│ │ -   * fully recoverable state after a non-fatal error occurs.
│ │ +   * with a void return type) will complete and leave the destination image in
│ │ +   * a fully recoverable state after a non-fatal error occurs.
│ │     */
│ │    public static final int ERR_WARNING = 0;
│ │    /**
│ │     * The error was fatal and non-recoverable.
│ │     */
│ │    public static final int ERR_FATAL = 1;
│ │  
│ │ @@ -475,39 +476,43 @@
│ │     * image with the given width, height, and level of chrominance subsampling.
│ │     *
│ │     * @param width the width (in pixels) of the JPEG image
│ │     *
│ │     * @param height the height (in pixels) of the JPEG image
│ │     *
│ │     * @param jpegSubsamp the level of chrominance subsampling to be used when
│ │ -   * generating the JPEG image (one of {@link TJ TJ.SAMP_*})
│ │ +   * generating the JPEG image (one of {@link #SAMP_444 TJ.SAMP_*})
│ │     *
│ │     * @return the maximum size of the buffer (in bytes) required to hold a JPEG
│ │     * image with the given width, height, and level of chrominance subsampling.
│ │     */
│ │    public static native int bufSize(int width, int height, int jpegSubsamp);
│ │  
│ │    /**
│ │ -   * Returns the size of the buffer (in bytes) required to hold a YUV planar
│ │ -   * image with the given width, height, and level of chrominance subsampling.
│ │ +   * Returns the size of the buffer (in bytes) required to hold a unified
│ │ +   * planar YUV image with the given width, height, and level of chrominance
│ │ +   * subsampling.
│ │     *
│ │     * @param width the width (in pixels) of the YUV image
│ │     *
│ │ -   * @param pad the width of each line in each plane of the image is padded to
│ │ -   * the nearest multiple of this number of bytes (must be a power of 2.)
│ │ +   * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ +   * 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ +   * the YUV image will be padded to the nearest multiple of n bytes
│ │ +   * (1 = unpadded.)
│ │     *
│ │     * @param height the height (in pixels) of the YUV image
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV
│ │ -   * image (one of {@link TJ TJ.SAMP_*})
│ │ +   * image (one of {@link #SAMP_444 TJ.SAMP_*})
│ │     *
│ │ -   * @return the size of the buffer (in bytes) required to hold a YUV planar
│ │ -   * image with the given width, height, and level of chrominance subsampling.
│ │ +   * @return the size of the buffer (in bytes) required to hold a unified
│ │ +   * planar YUV image with the given width, height, and level of chrominance
│ │ +   * subsampling.
│ │     */
│ │ -  public static native int bufSizeYUV(int width, int pad, int height,
│ │ +  public static native int bufSizeYUV(int width, int align, int height,
│ │                                        int subsamp);
│ │  
│ │    /**
│ │     * @deprecated Use {@link #bufSizeYUV(int, int, int, int)} instead.
│ │     */
│ │    @SuppressWarnings("checkstyle:JavadocMethod")
│ │    @Deprecated
│ │ @@ -519,39 +524,39 @@
│ │     *
│ │     * @param componentID ID number of the image plane (0 = Y, 1 = U/Cb,
│ │     * 2 = V/Cr)
│ │     *
│ │     * @param width width (in pixels) of the YUV image.  NOTE: this is the width
│ │     * of the whole image, not the plane width.
│ │     *
│ │ -   * @param stride bytes per line in the image plane.
│ │ +   * @param stride bytes per row in the image plane.
│ │     *
│ │     * @param height height (in pixels) of the YUV image.  NOTE: this is the
│ │     * height of the whole image, not the plane height.
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV
│ │ -   * image (one of {@link TJ TJ.SAMP_*})
│ │ +   * image (one of {@link #SAMP_444 TJ.SAMP_*})
│ │     *
│ │ -   * @return the size of the buffer (in bytes) required to hold a YUV planar
│ │ -   * image with the given parameters.
│ │ +   * @return the size of the buffer (in bytes) required to hold a YUV image
│ │ +   * plane with the given parameters.
│ │     */
│ │    public static native int planeSizeYUV(int componentID, int width, int stride,
│ │                                          int height, int subsamp);
│ │  
│ │    /**
│ │     * Returns the plane width of a YUV image plane with the given parameters.
│ │     * Refer to {@link YUVImage YUVImage} for a description of plane width.
│ │     *
│ │     * @param componentID ID number of the image plane (0 = Y, 1 = U/Cb,
│ │     * 2 = V/Cr)
│ │     *
│ │     * @param width width (in pixels) of the YUV image
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV image
│ │ -   * (one of {@link TJ TJ.SAMP_*})
│ │ +   * (one of {@link #SAMP_444 TJ.SAMP_*})
│ │     *
│ │     * @return the plane width of a YUV image plane with the given parameters.
│ │     */
│ │    public static native int planeWidth(int componentID, int width, int subsamp);
│ │  
│ │    /**
│ │     * Returns the plane height of a YUV image plane with the given parameters.
│ │ @@ -559,27 +564,27 @@
│ │     *
│ │     * @param componentID ID number of the image plane (0 = Y, 1 = U/Cb,
│ │     * 2 = V/Cr)
│ │     *
│ │     * @param height height (in pixels) of the YUV image
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV image
│ │ -   * (one of {@link TJ TJ.SAMP_*})
│ │ +   * (one of {@link #SAMP_444 TJ.SAMP_*})
│ │     *
│ │     * @return the plane height of a YUV image plane with the given parameters.
│ │     */
│ │    public static native int planeHeight(int componentID, int height,
│ │                                         int subsamp);
│ │  
│ │    /**
│ │ -   * Returns a list of fractional scaling factors that the JPEG decompressor in
│ │ -   * this implementation of TurboJPEG supports.
│ │ +   * Returns a list of fractional scaling factors that the JPEG decompressor
│ │ +   * supports.
│ │     *
│ │ -   * @return a list of fractional scaling factors that the JPEG decompressor in
│ │ -   * this implementation of TurboJPEG supports.
│ │ +   * @return a list of fractional scaling factors that the JPEG decompressor
│ │ +   * supports.
│ │     */
│ │    public static native TJScalingFactor[] getScalingFactors();
│ │  
│ │    static {
│ │      TJLoader.load();
│ │    }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJCompressor.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJCompressor.java
│ │┄ Files 4% similar despite different names
│ │ @@ -1,9 +1,10 @@
│ │  /*
│ │ - * Copyright (C)2011-2015, 2018, 2020 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2011-2015, 2018, 2020, 2023 D. R. Commander.
│ │ + *                                          All Rights Reserved.
│ │   * Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │ @@ -45,15 +46,15 @@
│ │     * Create a TurboJPEG compressor instance.
│ │     */
│ │    public TJCompressor() throws TJException {
│ │      init();
│ │    }
│ │  
│ │    /**
│ │ -   * Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +   * Create a TurboJPEG compressor instance and associate the packed-pixel
│ │     * source image stored in <code>srcImage</code> with the newly created
│ │     * instance.
│ │     *
│ │     * @param srcImage see {@link #setSourceImage} for description
│ │     *
│ │     * @param x see {@link #setSourceImage} for description
│ │     *
│ │ @@ -81,15 +82,15 @@
│ │    @Deprecated
│ │    public TJCompressor(byte[] srcImage, int width, int pitch, int height,
│ │                        int pixelFormat) throws TJException {
│ │      setSourceImage(srcImage, width, pitch, height, pixelFormat);
│ │    }
│ │  
│ │    /**
│ │ -   * Create a TurboJPEG compressor instance and associate the uncompressed
│ │ +   * Create a TurboJPEG compressor instance and associate the packed-pixel
│ │     * source image stored in <code>srcImage</code> with the newly created
│ │     * instance.
│ │     *
│ │     * @param srcImage see
│ │     * {@link #setSourceImage(BufferedImage, int, int, int, int)} for description
│ │     *
│ │     * @param x see
│ │ @@ -106,37 +107,39 @@
│ │     */
│ │    public TJCompressor(BufferedImage srcImage, int x, int y, int width,
│ │                        int height) throws TJException {
│ │      setSourceImage(srcImage, x, y, width, height);
│ │    }
│ │  
│ │    /**
│ │ -   * Associate an uncompressed RGB, grayscale, or CMYK source image with this
│ │ +   * Associate a packed-pixel RGB, grayscale, or CMYK source image with this
│ │     * compressor instance.
│ │     *
│ │ -   * @param srcImage image buffer containing RGB, grayscale, or CMYK pixels to
│ │ -   * be compressed or encoded.  This buffer is not modified.
│ │ +   * @param srcImage buffer containing a packed-pixel RGB, grayscale, or CMYK
│ │ +   * source image to be compressed or encoded.  This buffer is not modified.
│ │     *
│ │     * @param x x offset (in pixels) of the region in the source image from which
│ │     * the JPEG or YUV image should be compressed/encoded
│ │     *
│ │     * @param y y offset (in pixels) of the region in the source image from which
│ │     * the JPEG or YUV image should be compressed/encoded
│ │     *
│ │     * @param width width (in pixels) of the region in the source image from
│ │     * which the JPEG or YUV image should be compressed/encoded
│ │     *
│ │ -   * @param pitch bytes per line of the source image.  Normally, this should be
│ │ -   * <code>width * TJ.pixelSize(pixelFormat)</code> if the source image is
│ │ -   * unpadded, but you can use this parameter to, for instance, specify that
│ │ -   * the scanlines in the source image are padded to a 4-byte boundary or to
│ │ -   * compress/encode a JPEG or YUV image from a region of a larger source
│ │ -   * image.  You can also be clever and use this parameter to skip lines, etc.
│ │ -   * Setting this parameter to 0 is the equivalent of setting it to
│ │ -   * <code>width * TJ.pixelSize(pixelFormat)</code>.
│ │ +   * @param pitch bytes per row in the source image.  Normally this should be
│ │ +   * <code>width *
│ │ +   * </code>{@link TJ#getPixelSize TJ.getPixelSize}<code>(pixelFormat)</code>,
│ │ +   * if the source image is unpadded.  However, you can use this parameter to,
│ │ +   * for instance, specify that the rows in the source image are padded to the
│ │ +   * nearest multiple of 4 bytes or to compress/encode a JPEG or YUV image from
│ │ +   * a region of a larger source image.  You can also be clever and use this
│ │ +   * parameter to skip rows, etc.  Setting this parameter to 0 is the
│ │ +   * equivalent of setting it to <code>width *
│ │ +   * </code>{@link TJ#getPixelSize TJ.getPixelSize}<code>(pixelFormat)</code>.
│ │     *
│ │     * @param height height (in pixels) of the region in the source image from
│ │     * which the JPEG or YUV image should be compressed/encoded
│ │     *
│ │     * @param pixelFormat pixel format of the source image (one of
│ │     * {@link TJ#PF_RGB TJ.PF_*})
│ │     */
│ │ @@ -170,19 +173,20 @@
│ │    public void setSourceImage(byte[] srcImage, int width, int pitch,
│ │                               int height, int pixelFormat) throws TJException {
│ │      setSourceImage(srcImage, 0, 0, width, pitch, height, pixelFormat);
│ │      srcX = srcY = -1;
│ │    }
│ │  
│ │    /**
│ │ -   * Associate an uncompressed RGB or grayscale source image with this
│ │ +   * Associate a packed-pixel RGB or grayscale source image with this
│ │     * compressor instance.
│ │     *
│ │ -   * @param srcImage a <code>BufferedImage</code> instance containing RGB or
│ │ -   * grayscale pixels to be compressed or encoded.  This image is not modified.
│ │ +   * @param srcImage a <code>BufferedImage</code> instance containing a
│ │ +   * packed-pixel RGB or grayscale source image to be compressed or encoded.
│ │ +   * This image is not modified.
│ │     *
│ │     * @param x x offset (in pixels) of the region in the source image from which
│ │     * the JPEG or YUV image should be compressed/encoded
│ │     *
│ │     * @param y y offset (in pixels) of the region in the source image from which
│ │     * the JPEG or YUV image should be compressed/encoded
│ │     *
│ │ @@ -256,19 +260,18 @@
│ │        srcBuf = db.getData();
│ │        srcBufInt = null;
│ │      }
│ │      srcYUVImage = null;
│ │    }
│ │  
│ │    /**
│ │ -   * Associate an uncompressed YUV planar source image with this compressor
│ │ -   * instance.
│ │ +   * Associate a planar YUV source image with this compressor instance.
│ │     *
│ │ -   * @param srcImage YUV planar image to be compressed.  This image is not
│ │ -   * modified.
│ │ +   * @param srcImage planar YUV source image to be compressed.  This image is
│ │ +   * not modified.
│ │     */
│ │    public void setSourceImage(YUVImage srcImage) throws TJException {
│ │      if (handle == 0) init();
│ │      if (srcImage == null)
│ │        throw new IllegalArgumentException("Invalid argument in setSourceImage()");
│ │      srcYUVImage = srcImage;
│ │      srcBuf = null;
│ │ @@ -277,24 +280,24 @@
│ │  
│ │    /**
│ │     * Set the level of chrominance subsampling for subsequent compress/encode
│ │     * operations.  When pixels are converted from RGB to YCbCr (see
│ │     * {@link TJ#CS_YCbCr}) or from CMYK to YCCK (see {@link TJ#CS_YCCK}) as part
│ │     * of the JPEG compression process, some of the Cb and Cr (chrominance)
│ │     * components can be discarded or averaged together to produce a smaller
│ │ -   * image with little perceptible loss of image clarity (the human eye is more
│ │ -   * sensitive to small changes in brightness than to small changes in color.)
│ │ -   * This is called "chrominance subsampling".
│ │ +   * image with little perceptible loss of image clarity.  (The human eye is
│ │ +   * more sensitive to small changes in brightness than to small changes in
│ │ +   * color.)  This is called "chrominance subsampling".
│ │     * <p>
│ │ -   * NOTE: This method has no effect when compressing a JPEG image from a YUV
│ │ -   * planar source.  In that case, the level of chrominance subsampling in
│ │ -   * the JPEG image is determined by the source.  Furthermore, this method has
│ │ -   * no effect when encoding to a pre-allocated {@link YUVImage} instance.  In
│ │ -   * that case, the level of chrominance subsampling is determined by the
│ │ -   * destination.
│ │ +   * NOTE: This method has no effect when compressing a JPEG image from a
│ │ +   * planar YUV source image.  In that case, the level of chrominance
│ │ +   * subsampling in the JPEG image is determined by the source image.
│ │ +   * Furthermore, this method has no effect when encoding to a pre-allocated
│ │ +   * {@link YUVImage} instance.  In that case, the level of chrominance
│ │ +   * subsampling is determined by the destination image.
│ │     *
│ │     * @param newSubsamp the level of chrominance subsampling to use in
│ │     * subsequent compress/encode oeprations (one of
│ │     * {@link TJ#SAMP_444 TJ.SAMP_*})
│ │     */
│ │    public void setSubsamp(int newSubsamp) {
│ │      if (newSubsamp < 0 || newSubsamp >= TJ.NUMSAMP)
│ │ @@ -311,16 +314,17 @@
│ │    public void setJPEGQuality(int quality) {
│ │      if (quality < 1 || quality > 100)
│ │        throw new IllegalArgumentException("Invalid argument in setJPEGQuality()");
│ │      jpegQuality = quality;
│ │    }
│ │  
│ │    /**
│ │ -   * Compress the uncompressed source image associated with this compressor
│ │ -   * instance and output a JPEG image to the given destination buffer.
│ │ +   * Compress the packed-pixel or planar YUV source image associated with this
│ │ +   * compressor instance and output a JPEG image to the given destination
│ │ +   * buffer.
│ │     *
│ │     * @param dstBuf buffer that will receive the JPEG image.  Use
│ │     * {@link TJ#bufSize} to determine the maximum size for this buffer based on
│ │     * the source image's width and height and the desired level of chrominance
│ │     * subsampling.
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │ @@ -362,16 +366,16 @@
│ │          compressedSize = compress(srcBufInt, srcWidth, srcStride, srcHeight,
│ │                                    srcPixelFormat, dstBuf, subsamp, jpegQuality,
│ │                                    flags);
│ │      }
│ │    }
│ │  
│ │    /**
│ │ -   * Compress the uncompressed source image associated with this compressor
│ │ -   * instance and return a buffer containing a JPEG image.
│ │ +   * Compress the packed-pixel or planar YUV source image associated with this
│ │ +   * compressor instance and return a buffer containing a JPEG image.
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │     * @return a buffer containing a JPEG image.  The length of this buffer will
│ │     * not be equal to the size of the JPEG image.  Use {@link
│ │     * #getCompressedSize} to obtain the size of the JPEG image.
│ │ @@ -413,22 +417,22 @@
│ │    public byte[] compress(BufferedImage srcImage, int flags)
│ │                           throws TJException {
│ │      setSourceImage(srcImage, 0, 0, 0, 0);
│ │      return compress(flags);
│ │    }
│ │  
│ │    /**
│ │ -   * Encode the uncompressed source image associated with this compressor
│ │ -   * instance into a YUV planar image and store it in the given
│ │ -   * <code>YUVImage</code> instance.   This method uses the accelerated color
│ │ -   * conversion routines in TurboJPEG's underlying codec but does not execute
│ │ -   * any of the other steps in the JPEG compression process.  Encoding
│ │ -   * CMYK source images to YUV is not supported.
│ │ +   * Encode the packed-pixel source image associated with this compressor
│ │ +   * instance into a planar YUV image and store it in the given
│ │ +   * {@link YUVImage} instance.  This method performs color conversion (which
│ │ +   * is accelerated in the libjpeg-turbo implementation) but does not execute
│ │ +   * any of the other steps in the JPEG compression process.  Encoding CMYK
│ │ +   * source images into YUV images is not supported.
│ │     *
│ │ -   * @param dstImage {@link YUVImage} instance that will receive the YUV planar
│ │ +   * @param dstImage {@link YUVImage} instance that will receive the planar YUV
│ │     * image
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     */
│ │    public void encodeYUV(YUVImage dstImage, int flags) throws TJException {
│ │      if (dstImage == null || flags < 0)
│ │ @@ -465,60 +469,62 @@
│ │      checkSubsampling();
│ │      YUVImage dstYUVImage = new YUVImage(dstBuf, srcWidth, 4, srcHeight,
│ │                                          subsamp);
│ │      encodeYUV(dstYUVImage, flags);
│ │    }
│ │  
│ │    /**
│ │ -   * Encode the uncompressed source image associated with this compressor
│ │ -   * instance into a unified YUV planar image buffer and return a
│ │ -   * <code>YUVImage</code> instance containing the encoded image.  This method
│ │ -   * uses the accelerated color conversion routines in TurboJPEG's underlying
│ │ -   * codec but does not execute any of the other steps in the JPEG compression
│ │ -   * process.  Encoding CMYK source images to YUV is not supported.
│ │ -   *
│ │ -   * @param pad the width of each line in each plane of the YUV image will be
│ │ -   * padded to the nearest multiple of this number of bytes (must be a power of
│ │ -   * 2.)
│ │ +   * Encode the packed-pixel source image associated with this compressor
│ │ +   * instance into a unified planar YUV image and return a {@link YUVImage}
│ │ +   * instance containing the encoded image.  This method performs color
│ │ +   * conversion (which is accelerated in the libjpeg-turbo implementation) but
│ │ +   * does not execute any of the other steps in the JPEG compression process.
│ │ +   * Encoding CMYK source images into YUV images is not supported.
│ │ +   *
│ │ +   * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ +   * 2.)  Setting this parameter to n will cause each row in each plane of the
│ │ +   * YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.)
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │ -   * @return a YUV planar image.
│ │ +   * @return a {@link YUVImage} instance containing the unified planar YUV
│ │ +   * encoded image
│ │     */
│ │ -  public YUVImage encodeYUV(int pad, int flags) throws TJException {
│ │ +  public YUVImage encodeYUV(int align, int flags) throws TJException {
│ │      checkSourceImage();
│ │      checkSubsampling();
│ │ -    if (pad < 1 || ((pad & (pad - 1)) != 0))
│ │ +    if (align < 1 || ((align & (align - 1)) != 0))
│ │        throw new IllegalStateException("Invalid argument in encodeYUV()");
│ │ -    YUVImage dstYUVImage = new YUVImage(srcWidth, pad, srcHeight, subsamp);
│ │ +    YUVImage dstYUVImage = new YUVImage(srcWidth, align, srcHeight, subsamp);
│ │      encodeYUV(dstYUVImage, flags);
│ │      return dstYUVImage;
│ │    }
│ │  
│ │    /**
│ │ -   * Encode the uncompressed source image associated with this compressor
│ │ +   * Encode the packed-pixel source image associated with this compressor
│ │     * instance into separate Y, U (Cb), and V (Cr) image planes and return a
│ │ -   * <code>YUVImage</code> instance containing the encoded image planes.  This
│ │ -   * method uses the accelerated color conversion routines in TurboJPEG's
│ │ -   * underlying codec but does not execute any of the other steps in the JPEG
│ │ -   * compression process.  Encoding CMYK source images to YUV is not supported.
│ │ +   * {@link YUVImage} instance containing the encoded image planes.  This
│ │ +   * method performs color conversion (which is accelerated in the
│ │ +   * libjpeg-turbo implementation) but does not execute any of the other steps
│ │ +   * in the JPEG compression process.  Encoding CMYK source images into YUV
│ │ +   * images is not supported.
│ │     *
│ │     * @param strides an array of integers, each specifying the number of bytes
│ │ -   * per line in the corresponding plane of the output image.  Setting the
│ │ -   * stride for any plane to 0 is the same as setting it to the component width
│ │ -   * of the plane.  If <code>strides</code> is null, then the strides for all
│ │ -   * planes will be set to their respective component widths.  You can adjust
│ │ -   * the strides in order to add an arbitrary amount of line padding to each
│ │ -   * plane.
│ │ +   * per row in the corresponding plane of the YUV source image.  Setting the
│ │ +   * stride for any plane to 0 is the same as setting it to the plane width
│ │ +   * (see {@link YUVImage}.)  If <code>strides</code> is null, then the strides
│ │ +   * for all planes will be set to their respective plane widths.  You can
│ │ +   * adjust the strides in order to add an arbitrary amount of row padding to
│ │ +   * each plane.
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │ -   * @return a YUV planar image.
│ │ +   * @return a {@link YUVImage} instance containing the encoded image planes
│ │     */
│ │    public YUVImage encodeYUV(int[] strides, int flags) throws TJException {
│ │      checkSourceImage();
│ │      checkSubsampling();
│ │      YUVImage dstYUVImage = new YUVImage(srcWidth, strides, srcHeight, subsamp);
│ │      encodeYUV(dstYUVImage, flags);
│ │      return dstYUVImage;
│ │ @@ -675,10 +681,9 @@
│ │    private int srcPitch = 0;
│ │    private int srcStride = 0;
│ │    private int srcPixelFormat = -1;
│ │    private YUVImage srcYUVImage = null;
│ │    private int subsamp = -1;
│ │    private int jpegQuality = -1;
│ │    private int compressedSize = 0;
│ │ -  private int yuvPad = 4;
│ │    private ByteOrder byteOrder = null;
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJCustomFilter.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJCustomFilter.java
│ │┄ Files 1% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2011, 2013 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2011, 2013, 2023 D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -54,15 +54,15 @@
│ │     * into multiple DCT coefficient buffers and call the callback function once
│ │     * for each buffer.
│ │     *
│ │     * @param planeRegion rectangle containing the width and height of the
│ │     * component plane to which <code>coeffBuffer</code> belongs
│ │     *
│ │     * @param componentID ID number of the component plane to which
│ │ -   * <code>coeffBuffer</code> belongs (Y, Cb, and Cr have, respectively, ID's
│ │ +   * <code>coeffBuffer</code> belongs.  (Y, Cb, and Cr have, respectively, ID's
│ │     * of 0, 1, and 2 in typical JPEG images.)
│ │     *
│ │     * @param transformID ID number of the transformed image to which
│ │     * <code>coeffBuffer</code> belongs.  This is the same as the index of the
│ │     * transform in the <code>transforms</code> array that was passed to {@link
│ │     * TJTransformer#transform TJTransformer.transform()}.
│ │     *
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJDecompressor.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJDecompressor.java
│ │┄ Files 2% similar despite different names
│ │ @@ -1,9 +1,10 @@
│ │  /*
│ │ - * Copyright (C)2011-2015, 2018, 2022 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2011-2015, 2018, 2022-2023 D. R. Commander.
│ │ + *                                         All Rights Reserved.
│ │   * Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │ @@ -46,69 +47,74 @@
│ │     */
│ │    public TJDecompressor() throws TJException {
│ │      init();
│ │    }
│ │  
│ │    /**
│ │     * Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ -   * image stored in <code>jpegImage</code> with the newly created instance.
│ │ +   * image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ +   * stored in <code>jpegImage</code> with the newly created instance.
│ │     *
│ │ -   * @param jpegImage JPEG image buffer (size of the JPEG image is assumed to
│ │ -   * be the length of the array.)  This buffer is not modified.
│ │ +   * @param jpegImage buffer containing a JPEG source image or tables-only
│ │ +   * datastream.  (The size of the JPEG image or datastream is assumed to be
│ │ +   * the length of the array.)  This buffer is not modified.
│ │     */
│ │    public TJDecompressor(byte[] jpegImage) throws TJException {
│ │      init();
│ │      setSourceImage(jpegImage, jpegImage.length);
│ │    }
│ │  
│ │    /**
│ │     * Create a TurboJPEG decompressor instance and associate the JPEG source
│ │ -   * image of length <code>imageSize</code> bytes stored in
│ │ -   * <code>jpegImage</code> with the newly created instance.
│ │ +   * image or "abbreviated table specification" (AKA "tables-only") datastream
│ │ +   * of length <code>imageSize</code> bytes stored in <code>jpegImage</code>
│ │ +   * with the newly created instance.
│ │     *
│ │ -   * @param jpegImage JPEG image buffer.  This buffer is not modified.
│ │ +   * @param jpegImage buffer containing a JPEG source image or tables-only
│ │ +   * datastream.  This buffer is not modified.
│ │     *
│ │ -   * @param imageSize size of the JPEG image (in bytes)
│ │ +   * @param imageSize size of the JPEG source image or tables-only datastream
│ │ +   * (in bytes)
│ │     */
│ │    public TJDecompressor(byte[] jpegImage, int imageSize) throws TJException {
│ │      init();
│ │      setSourceImage(jpegImage, imageSize);
│ │    }
│ │  
│ │    /**
│ │ -   * Create a TurboJPEG decompressor instance and associate the YUV planar
│ │ +   * Create a TurboJPEG decompressor instance and associate the planar YUV
│ │     * source image stored in <code>yuvImage</code> with the newly created
│ │     * instance.
│ │     *
│ │ -   * @param yuvImage {@link YUVImage} instance containing a YUV planar
│ │ +   * @param yuvImage {@link YUVImage} instance containing a planar YUV source
│ │     * image to be decoded.  This image is not modified.
│ │     */
│ │    @SuppressWarnings("checkstyle:HiddenField")
│ │    public TJDecompressor(YUVImage yuvImage) throws TJException {
│ │      init();
│ │      setSourceImage(yuvImage);
│ │    }
│ │  
│ │    /**
│ │     * Associate the JPEG image or "abbreviated table specification" (AKA
│ │     * "tables-only") datastream of length <code>imageSize</code> bytes stored in
│ │     * <code>jpegImage</code> with this decompressor instance.  If
│ │     * <code>jpegImage</code> contains a JPEG image, then this image will be used
│ │ -   * as the source image for subsequent decompress operations.  Passing a
│ │ +   * as the source image for subsequent decompression operations.  Passing a
│ │     * tables-only datastream to this method primes the decompressor with
│ │     * quantization and Huffman tables that can be used when decompressing
│ │     * subsequent "abbreviated image" datastreams.  This is useful, for instance,
│ │     * when decompressing video streams in which all frames share the same
│ │     * quantization and Huffman tables.
│ │     *
│ │ -   * @param jpegImage buffer containing a JPEG image or an "abbreviated table
│ │ -   * specification" (AKA "tables-only") datastream.  This buffer is not
│ │ -   * modified.
│ │ +   * @param jpegImage buffer containing a JPEG source image or tables-only
│ │ +   * datastream.  This buffer is not modified.
│ │     *
│ │ -   * @param imageSize size of the JPEG image (in bytes)
│ │ +   * @param imageSize size of the JPEG source image or tables-only datastream
│ │ +   * (in bytes)
│ │     */
│ │    public void setSourceImage(byte[] jpegImage, int imageSize)
│ │                               throws TJException {
│ │      if (jpegImage == null || imageSize < 1)
│ │        throw new IllegalArgumentException("Invalid argument in setSourceImage()");
│ │      jpegBuf = jpegImage;
│ │      jpegBufSize = imageSize;
│ │ @@ -123,20 +129,20 @@
│ │    @Deprecated
│ │    public void setJPEGImage(byte[] jpegImage, int imageSize)
│ │                             throws TJException {
│ │      setSourceImage(jpegImage, imageSize);
│ │    }
│ │  
│ │    /**
│ │ -   * Associate the specified YUV planar source image with this decompressor
│ │ -   * instance.  Subsequent decompress operations will decode this image into an
│ │ -   * RGB or grayscale destination image.
│ │ +   * Associate the specified planar YUV source image with this decompressor
│ │ +   * instance.  Subsequent decompression operations will decode this image into
│ │ +   * a packed-pixel RGB or grayscale destination image.
│ │     *
│ │ -   * @param srcImage {@link YUVImage} instance containing a YUV planar image to
│ │ -   * be decoded.  This image is not modified.
│ │ +   * @param srcImage {@link YUVImage} instance containing a planar YUV source
│ │ +   * image to be decoded.  This image is not modified.
│ │     */
│ │    public void setSourceImage(YUVImage srcImage) {
│ │      if (srcImage == null)
│ │        throw new IllegalArgumentException("Invalid argument in setSourceImage()");
│ │      yuvImage = srcImage;
│ │      jpegBuf = null;
│ │      jpegBufSize = 0;
│ │ @@ -206,17 +212,17 @@
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      if (jpegColorspace >= TJ.NUMCS)
│ │        throw new IllegalStateException("JPEG header information is invalid");
│ │      return jpegColorspace;
│ │    }
│ │  
│ │    /**
│ │ -   * Returns the JPEG image buffer associated with this decompressor instance.
│ │ +   * Returns the JPEG buffer associated with this decompressor instance.
│ │     *
│ │ -   * @return the JPEG image buffer associated with this decompressor instance.
│ │ +   * @return the JPEG buffer associated with this decompressor instance.
│ │     */
│ │    public byte[] getJPEGBuf() {
│ │      if (jpegBuf == null)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      return jpegBuf;
│ │    }
│ │  
│ │ @@ -235,22 +241,22 @@
│ │  
│ │    /**
│ │     * Returns the width of the largest scaled-down image that the TurboJPEG
│ │     * decompressor can generate without exceeding the desired image width and
│ │     * height.
│ │     *
│ │     * @param desiredWidth desired width (in pixels) of the decompressed image.
│ │ -   * Setting this to 0 is the same as setting it to the width of the JPEG image
│ │ -   * (in other words, the width will not be considered when determining the
│ │ -   * scaled image size.)
│ │ +   * Setting this to 0 is the same as setting it to the width of the JPEG
│ │ +   * image.  (In other words, the width will not be considered when determining
│ │ +   * the scaled image size.)
│ │     *
│ │     * @param desiredHeight desired height (in pixels) of the decompressed image.
│ │     * Setting this to 0 is the same as setting it to the height of the JPEG
│ │ -   * image (in other words, the height will not be considered when determining
│ │ -   * the scaled image size.)
│ │ +   * image.  (In other words, the height will not be considered when
│ │ +   * determining the scaled image size.)
│ │     *
│ │     * @return the width of the largest scaled-down image that the TurboJPEG
│ │     * decompressor can generate without exceeding the desired image width and
│ │     * height.
│ │     */
│ │    public int getScaledWidth(int desiredWidth, int desiredHeight) {
│ │      if (jpegWidth < 1 || jpegHeight < 1)
│ │ @@ -276,22 +282,22 @@
│ │  
│ │    /**
│ │     * Returns the height of the largest scaled-down image that the TurboJPEG
│ │     * decompressor can generate without exceeding the desired image width and
│ │     * height.
│ │     *
│ │     * @param desiredWidth desired width (in pixels) of the decompressed image.
│ │ -   * Setting this to 0 is the same as setting it to the width of the JPEG image
│ │ -   * (in other words, the width will not be considered when determining the
│ │ -   * scaled image size.)
│ │ +   * Setting this to 0 is the same as setting it to the width of the JPEG
│ │ +   * image.  (In other words, the width will not be considered when determining
│ │ +   * the scaled image size.)
│ │     *
│ │     * @param desiredHeight desired height (in pixels) of the decompressed image.
│ │     * Setting this to 0 is the same as setting it to the height of the JPEG
│ │ -   * image (in other words, the height will not be considered when determining
│ │ -   * the scaled image size.)
│ │ +   * image.  (In other words, the height will not be considered when
│ │ +   * determining the scaled image size.)
│ │     *
│ │     * @return the height of the largest scaled-down image that the TurboJPEG
│ │     * decompressor can generate without exceeding the desired image width and
│ │     * height.
│ │     */
│ │    public int getScaledHeight(int desiredWidth, int desiredHeight) {
│ │      if (jpegWidth < 1 || jpegHeight < 1)
│ │ @@ -312,86 +318,88 @@
│ │      }
│ │      if (scaledWidth > desiredWidth || scaledHeight > desiredHeight)
│ │        throw new IllegalArgumentException("Could not scale down to desired image dimensions");
│ │      return scaledHeight;
│ │    }
│ │  
│ │    /**
│ │ -   * Decompress the JPEG source image or decode the YUV source image associated
│ │ -   * with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ -   * to the given destination buffer.
│ │ +   * Decompress the JPEG source image or decode the planar YUV source image
│ │ +   * associated with this decompressor instance and output a packed-pixel
│ │ +   * grayscale, RGB, or CMYK image to the given destination buffer.
│ │     * <p>
│ │ -   * NOTE: The output image is fully recoverable if this method throws a
│ │ +   * NOTE: The destination image is fully recoverable if this method throws a
│ │     * non-fatal {@link TJException} (unless
│ │     * {@link TJ#FLAG_STOPONWARNING TJ.FLAG_STOPONWARNING} is specified.)
│ │     *
│ │ -   * @param dstBuf buffer that will receive the decompressed/decoded image.
│ │ -   * If the source image is a JPEG image, then this buffer should normally be
│ │ -   * <code>pitch * scaledHeight</code> bytes in size, where
│ │ -   * <code>scaledHeight</code> can be determined by calling <code>
│ │ -   * scalingFactor.{@link TJScalingFactor#getScaled getScaled}(jpegHeight)
│ │ -   * </code> with one of the scaling factors returned from {@link
│ │ -   * TJ#getScalingFactors} or by calling {@link #getScaledHeight}.  If the
│ │ -   * source image is a YUV image, then this buffer should normally be
│ │ -   * <code>pitch * height</code> bytes in size, where <code>height</code> is
│ │ -   * the height of the YUV image.  However, the buffer may also be larger than
│ │ -   * the dimensions of the source image, in which case the <code>x</code>,
│ │ -   * <code>y</code>, and <code>pitch</code> parameters can be used to specify
│ │ -   * the region into which the source image should be decompressed/decoded.
│ │ +   * @param dstBuf buffer that will receive the packed-pixel
│ │ +   * decompressed/decoded image.  If the source image is a JPEG image, then
│ │ +   * this buffer should normally be <code>pitch * scaledHeight</code> bytes in
│ │ +   * size, where <code>scaledHeight</code> can be determined by calling
│ │ +   * <code>scalingFactor.</code>{@link TJScalingFactor#getScaled getScaled}<code>(jpegHeight)</code>
│ │ +   * with one of the scaling factors returned from {@link TJ#getScalingFactors}
│ │ +   * or by calling {@link #getScaledHeight}.  If the source image is a YUV
│ │ +   * image, then this buffer should normally be <code>pitch * height</code>
│ │ +   * bytes in size, where <code>height</code> is the height of the YUV image.
│ │ +   * However, the buffer may also be larger than the dimensions of the source
│ │ +   * image, in which case the <code>x</code>, <code>y</code>, and
│ │ +   * <code>pitch</code> parameters can be used to specify the region into which
│ │ +   * the source image should be decompressed/decoded.
│ │     *
│ │     * @param x x offset (in pixels) of the region in the destination image into
│ │     * which the source image should be decompressed/decoded
│ │     *
│ │     * @param y y offset (in pixels) of the region in the destination image into
│ │     * which the source image should be decompressed/decoded
│ │     *
│ │     * @param desiredWidth If the source image is a JPEG image, then this
│ │     * specifies the desired width (in pixels) of the decompressed image (or
│ │     * image region.)  If the desired destination image dimensions are different
│ │     * than the source image dimensions, then TurboJPEG will use scaling in the
│ │     * JPEG decompressor to generate the largest possible image that will fit
│ │     * within the desired dimensions.  Setting this to 0 is the same as setting
│ │ -   * it to the width of the JPEG image (in other words, the width will not be
│ │ +   * it to the width of the JPEG image.  (In other words, the width will not be
│ │     * considered when determining the scaled image size.)  This parameter is
│ │     * ignored if the source image is a YUV image.
│ │     *
│ │ -   * @param pitch bytes per line of the destination image.  Normally, this
│ │ -   * should be set to <code>scaledWidth * TJ.pixelSize(pixelFormat)</code> if
│ │ -   * the destination image is unpadded, but you can use this to, for instance,
│ │ -   * pad each line of the destination image to a 4-byte boundary or to
│ │ -   * decompress/decode the source image into a region of a larger image.  NOTE:
│ │ -   * if the source image is a JPEG image, then <code>scaledWidth</code> can be
│ │ -   * determined by calling <code>
│ │ -   * scalingFactor.{@link TJScalingFactor#getScaled getScaled}(jpegWidth)
│ │ -   * </code> or by calling {@link #getScaledWidth}.  If the source image is a
│ │ -   * YUV image, then <code>scaledWidth</code> is the width of the YUV image.
│ │ +   * @param pitch bytes per row in the destination image.  Normally this should
│ │ +   * be set to <code>scaledWidth *
│ │ +   * </code>{@link TJ#getPixelSize TJ.getPixelSize}<code>(pixelFormat)</code>,
│ │ +   * if the destination image will be unpadded.  However, you can use this to,
│ │ +   * for instance, pad each row of the destination image to the nearest
│ │ +   * multiple of 4 bytes or to decompress/decode the source image into a region
│ │ +   * of a larger image.  NOTE: if the source image is a JPEG image, then
│ │ +   * <code>scaledWidth</code> can be determined by calling
│ │ +   * <code>scalingFactor.</code>{@link TJScalingFactor#getScaled getScaled}<code>(jpegWidth)</code>
│ │ +   * or by calling {@link #getScaledWidth}.  If the source image is a YUV
│ │ +   * image, then <code>scaledWidth</code> is the width of the YUV image.
│ │     * Setting this parameter to 0 is the equivalent of setting it to
│ │ -   * <code>scaledWidth * TJ.pixelSize(pixelFormat)</code>.
│ │ +   * <code>scaledWidth *
│ │ +   * </code>{@link TJ#getPixelSize TJ.getPixelSize}<code>(pixelFormat)</code>.
│ │     *
│ │     * @param desiredHeight If the source image is a JPEG image, then this
│ │     * specifies the desired height (in pixels) of the decompressed image (or
│ │     * image region.)  If the desired destination image dimensions are different
│ │     * than the source image dimensions, then TurboJPEG will use scaling in the
│ │     * JPEG decompressor to generate the largest possible image that will fit
│ │     * within the desired dimensions.  Setting this to 0 is the same as setting
│ │ -   * it to the height of the JPEG image (in other words, the height will not be
│ │ -   * considered when determining the scaled image size.)  This parameter is
│ │ +   * it to the height of the JPEG image.  (In other words, the height will not
│ │ +   * be considered when determining the scaled image size.)  This parameter is
│ │     * ignored if the source image is a YUV image.
│ │     *
│ │     * @param pixelFormat pixel format of the decompressed/decoded image (one of
│ │     * {@link TJ#PF_RGB TJ.PF_*})
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     */
│ │    public void decompress(byte[] dstBuf, int x, int y, int desiredWidth,
│ │                           int pitch, int desiredHeight, int pixelFormat,
│ │                           int flags) throws TJException {
│ │      if (jpegBuf == null && yuvImage == null)
│ │ -      throw new IllegalStateException(NO_ASSOC_ERROR);
│ │ +      throw new IllegalStateException("No source image is associated with this instance");
│ │      if (dstBuf == null || x < 0 || y < 0 || pitch < 0 ||
│ │          (yuvImage != null && (desiredWidth < 0 || desiredHeight < 0)) ||
│ │          pixelFormat < 0 || pixelFormat >= TJ.NUMPF || flags < 0)
│ │        throw new IllegalArgumentException("Invalid argument in decompress()");
│ │      if (yuvImage != null)
│ │        decodeYUV(yuvImage.getPlanes(), yuvImage.getOffsets(),
│ │                  yuvImage.getStrides(), yuvImage.getSubsamp(), dstBuf, x, y,
│ │ @@ -417,16 +425,17 @@
│ │                           int desiredHeight, int pixelFormat, int flags)
│ │                           throws TJException {
│ │      decompress(dstBuf, 0, 0, desiredWidth, pitch, desiredHeight, pixelFormat,
│ │                 flags);
│ │    }
│ │  
│ │    /**
│ │ -   * Decompress the JPEG source image associated with this decompressor
│ │ -   * instance and return a buffer containing the decompressed image.
│ │ +   * Decompress the JPEG source image or decode the planar YUV source image
│ │ +   * associated with this decompressor instance and return a buffer containing
│ │ +   * the packed-pixel decompressed image.
│ │     *
│ │     * @param desiredWidth see
│ │     * {@link #decompress(byte[], int, int, int, int, int, int, int)}
│ │     * for description
│ │     *
│ │     * @param pitch see
│ │     * {@link #decompress(byte[], int, int, int, int, int, int, int)}
│ │ @@ -438,15 +447,15 @@
│ │     *
│ │     * @param pixelFormat pixel format of the decompressed image (one of
│ │     * {@link TJ#PF_RGB TJ.PF_*})
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │ -   * @return a buffer containing the decompressed image.
│ │ +   * @return a buffer containing the packed-pixel decompressed image.
│ │     */
│ │    public byte[] decompress(int desiredWidth, int pitch, int desiredHeight,
│ │                             int pixelFormat, int flags) throws TJException {
│ │      if (pitch < 0 ||
│ │          (yuvImage == null && (desiredWidth < 0 || desiredHeight < 0)) ||
│ │          pixelFormat < 0 || pixelFormat >= TJ.NUMPF || flags < 0)
│ │        throw new IllegalArgumentException("Invalid argument in decompress()");
│ │ @@ -458,30 +467,30 @@
│ │      byte[] buf = new byte[pitch * scaledHeight];
│ │      decompress(buf, desiredWidth, pitch, desiredHeight, pixelFormat, flags);
│ │      return buf;
│ │    }
│ │  
│ │    /**
│ │     * Decompress the JPEG source image associated with this decompressor
│ │ -   * instance into a YUV planar image and store it in the given
│ │ -   * <code>YUVImage</code> instance.  This method performs JPEG decompression
│ │ -   * but leaves out the color conversion step, so a planar YUV image is
│ │ -   * generated instead of an RGB or grayscale image.  This method cannot be
│ │ -   * used to decompress JPEG source images with the CMYK or YCCK colorspace.
│ │ +   * instance into a planar YUV image and store it in the given
│ │ +   * {@link YUVImage} instance.  This method performs JPEG decompression but
│ │ +   * leaves out the color conversion step, so a planar YUV image is generated
│ │ +   * instead of a packed-pixel image.  This method cannot be used to decompress
│ │ +   * JPEG source images with the CMYK or YCCK colorspace.
│ │     * <p>
│ │ -   * NOTE: The YUV planar output image is fully recoverable if this method
│ │ +   * NOTE: The planar YUV destination image is fully recoverable if this method
│ │     * throws a non-fatal {@link TJException} (unless
│ │     * {@link TJ#FLAG_STOPONWARNING TJ.FLAG_STOPONWARNING} is specified.)
│ │     *
│ │ -   * @param dstImage {@link YUVImage} instance that will receive the YUV planar
│ │ -   * image.  The level of subsampling specified in this <code>YUVImage</code>
│ │ -   * instance must match that of the JPEG image, and the width and height
│ │ -   * specified in the <code>YUVImage</code> instance must match one of the
│ │ -   * scaled image sizes that TurboJPEG is capable of generating from the JPEG
│ │ -   * source image.
│ │ +   * @param dstImage {@link YUVImage} instance that will receive the planar YUV
│ │ +   * decompressed image.  The level of subsampling specified in this
│ │ +   * {@link YUVImage} instance must match that of the JPEG image, and the width
│ │ +   * and height specified in the {@link YUVImage} instance must match one of
│ │ +   * the scaled image sizes that the decompressor is capable of generating from
│ │ +   * the JPEG source image.
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     */
│ │    public void decompressToYUV(YUVImage dstImage, int flags)
│ │                                throws TJException {
│ │      if (jpegBuf == null)
│ │ @@ -490,15 +499,15 @@
│ │        throw new IllegalArgumentException("Invalid argument in decompressToYUV()");
│ │      int scaledWidth = getScaledWidth(dstImage.getWidth(),
│ │                                       dstImage.getHeight());
│ │      int scaledHeight = getScaledHeight(dstImage.getWidth(),
│ │                                         dstImage.getHeight());
│ │      if (scaledWidth != dstImage.getWidth() ||
│ │          scaledHeight != dstImage.getHeight())
│ │ -      throw new IllegalArgumentException("YUVImage dimensions do not match one of the scaled image sizes that TurboJPEG is capable of generating.");
│ │ +      throw new IllegalArgumentException("YUVImage dimensions do not match one of the scaled image sizes that the decompressor is capable of generating.");
│ │      if (jpegSubsamp != dstImage.getSubsamp())
│ │        throw new IllegalArgumentException("YUVImage subsampling level does not match that of the JPEG image");
│ │  
│ │      decompressToYUV(jpegBuf, jpegBufSize, dstImage.getPlanes(),
│ │                      dstImage.getOffsets(), dstImage.getWidth(),
│ │                      dstImage.getStrides(), dstImage.getHeight(), flags);
│ │    }
│ │ @@ -513,48 +522,49 @@
│ │                                          jpegSubsamp);
│ │      decompressToYUV(dstYUVImage, flags);
│ │    }
│ │  
│ │    /**
│ │     * Decompress the JPEG source image associated with this decompressor
│ │     * instance into a set of Y, U (Cb), and V (Cr) image planes and return a
│ │ -   * <code>YUVImage</code> instance containing the decompressed image planes.
│ │ -   * This method performs JPEG decompression but leaves out the color
│ │ -   * conversion step, so a planar YUV image is generated instead of an RGB or
│ │ -   * grayscale image.  This method cannot be used to decompress JPEG source
│ │ -   * images with the CMYK or YCCK colorspace.
│ │ +   * {@link YUVImage} instance containing the decompressed image planes.  This
│ │ +   * method performs JPEG decompression but leaves out the color conversion
│ │ +   * step, so a planar YUV image is generated instead of a packed-pixel image.
│ │ +   * This method cannot be used to decompress JPEG source images with the CMYK
│ │ +   * or YCCK colorspace.
│ │     *
│ │     * @param desiredWidth desired width (in pixels) of the YUV image.  If the
│ │     * desired image dimensions are different than the dimensions of the JPEG
│ │     * image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │     * decompressor to generate the largest possible image that will fit within
│ │     * the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ -   * the width of the JPEG image (in other words, the width will not be
│ │ +   * the width of the JPEG image.  (In other words, the width will not be
│ │     * considered when determining the scaled image size.)
│ │     *
│ │     * @param strides an array of integers, each specifying the number of bytes
│ │ -   * per line in the corresponding plane of the output image.  Setting the
│ │ -   * stride for any plane to 0 is the same as setting it to the scaled
│ │ -   * component width of the plane.  If <tt>strides</tt> is NULL, then the
│ │ -   * strides for all planes will be set to their respective scaled component
│ │ -   * widths.  You can adjust the strides in order to add an arbitrary amount of
│ │ -   * line padding to each plane.
│ │ +   * per row in the corresponding plane of the YUV image.  Setting the stride
│ │ +   * for any plane to 0 is the same as setting it to the scaled plane width
│ │ +   * (see {@link YUVImage}.)  If <code>strides</code> is null, then the strides
│ │ +   * for all planes will be set to their respective scaled plane widths.  You
│ │ +   * can adjust the strides in order to add an arbitrary amount of row padding
│ │ +   * to each plane.
│ │     *
│ │     * @param desiredHeight desired height (in pixels) of the YUV image.  If the
│ │     * desired image dimensions are different than the dimensions of the JPEG
│ │     * image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │     * decompressor to generate the largest possible image that will fit within
│ │     * the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ -   * the height of the JPEG image (in other words, the height will not be
│ │ +   * the height of the JPEG image.  (In other words, the height will not be
│ │     * considered when determining the scaled image size.)
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │ -   * @return a YUV planar image.
│ │ +   * @return a {@link YUVImage} instance containing the decompressed image
│ │ +   * planes
│ │     */
│ │    public YUVImage decompressToYUV(int desiredWidth, int[] strides,
│ │                                    int desiredHeight,
│ │                                    int flags) throws TJException {
│ │      if (flags < 0)
│ │        throw new IllegalArgumentException("Invalid argument in decompressToYUV()");
│ │      if (jpegWidth < 1 || jpegHeight < 1 || jpegSubsamp < 0)
│ │ @@ -570,60 +580,61 @@
│ │                                          jpegSubsamp);
│ │      decompressToYUV(dstYUVImage, flags);
│ │      return dstYUVImage;
│ │    }
│ │  
│ │    /**
│ │     * Decompress the JPEG source image associated with this decompressor
│ │ -   * instance into a unified YUV planar image buffer and return a
│ │ -   * <code>YUVImage</code> instance containing the decompressed image.  This
│ │ -   * method performs JPEG decompression but leaves out the color conversion
│ │ -   * step, so a planar YUV image is generated instead of an RGB or grayscale
│ │ -   * image.  This method cannot be used to decompress JPEG source images with
│ │ -   * the CMYK or YCCK colorspace.
│ │ +   * instance into a unified planar YUV image and return a {@link YUVImage}
│ │ +   * instance containing the decompressed image.  This method performs JPEG
│ │ +   * decompression but leaves out the color conversion step, so a planar YUV
│ │ +   * image is generated instead of a packed-pixel image.  This method cannot be
│ │ +   * used to decompress JPEG source images with the CMYK or YCCK colorspace.
│ │     *
│ │     * @param desiredWidth desired width (in pixels) of the YUV image.  If the
│ │     * desired image dimensions are different than the dimensions of the JPEG
│ │     * image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │     * decompressor to generate the largest possible image that will fit within
│ │     * the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ -   * the width of the JPEG image (in other words, the width will not be
│ │ +   * the width of the JPEG image.  (In other words, the width will not be
│ │     * considered when determining the scaled image size.)
│ │     *
│ │ -   * @param pad the width of each line in each plane of the YUV image will be
│ │ -   * padded to the nearest multiple of this number of bytes (must be a power of
│ │ -   * 2.)
│ │ +   * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ +   * 2.)  Setting this parameter to n will cause each row in each plane of the
│ │ +   * YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.)
│ │     *
│ │     * @param desiredHeight desired height (in pixels) of the YUV image.  If the
│ │     * desired image dimensions are different than the dimensions of the JPEG
│ │     * image being decompressed, then TurboJPEG will use scaling in the JPEG
│ │     * decompressor to generate the largest possible image that will fit within
│ │     * the desired dimensions.  Setting this to 0 is the same as setting it to
│ │ -   * the height of the JPEG image (in other words, the height will not be
│ │ +   * the height of the JPEG image.  (In other words, the height will not be
│ │     * considered when determining the scaled image size.)
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │ -   * @return a YUV planar image.
│ │ +   * @return a {@link YUVImage} instance containing the unified planar YUV
│ │ +   * decompressed image
│ │     */
│ │ -  public YUVImage decompressToYUV(int desiredWidth, int pad, int desiredHeight,
│ │ -                                  int flags) throws TJException {
│ │ +  public YUVImage decompressToYUV(int desiredWidth, int align,
│ │ +                                  int desiredHeight, int flags)
│ │ +                                  throws TJException {
│ │      if (flags < 0)
│ │        throw new IllegalArgumentException("Invalid argument in decompressToYUV()");
│ │      if (jpegWidth < 1 || jpegHeight < 1 || jpegSubsamp < 0)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      if (jpegSubsamp >= TJ.NUMSAMP)
│ │        throw new IllegalStateException("JPEG header information is invalid");
│ │      if (yuvImage != null)
│ │        throw new IllegalStateException("Source image is the wrong type");
│ │  
│ │      int scaledWidth = getScaledWidth(desiredWidth, desiredHeight);
│ │      int scaledHeight = getScaledHeight(desiredWidth, desiredHeight);
│ │ -    YUVImage dstYUVImage = new YUVImage(scaledWidth, pad, scaledHeight,
│ │ +    YUVImage dstYUVImage = new YUVImage(scaledWidth, align, scaledHeight,
│ │                                          jpegSubsamp);
│ │      decompressToYUV(dstYUVImage, flags);
│ │      return dstYUVImage;
│ │    }
│ │  
│ │    /**
│ │     * @deprecated Use {@link #decompressToYUV(int, int, int, int)} instead.
│ │ @@ -633,84 +644,84 @@
│ │    public byte[] decompressToYUV(int flags) throws TJException {
│ │      YUVImage dstYUVImage = new YUVImage(jpegWidth, 4, jpegHeight, jpegSubsamp);
│ │      decompressToYUV(dstYUVImage, flags);
│ │      return dstYUVImage.getBuf();
│ │    }
│ │  
│ │    /**
│ │ -   * Decompress the JPEG source image or decode the YUV source image associated
│ │ -   * with this decompressor instance and output a grayscale, RGB, or CMYK image
│ │ -   * to the given destination buffer.
│ │ +   * Decompress the JPEG source image or decode the planar YUV source image
│ │ +   * associated with this decompressor instance and output a packed-pixel
│ │ +   * grayscale, RGB, or CMYK image to the given destination buffer.
│ │     * <p>
│ │ -   * NOTE: The output image is fully recoverable if this method throws a
│ │ +   * NOTE: The destination image is fully recoverable if this method throws a
│ │     * non-fatal {@link TJException} (unless
│ │     * {@link TJ#FLAG_STOPONWARNING TJ.FLAG_STOPONWARNING} is specified.)
│ │     *
│ │ -   * @param dstBuf buffer that will receive the decompressed/decoded image.
│ │ -   * If the source image is a JPEG image, then this buffer should normally be
│ │ -   * <code>stride * scaledHeight</code> pixels in size, where
│ │ -   * <code>scaledHeight</code> can be determined by calling <code>
│ │ -   * scalingFactor.{@link TJScalingFactor#getScaled getScaled}(jpegHeight)
│ │ -   * </code> with one of the scaling factors returned from {@link
│ │ -   * TJ#getScalingFactors} or by calling {@link #getScaledHeight}.  If the
│ │ -   * source image is a YUV image, then this buffer should normally be
│ │ -   * <code>stride * height</code> pixels in size, where <code>height</code> is
│ │ -   * the height of the YUV image.  However, the buffer may also be larger than
│ │ -   * the dimensions of the JPEG image, in which case the <code>x</code>,
│ │ -   * <code>y</code>, and <code>stride</code> parameters can be used to specify
│ │ -   * the region into which the source image should be decompressed.
│ │ +   * @param dstBuf buffer that will receive the packed-pixel
│ │ +   * decompressed/decoded image.  If the source image is a JPEG image, then
│ │ +   * this buffer should normally be <code>stride * scaledHeight</code> pixels
│ │ +   * in size, where <code>scaledHeight</code> can be determined by calling
│ │ +   * <code>scalingFactor.</code>{@link TJScalingFactor#getScaled getScaled}<code>(jpegHeight)</code>
│ │ +   * with one of the scaling factors returned from {@link TJ#getScalingFactors}
│ │ +   * or by calling {@link #getScaledHeight}.  If the source image is a YUV
│ │ +   * image, then this buffer should normally be <code>stride * height</code>
│ │ +   * pixels in size, where <code>height</code> is the height of the YUV image.
│ │ +   * However, the buffer may also be larger than the dimensions of the JPEG
│ │ +   * image, in which case the <code>x</code>, <code>y</code>, and
│ │ +   * <code>stride</code> parameters can be used to specify the region into
│ │ +   * which the source image should be decompressed.
│ │     *
│ │     * @param x x offset (in pixels) of the region in the destination image into
│ │     * which the source image should be decompressed/decoded
│ │     *
│ │     * @param y y offset (in pixels) of the region in the destination image into
│ │     * which the source image should be decompressed/decoded
│ │     *
│ │     * @param desiredWidth If the source image is a JPEG image, then this
│ │     * specifies the desired width (in pixels) of the decompressed image (or
│ │     * image region.)  If the desired destination image dimensions are different
│ │     * than the source image dimensions, then TurboJPEG will use scaling in the
│ │     * JPEG decompressor to generate the largest possible image that will fit
│ │     * within the desired dimensions.  Setting this to 0 is the same as setting
│ │ -   * it to the width of the JPEG image (in other words, the width will not be
│ │ +   * it to the width of the JPEG image.  (In other words, the width will not be
│ │     * considered when determining the scaled image size.)  This parameter is
│ │     * ignored if the source image is a YUV image.
│ │     *
│ │ -   * @param stride pixels per line of the destination image.  Normally, this
│ │ +   * @param stride pixels per row in the destination image.  Normally this
│ │     * should be set to <code>scaledWidth</code>, but you can use this to, for
│ │     * instance, decompress the JPEG image into a region of a larger image.
│ │     * NOTE: if the source image is a JPEG image, then <code>scaledWidth</code>
│ │ -   * can be determined by calling <code>
│ │ -   * scalingFactor.{@link TJScalingFactor#getScaled getScaled}(jpegWidth)
│ │ -   * </code> or by calling {@link #getScaledWidth}.  If the source image is a
│ │ -   * YUV image, then <code>scaledWidth</code> is the width of the YUV image.
│ │ +   * can be determined by calling
│ │ +   * <code>scalingFactor.</code>{@link TJScalingFactor#getScaled getScaled}<code>(jpegWidth)</code>
│ │ +   * or by calling {@link #getScaledWidth}.  If the source image is a YUV
│ │ +   * image, then <code>scaledWidth</code> is the width of the YUV image.
│ │     * Setting this parameter to 0 is the equivalent of setting it to
│ │     * <code>scaledWidth</code>.
│ │     *
│ │     * @param desiredHeight If the source image is a JPEG image, then this
│ │     * specifies the desired height (in pixels) of the decompressed image (or
│ │     * image region.)  If the desired destination image dimensions are different
│ │     * than the source image dimensions, then TurboJPEG will use scaling in the
│ │     * JPEG decompressor to generate the largest possible image that will fit
│ │     * within the desired dimensions.  Setting this to 0 is the same as setting
│ │ -   * it to the height of the JPEG image (in other words, the height will not be
│ │ -   * considered when determining the scaled image size.)  This parameter is
│ │ +   * it to the height of the JPEG image.  (In other words, the height will not
│ │ +   * be considered when determining the scaled image size.)  This parameter is
│ │     * ignored if the source image is a YUV image.
│ │     *
│ │     * @param pixelFormat pixel format of the decompressed image (one of
│ │     * {@link TJ#PF_RGB TJ.PF_*})
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     */
│ │    public void decompress(int[] dstBuf, int x, int y, int desiredWidth,
│ │                           int stride, int desiredHeight, int pixelFormat,
│ │                           int flags) throws TJException {
│ │      if (jpegBuf == null && yuvImage == null)
│ │ -      throw new IllegalStateException(NO_ASSOC_ERROR);
│ │ +      throw new IllegalStateException("No source image is associated with this instance");
│ │      if (dstBuf == null || x < 0 || y < 0 || stride < 0 ||
│ │          (yuvImage != null && (desiredWidth < 0 || desiredHeight < 0)) ||
│ │          pixelFormat < 0 || pixelFormat >= TJ.NUMPF || flags < 0)
│ │        throw new IllegalArgumentException("Invalid argument in decompress()");
│ │      if (yuvImage != null)
│ │        decodeYUV(yuvImage.getPlanes(), yuvImage.getOffsets(),
│ │                  yuvImage.getStrides(), yuvImage.getSubsamp(), dstBuf, x, y,
│ │ @@ -718,29 +729,30 @@
│ │                  flags);
│ │      else
│ │        decompress(jpegBuf, jpegBufSize, dstBuf, x, y, desiredWidth, stride,
│ │                   desiredHeight, pixelFormat, flags);
│ │    }
│ │  
│ │    /**
│ │ -   * Decompress the JPEG source image or decode the YUV source image associated
│ │ -   * with this decompressor instance and output a decompressed/decoded image to
│ │ -   * the given <code>BufferedImage</code> instance.
│ │ +   * Decompress the JPEG source image or decode the planar YUV source image
│ │ +   * associated with this decompressor instance and output a packed-pixel
│ │ +   * decompressed/decoded image to the given <code>BufferedImage</code>
│ │ +   * instance.
│ │     * <p>
│ │ -   * NOTE: The output image is fully recoverable if this method throws a
│ │ +   * NOTE: The destination image is fully recoverable if this method throws a
│ │     * non-fatal {@link TJException} (unless
│ │     * {@link TJ#FLAG_STOPONWARNING TJ.FLAG_STOPONWARNING} is specified.)
│ │     *
│ │     * @param dstImage a <code>BufferedImage</code> instance that will receive
│ │ -   * the decompressed/decoded image.  If the source image is a JPEG image, then
│ │ -   * the width and height of the <code>BufferedImage</code> instance must match
│ │ -   * one of the scaled image sizes that TurboJPEG is capable of generating from
│ │ -   * the JPEG image.  If the source image is a YUV image, then the width and
│ │ -   * height of the <code>BufferedImage</code> instance must match the width and
│ │ -   * height of the YUV image.
│ │ +   * the packed-pixel decompressed/decoded image.  If the source image is a
│ │ +   * JPEG image, then the width and height of the <code>BufferedImage</code>
│ │ +   * instance must match one of the scaled image sizes that the decompressor is
│ │ +   * capable of generating from the JPEG image.  If the source image is a YUV
│ │ +   * image, then the width and height of the <code>BufferedImage</code>
│ │ +   * instance must match the width and height of the YUV image.
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     */
│ │    public void decompress(BufferedImage dstImage, int flags)
│ │                           throws TJException {
│ │      if (dstImage == null || flags < 0)
│ │ @@ -755,15 +767,15 @@
│ │          throw new IllegalArgumentException("BufferedImage dimensions do not match the dimensions of the source image.");
│ │        scaledWidth = yuvImage.getWidth();
│ │        scaledHeight = yuvImage.getHeight();
│ │      } else {
│ │        scaledWidth = getScaledWidth(desiredWidth, desiredHeight);
│ │        scaledHeight = getScaledHeight(desiredWidth, desiredHeight);
│ │        if (scaledWidth != desiredWidth || scaledHeight != desiredHeight)
│ │ -        throw new IllegalArgumentException("BufferedImage dimensions do not match one of the scaled image sizes that TurboJPEG is capable of generating.");
│ │ +        throw new IllegalArgumentException("BufferedImage dimensions do not match one of the scaled image sizes that the decompressor is capable of generating.");
│ │      }
│ │      int pixelFormat;  boolean intPixels = false;
│ │      if (byteOrder == null)
│ │        byteOrder = ByteOrder.nativeOrder();
│ │      switch (dstImage.getType()) {
│ │      case BufferedImage.TYPE_3BYTE_BGR:
│ │        pixelFormat = TJ.PF_BGR;  break;
│ │ @@ -823,17 +835,18 @@
│ │        byte[] buf = db.getData();
│ │        decompress(buf, 0, 0, scaledWidth, pitch, scaledHeight, pixelFormat,
│ │                   flags);
│ │      }
│ │    }
│ │  
│ │    /**
│ │ -   * Decompress the JPEG source image or decode the YUV source image associated
│ │ -   * with this decompressor instance and return a <code>BufferedImage</code>
│ │ -   * instance containing the decompressed/decoded image.
│ │ +   * Decompress the JPEG source image or decode the planar YUV source image
│ │ +   * associated with this decompressor instance and return a
│ │ +   * <code>BufferedImage</code> instance containing the packed-pixel
│ │ +   * decompressed/decoded image.
│ │     *
│ │     * @param desiredWidth see
│ │     * {@link #decompress(byte[], int, int, int, int, int, int, int)} for
│ │     * description
│ │     *
│ │     * @param desiredHeight see
│ │     * {@link #decompress(byte[], int, int, int, int, int, int, int)} for
│ │ @@ -842,15 +855,15 @@
│ │     * @param bufferedImageType the image type of the <code>BufferedImage</code>
│ │     * instance that will be created (for instance,
│ │     * <code>BufferedImage.TYPE_INT_RGB</code>)
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │ -   * @return a <code>BufferedImage</code> instance containing the
│ │ +   * @return a <code>BufferedImage</code> instance containing the packed-pixel
│ │     * decompressed/decoded image.
│ │     */
│ │    public BufferedImage decompress(int desiredWidth, int desiredHeight,
│ │                                    int bufferedImageType, int flags)
│ │                                    throws TJException {
│ │      if ((yuvImage == null && (desiredWidth < 0 || desiredHeight < 0)) ||
│ │          flags < 0)
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJException.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJException.java
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJLoader-unix.java.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJLoader-unix.java.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJLoader-win.java.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJLoader-win.java.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJScalingFactor.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJScalingFactor.java
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJTransform.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJTransform.java
│ │┄ Files 6% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2011, 2013, 2018 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2011, 2013, 2018, 2023 D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -93,15 +93,15 @@
│ │    /**
│ │     * This option will cause {@link TJTransformer#transform
│ │     * TJTransformer.transform()} to throw an exception if the transform is not
│ │     * perfect.  Lossless transforms operate on MCU blocks, whose size depends on
│ │     * the level of chrominance subsampling used.  If the image's width or height
│ │     * is not evenly divisible by the MCU block size (see {@link TJ#getMCUWidth}
│ │     * and {@link TJ#getMCUHeight}), then there will be partial MCU blocks on the
│ │ -   * right and/or bottom edges.   It is not possible to move these partial MCU
│ │ +   * right and/or bottom edges.  It is not possible to move these partial MCU
│ │     * blocks to the top or left of the image, so any transform that would
│ │     * require that is "imperfect."  If this option is not specified, then any
│ │     * partial MCU blocks that cannot be transformed will be left in place, which
│ │     * will create odd-looking strips on the right or bottom edge of the image.
│ │     */
│ │    public static final int OPT_PERFECT     = 1;
│ │    /**
│ │ @@ -110,38 +110,37 @@
│ │     */
│ │    public static final int OPT_TRIM        = 2;
│ │    /**
│ │     * This option will enable lossless cropping.
│ │     */
│ │    public static final int OPT_CROP        = 4;
│ │    /**
│ │ -   * This option will discard the color data in the input image and produce
│ │ -   * a grayscale output image.
│ │ +   * This option will discard the color data in the source image and produce a
│ │ +   * grayscale destination image.
│ │     */
│ │    public static final int OPT_GRAY        = 8;
│ │    /**
│ │     * This option will prevent {@link TJTransformer#transform
│ │     * TJTransformer.transform()} from outputting a JPEG image for this
│ │     * particular transform.  This can be used in conjunction with a custom
│ │     * filter to capture the transformed DCT coefficients without transcoding
│ │     * them.
│ │     */
│ │    public static final int OPT_NOOUTPUT    = 16;
│ │    /**
│ │ -   * This option will enable progressive entropy coding in the output image
│ │ +   * This option will enable progressive entropy coding in the JPEG image
│ │     * generated by this particular transform.  Progressive entropy coding will
│ │     * generally improve compression relative to baseline entropy coding (the
│ │ -   * default), but it will reduce compression and decompression performance
│ │ -   * considerably.
│ │ +   * default), but it will reduce decompression performance considerably.
│ │     */
│ │    public static final int OPT_PROGRESSIVE = 32;
│ │    /**
│ │     * This option will prevent {@link TJTransformer#transform
│ │     * TJTransformer.transform()} from copying any extra markers (including EXIF
│ │ -   * and ICC profile data) from the source image to the output image.
│ │ +   * and ICC profile data) from the source image to the destination image.
│ │     */
│ │    public static final int OPT_COPYNONE    = 64;
│ │  
│ │  
│ │    /**
│ │     * Create a new lossless transform instance.
│ │     */
│ │ @@ -161,18 +160,18 @@
│ │     * equivalent of setting it to (width of the source JPEG image -
│ │     * <code>x</code>).
│ │     *
│ │     * @param h the height of the cropping region.  Setting this to 0 is the
│ │     * equivalent of setting it to (height of the source JPEG image -
│ │     * <code>y</code>).
│ │     *
│ │ -   * @param op one of the transform operations (<code>OP_*</code>)
│ │ +   * @param op one of the transform operations ({@link #OP_NONE OP_*})
│ │     *
│ │     * @param options the bitwise OR of one or more of the transform options
│ │ -   * (<code>OPT_*</code>)
│ │ +   * ({@link #OPT_PERFECT OPT_*})
│ │     *
│ │     * @param cf an instance of an object that implements the {@link
│ │     * TJCustomFilter} interface, or null if no custom filter is needed
│ │     */
│ │    @SuppressWarnings("checkstyle:HiddenField")
│ │    public TJTransform(int x, int y, int w, int h, int op, int options,
│ │                       TJCustomFilter cf) {
│ │ @@ -186,39 +185,40 @@
│ │     * Create a new lossless transform instance with the given parameters.
│ │     *
│ │     * @param r a <code>Rectangle</code> instance that specifies the cropping
│ │     * region.  See {@link
│ │     * #TJTransform(int, int, int, int, int, int, TJCustomFilter)} for more
│ │     * detail.
│ │     *
│ │ -   * @param op one of the transform operations (<code>OP_*</code>)
│ │ +   * @param op one of the transform operations ({@link #OP_NONE OP_*})
│ │     *
│ │     * @param options the bitwise OR of one or more of the transform options
│ │ -   * (<code>OPT_*</code>)
│ │ +   * ({@link #OPT_PERFECT OPT_*})
│ │     *
│ │     * @param cf an instance of an object that implements the {@link
│ │     * TJCustomFilter} interface, or null if no custom filter is needed
│ │     */
│ │    @SuppressWarnings("checkstyle:HiddenField")
│ │    public TJTransform(Rectangle r, int op, int options,
│ │                       TJCustomFilter cf) {
│ │      super(r);
│ │      this.op = op;
│ │      this.options = options;
│ │      this.cf = cf;
│ │    }
│ │  
│ │    /**
│ │ -   * Transform operation (one of <code>OP_*</code>)
│ │ +   * Transform operation (one of {@link #OP_NONE OP_*})
│ │     */
│ │    @SuppressWarnings("checkstyle:VisibilityModifier")
│ │    public int op = 0;
│ │  
│ │    /**
│ │ -   * Transform options (bitwise OR of one or more of <code>OPT_*</code>)
│ │ +   * Transform options (bitwise OR of one or more of
│ │ +   * {@link #OPT_PERFECT OPT_*})
│ │     */
│ │    @SuppressWarnings("checkstyle:VisibilityModifier")
│ │    public int options = 0;
│ │  
│ │    /**
│ │     * Custom filter instance
│ │     */
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJTransformer.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJTransformer.java
│ │┄ Files 8% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2011, 2013-2015 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2011, 2013-2015, 2023 D. R. Commander.  All Rights Reserved.
│ │   * Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │ @@ -39,81 +39,85 @@
│ │     */
│ │    public TJTransformer() throws TJException {
│ │      init();
│ │    }
│ │  
│ │    /**
│ │     * Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ -   * image stored in <code>jpegImage</code> with the newly created instance.
│ │ +   * source image stored in <code>jpegImage</code> with the newly created
│ │ +   * instance.
│ │     *
│ │ -   * @param jpegImage JPEG image buffer (size of the JPEG image is assumed to
│ │ -   * be the length of the array.)  This buffer is not modified.
│ │ +   * @param jpegImage buffer containing the JPEG source image to transform.
│ │ +   * (The size of the JPEG image is assumed to be the length of the array.)
│ │ +   * This buffer is not modified.
│ │     */
│ │    public TJTransformer(byte[] jpegImage) throws TJException {
│ │      init();
│ │      setSourceImage(jpegImage, jpegImage.length);
│ │    }
│ │  
│ │    /**
│ │     * Create a TurboJPEG lossless transformer instance and associate the JPEG
│ │ -   * image of length <code>imageSize</code> bytes stored in
│ │ +   * source image of length <code>imageSize</code> bytes stored in
│ │     * <code>jpegImage</code> with the newly created instance.
│ │     *
│ │ -   * @param jpegImage JPEG image buffer.  This buffer is not modified.
│ │ +   * @param jpegImage buffer containing the JPEG source image to transform.
│ │ +   * This buffer is not modified.
│ │     *
│ │ -   * @param imageSize size of the JPEG image (in bytes)
│ │ +   * @param imageSize size of the JPEG source image (in bytes)
│ │     */
│ │    public TJTransformer(byte[] jpegImage, int imageSize) throws TJException {
│ │      init();
│ │      setSourceImage(jpegImage, imageSize);
│ │    }
│ │  
│ │    /**
│ │ -   * Losslessly transform the JPEG image associated with this transformer
│ │ -   * instance into one or more JPEG images stored in the given destination
│ │ -   * buffers.  Lossless transforms work by moving the raw coefficients from one
│ │ -   * JPEG image structure to another without altering the values of the
│ │ -   * coefficients.  While this is typically faster than decompressing the
│ │ -   * image, transforming it, and re-compressing it, lossless transforms are not
│ │ -   * free.  Each lossless transform requires reading and performing Huffman
│ │ -   * decoding on all of the coefficients in the source image, regardless of the
│ │ -   * size of the destination image.  Thus, this method provides a means of
│ │ -   * generating multiple transformed images from the same source or of applying
│ │ -   * multiple transformations simultaneously, in order to eliminate the need to
│ │ -   * read the source coefficients multiple times.
│ │ -   *
│ │ -   * @param dstBufs an array of image buffers.  <code>dstbufs[i]</code> will
│ │ -   * receive a JPEG image that has been transformed using the parameters in
│ │ -   * <code>transforms[i]</code>.  Use {@link TJ#bufSize} to determine the
│ │ -   * maximum size for each buffer based on the transformed or cropped width and
│ │ -   * height and the level of subsampling used in the source image.
│ │ +   * Losslessly transform the JPEG source image associated with this
│ │ +   * transformer instance into one or more JPEG images stored in the given
│ │ +   * destination buffers.  Lossless transforms work by moving the raw
│ │ +   * coefficients from one JPEG image structure to another without altering the
│ │ +   * values of the coefficients.  While this is typically faster than
│ │ +   * decompressing the image, transforming it, and re-compressing it, lossless
│ │ +   * transforms are not free.  Each lossless transform requires reading and
│ │ +   * performing Huffman decoding on all of the coefficients in the source
│ │ +   * image, regardless of the size of the destination image.  Thus, this method
│ │ +   * provides a means of generating multiple transformed images from the same
│ │ +   * source or of applying multiple transformations simultaneously, in order to
│ │ +   * eliminate the need to read the source coefficients multiple times.
│ │ +   *
│ │ +   * @param dstBufs an array of JPEG destination buffers.
│ │ +   * <code>dstbufs[i]</code> will receive a JPEG image that has been
│ │ +   * transformed using the parameters in <code>transforms[i]</code>.  Use
│ │ +   * {@link TJ#bufSize} to determine the maximum size for each buffer based on
│ │ +   * the transformed or cropped width and height and the level of subsampling
│ │ +   * used in the source image.
│ │     *
│ │     * @param transforms an array of {@link TJTransform} instances, each of
│ │     * which specifies the transform parameters and/or cropping region for the
│ │ -   * corresponding transformed output image
│ │ +   * corresponding transformed JPEG image
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     */
│ │    public void transform(byte[][] dstBufs, TJTransform[] transforms,
│ │                          int flags) throws TJException {
│ │      if (jpegBuf == null)
│ │        throw new IllegalStateException("JPEG buffer not initialized");
│ │      transformedSizes = transform(jpegBuf, jpegBufSize, dstBufs, transforms,
│ │                                   flags);
│ │    }
│ │  
│ │    /**
│ │ -   * Losslessly transform the JPEG image associated with this transformer
│ │ -   * instance and return an array of {@link TJDecompressor} instances, each of
│ │ -   * which has a transformed JPEG image associated with it.
│ │ +   * Losslessly transform the JPEG source image associated with this
│ │ +   * transformer instance and return an array of {@link TJDecompressor}
│ │ +   * instances, each of which has a transformed JPEG image associated with it.
│ │     *
│ │     * @param transforms an array of {@link TJTransform} instances, each of
│ │     * which specifies the transform parameters and/or cropping region for the
│ │ -   * corresponding transformed output image
│ │ +   * corresponding transformed JPEG image
│ │     *
│ │     * @param flags the bitwise OR of one or more of
│ │     * {@link TJ#FLAG_BOTTOMUP TJ.FLAG_*}
│ │     *
│ │     * @return an array of {@link TJDecompressor} instances, each of
│ │     * which has a transformed JPEG image associated with it.
│ │     */
│ │ @@ -135,18 +139,18 @@
│ │      for (int i = 0; i < transforms.length; i++)
│ │        tjd[i] = new TJDecompressor(dstBufs[i], transformedSizes[i]);
│ │      return tjd;
│ │    }
│ │  
│ │    /**
│ │     * Returns an array containing the sizes of the transformed JPEG images
│ │ -   * generated by the most recent transform operation.
│ │ +   * (in bytes) generated by the most recent transform operation.
│ │     *
│ │     * @return an array containing the sizes of the transformed JPEG images
│ │ -   * generated by the most recent transform operation.
│ │ +   * (in bytes) generated by the most recent transform operation.
│ │     */
│ │    public int[] getTransformedSizes() {
│ │      if (transformedSizes == null)
│ │        throw new IllegalStateException("No image has been transformed yet");
│ │      return transformedSizes;
│ │    }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/YUVImage.java
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/YUVImage.java
│ │┄ Files 5% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2014, 2017 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2014, 2017, 2023 D. R. Commander.  All Rights Reserved.
│ │   * Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │ @@ -26,60 +26,62 @@
│ │   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
│ │   * POSSIBILITY OF SUCH DAMAGE.
│ │   */
│ │  
│ │  package org.libjpegturbo.turbojpeg;
│ │  
│ │  /**
│ │ - * This class encapsulates a YUV planar image and the metadata
│ │ + * This class encapsulates a planar YUV image and the metadata
│ │   * associated with it.  The TurboJPEG API allows both the JPEG compression and
│ │   * decompression pipelines to be split into stages:  YUV encode, compress from
│ │   * YUV, decompress to YUV, and YUV decode.  A <code>YUVImage</code> instance
│ │   * serves as the destination image for YUV encode and decompress-to-YUV
│ │   * operations and as the source image for compress-from-YUV and YUV decode
│ │   * operations.
│ │   * <p>
│ │ - * Technically, the JPEG format uses the YCbCr colorspace (which technically is
│ │ - * not a "colorspace" but rather a "color transform"), but per the convention
│ │ - * of the digital video community, the TurboJPEG API uses "YUV" to refer to an
│ │ - * image format consisting of Y, Cb, and Cr image planes.
│ │ + * Technically, the JPEG format uses the YCbCr colorspace (which is technically
│ │ + * not a colorspace but a color transform), but per the convention of the
│ │ + * digital video community, the TurboJPEG API uses "YUV" to refer to an image
│ │ + * format consisting of Y, Cb, and Cr image planes.
│ │   * <p>
│ │   * Each plane is simply a 2D array of bytes, each byte representing the value
│ │   * of one of the components (Y, Cb, or Cr) at a particular location in the
│ │   * image.  The width and height of each plane are determined by the image
│ │   * width, height, and level of chrominance subsampling.  The luminance plane
│ │   * width is the image width padded to the nearest multiple of the horizontal
│ │ - * subsampling factor (2 in the case of 4:2:0 and 4:2:2, 4 in the case of
│ │ - * 4:1:1, 1 in the case of 4:4:4 or grayscale.)  Similarly, the luminance plane
│ │ - * height is the image height padded to the nearest multiple of the vertical
│ │ - * subsampling factor (2 in the case of 4:2:0 or 4:4:0, 1 in the case of 4:4:4
│ │ - * or grayscale.)  The chrominance plane width is equal to the luminance plane
│ │ - * width divided by the horizontal subsampling factor, and the chrominance
│ │ - * plane height is equal to the luminance plane height divided by the vertical
│ │ - * subsampling factor.
│ │ + * subsampling factor (1 in the case of 4:4:4, grayscale, or 4:4:0; 2 in the
│ │ + * case of 4:2:2 or 4:2:0; 4 in the case of 4:1:1.)  Similarly, the luminance
│ │ + * plane height is the image height padded to the nearest multiple of the
│ │ + * vertical subsampling factor (1 in the case of 4:4:4, 4:2:2, grayscale, or
│ │ + * 4:1:1; 2 in the case of 4:2:0 or 4:4:0.)  This is irrespective of any
│ │ + * additional padding that may be specified as an argument to the various
│ │ + * YUVImage methods.  The chrominance plane width is equal to the luminance
│ │ + * plane width divided by the horizontal subsampling factor, and the
│ │ + * chrominance plane height is equal to the luminance plane height divided by
│ │ + * the vertical subsampling factor.
│ │   * <p>
│ │   * For example, if the source image is 35 x 35 pixels and 4:2:2 subsampling is
│ │   * used, then the luminance plane would be 36 x 35 bytes, and each of the
│ │ - * chrominance planes would be 18 x 35 bytes.  If you specify a line padding of
│ │ - * 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes, and
│ │ - * each of the chrominance planes would be 20 x 35 bytes.
│ │ + * chrominance planes would be 18 x 35 bytes.  If you specify a row alignment
│ │ + * of 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes,
│ │ + * and each of the chrominance planes would be 20 x 35 bytes.
│ │   */
│ │  public class YUVImage {
│ │  
│ │    private static final String NO_ASSOC_ERROR =
│ │      "No image data is associated with this instance";
│ │  
│ │    /**
│ │     * Create a new <code>YUVImage</code> instance backed by separate image
│ │     * planes, and allocate memory for the image planes.
│ │     *
│ │     * @param width width (in pixels) of the YUV image
│ │     *
│ │     * @param strides an array of integers, each specifying the number of bytes
│ │ -   * per line in the corresponding plane of the YUV image.  Setting the stride
│ │ +   * per row in the corresponding plane of the YUV image.  Setting the stride
│ │     * for any plane to 0 is the same as setting it to the plane width (see
│ │     * {@link YUVImage above}.)  If <code>strides</code> is null, then the
│ │     * strides for all planes will be set to their respective plane widths.  When
│ │     * using this constructor, the stride for each plane must be equal to or
│ │     * greater than the plane width.
│ │     *
│ │     * @param height height (in pixels) of the YUV image
│ │ @@ -88,57 +90,59 @@
│ │     * image (one of {@link TJ#SAMP_444 TJ.SAMP_*})
│ │     */
│ │    public YUVImage(int width, int[] strides, int height, int subsamp) {
│ │      setBuf(null, null, width, strides, height, subsamp, true);
│ │    }
│ │  
│ │    /**
│ │ -   * Create a new <code>YUVImage</code> instance backed by a unified image
│ │ -   * buffer, and allocate memory for the image buffer.
│ │ +   * Create a new <code>YUVImage</code> instance backed by a unified buffer,
│ │ +   * and allocate memory for the buffer.
│ │     *
│ │     * @param width width (in pixels) of the YUV image
│ │     *
│ │ -   * @param pad Each line of each plane in the YUV image buffer will be padded
│ │ -   * to this number of bytes (must be a power of 2.)
│ │ +   * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ +   * 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ +   * the YUV image will be padded to the nearest multiple of n bytes
│ │ +   * (1 = unpadded.)
│ │     *
│ │     * @param height height (in pixels) of the YUV image
│ │     *
│ │     * @param subsamp the level of chrominance subsampling to be used in the YUV
│ │     * image (one of {@link TJ#SAMP_444 TJ.SAMP_*})
│ │     */
│ │ -  public YUVImage(int width, int pad, int height, int subsamp) {
│ │ -    setBuf(new byte[TJ.bufSizeYUV(width, pad, height, subsamp)], width, pad,
│ │ -           height, subsamp);
│ │ +  public YUVImage(int width, int align, int height, int subsamp) {
│ │ +    setBuf(new byte[TJ.bufSizeYUV(width, align, height, subsamp)], width,
│ │ +           align, height, subsamp);
│ │    }
│ │  
│ │    /**
│ │     * Create a new <code>YUVImage</code> instance from a set of existing image
│ │     * planes.
│ │     *
│ │     * @param planes an array of buffers representing the Y, U (Cb), and V (Cr)
│ │     * image planes (or just the Y plane, if the image is grayscale.)   These
│ │     * planes can be contiguous or non-contiguous in memory.  Plane
│ │ -   * <code>i</code> should be at least <code>offsets[i] +
│ │ -   * {@link TJ#planeSizeYUV TJ.planeSizeYUV}(i, width, strides[i], height, subsamp)</code>
│ │ +   * <code>i</code> should be at least <code>offsets[i] + </code>
│ │ +   * {@link TJ#planeSizeYUV TJ.planeSizeYUV}<code>(i, width, strides[i], height, subsamp)</code>
│ │     * bytes in size.
│ │     *
│ │     * @param offsets If this <code>YUVImage</code> instance represents a
│ │     * subregion of a larger image, then <code>offsets[i]</code> specifies the
│ │     * offset (in bytes) of the subregion within plane <code>i</code> of the
│ │     * larger image.  Setting this to null is the same as setting the offsets for
│ │     * all planes to 0.
│ │     *
│ │     * @param width width (in pixels) of the new YUV image (or subregion)
│ │     *
│ │     * @param strides an array of integers, each specifying the number of bytes
│ │ -   * per line in the corresponding plane of the YUV image.  Setting the stride
│ │ +   * per row in the corresponding plane of the YUV image.  Setting the stride
│ │     * for any plane to 0 is the same as setting it to the plane width (see
│ │     * {@link YUVImage above}.)  If <code>strides</code> is null, then the
│ │     * strides for all planes will be set to their respective plane widths.  You
│ │ -   * can adjust the strides in order to add an arbitrary amount of line padding
│ │ +   * can adjust the strides in order to add an arbitrary amount of row padding
│ │     * to each plane or to specify that this <code>YUVImage</code> instance is a
│ │     * subregion of a larger image (in which case, <code>strides[i]</code> should
│ │     * be set to the plane width of plane <code>i</code> in the larger image.)
│ │     *
│ │     * @param height height (in pixels) of the new YUV image (or subregion)
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV
│ │ @@ -146,64 +150,65 @@
│ │     */
│ │    public YUVImage(byte[][] planes, int[] offsets, int width, int[] strides,
│ │                    int height, int subsamp) {
│ │      setBuf(planes, offsets, width, strides, height, subsamp, false);
│ │    }
│ │  
│ │    /**
│ │ -   * Create a new <code>YUVImage</code> instance from an existing unified image
│ │ +   * Create a new <code>YUVImage</code> instance from an existing unified
│ │     * buffer.
│ │     *
│ │ -   * @param yuvImage image buffer that contains or will contain YUV planar
│ │ -   * image data.  Use {@link TJ#bufSizeYUV} to determine the minimum size for
│ │ -   * this buffer.  The Y, U (Cb), and V (Cr) image planes are stored
│ │ -   * sequentially in the buffer (see {@link YUVImage above} for a description
│ │ -   * of the image format.)
│ │ +   * @param yuvImage buffer that contains or will receive a unified planar YUV
│ │ +   * image.  Use {@link TJ#bufSizeYUV} to determine the minimum size for this
│ │ +   * buffer.  The Y, U (Cb), and V (Cr) image planes are stored sequentially in
│ │ +   * the buffer.  (See {@link YUVImage above} for a description of the image
│ │ +   * format.)
│ │     *
│ │     * @param width width (in pixels) of the YUV image
│ │     *
│ │ -   * @param pad the line padding used in the YUV image buffer.  For
│ │ -   * instance, if each line in each plane of the buffer is padded to the
│ │ -   * nearest multiple of 4 bytes, then <code>pad</code> should be set to 4.
│ │ +   * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ +   * 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ +   * the YUV image will be padded to the nearest multiple of n bytes
│ │ +   * (1 = unpadded.)
│ │     *
│ │     * @param height height (in pixels) of the YUV image
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV
│ │     * image (one of {@link TJ#SAMP_444 TJ.SAMP_*})
│ │     */
│ │ -  public YUVImage(byte[] yuvImage, int width, int pad, int height,
│ │ +  public YUVImage(byte[] yuvImage, int width, int align, int height,
│ │                    int subsamp) {
│ │ -    setBuf(yuvImage, width, pad, height, subsamp);
│ │ +    setBuf(yuvImage, width, align, height, subsamp);
│ │    }
│ │  
│ │    /**
│ │     * Assign a set of image planes to this <code>YUVImage</code> instance.
│ │     *
│ │     * @param planes an array of buffers representing the Y, U (Cb), and V (Cr)
│ │     * image planes (or just the Y plane, if the image is grayscale.)  These
│ │     * planes can be contiguous or non-contiguous in memory.  Plane
│ │ -   * <code>i</code> should be at least <code>offsets[i] +
│ │ -   * {@link TJ#planeSizeYUV TJ.planeSizeYUV}(i, width, strides[i], height, subsamp)</code>
│ │ +   * <code>i</code> should be at least <code>offsets[i] + </code>
│ │ +   * {@link TJ#planeSizeYUV TJ.planeSizeYUV}<code>(i, width, strides[i], height, subsamp)</code>
│ │     * bytes in size.
│ │     *
│ │     * @param offsets If this <code>YUVImage</code> instance represents a
│ │     * subregion of a larger image, then <code>offsets[i]</code> specifies the
│ │     * offset (in bytes) of the subregion within plane <code>i</code> of the
│ │     * larger image.  Setting this to null is the same as setting the offsets for
│ │     * all planes to 0.
│ │     *
│ │     * @param width width (in pixels) of the YUV image (or subregion)
│ │     *
│ │     * @param strides an array of integers, each specifying the number of bytes
│ │ -   * per line in the corresponding plane of the YUV image.  Setting the stride
│ │ +   * per row in the corresponding plane of the YUV image.  Setting the stride
│ │     * for any plane to 0 is the same as setting it to the plane width (see
│ │     * {@link YUVImage above}.)  If <code>strides</code> is null, then the
│ │     * strides for all planes will be set to their respective plane widths.  You
│ │ -   * can adjust the strides in order to add an arbitrary amount of line padding
│ │ -   * to each plane or to specify that this <code>YUVImage</code> image is a
│ │ +   * can adjust the strides in order to add an arbitrary amount of row padding
│ │ +   * to each plane or to specify that this <code>YUVImage</code> instance is a
│ │     * subregion of a larger image (in which case, <code>strides[i]</code> should
│ │     * be set to the plane width of plane <code>i</code> in the larger image.)
│ │     *
│ │     * @param height height (in pixels) of the YUV image (or subregion)
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV
│ │     * image (one of {@link TJ#SAMP_444 TJ.SAMP_*})
│ │ @@ -259,58 +264,60 @@
│ │      yuvWidth = width;
│ │      yuvStrides = strides;
│ │      yuvHeight = height;
│ │      yuvSubsamp = subsamp;
│ │    }
│ │  
│ │    /**
│ │ -   * Assign a unified image buffer to this <code>YUVImage</code> instance.
│ │ +   * Assign a unified buffer to this <code>YUVImage</code> instance.
│ │     *
│ │ -   * @param yuvImage image buffer that contains or will contain YUV planar
│ │ -   * image data.  Use {@link TJ#bufSizeYUV} to determine the minimum size for
│ │ -   * this buffer.  The Y, U (Cb), and V (Cr) image planes are stored
│ │ -   * sequentially in the buffer (see {@link YUVImage above} for a description
│ │ -   * of the image format.)
│ │ +   * @param yuvImage buffer that contains or will receive a unified planar YUV
│ │ +   * image.  Use {@link TJ#bufSizeYUV} to determine the minimum size for this
│ │ +   * buffer.  The Y, U (Cb), and V (Cr) image planes are stored sequentially in
│ │ +   * the buffer.  (See {@link YUVImage above} for a description of the image
│ │ +   * format.)
│ │     *
│ │     * @param width width (in pixels) of the YUV image
│ │     *
│ │ -   * @param pad the line padding used in the YUV image buffer.  For
│ │ -   * instance, if each line in each plane of the buffer is padded to the
│ │ -   * nearest multiple of 4 bytes, then <code>pad</code> should be set to 4.
│ │ +   * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ +   * 2.)  Setting this parameter to n specifies that each row in each plane of
│ │ +   * the YUV image will be padded to the nearest multiple of n bytes
│ │ +   * (1 = unpadded.)
│ │     *
│ │     * @param height height (in pixels) of the YUV image
│ │     *
│ │     * @param subsamp the level of chrominance subsampling used in the YUV
│ │     * image (one of {@link TJ#SAMP_444 TJ.SAMP_*})
│ │     */
│ │ -  public void setBuf(byte[] yuvImage, int width, int pad, int height,
│ │ +  public void setBuf(byte[] yuvImage, int width, int align, int height,
│ │                       int subsamp) {
│ │ -    if (yuvImage == null || width < 1 || pad < 1 || ((pad & (pad - 1)) != 0) ||
│ │ -        height < 1 || subsamp < 0 || subsamp >= TJ.NUMSAMP)
│ │ +    if (yuvImage == null || width < 1 || align < 1 ||
│ │ +        ((align & (align - 1)) != 0) || height < 1 || subsamp < 0 ||
│ │ +        subsamp >= TJ.NUMSAMP)
│ │        throw new IllegalArgumentException("Invalid argument in YUVImage::setBuf()");
│ │ -    if (yuvImage.length < TJ.bufSizeYUV(width, pad, height, subsamp))
│ │ -      throw new IllegalArgumentException("YUV image buffer is not large enough");
│ │ +    if (yuvImage.length < TJ.bufSizeYUV(width, align, height, subsamp))
│ │ +      throw new IllegalArgumentException("YUV buffer is not large enough");
│ │  
│ │      int nc = (subsamp == TJ.SAMP_GRAY ? 1 : 3);
│ │      byte[][] planes = new byte[nc][];
│ │      int[] strides = new int[nc];
│ │      int[] offsets = new int[nc];
│ │  
│ │      planes[0] = yuvImage;
│ │ -    strides[0] = pad(TJ.planeWidth(0, width, subsamp), pad);
│ │ +    strides[0] = pad(TJ.planeWidth(0, width, subsamp), align);
│ │      if (subsamp != TJ.SAMP_GRAY) {
│ │ -      strides[1] = strides[2] = pad(TJ.planeWidth(1, width, subsamp), pad);
│ │ +      strides[1] = strides[2] = pad(TJ.planeWidth(1, width, subsamp), align);
│ │        planes[1] = planes[2] = yuvImage;
│ │        offsets[1] = offsets[0] +
│ │          strides[0] * TJ.planeHeight(0, height, subsamp);
│ │        offsets[2] = offsets[1] +
│ │          strides[1] * TJ.planeHeight(1, height, subsamp);
│ │      }
│ │  
│ │ -    yuvPad = pad;
│ │ +    yuvAlign = align;
│ │      setBuf(planes, offsets, width, strides, height, subsamp);
│ │    }
│ │  
│ │    /**
│ │     * Returns the width of the YUV image (or subregion.)
│ │     *
│ │     * @return the width of the YUV image (or subregion)
│ │ @@ -329,31 +336,31 @@
│ │    public int getHeight() {
│ │      if (yuvHeight < 1)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      return yuvHeight;
│ │    }
│ │  
│ │    /**
│ │ -   * Returns the line padding used in the YUV image buffer (if this image is
│ │ +   * Returns the row alignment (in bytes) of the YUV buffer (if this image is
│ │     * stored in a unified buffer rather than separate image planes.)
│ │     *
│ │ -   * @return the line padding used in the YUV image buffer
│ │ +   * @return the row alignment of the YUV buffer
│ │     */
│ │    public int getPad() {
│ │      if (yuvPlanes == null)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │ -    if (yuvPad < 1 || ((yuvPad & (yuvPad - 1)) != 0))
│ │ +    if (yuvAlign < 1 || ((yuvAlign & (yuvAlign - 1)) != 0))
│ │        throw new IllegalStateException("Image is not stored in a unified buffer");
│ │ -    return yuvPad;
│ │ +    return yuvAlign;
│ │    }
│ │  
│ │    /**
│ │ -   * Returns the number of bytes per line of each plane in the YUV image.
│ │ +   * Returns the number of bytes per row of each plane in the YUV image.
│ │     *
│ │ -   * @return the number of bytes per line of each plane in the YUV image
│ │ +   * @return the number of bytes per row of each plane in the YUV image
│ │     */
│ │    public int[] getStrides() {
│ │      if (yuvStrides == null)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      return yuvStrides;
│ │    }
│ │  
│ │ @@ -391,55 +398,55 @@
│ │    public byte[][] getPlanes() {
│ │      if (yuvPlanes == null)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      return yuvPlanes;
│ │    }
│ │  
│ │    /**
│ │ -   * Returns the YUV image buffer (if this image is stored in a unified
│ │ -   * buffer rather than separate image planes.)
│ │ +   * Returns the YUV buffer (if this image is stored in a unified buffer rather
│ │ +   * than separate image planes.)
│ │     *
│ │ -   * @return the YUV image buffer
│ │ +   * @return the YUV buffer
│ │     */
│ │    public byte[] getBuf() {
│ │      if (yuvPlanes == null || yuvSubsamp < 0 || yuvSubsamp >= TJ.NUMSAMP)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      int nc = (yuvSubsamp == TJ.SAMP_GRAY ? 1 : 3);
│ │      for (int i = 1; i < nc; i++) {
│ │        if (yuvPlanes[i] != yuvPlanes[0])
│ │          throw new IllegalStateException("Image is not stored in a unified buffer");
│ │      }
│ │      return yuvPlanes[0];
│ │    }
│ │  
│ │    /**
│ │ -   * Returns the size (in bytes) of the YUV image buffer (if this image is
│ │ -   * stored in a unified buffer rather than separate image planes.)
│ │ +   * Returns the size (in bytes) of the YUV buffer (if this image is stored in
│ │ +   * a unified buffer rather than separate image planes.)
│ │     *
│ │ -   * @return the size (in bytes) of the YUV image buffer
│ │ +   * @return the size (in bytes) of the YUV buffer
│ │     */
│ │    public int getSize() {
│ │      if (yuvPlanes == null || yuvSubsamp < 0 || yuvSubsamp >= TJ.NUMSAMP)
│ │        throw new IllegalStateException(NO_ASSOC_ERROR);
│ │      int nc = (yuvSubsamp == TJ.SAMP_GRAY ? 1 : 3);
│ │ -    if (yuvPad < 1)
│ │ +    if (yuvAlign < 1)
│ │        throw new IllegalStateException("Image is not stored in a unified buffer");
│ │      for (int i = 1; i < nc; i++) {
│ │        if (yuvPlanes[i] != yuvPlanes[0])
│ │          throw new IllegalStateException("Image is not stored in a unified buffer");
│ │      }
│ │ -    return TJ.bufSizeYUV(yuvWidth, yuvPad, yuvHeight, yuvSubsamp);
│ │ +    return TJ.bufSizeYUV(yuvWidth, yuvAlign, yuvHeight, yuvSubsamp);
│ │    }
│ │  
│ │    private static int pad(int v, int p) {
│ │      return (v + p - 1) & (~(p - 1));
│ │    }
│ │  
│ │    protected long handle = 0;
│ │    protected byte[][] yuvPlanes = null;
│ │    protected int[] yuvOffsets = null;
│ │    protected int[] yuvStrides = null;
│ │ -  protected int yuvPad = 0;
│ │ +  protected int yuvAlign = 1;
│ │    protected int yuvWidth = 0;
│ │    protected int yuvHeight = 0;
│ │    protected int yuvSubsamp = -1;
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJ.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJ.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJCompressor.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJCompressor.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJDecompressor.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJDecompressor.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJTransformer.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJTransformer.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcapimin.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcapimin.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcapistd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcapistd.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcarith.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcarith.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jccoefct.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jccoefct.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jccolext.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jccolext.c
│ │┄ Files 4% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jccolext.c
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1991-1996, Thomas G. Lane.
│ │   * libjpeg-turbo Modifications:
│ │ - * Copyright (C) 2009-2012, 2015, D. R. Commander.
│ │ + * Copyright (C) 2009-2012, 2015, 2022, D. R. Commander.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains input colorspace conversion routines.
│ │   */
│ │  
│ │  
│ │ @@ -44,17 +44,17 @@
│ │    while (--num_rows >= 0) {
│ │      inptr = *input_buf++;
│ │      outptr0 = output_buf[0][output_row];
│ │      outptr1 = output_buf[1][output_row];
│ │      outptr2 = output_buf[2][output_row];
│ │      output_row++;
│ │      for (col = 0; col < num_cols; col++) {
│ │ -      r = inptr[RGB_RED];
│ │ -      g = inptr[RGB_GREEN];
│ │ -      b = inptr[RGB_BLUE];
│ │ +      r = RANGE_LIMIT(inptr[RGB_RED]);
│ │ +      g = RANGE_LIMIT(inptr[RGB_GREEN]);
│ │ +      b = RANGE_LIMIT(inptr[RGB_BLUE]);
│ │        inptr += RGB_PIXELSIZE;
│ │        /* If the inputs are 0..MAXJSAMPLE, the outputs of these equations
│ │         * must be too; we do not need an explicit range-limiting operation.
│ │         * Hence the value being shifted is never negative, and we don't
│ │         * need the general RIGHT_SHIFT macro.
│ │         */
│ │        /* Y */
│ │ @@ -96,17 +96,17 @@
│ │    JDIMENSION num_cols = cinfo->image_width;
│ │  
│ │    while (--num_rows >= 0) {
│ │      inptr = *input_buf++;
│ │      outptr = output_buf[0][output_row];
│ │      output_row++;
│ │      for (col = 0; col < num_cols; col++) {
│ │ -      r = inptr[RGB_RED];
│ │ -      g = inptr[RGB_GREEN];
│ │ -      b = inptr[RGB_BLUE];
│ │ +      r = RANGE_LIMIT(inptr[RGB_RED]);
│ │ +      g = RANGE_LIMIT(inptr[RGB_GREEN]);
│ │ +      b = RANGE_LIMIT(inptr[RGB_BLUE]);
│ │        inptr += RGB_PIXELSIZE;
│ │        /* Y */
│ │        outptr[col] = (JSAMPLE)((ctab[r + R_Y_OFF] + ctab[g + G_Y_OFF] +
│ │                                 ctab[b + B_Y_OFF]) >> SCALEBITS);
│ │      }
│ │    }
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jccolor.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jccolor.c
│ │┄ Files 1% similar despite different names
│ │ @@ -1,27 +1,26 @@
│ │  /*
│ │   * jccolor.c
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1991-1996, Thomas G. Lane.
│ │   * libjpeg-turbo Modifications:
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2009-2012, 2015, D. R. Commander.
│ │ + * Copyright (C) 2009-2012, 2015, 2022, D. R. Commander.
│ │   * Copyright (C) 2014, MIPS Technologies, Inc., California.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains input colorspace conversion routines.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │  #include "jinclude.h"
│ │  #include "jpeglib.h"
│ │  #include "jsimd.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  
│ │  /* Private subobject */
│ │  
│ │  typedef struct {
│ │    struct jpeg_color_converter pub; /* public fields */
│ │  
│ │ @@ -80,14 +79,26 @@
│ │  #define G_CB_OFF        (4 * (MAXJSAMPLE + 1))
│ │  #define B_CB_OFF        (5 * (MAXJSAMPLE + 1))
│ │  #define R_CR_OFF        B_CB_OFF                /* B=>Cb, R=>Cr are the same */
│ │  #define G_CR_OFF        (6 * (MAXJSAMPLE + 1))
│ │  #define B_CR_OFF        (7 * (MAXJSAMPLE + 1))
│ │  #define TABLE_SIZE      (8 * (MAXJSAMPLE + 1))
│ │  
│ │ +/* 12-bit samples use a 16-bit data type, so it is possible to pass
│ │ + * out-of-range sample values (< 0 or > 4095) to jpeg_write_scanlines().
│ │ + * Thus, we mask the incoming 12-bit samples to guard against overrunning
│ │ + * or underrunning the conversion tables.
│ │ + */
│ │ +
│ │ +#if BITS_IN_JSAMPLE == 12
│ │ +#define RANGE_LIMIT(value)  ((value) & 0xFFF)
│ │ +#else
│ │ +#define RANGE_LIMIT(value)  (value)
│ │ +#endif
│ │ +
│ │  
│ │  /* Include inline routines for colorspace extensions */
│ │  
│ │  #include "jccolext.c"
│ │  #undef RGB_RED
│ │  #undef RGB_GREEN
│ │  #undef RGB_BLUE
│ │ @@ -388,17 +399,17 @@
│ │      inptr = *input_buf++;
│ │      outptr0 = output_buf[0][output_row];
│ │      outptr1 = output_buf[1][output_row];
│ │      outptr2 = output_buf[2][output_row];
│ │      outptr3 = output_buf[3][output_row];
│ │      output_row++;
│ │      for (col = 0; col < num_cols; col++) {
│ │ -      r = MAXJSAMPLE - inptr[0];
│ │ -      g = MAXJSAMPLE - inptr[1];
│ │ -      b = MAXJSAMPLE - inptr[2];
│ │ +      r = MAXJSAMPLE - RANGE_LIMIT(inptr[0]);
│ │ +      g = MAXJSAMPLE - RANGE_LIMIT(inptr[1]);
│ │ +      b = MAXJSAMPLE - RANGE_LIMIT(inptr[2]);
│ │        /* K passes through as-is */
│ │        outptr3[col] = inptr[3];
│ │        inptr += 4;
│ │        /* If the inputs are 0..MAXJSAMPLE, the outputs of these equations
│ │         * must be too; we do not need an explicit range-limiting operation.
│ │         * Hence the value being shifted is never negative, and we don't
│ │         * need the general RIGHT_SHIFT macro.
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcdctmgr.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcdctmgr.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jchuff.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jchuff.c
│ │┄ Files 0% similar despite different names
│ │ @@ -23,15 +23,14 @@
│ │   * Recommendation ITU-T T.81 (1992) | ISO/IEC 10918-1:1994.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │  #include "jinclude.h"
│ │  #include "jpeglib.h"
│ │  #include "jsimd.h"
│ │ -#include "jconfigint.h"
│ │  #include <limits.h>
│ │  
│ │  /*
│ │   * NOTE: If USE_CLZ_INTRINSIC is defined, then clz/bsr instructions will be
│ │   * used for bit counting rather than the lookup table.  This will reduce the
│ │   * memory footprint by 64k, which is important for some mobile applications
│ │   * that create many isolated instances of libjpeg-turbo (web browsers, for
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jchuff.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jchuff.h
│ │┄ Files 22% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jchuff.h
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1991-1997, Thomas G. Lane.
│ │ - * It was modified by The libjpeg-turbo Project to include only code relevant
│ │ - * to libjpeg-turbo.
│ │ + * libjpeg-turbo Modifications:
│ │ + * Copyright (C) 2022, D. R. Commander.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains declarations for Huffman entropy encoding routines
│ │   * that are shared between the sequential encoder (jchuff.c) and the
│ │   * progressive encoder (jcphuff.c).  No other modules need to see these.
│ │   */
│ │ @@ -21,14 +21,22 @@
│ │  
│ │  #if BITS_IN_JSAMPLE == 8
│ │  #define MAX_COEF_BITS  10
│ │  #else
│ │  #define MAX_COEF_BITS  14
│ │  #endif
│ │  
│ │ +/* The progressive Huffman encoder uses an unsigned 16-bit data type to store
│ │ + * absolute values of coefficients, because it is possible to inject a
│ │ + * coefficient value of -32768 into the encoder by attempting to transform a
│ │ + * malformed 12-bit JPEG image, and the absolute value of -32768 would overflow
│ │ + * a signed 16-bit integer.
│ │ + */
│ │ +typedef unsigned short UJCOEF;
│ │ +
│ │  /* Derived data constructed for each Huffman table */
│ │  
│ │  typedef struct {
│ │    unsigned int ehufco[256];     /* code for each symbol */
│ │    char ehufsi[256];             /* length of code for each symbol */
│ │    /* If no code has been allocated for a symbol S, ehufsi[S] contains 0 */
│ │  } c_derived_tbl;
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcicc.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcicc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcinit.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcinit.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcmainct.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcmainct.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcmarker.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcmarker.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcmaster.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcmaster.c
│ │┄ Files 1% similar despite different names
│ │ @@ -15,15 +15,14 @@
│ │   * to be done in each pass).
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │  #include "jinclude.h"
│ │  #include "jpeglib.h"
│ │  #include "jpegcomp.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  
│ │  /* Private state */
│ │  
│ │  typedef enum {
│ │    main_pass,                    /* input data, also do first output step */
│ │    huff_opt_pass,                /* Huffman code optimization pass */
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcomapi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcomapi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jconfig.h.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jconfig.h.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jconfig.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jconfig.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jconfigint.h.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jconfigint.h.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcparam.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcparam.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcphuff.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcphuff.c
│ │┄ Files 1% similar despite different names
│ │ @@ -1,15 +1,15 @@
│ │  /*
│ │   * jcphuff.c
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1995-1997, Thomas G. Lane.
│ │   * libjpeg-turbo Modifications:
│ │   * Copyright (C) 2011, 2015, 2018, 2021-2022, D. R. Commander.
│ │ - * Copyright (C) 2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2016, 2018, 2022, Matthieu Darbois.
│ │   * Copyright (C) 2020, Arm Limited.
│ │   * Copyright (C) 2021, Alex Richardson.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains Huffman entropy encoding routines for progressive JPEG.
│ │   *
│ │ @@ -18,15 +18,14 @@
│ │   * suspension.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │  #include "jinclude.h"
│ │  #include "jpeglib.h"
│ │  #include "jsimd.h"
│ │ -#include "jconfigint.h"
│ │  #include <limits.h>
│ │  
│ │  #ifdef HAVE_INTRIN_H
│ │  #include <intrin.h>
│ │  #ifdef _MSC_VER
│ │  #ifdef HAVE_BITSCANFORWARD64
│ │  #pragma intrinsic(_BitScanForward64)
│ │ @@ -79,19 +78,19 @@
│ │  
│ │  typedef struct {
│ │    struct jpeg_entropy_encoder pub; /* public fields */
│ │  
│ │    /* Pointer to routine to prepare data for encode_mcu_AC_first() */
│ │    void (*AC_first_prepare) (const JCOEF *block,
│ │                              const int *jpeg_natural_order_start, int Sl,
│ │ -                            int Al, JCOEF *values, size_t *zerobits);
│ │ +                            int Al, UJCOEF *values, size_t *zerobits);
│ │    /* Pointer to routine to prepare data for encode_mcu_AC_refine() */
│ │    int (*AC_refine_prepare) (const JCOEF *block,
│ │                              const int *jpeg_natural_order_start, int Sl,
│ │ -                            int Al, JCOEF *absvalues, size_t *bits);
│ │ +                            int Al, UJCOEF *absvalues, size_t *bits);
│ │  
│ │    /* Mode flag: TRUE for optimization, FALSE for actual data output */
│ │    boolean gather_statistics;
│ │  
│ │    /* Bit-level coding status.
│ │     * next_output_byte/free_in_buffer are local copies of cinfo->dest fields.
│ │     */
│ │ @@ -153,22 +152,22 @@
│ │  #define PAD(v, p)  ((v + (p) - 1) & (~((p) - 1)))
│ │  
│ │  /* Forward declarations */
│ │  METHODDEF(boolean) encode_mcu_DC_first(j_compress_ptr cinfo,
│ │                                         JBLOCKROW *MCU_data);
│ │  METHODDEF(void) encode_mcu_AC_first_prepare
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *values, size_t *zerobits);
│ │ +   UJCOEF *values, size_t *zerobits);
│ │  METHODDEF(boolean) encode_mcu_AC_first(j_compress_ptr cinfo,
│ │                                         JBLOCKROW *MCU_data);
│ │  METHODDEF(boolean) encode_mcu_DC_refine(j_compress_ptr cinfo,
│ │                                          JBLOCKROW *MCU_data);
│ │  METHODDEF(int) encode_mcu_AC_refine_prepare
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *absvalues, size_t *bits);
│ │ +   UJCOEF *absvalues, size_t *bits);
│ │  METHODDEF(boolean) encode_mcu_AC_refine(j_compress_ptr cinfo,
│ │                                          JBLOCKROW *MCU_data);
│ │  METHODDEF(void) finish_pass_phuff(j_compress_ptr cinfo);
│ │  METHODDEF(void) finish_pass_gather_phuff(j_compress_ptr cinfo);
│ │  
│ │  
│ │  /* Count bit loop zeroes */
│ │ @@ -580,24 +579,24 @@
│ │      temp -= temp2;              /* temp is abs value of input */ \
│ │      temp >>= Al;                /* apply the point transform */ \
│ │      /* Watch out for case that nonzero coef is zero after point transform */ \
│ │      if (temp == 0) \
│ │        continue; \
│ │      /* For a negative coef, want temp2 = bitwise complement of abs(coef) */ \
│ │      temp2 ^= temp; \
│ │ -    values[k] = (JCOEF)temp; \
│ │ -    values[k + DCTSIZE2] = (JCOEF)temp2; \
│ │ +    values[k] = (UJCOEF)temp; \
│ │ +    values[k + DCTSIZE2] = (UJCOEF)temp2; \
│ │      zerobits |= ((size_t)1U) << k; \
│ │    } \
│ │  }
│ │  
│ │  METHODDEF(void)
│ │  encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                              const int *jpeg_natural_order_start, int Sl,
│ │ -                            int Al, JCOEF *values, size_t *bits)
│ │ +                            int Al, UJCOEF *values, size_t *bits)
│ │  {
│ │    register int k, temp, temp2;
│ │    size_t zerobits = 0U;
│ │    int Sl0 = Sl;
│ │  
│ │  #if SIZEOF_SIZE_T == 4
│ │    if (Sl0 > 32)
│ │ @@ -662,30 +661,30 @@
│ │  encode_mcu_AC_first(j_compress_ptr cinfo, JBLOCKROW *MCU_data)
│ │  {
│ │    phuff_entropy_ptr entropy = (phuff_entropy_ptr)cinfo->entropy;
│ │    register int temp, temp2;
│ │    register int nbits, r;
│ │    int Sl = cinfo->Se - cinfo->Ss + 1;
│ │    int Al = cinfo->Al;
│ │ -  JCOEF values_unaligned[2 * DCTSIZE2 + 15];
│ │ -  JCOEF *values;
│ │ -  const JCOEF *cvalue;
│ │ +  UJCOEF values_unaligned[2 * DCTSIZE2 + 15];
│ │ +  UJCOEF *values;
│ │ +  const UJCOEF *cvalue;
│ │    size_t zerobits;
│ │    size_t bits[8 / SIZEOF_SIZE_T];
│ │  
│ │    entropy->next_output_byte = cinfo->dest->next_output_byte;
│ │    entropy->free_in_buffer = cinfo->dest->free_in_buffer;
│ │  
│ │    /* Emit restart marker if needed */
│ │    if (cinfo->restart_interval)
│ │      if (entropy->restarts_to_go == 0)
│ │        emit_restart(entropy, entropy->next_restart_num);
│ │  
│ │  #ifdef WITH_SIMD
│ │ -  cvalue = values = (JCOEF *)PAD((JUINTPTR)values_unaligned, 16);
│ │ +  cvalue = values = (UJCOEF *)PAD((JUINTPTR)values_unaligned, 16);
│ │  #else
│ │    /* Not using SIMD, so alignment is not needed */
│ │    cvalue = values = values_unaligned;
│ │  #endif
│ │  
│ │    /* Prepare data */
│ │    entropy->AC_first_prepare(MCU_data[0][0], jpeg_natural_order + cinfo->Ss,
│ │ @@ -811,24 +810,24 @@
│ │      temp ^= temp2; \
│ │      temp -= temp2;              /* temp is abs value of input */ \
│ │      temp >>= Al;                /* apply the point transform */ \
│ │      if (temp != 0) { \
│ │        zerobits |= ((size_t)1U) << k; \
│ │        signbits |= ((size_t)(temp2 + 1)) << k; \
│ │      } \
│ │ -    absvalues[k] = (JCOEF)temp; /* save abs value for main pass */ \
│ │ +    absvalues[k] = (UJCOEF)temp; /* save abs value for main pass */ \
│ │      if (temp == 1) \
│ │        EOB = k + koffset;        /* EOB = index of last newly-nonzero coef */ \
│ │    } \
│ │  }
│ │  
│ │  METHODDEF(int)
│ │  encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                               const int *jpeg_natural_order_start, int Sl,
│ │ -                             int Al, JCOEF *absvalues, size_t *bits)
│ │ +                             int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    register int k, temp, temp2;
│ │    int EOB = 0;
│ │    size_t zerobits = 0U, signbits = 0U;
│ │    int Sl0 = Sl;
│ │  
│ │  #if SIZEOF_SIZE_T == 4
│ │ @@ -927,30 +926,30 @@
│ │  {
│ │    phuff_entropy_ptr entropy = (phuff_entropy_ptr)cinfo->entropy;
│ │    register int temp, r, idx;
│ │    char *BR_buffer;
│ │    unsigned int BR;
│ │    int Sl = cinfo->Se - cinfo->Ss + 1;
│ │    int Al = cinfo->Al;
│ │ -  JCOEF absvalues_unaligned[DCTSIZE2 + 15];
│ │ -  JCOEF *absvalues;
│ │ -  const JCOEF *cabsvalue, *EOBPTR;
│ │ +  UJCOEF absvalues_unaligned[DCTSIZE2 + 15];
│ │ +  UJCOEF *absvalues;
│ │ +  const UJCOEF *cabsvalue, *EOBPTR;
│ │    size_t zerobits, signbits;
│ │    size_t bits[16 / SIZEOF_SIZE_T];
│ │  
│ │    entropy->next_output_byte = cinfo->dest->next_output_byte;
│ │    entropy->free_in_buffer = cinfo->dest->free_in_buffer;
│ │  
│ │    /* Emit restart marker if needed */
│ │    if (cinfo->restart_interval)
│ │      if (entropy->restarts_to_go == 0)
│ │        emit_restart(entropy, entropy->next_restart_num);
│ │  
│ │  #ifdef WITH_SIMD
│ │ -  cabsvalue = absvalues = (JCOEF *)PAD((JUINTPTR)absvalues_unaligned, 16);
│ │ +  cabsvalue = absvalues = (UJCOEF *)PAD((JUINTPTR)absvalues_unaligned, 16);
│ │  #else
│ │    /* Not using SIMD, so alignment is not needed */
│ │    cabsvalue = absvalues = absvalues_unaligned;
│ │  #endif
│ │  
│ │    /* Prepare data */
│ │    EOBPTR = absvalues +
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcprepct.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcprepct.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcsample.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcsample.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jcstest.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jcstest.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jctrans.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jctrans.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdapimin.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdapimin.c
│ │┄ Files 0% similar despite different names
│ │ @@ -19,15 +19,14 @@
│ │   * case.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │  #include "jinclude.h"
│ │  #include "jpeglib.h"
│ │  #include "jdmaster.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  
│ │  /*
│ │   * Initialization of a JPEG decompression object.
│ │   * The error manager must already be set up (in case memory manager fails).
│ │   */
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdapistd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdapistd.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdarith.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdarith.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatadst-tj.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatadst-tj.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatadst.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatadst.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatasrc-tj.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatasrc-tj.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdatasrc.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdatasrc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcoefct.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcoefct.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcoefct.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcoefct.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcol565.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcol565.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcolext.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcolext.c
│ │┄ Files 15% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jdcolext.c
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1991-1997, Thomas G. Lane.
│ │   * libjpeg-turbo Modifications:
│ │ - * Copyright (C) 2009, 2011, 2015, D. R. Commander.
│ │ + * Copyright (C) 2009, 2011, 2015, 2023, D. R. Commander.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains output colorspace conversion routines.
│ │   */
│ │  
│ │  
│ │ @@ -58,18 +58,18 @@
│ │        cr = inptr2[col];
│ │        /* Range-limiting is essential due to noise introduced by DCT losses. */
│ │        outptr[RGB_RED] =   range_limit[y + Crrtab[cr]];
│ │        outptr[RGB_GREEN] = range_limit[y +
│ │                                ((int)RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
│ │                                                  SCALEBITS))];
│ │        outptr[RGB_BLUE] =  range_limit[y + Cbbtab[cb]];
│ │ -      /* Set unused byte to 0xFF so it can be interpreted as an opaque */
│ │ +      /* Set unused byte to MAXJSAMPLE so it can be interpreted as an opaque */
│ │        /* alpha channel value */
│ │  #ifdef RGB_ALPHA
│ │ -      outptr[RGB_ALPHA] = 0xFF;
│ │ +      outptr[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │        outptr += RGB_PIXELSIZE;
│ │      }
│ │    }
│ │  }
│ │  
│ │  
│ │ @@ -90,18 +90,18 @@
│ │    JDIMENSION num_cols = cinfo->output_width;
│ │  
│ │    while (--num_rows >= 0) {
│ │      inptr = input_buf[0][input_row++];
│ │      outptr = *output_buf++;
│ │      for (col = 0; col < num_cols; col++) {
│ │        outptr[RGB_RED] = outptr[RGB_GREEN] = outptr[RGB_BLUE] = inptr[col];
│ │ -      /* Set unused byte to 0xFF so it can be interpreted as an opaque */
│ │ +      /* Set unused byte to MAXJSAMPLE so it can be interpreted as an opaque */
│ │        /* alpha channel value */
│ │  #ifdef RGB_ALPHA
│ │ -      outptr[RGB_ALPHA] = 0xFF;
│ │ +      outptr[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │        outptr += RGB_PIXELSIZE;
│ │      }
│ │    }
│ │  }
│ │  
│ │  
│ │ @@ -126,16 +126,16 @@
│ │      inptr2 = input_buf[2][input_row];
│ │      input_row++;
│ │      outptr = *output_buf++;
│ │      for (col = 0; col < num_cols; col++) {
│ │        outptr[RGB_RED] = inptr0[col];
│ │        outptr[RGB_GREEN] = inptr1[col];
│ │        outptr[RGB_BLUE] = inptr2[col];
│ │ -      /* Set unused byte to 0xFF so it can be interpreted as an opaque */
│ │ +      /* Set unused byte to MAXJSAMPLE so it can be interpreted as an opaque */
│ │        /* alpha channel value */
│ │  #ifdef RGB_ALPHA
│ │ -      outptr[RGB_ALPHA] = 0xFF;
│ │ +      outptr[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │        outptr += RGB_PIXELSIZE;
│ │      }
│ │    }
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdcolor.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdcolor.c
│ │┄ Files 1% similar despite different names
│ │ @@ -14,15 +14,14 @@
│ │   * This file contains output colorspace conversion routines.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │  #include "jinclude.h"
│ │  #include "jpeglib.h"
│ │  #include "jsimd.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  
│ │  /* Private subobject */
│ │  
│ │  typedef struct {
│ │    struct jpeg_color_deconverter pub; /* public fields */
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdct.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdct.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jddctmgr.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jddctmgr.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdhuff.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdhuff.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdhuff.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdhuff.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdicc.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdicc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdinput.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdinput.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmainct.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmainct.c
│ │┄ Files 1% similar despite different names
│ │ @@ -14,15 +14,14 @@
│ │   *
│ │   * Note that this code is bypassed in raw-data mode, since the application
│ │   * supplies the equivalent of the main buffer in that case.
│ │   */
│ │  
│ │  #include "jinclude.h"
│ │  #include "jdmainct.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  
│ │  /*
│ │   * In the current system design, the main buffer need never be a full-image
│ │   * buffer; any full-height buffers will be found inside the coefficient or
│ │   * postprocessing controllers.  Nonetheless, the main controller is not
│ │   * trivial.  Its responsibility is to provide context rows for upsampling/
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmainct.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmainct.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmarker.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmarker.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmaster.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmaster.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmaster.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmaster.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmerge.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmerge.c
│ │┄ Files 0% similar despite different names
│ │ @@ -38,15 +38,14 @@
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │  #include "jinclude.h"
│ │  #include "jpeglib.h"
│ │  #include "jdmerge.h"
│ │  #include "jsimd.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  #ifdef UPSAMPLE_MERGING_SUPPORTED
│ │  
│ │  
│ │  #define SCALEBITS       16      /* speediest right-shift on some machines */
│ │  #define ONE_HALF        ((JLONG)1 << (SCALEBITS - 1))
│ │  #define FIX(x)          ((JLONG)((x) * (1L << SCALEBITS) + 0.5))
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmerge.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmerge.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmrg565.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmrg565.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdmrgext.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdmrgext.c
│ │┄ Files 8% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jdmrgext.c
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1994-1996, Thomas G. Lane.
│ │   * libjpeg-turbo Modifications:
│ │ - * Copyright (C) 2011, 2015, 2020, D. R. Commander.
│ │ + * Copyright (C) 2011, 2015, 2020, 2023, D. R. Commander.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains code for merged upsampling/color conversion.
│ │   */
│ │  
│ │  
│ │ @@ -53,23 +53,23 @@
│ │      cblue = Cbbtab[cb];
│ │      /* Fetch 2 Y values and emit 2 pixels */
│ │      y  = *inptr0++;
│ │      outptr[RGB_RED] =   range_limit[y + cred];
│ │      outptr[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr[RGB_ALPHA] = 0xFF;
│ │ +    outptr[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │      outptr += RGB_PIXELSIZE;
│ │      y  = *inptr0++;
│ │      outptr[RGB_RED] =   range_limit[y + cred];
│ │      outptr[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr[RGB_ALPHA] = 0xFF;
│ │ +    outptr[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │      outptr += RGB_PIXELSIZE;
│ │    }
│ │    /* If image width is odd, do the last output column separately */
│ │    if (cinfo->output_width & 1) {
│ │      cb = *inptr1;
│ │      cr = *inptr2;
│ │ @@ -77,15 +77,15 @@
│ │      cgreen = (int)RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr], SCALEBITS);
│ │      cblue = Cbbtab[cb];
│ │      y  = *inptr0;
│ │      outptr[RGB_RED] =   range_limit[y + cred];
│ │      outptr[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr[RGB_ALPHA] = 0xFF;
│ │ +    outptr[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │    }
│ │  }
│ │  
│ │  
│ │  /*
│ │   * Upsample and color convert for the case of 2:1 horizontal and 2:1 vertical.
│ │ @@ -127,39 +127,39 @@
│ │      cblue = Cbbtab[cb];
│ │      /* Fetch 4 Y values and emit 4 pixels */
│ │      y  = *inptr00++;
│ │      outptr0[RGB_RED] =   range_limit[y + cred];
│ │      outptr0[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr0[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr0[RGB_ALPHA] = 0xFF;
│ │ +    outptr0[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │      outptr0 += RGB_PIXELSIZE;
│ │      y  = *inptr00++;
│ │      outptr0[RGB_RED] =   range_limit[y + cred];
│ │      outptr0[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr0[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr0[RGB_ALPHA] = 0xFF;
│ │ +    outptr0[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │      outptr0 += RGB_PIXELSIZE;
│ │      y  = *inptr01++;
│ │      outptr1[RGB_RED] =   range_limit[y + cred];
│ │      outptr1[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr1[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr1[RGB_ALPHA] = 0xFF;
│ │ +    outptr1[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │      outptr1 += RGB_PIXELSIZE;
│ │      y  = *inptr01++;
│ │      outptr1[RGB_RED] =   range_limit[y + cred];
│ │      outptr1[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr1[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr1[RGB_ALPHA] = 0xFF;
│ │ +    outptr1[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │      outptr1 += RGB_PIXELSIZE;
│ │    }
│ │    /* If image width is odd, do the last output column separately */
│ │    if (cinfo->output_width & 1) {
│ │      cb = *inptr1;
│ │      cr = *inptr2;
│ │ @@ -167,18 +167,18 @@
│ │      cgreen = (int)RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr], SCALEBITS);
│ │      cblue = Cbbtab[cb];
│ │      y  = *inptr00;
│ │      outptr0[RGB_RED] =   range_limit[y + cred];
│ │      outptr0[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr0[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr0[RGB_ALPHA] = 0xFF;
│ │ +    outptr0[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │      y  = *inptr01;
│ │      outptr1[RGB_RED] =   range_limit[y + cred];
│ │      outptr1[RGB_GREEN] = range_limit[y + cgreen];
│ │      outptr1[RGB_BLUE] =  range_limit[y + cblue];
│ │  #ifdef RGB_ALPHA
│ │ -    outptr1[RGB_ALPHA] = 0xFF;
│ │ +    outptr1[RGB_ALPHA] = MAXJSAMPLE;
│ │  #endif
│ │    }
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdphuff.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdphuff.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdpostct.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdpostct.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdsample.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdsample.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdsample.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdsample.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jdtrans.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jdtrans.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jerror.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jerror.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jerror.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jerror.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jfdctflt.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jfdctflt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jfdctfst.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jfdctfst.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jfdctint.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jfdctint.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctflt.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctflt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctfst.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctfst.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctint.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctint.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jidctred.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jidctred.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jinclude.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jinclude.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmemmgr.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmemmgr.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmemnobs.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmemnobs.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmemsys.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmemsys.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jmorecfg.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jmorecfg.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpeg_nbits_table.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpeg_nbits_table.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegcomp.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegcomp.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegint.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegint.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpeglib.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpeglib.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegtran.1
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegtran.1
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jpegtran.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jpegtran.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jquant1.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jquant1.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jquant2.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jquant2.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jsimd.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jsimd.h
│ │┄ Files 1% similar despite different names
│ │ @@ -1,13 +1,13 @@
│ │  /*
│ │   * jsimd.h
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2011, 2014, D. R. Commander.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2011, 2014, 2022, D. R. Commander.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   * Copyright (C) 2020, Arm Limited.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   */
│ │ @@ -110,14 +110,14 @@
│ │                                               c_derived_tbl *dctbl,
│ │                                               c_derived_tbl *actbl);
│ │  
│ │  EXTERN(int) jsimd_can_encode_mcu_AC_first_prepare(void);
│ │  
│ │  EXTERN(void) jsimd_encode_mcu_AC_first_prepare
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *values, size_t *zerobits);
│ │ +   UJCOEF *values, size_t *zerobits);
│ │  
│ │  EXTERN(int) jsimd_can_encode_mcu_AC_refine_prepare(void);
│ │  
│ │  EXTERN(int) jsimd_encode_mcu_AC_refine_prepare
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *absvalues, size_t *bits);
│ │ +   UJCOEF *absvalues, size_t *bits);
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jsimd_none.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jsimd_none.c
│ │┄ Files 1% similar despite different names
│ │ @@ -1,13 +1,13 @@
│ │  /*
│ │   * jsimd_none.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2009-2011, 2014, D. R. Commander.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2009-2011, 2014, 2022, D. R. Commander.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   * Copyright (C) 2020, Arm Limited.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   * This file contains stubs for when there is no SIMD support available.
│ │ @@ -408,24 +408,24 @@
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return 0;
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jsimddct.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jsimddct.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jstdhuff.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jstdhuff.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jutils.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jutils.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/jversion.h.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/jversion.h.in
│ │┄ Files 8% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jversion.h
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1991-2020, Thomas G. Lane, Guido Vollbeding.
│ │   * libjpeg-turbo Modifications:
│ │ - * Copyright (C) 2010, 2012-2022, D. R. Commander.
│ │ + * Copyright (C) 2010, 2012-2023, D. R. Commander.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains software version identification.
│ │   */
│ │  
│ │  
│ │ @@ -33,15 +33,15 @@
│ │   *   date of their first contribution to the project, then in alphabetical
│ │   *   order
│ │   * - Upstream authors in descending order of the date of the first inclusion of
│ │   *   their code
│ │   */
│ │  
│ │  #define JCOPYRIGHT \
│ │ -  "Copyright (C) 2009-2022 D. R. Commander\n" \
│ │ +  "Copyright (C) 2009-2023 D. R. Commander\n" \
│ │    "Copyright (C) 2015, 2020 Google, Inc.\n" \
│ │    "Copyright (C) 2019-2020 Arm Limited\n" \
│ │    "Copyright (C) 2015-2016, 2018 Matthieu Darbois\n" \
│ │    "Copyright (C) 2011-2016 Siarhei Siamashka\n" \
│ │    "Copyright (C) 2015 Intel Corporation\n" \
│ │    "Copyright (C) 2013-2014 Linaro Limited\n" \
│ │    "Copyright (C) 2013-2014 MIPS Technologies, Inc.\n" \
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/libjpeg.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/libjpeg.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5cmp.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5cmp.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/md5/md5hl.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/md5/md5hl.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdbmp.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdbmp.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdcolmap.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdcolmap.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdgif.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdgif.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdjpgcom.1
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdjpgcom.1
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdjpgcom.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdjpgcom.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdppm.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdppm.c
│ │┄ Files 2% similar despite different names
│ │ @@ -1,15 +1,15 @@
│ │  /*
│ │   * rdppm.c
│ │   *
│ │   * This file was part of the Independent JPEG Group's software:
│ │   * Copyright (C) 1991-1997, Thomas G. Lane.
│ │   * Modified 2009 by Bill Allombert, Guido Vollbeding.
│ │   * libjpeg-turbo Modifications:
│ │ - * Copyright (C) 2015-2017, 2020-2022, D. R. Commander.
│ │ + * Copyright (C) 2015-2017, 2020-2023, D. R. Commander.
│ │   * For conditions of distribution and use, see the accompanying README.ijg
│ │   * file.
│ │   *
│ │   * This file contains routines to read input images in PPM/PGM format.
│ │   * The extended 2-byte-per-sample raw PPM/PGM formats are supported.
│ │   * The PBMPLUS library is NOT required to compile this software
│ │   * (but it is highly useful as a set of PPM image manipulation programs).
│ │ @@ -175,21 +175,21 @@
│ │    register int aindex = alpha_index[cinfo->in_color_space];
│ │    register int ps = rgb_pixelsize[cinfo->in_color_space];
│ │  
│ │    ptr = source->pub.buffer[0];
│ │    if (maxval == MAXJSAMPLE) {
│ │      if (aindex >= 0)
│ │        GRAY_RGB_READ_LOOP((JSAMPLE)read_pbm_integer(cinfo, infile, maxval),
│ │ -                         ptr[aindex] = 0xFF;)
│ │ +                         ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        GRAY_RGB_READ_LOOP((JSAMPLE)read_pbm_integer(cinfo, infile, maxval), {})
│ │    } else {
│ │      if (aindex >= 0)
│ │        GRAY_RGB_READ_LOOP(rescale[read_pbm_integer(cinfo, infile, maxval)],
│ │ -                         ptr[aindex] = 0xFF;)
│ │ +                         ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        GRAY_RGB_READ_LOOP(rescale[read_pbm_integer(cinfo, infile, maxval)], {})
│ │    }
│ │    return 1;
│ │  }
│ │  
│ │  
│ │ @@ -249,21 +249,21 @@
│ │    register int aindex = alpha_index[cinfo->in_color_space];
│ │    register int ps = rgb_pixelsize[cinfo->in_color_space];
│ │  
│ │    ptr = source->pub.buffer[0];
│ │    if (maxval == MAXJSAMPLE) {
│ │      if (aindex >= 0)
│ │        RGB_READ_LOOP((JSAMPLE)read_pbm_integer(cinfo, infile, maxval),
│ │ -                    ptr[aindex] = 0xFF;)
│ │ +                    ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        RGB_READ_LOOP((JSAMPLE)read_pbm_integer(cinfo, infile, maxval), {})
│ │    } else {
│ │      if (aindex >= 0)
│ │        RGB_READ_LOOP(rescale[read_pbm_integer(cinfo, infile, maxval)],
│ │ -                    ptr[aindex] = 0xFF;)
│ │ +                    ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        RGB_READ_LOOP(rescale[read_pbm_integer(cinfo, infile, maxval)], {})
│ │    }
│ │    return 1;
│ │  }
│ │  
│ │  
│ │ @@ -341,20 +341,20 @@
│ │  
│ │    if (!ReadOK(source->pub.input_file, source->iobuffer, source->buffer_width))
│ │      ERREXIT(cinfo, JERR_INPUT_EOF);
│ │    ptr = source->pub.buffer[0];
│ │    bufferptr = source->iobuffer;
│ │    if (maxval == MAXJSAMPLE) {
│ │      if (aindex >= 0)
│ │ -      GRAY_RGB_READ_LOOP(*bufferptr++, ptr[aindex] = 0xFF;)
│ │ +      GRAY_RGB_READ_LOOP(*bufferptr++, ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        GRAY_RGB_READ_LOOP(*bufferptr++, {})
│ │    } else {
│ │      if (aindex >= 0)
│ │ -      GRAY_RGB_READ_LOOP(rescale[UCH(*bufferptr++)], ptr[aindex] = 0xFF;)
│ │ +      GRAY_RGB_READ_LOOP(rescale[UCH(*bufferptr++)], ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        GRAY_RGB_READ_LOOP(rescale[UCH(*bufferptr++)], {})
│ │    }
│ │    return 1;
│ │  }
│ │  
│ │  
│ │ @@ -409,20 +409,20 @@
│ │  
│ │    if (!ReadOK(source->pub.input_file, source->iobuffer, source->buffer_width))
│ │      ERREXIT(cinfo, JERR_INPUT_EOF);
│ │    ptr = source->pub.buffer[0];
│ │    bufferptr = source->iobuffer;
│ │    if (maxval == MAXJSAMPLE) {
│ │      if (aindex >= 0)
│ │ -      RGB_READ_LOOP(*bufferptr++, ptr[aindex] = 0xFF;)
│ │ +      RGB_READ_LOOP(*bufferptr++, ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        RGB_READ_LOOP(*bufferptr++, {})
│ │    } else {
│ │      if (aindex >= 0)
│ │ -      RGB_READ_LOOP(rescale[UCH(*bufferptr++)], ptr[aindex] = 0xFF;)
│ │ +      RGB_READ_LOOP(rescale[UCH(*bufferptr++)], ptr[aindex] = MAXJSAMPLE;)
│ │      else
│ │        RGB_READ_LOOP(rescale[UCH(*bufferptr++)], {})
│ │    }
│ │    return 1;
│ │  }
│ │  
│ │  
│ │ @@ -539,15 +539,15 @@
│ │      ptr[gindex] = rescale[temp];
│ │      temp  = UCH(*bufferptr++) << 8;
│ │      temp |= UCH(*bufferptr++);
│ │      if (temp > maxval)
│ │        ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);
│ │      ptr[bindex] = rescale[temp];
│ │      if (aindex >= 0)
│ │ -      ptr[aindex] = 0xFF;
│ │ +      ptr[aindex] = MAXJSAMPLE;
│ │      ptr += ps;
│ │    }
│ │    return 1;
│ │  }
│ │  
│ │  
│ │  /*
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdswitch.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdswitch.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/rdtarga.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/rdtarga.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/Distribution.xml.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/Distribution.xml.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/License.rtf
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/License.rtf
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/ReadMe.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/ReadMe.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/Welcome.rtf.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/Welcome.rtf.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/deb-control.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/deb-control.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/installer.nsi.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/installer.nsi.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makedpkg.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makedpkg.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makemacpkg.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makemacpkg.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makerpm.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makerpm.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/makesrpm.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/makesrpm.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/maketarball.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/maketarball.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/rpm.spec.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/rpm.spec.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/release/uninstall.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/release/uninstall.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/sharedlib/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/sharedlib/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jccolext-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jccolext-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jchuff-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jchuff-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jsimd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jsimd.c
│ │┄ Files 0% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jsimd_arm.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │   * Copyright (C) 2011, Nokia Corporation and/or its subsidiary(-ies).
│ │   * Copyright (C) 2009-2011, 2013-2014, 2016, 2018, 2022, D. R. Commander.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   * Copyright (C) 2019, Google LLC.
│ │   * Copyright (C) 2020, Arm Limited.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │ @@ -23,16 +23,16 @@
│ │  #include "../../../jsimd.h"
│ │  #include "../../../jdct.h"
│ │  #include "../../../jsimddct.h"
│ │  #include "../../jsimd.h"
│ │  
│ │  #include <ctype.h>
│ │  
│ │ -static unsigned int simd_support = ~0;
│ │ -static unsigned int simd_huffman = 1;
│ │ +static THREAD_LOCAL unsigned int simd_support = ~0;
│ │ +static THREAD_LOCAL unsigned int simd_huffman = 1;
│ │  
│ │  #if !defined(__ARM_NEON__) && (defined(__linux__) || defined(ANDROID) || defined(__ANDROID__))
│ │  
│ │  #define SOMEWHAT_SANE_PROC_CPUINFO_SIZE_LIMIT  (1024 * 1024)
│ │  
│ │  LOCAL(int)
│ │  check_feature(char *buffer, char *feature)
│ │ @@ -92,16 +92,14 @@
│ │    return 1;
│ │  }
│ │  
│ │  #endif
│ │  
│ │  /*
│ │   * Check what SIMD accelerations are supported.
│ │ - *
│ │ - * FIXME: This code is racy under a multi-threaded environment.
│ │   */
│ │  LOCAL(void)
│ │  init_simd(void)
│ │  {
│ │  #ifndef NO_GETENV
│ │    char env[2] = { 0 };
│ │  #endif
│ │ @@ -941,15 +939,15 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │    jsimd_encode_mcu_AC_first_prepare_neon(block, jpeg_natural_order_start,
│ │                                           Sl, Al, values, zerobits);
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │ @@ -966,13 +964,13 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return jsimd_encode_mcu_AC_refine_prepare_neon(block,
│ │                                                   jpeg_natural_order_start, Sl,
│ │                                                   Al, absvalues, bits);
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jsimd_neon.S
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jsimd_neon.S
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jccolext-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jccolext-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jchuff-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jchuff-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jsimd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jsimd.c
│ │┄ Files 2% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jsimd_arm64.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │   * Copyright (C) 2011, Nokia Corporation and/or its subsidiary(-ies).
│ │   * Copyright (C) 2009-2011, 2013-2014, 2016, 2018, 2020, 2022, D. R. Commander.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   * Copyright (C) 2020, Arm Limited.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   * This file contains the interface between the "normal" portions
│ │ @@ -19,26 +19,25 @@
│ │  #define JPEG_INTERNALS
│ │  #include "../../../jinclude.h"
│ │  #include "../../../jpeglib.h"
│ │  #include "../../../jsimd.h"
│ │  #include "../../../jdct.h"
│ │  #include "../../../jsimddct.h"
│ │  #include "../../jsimd.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  #include <ctype.h>
│ │  
│ │  #define JSIMD_FASTLD3  1
│ │  #define JSIMD_FASTST3  2
│ │  #define JSIMD_FASTTBL  4
│ │  
│ │ -static unsigned int simd_support = ~0;
│ │ -static unsigned int simd_huffman = 1;
│ │ -static unsigned int simd_features = JSIMD_FASTLD3 | JSIMD_FASTST3 |
│ │ -                                    JSIMD_FASTTBL;
│ │ +static THREAD_LOCAL unsigned int simd_support = ~0;
│ │ +static THREAD_LOCAL unsigned int simd_huffman = 1;
│ │ +static THREAD_LOCAL unsigned int simd_features = JSIMD_FASTLD3 |
│ │ +                                                 JSIMD_FASTST3 | JSIMD_FASTTBL;
│ │  
│ │  #if defined(__linux__) || defined(ANDROID) || defined(__ANDROID__)
│ │  
│ │  #define SOMEWHAT_SANE_PROC_CPUINFO_SIZE_LIMIT  (1024 * 1024)
│ │  
│ │  LOCAL(int)
│ │  check_cpuinfo(char *buffer, const char *field, char *value)
│ │ @@ -105,16 +104,14 @@
│ │    return 1;
│ │  }
│ │  
│ │  #endif
│ │  
│ │  /*
│ │   * Check what SIMD accelerations are supported.
│ │ - *
│ │ - * FIXME: This code is racy under a multi-threaded environment.
│ │   */
│ │  
│ │  /*
│ │   * Armv8 architectures support Neon extensions by default.
│ │   * It is no longer optional as it was with Armv7.
│ │   */
│ │  
│ │ @@ -1017,15 +1014,15 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │    jsimd_encode_mcu_AC_first_prepare_neon(block, jpeg_natural_order_start,
│ │                                           Sl, Al, values, zerobits);
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │ @@ -1044,13 +1041,13 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return jsimd_encode_mcu_AC_refine_prepare_neon(block,
│ │                                                   jpeg_natural_order_start,
│ │                                                   Sl, Al, absvalues, bits);
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jsimd_neon.S
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jsimd_neon.S
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/align.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/align.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jccolor-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jccolor-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcgray-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcgray-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcgryext-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcgryext-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jchuff.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jchuff.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcphuff-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcphuff-neon.c
│ │┄ Files 10% similar despite different names
│ │ @@ -1,11 +1,13 @@
│ │  /*
│ │   * jcphuff-neon.c - prepare data for progressive Huffman encoding (Arm Neon)
│ │   *
│ │   * Copyright (C) 2020-2021, Arm Limited.  All Rights Reserved.
│ │ + * Copyright (C) 2022, Matthieu Darbois.  All Rights Reserved.
│ │ + * Copyright (C) 2022, D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * This software is provided 'as-is', without any express or implied
│ │   * warranty.  In no event will the authors be held liable for any damages
│ │   * arising from the use of this software.
│ │   *
│ │   * Permission is granted to anyone to use this software for any purpose,
│ │   * including commercial applications, and to alter it and redistribute it
│ │ @@ -17,15 +19,14 @@
│ │   *    appreciated but is not required.
│ │   * 2. Altered source versions must be plainly marked as such, and must not be
│ │   *    misrepresented as being the original software.
│ │   * 3. This notice may not be removed or altered from any source distribution.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │ -#include "jconfigint.h"
│ │  #include "../../jinclude.h"
│ │  #include "../../jpeglib.h"
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │  #include "neon-compat.h"
│ │ @@ -37,18 +38,18 @@
│ │   *
│ │   * The equivalent scalar C function (encode_mcu_AC_first_prepare()) can be
│ │   * found in jcphuff.c.
│ │   */
│ │  
│ │  void jsimd_encode_mcu_AC_first_prepare_neon
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *values, size_t *zerobits)
│ │ +   UJCOEF *values, size_t *zerobits)
│ │  {
│ │ -  JCOEF *values_ptr = values;
│ │ -  JCOEF *diff_values_ptr = values + DCTSIZE2;
│ │ +  UJCOEF *values_ptr = values;
│ │ +  UJCOEF *diff_values_ptr = values + DCTSIZE2;
│ │  
│ │    /* Rows of coefficients to zero (since they haven't been processed) */
│ │    int i, rows_to_zero = 8;
│ │  
│ │    for (i = 0; i < Sl / 16; i++) {
│ │      int16x8_t coefs1 = vld1q_dup_s16(block + jpeg_natural_order_start[0]);
│ │      coefs1 = vld1q_lane_s16(block + jpeg_natural_order_start[1], coefs1, 1);
│ │ @@ -64,31 +65,31 @@
│ │      coefs2 = vld1q_lane_s16(block + jpeg_natural_order_start[11], coefs2, 3);
│ │      coefs2 = vld1q_lane_s16(block + jpeg_natural_order_start[12], coefs2, 4);
│ │      coefs2 = vld1q_lane_s16(block + jpeg_natural_order_start[13], coefs2, 5);
│ │      coefs2 = vld1q_lane_s16(block + jpeg_natural_order_start[14], coefs2, 6);
│ │      coefs2 = vld1q_lane_s16(block + jpeg_natural_order_start[15], coefs2, 7);
│ │  
│ │      /* Isolate sign of coefficients. */
│ │ -    int16x8_t sign_coefs1 = vshrq_n_s16(coefs1, 15);
│ │ -    int16x8_t sign_coefs2 = vshrq_n_s16(coefs2, 15);
│ │ +    uint16x8_t sign_coefs1 = vreinterpretq_u16_s16(vshrq_n_s16(coefs1, 15));
│ │ +    uint16x8_t sign_coefs2 = vreinterpretq_u16_s16(vshrq_n_s16(coefs2, 15));
│ │      /* Compute absolute value of coefficients and apply point transform Al. */
│ │ -    int16x8_t abs_coefs1 = vabsq_s16(coefs1);
│ │ -    int16x8_t abs_coefs2 = vabsq_s16(coefs2);
│ │ -    coefs1 = vshlq_s16(abs_coefs1, vdupq_n_s16(-Al));
│ │ -    coefs2 = vshlq_s16(abs_coefs2, vdupq_n_s16(-Al));
│ │ +    uint16x8_t abs_coefs1 = vreinterpretq_u16_s16(vabsq_s16(coefs1));
│ │ +    uint16x8_t abs_coefs2 = vreinterpretq_u16_s16(vabsq_s16(coefs2));
│ │ +    abs_coefs1 = vshlq_u16(abs_coefs1, vdupq_n_s16(-Al));
│ │ +    abs_coefs2 = vshlq_u16(abs_coefs2, vdupq_n_s16(-Al));
│ │  
│ │      /* Compute diff values. */
│ │ -    int16x8_t diff1 = veorq_s16(coefs1, sign_coefs1);
│ │ -    int16x8_t diff2 = veorq_s16(coefs2, sign_coefs2);
│ │ +    uint16x8_t diff1 = veorq_u16(abs_coefs1, sign_coefs1);
│ │ +    uint16x8_t diff2 = veorq_u16(abs_coefs2, sign_coefs2);
│ │  
│ │      /* Store transformed coefficients and diff values. */
│ │ -    vst1q_s16(values_ptr, coefs1);
│ │ -    vst1q_s16(values_ptr + DCTSIZE, coefs2);
│ │ -    vst1q_s16(diff_values_ptr, diff1);
│ │ -    vst1q_s16(diff_values_ptr + DCTSIZE, diff2);
│ │ +    vst1q_u16(values_ptr, abs_coefs1);
│ │ +    vst1q_u16(values_ptr + DCTSIZE, abs_coefs2);
│ │ +    vst1q_u16(diff_values_ptr, diff1);
│ │ +    vst1q_u16(diff_values_ptr + DCTSIZE, diff2);
│ │      values_ptr += 16;
│ │      diff_values_ptr += 16;
│ │      jpeg_natural_order_start += 16;
│ │      rows_to_zero -= 2;
│ │    }
│ │  
│ │    /* Same operation but for remaining partial vector */
│ │ @@ -126,31 +127,31 @@
│ │        coefs2 = vld1q_lane_s16(block + jpeg_natural_order_start[8], coefs2, 0);
│ │        FALLTHROUGH               /*FALLTHROUGH*/
│ │      default:
│ │        break;
│ │      }
│ │  
│ │      /* Isolate sign of coefficients. */
│ │ -    int16x8_t sign_coefs1 = vshrq_n_s16(coefs1, 15);
│ │ -    int16x8_t sign_coefs2 = vshrq_n_s16(coefs2, 15);
│ │ +    uint16x8_t sign_coefs1 = vreinterpretq_u16_s16(vshrq_n_s16(coefs1, 15));
│ │ +    uint16x8_t sign_coefs2 = vreinterpretq_u16_s16(vshrq_n_s16(coefs2, 15));
│ │      /* Compute absolute value of coefficients and apply point transform Al. */
│ │ -    int16x8_t abs_coefs1 = vabsq_s16(coefs1);
│ │ -    int16x8_t abs_coefs2 = vabsq_s16(coefs2);
│ │ -    coefs1 = vshlq_s16(abs_coefs1, vdupq_n_s16(-Al));
│ │ -    coefs2 = vshlq_s16(abs_coefs2, vdupq_n_s16(-Al));
│ │ +    uint16x8_t abs_coefs1 = vreinterpretq_u16_s16(vabsq_s16(coefs1));
│ │ +    uint16x8_t abs_coefs2 = vreinterpretq_u16_s16(vabsq_s16(coefs2));
│ │ +    abs_coefs1 = vshlq_u16(abs_coefs1, vdupq_n_s16(-Al));
│ │ +    abs_coefs2 = vshlq_u16(abs_coefs2, vdupq_n_s16(-Al));
│ │  
│ │      /* Compute diff values. */
│ │ -    int16x8_t diff1 = veorq_s16(coefs1, sign_coefs1);
│ │ -    int16x8_t diff2 = veorq_s16(coefs2, sign_coefs2);
│ │ +    uint16x8_t diff1 = veorq_u16(abs_coefs1, sign_coefs1);
│ │ +    uint16x8_t diff2 = veorq_u16(abs_coefs2, sign_coefs2);
│ │  
│ │      /* Store transformed coefficients and diff values. */
│ │ -    vst1q_s16(values_ptr, coefs1);
│ │ -    vst1q_s16(values_ptr + DCTSIZE, coefs2);
│ │ -    vst1q_s16(diff_values_ptr, diff1);
│ │ -    vst1q_s16(diff_values_ptr + DCTSIZE, diff2);
│ │ +    vst1q_u16(values_ptr, abs_coefs1);
│ │ +    vst1q_u16(values_ptr + DCTSIZE, abs_coefs2);
│ │ +    vst1q_u16(diff_values_ptr, diff1);
│ │ +    vst1q_u16(diff_values_ptr + DCTSIZE, diff2);
│ │      values_ptr += 16;
│ │      diff_values_ptr += 16;
│ │      rows_to_zero -= 2;
│ │  
│ │    } else if (remaining_coefs > 0) {
│ │      int16x8_t coefs = vdupq_n_s16(0);
│ │  
│ │ @@ -180,58 +181,58 @@
│ │        coefs = vld1q_lane_s16(block + jpeg_natural_order_start[0], coefs, 0);
│ │        FALLTHROUGH               /*FALLTHROUGH*/
│ │      default:
│ │        break;
│ │      }
│ │  
│ │      /* Isolate sign of coefficients. */
│ │ -    int16x8_t sign_coefs = vshrq_n_s16(coefs, 15);
│ │ +    uint16x8_t sign_coefs = vreinterpretq_u16_s16(vshrq_n_s16(coefs, 15));
│ │      /* Compute absolute value of coefficients and apply point transform Al. */
│ │ -    int16x8_t abs_coefs = vabsq_s16(coefs);
│ │ -    coefs = vshlq_s16(abs_coefs, vdupq_n_s16(-Al));
│ │ +    uint16x8_t abs_coefs = vreinterpretq_u16_s16(vabsq_s16(coefs));
│ │ +    abs_coefs = vshlq_u16(abs_coefs, vdupq_n_s16(-Al));
│ │  
│ │      /* Compute diff values. */
│ │ -    int16x8_t diff = veorq_s16(coefs, sign_coefs);
│ │ +    uint16x8_t diff = veorq_u16(abs_coefs, sign_coefs);
│ │  
│ │      /* Store transformed coefficients and diff values. */
│ │ -    vst1q_s16(values_ptr, coefs);
│ │ -    vst1q_s16(diff_values_ptr, diff);
│ │ +    vst1q_u16(values_ptr, abs_coefs);
│ │ +    vst1q_u16(diff_values_ptr, diff);
│ │      values_ptr += 8;
│ │      diff_values_ptr += 8;
│ │      rows_to_zero--;
│ │    }
│ │  
│ │    /* Zero remaining memory in the values and diff_values blocks. */
│ │    for (i = 0; i < rows_to_zero; i++) {
│ │ -    vst1q_s16(values_ptr, vdupq_n_s16(0));
│ │ -    vst1q_s16(diff_values_ptr, vdupq_n_s16(0));
│ │ +    vst1q_u16(values_ptr, vdupq_n_u16(0));
│ │ +    vst1q_u16(diff_values_ptr, vdupq_n_u16(0));
│ │      values_ptr += 8;
│ │      diff_values_ptr += 8;
│ │    }
│ │  
│ │    /* Construct zerobits bitmap.  A set bit means that the corresponding
│ │     * coefficient != 0.
│ │     */
│ │ -  int16x8_t row0 = vld1q_s16(values + 0 * DCTSIZE);
│ │ -  int16x8_t row1 = vld1q_s16(values + 1 * DCTSIZE);
│ │ -  int16x8_t row2 = vld1q_s16(values + 2 * DCTSIZE);
│ │ -  int16x8_t row3 = vld1q_s16(values + 3 * DCTSIZE);
│ │ -  int16x8_t row4 = vld1q_s16(values + 4 * DCTSIZE);
│ │ -  int16x8_t row5 = vld1q_s16(values + 5 * DCTSIZE);
│ │ -  int16x8_t row6 = vld1q_s16(values + 6 * DCTSIZE);
│ │ -  int16x8_t row7 = vld1q_s16(values + 7 * DCTSIZE);
│ │ -
│ │ -  uint8x8_t row0_eq0 = vmovn_u16(vceqq_s16(row0, vdupq_n_s16(0)));
│ │ -  uint8x8_t row1_eq0 = vmovn_u16(vceqq_s16(row1, vdupq_n_s16(0)));
│ │ -  uint8x8_t row2_eq0 = vmovn_u16(vceqq_s16(row2, vdupq_n_s16(0)));
│ │ -  uint8x8_t row3_eq0 = vmovn_u16(vceqq_s16(row3, vdupq_n_s16(0)));
│ │ -  uint8x8_t row4_eq0 = vmovn_u16(vceqq_s16(row4, vdupq_n_s16(0)));
│ │ -  uint8x8_t row5_eq0 = vmovn_u16(vceqq_s16(row5, vdupq_n_s16(0)));
│ │ -  uint8x8_t row6_eq0 = vmovn_u16(vceqq_s16(row6, vdupq_n_s16(0)));
│ │ -  uint8x8_t row7_eq0 = vmovn_u16(vceqq_s16(row7, vdupq_n_s16(0)));
│ │ +  uint16x8_t row0 = vld1q_u16(values + 0 * DCTSIZE);
│ │ +  uint16x8_t row1 = vld1q_u16(values + 1 * DCTSIZE);
│ │ +  uint16x8_t row2 = vld1q_u16(values + 2 * DCTSIZE);
│ │ +  uint16x8_t row3 = vld1q_u16(values + 3 * DCTSIZE);
│ │ +  uint16x8_t row4 = vld1q_u16(values + 4 * DCTSIZE);
│ │ +  uint16x8_t row5 = vld1q_u16(values + 5 * DCTSIZE);
│ │ +  uint16x8_t row6 = vld1q_u16(values + 6 * DCTSIZE);
│ │ +  uint16x8_t row7 = vld1q_u16(values + 7 * DCTSIZE);
│ │ +
│ │ +  uint8x8_t row0_eq0 = vmovn_u16(vceqq_u16(row0, vdupq_n_u16(0)));
│ │ +  uint8x8_t row1_eq0 = vmovn_u16(vceqq_u16(row1, vdupq_n_u16(0)));
│ │ +  uint8x8_t row2_eq0 = vmovn_u16(vceqq_u16(row2, vdupq_n_u16(0)));
│ │ +  uint8x8_t row3_eq0 = vmovn_u16(vceqq_u16(row3, vdupq_n_u16(0)));
│ │ +  uint8x8_t row4_eq0 = vmovn_u16(vceqq_u16(row4, vdupq_n_u16(0)));
│ │ +  uint8x8_t row5_eq0 = vmovn_u16(vceqq_u16(row5, vdupq_n_u16(0)));
│ │ +  uint8x8_t row6_eq0 = vmovn_u16(vceqq_u16(row6, vdupq_n_u16(0)));
│ │ +  uint8x8_t row7_eq0 = vmovn_u16(vceqq_u16(row7, vdupq_n_u16(0)));
│ │  
│ │    /* { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 } */
│ │    const uint8x8_t bitmap_mask =
│ │      vreinterpret_u8_u64(vmov_n_u64(0x8040201008040201));
│ │  
│ │    row0_eq0 = vand_u8(row0_eq0, bitmap_mask);
│ │    row1_eq0 = vand_u8(row1_eq0, bitmap_mask);
│ │ @@ -270,23 +271,23 @@
│ │   *
│ │   * The equivalent scalar C function (encode_mcu_AC_refine_prepare()) can be
│ │   * found in jcphuff.c.
│ │   */
│ │  
│ │  int jsimd_encode_mcu_AC_refine_prepare_neon
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *absvalues, size_t *bits)
│ │ +   UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    /* Temporary storage buffers for data used to compute the signbits bitmap and
│ │     * the end-of-block (EOB) position
│ │     */
│ │    uint8_t coef_sign_bits[64];
│ │    uint8_t coef_eq1_bits[64];
│ │  
│ │ -  JCOEF *absvalues_ptr = absvalues;
│ │ +  UJCOEF *absvalues_ptr = absvalues;
│ │    uint8_t *coef_sign_bits_ptr = coef_sign_bits;
│ │    uint8_t *eq1_bits_ptr = coef_eq1_bits;
│ │  
│ │    /* Rows of coefficients to zero (since they haven't been processed) */
│ │    int i, rows_to_zero = 8;
│ │  
│ │    for (i = 0; i < Sl / 16; i++) {
│ │ @@ -312,26 +313,26 @@
│ │        vmovn_u16(vreinterpretq_u16_s16(vshrq_n_s16(coefs1, 15)));
│ │      uint8x8_t sign_coefs2 =
│ │        vmovn_u16(vreinterpretq_u16_s16(vshrq_n_s16(coefs2, 15)));
│ │      vst1_u8(coef_sign_bits_ptr, sign_coefs1);
│ │      vst1_u8(coef_sign_bits_ptr + DCTSIZE, sign_coefs2);
│ │  
│ │      /* Compute absolute value of coefficients and apply point transform Al. */
│ │ -    int16x8_t abs_coefs1 = vabsq_s16(coefs1);
│ │ -    int16x8_t abs_coefs2 = vabsq_s16(coefs2);
│ │ -    coefs1 = vshlq_s16(abs_coefs1, vdupq_n_s16(-Al));
│ │ -    coefs2 = vshlq_s16(abs_coefs2, vdupq_n_s16(-Al));
│ │ -    vst1q_s16(absvalues_ptr, coefs1);
│ │ -    vst1q_s16(absvalues_ptr + DCTSIZE, coefs2);
│ │ +    uint16x8_t abs_coefs1 = vreinterpretq_u16_s16(vabsq_s16(coefs1));
│ │ +    uint16x8_t abs_coefs2 = vreinterpretq_u16_s16(vabsq_s16(coefs2));
│ │ +    abs_coefs1 = vshlq_u16(abs_coefs1, vdupq_n_s16(-Al));
│ │ +    abs_coefs2 = vshlq_u16(abs_coefs2, vdupq_n_s16(-Al));
│ │ +    vst1q_u16(absvalues_ptr, abs_coefs1);
│ │ +    vst1q_u16(absvalues_ptr + DCTSIZE, abs_coefs2);
│ │  
│ │      /* Test whether transformed coefficient values == 1 (used to find EOB
│ │       * position.)
│ │       */
│ │ -    uint8x8_t coefs_eq11 = vmovn_u16(vceqq_s16(coefs1, vdupq_n_s16(1)));
│ │ -    uint8x8_t coefs_eq12 = vmovn_u16(vceqq_s16(coefs2, vdupq_n_s16(1)));
│ │ +    uint8x8_t coefs_eq11 = vmovn_u16(vceqq_u16(abs_coefs1, vdupq_n_u16(1)));
│ │ +    uint8x8_t coefs_eq12 = vmovn_u16(vceqq_u16(abs_coefs2, vdupq_n_u16(1)));
│ │      vst1_u8(eq1_bits_ptr, coefs_eq11);
│ │      vst1_u8(eq1_bits_ptr + DCTSIZE, coefs_eq12);
│ │  
│ │      absvalues_ptr += 16;
│ │      coef_sign_bits_ptr += 16;
│ │      eq1_bits_ptr += 16;
│ │      jpeg_natural_order_start += 16;
│ │ @@ -381,26 +382,26 @@
│ │        vmovn_u16(vreinterpretq_u16_s16(vshrq_n_s16(coefs1, 15)));
│ │      uint8x8_t sign_coefs2 =
│ │        vmovn_u16(vreinterpretq_u16_s16(vshrq_n_s16(coefs2, 15)));
│ │      vst1_u8(coef_sign_bits_ptr, sign_coefs1);
│ │      vst1_u8(coef_sign_bits_ptr + DCTSIZE, sign_coefs2);
│ │  
│ │      /* Compute absolute value of coefficients and apply point transform Al. */
│ │ -    int16x8_t abs_coefs1 = vabsq_s16(coefs1);
│ │ -    int16x8_t abs_coefs2 = vabsq_s16(coefs2);
│ │ -    coefs1 = vshlq_s16(abs_coefs1, vdupq_n_s16(-Al));
│ │ -    coefs2 = vshlq_s16(abs_coefs2, vdupq_n_s16(-Al));
│ │ -    vst1q_s16(absvalues_ptr, coefs1);
│ │ -    vst1q_s16(absvalues_ptr + DCTSIZE, coefs2);
│ │ +    uint16x8_t abs_coefs1 = vreinterpretq_u16_s16(vabsq_s16(coefs1));
│ │ +    uint16x8_t abs_coefs2 = vreinterpretq_u16_s16(vabsq_s16(coefs2));
│ │ +    abs_coefs1 = vshlq_u16(abs_coefs1, vdupq_n_s16(-Al));
│ │ +    abs_coefs2 = vshlq_u16(abs_coefs2, vdupq_n_s16(-Al));
│ │ +    vst1q_u16(absvalues_ptr, abs_coefs1);
│ │ +    vst1q_u16(absvalues_ptr + DCTSIZE, abs_coefs2);
│ │  
│ │      /* Test whether transformed coefficient values == 1 (used to find EOB
│ │       * position.)
│ │       */
│ │ -    uint8x8_t coefs_eq11 = vmovn_u16(vceqq_s16(coefs1, vdupq_n_s16(1)));
│ │ -    uint8x8_t coefs_eq12 = vmovn_u16(vceqq_s16(coefs2, vdupq_n_s16(1)));
│ │ +    uint8x8_t coefs_eq11 = vmovn_u16(vceqq_u16(abs_coefs1, vdupq_n_u16(1)));
│ │ +    uint8x8_t coefs_eq12 = vmovn_u16(vceqq_u16(abs_coefs2, vdupq_n_u16(1)));
│ │      vst1_u8(eq1_bits_ptr, coefs_eq11);
│ │      vst1_u8(eq1_bits_ptr + DCTSIZE, coefs_eq12);
│ │  
│ │      absvalues_ptr += 16;
│ │      coef_sign_bits_ptr += 16;
│ │      eq1_bits_ptr += 16;
│ │      jpeg_natural_order_start += 16;
│ │ @@ -440,58 +441,58 @@
│ │  
│ │      /* Compute and store data for signbits bitmap. */
│ │      uint8x8_t sign_coefs =
│ │        vmovn_u16(vreinterpretq_u16_s16(vshrq_n_s16(coefs, 15)));
│ │      vst1_u8(coef_sign_bits_ptr, sign_coefs);
│ │  
│ │      /* Compute absolute value of coefficients and apply point transform Al. */
│ │ -    int16x8_t abs_coefs = vabsq_s16(coefs);
│ │ -    coefs = vshlq_s16(abs_coefs, vdupq_n_s16(-Al));
│ │ -    vst1q_s16(absvalues_ptr, coefs);
│ │ +    uint16x8_t abs_coefs = vreinterpretq_u16_s16(vabsq_s16(coefs));
│ │ +    abs_coefs = vshlq_u16(abs_coefs, vdupq_n_s16(-Al));
│ │ +    vst1q_u16(absvalues_ptr, abs_coefs);
│ │  
│ │      /* Test whether transformed coefficient values == 1 (used to find EOB
│ │       * position.)
│ │       */
│ │ -    uint8x8_t coefs_eq1 = vmovn_u16(vceqq_s16(coefs, vdupq_n_s16(1)));
│ │ +    uint8x8_t coefs_eq1 = vmovn_u16(vceqq_u16(abs_coefs, vdupq_n_u16(1)));
│ │      vst1_u8(eq1_bits_ptr, coefs_eq1);
│ │  
│ │      absvalues_ptr += 8;
│ │      coef_sign_bits_ptr += 8;
│ │      eq1_bits_ptr += 8;
│ │      rows_to_zero--;
│ │    }
│ │  
│ │    /* Zero remaining memory in blocks. */
│ │    for (i = 0; i < rows_to_zero; i++) {
│ │ -    vst1q_s16(absvalues_ptr, vdupq_n_s16(0));
│ │ +    vst1q_u16(absvalues_ptr, vdupq_n_u16(0));
│ │      vst1_u8(coef_sign_bits_ptr, vdup_n_u8(0));
│ │      vst1_u8(eq1_bits_ptr, vdup_n_u8(0));
│ │      absvalues_ptr += 8;
│ │      coef_sign_bits_ptr += 8;
│ │      eq1_bits_ptr += 8;
│ │    }
│ │  
│ │    /* Construct zerobits bitmap. */
│ │ -  int16x8_t abs_row0 = vld1q_s16(absvalues + 0 * DCTSIZE);
│ │ -  int16x8_t abs_row1 = vld1q_s16(absvalues + 1 * DCTSIZE);
│ │ -  int16x8_t abs_row2 = vld1q_s16(absvalues + 2 * DCTSIZE);
│ │ -  int16x8_t abs_row3 = vld1q_s16(absvalues + 3 * DCTSIZE);
│ │ -  int16x8_t abs_row4 = vld1q_s16(absvalues + 4 * DCTSIZE);
│ │ -  int16x8_t abs_row5 = vld1q_s16(absvalues + 5 * DCTSIZE);
│ │ -  int16x8_t abs_row6 = vld1q_s16(absvalues + 6 * DCTSIZE);
│ │ -  int16x8_t abs_row7 = vld1q_s16(absvalues + 7 * DCTSIZE);
│ │ -
│ │ -  uint8x8_t abs_row0_eq0 = vmovn_u16(vceqq_s16(abs_row0, vdupq_n_s16(0)));
│ │ -  uint8x8_t abs_row1_eq0 = vmovn_u16(vceqq_s16(abs_row1, vdupq_n_s16(0)));
│ │ -  uint8x8_t abs_row2_eq0 = vmovn_u16(vceqq_s16(abs_row2, vdupq_n_s16(0)));
│ │ -  uint8x8_t abs_row3_eq0 = vmovn_u16(vceqq_s16(abs_row3, vdupq_n_s16(0)));
│ │ -  uint8x8_t abs_row4_eq0 = vmovn_u16(vceqq_s16(abs_row4, vdupq_n_s16(0)));
│ │ -  uint8x8_t abs_row5_eq0 = vmovn_u16(vceqq_s16(abs_row5, vdupq_n_s16(0)));
│ │ -  uint8x8_t abs_row6_eq0 = vmovn_u16(vceqq_s16(abs_row6, vdupq_n_s16(0)));
│ │ -  uint8x8_t abs_row7_eq0 = vmovn_u16(vceqq_s16(abs_row7, vdupq_n_s16(0)));
│ │ +  uint16x8_t abs_row0 = vld1q_u16(absvalues + 0 * DCTSIZE);
│ │ +  uint16x8_t abs_row1 = vld1q_u16(absvalues + 1 * DCTSIZE);
│ │ +  uint16x8_t abs_row2 = vld1q_u16(absvalues + 2 * DCTSIZE);
│ │ +  uint16x8_t abs_row3 = vld1q_u16(absvalues + 3 * DCTSIZE);
│ │ +  uint16x8_t abs_row4 = vld1q_u16(absvalues + 4 * DCTSIZE);
│ │ +  uint16x8_t abs_row5 = vld1q_u16(absvalues + 5 * DCTSIZE);
│ │ +  uint16x8_t abs_row6 = vld1q_u16(absvalues + 6 * DCTSIZE);
│ │ +  uint16x8_t abs_row7 = vld1q_u16(absvalues + 7 * DCTSIZE);
│ │ +
│ │ +  uint8x8_t abs_row0_eq0 = vmovn_u16(vceqq_u16(abs_row0, vdupq_n_u16(0)));
│ │ +  uint8x8_t abs_row1_eq0 = vmovn_u16(vceqq_u16(abs_row1, vdupq_n_u16(0)));
│ │ +  uint8x8_t abs_row2_eq0 = vmovn_u16(vceqq_u16(abs_row2, vdupq_n_u16(0)));
│ │ +  uint8x8_t abs_row3_eq0 = vmovn_u16(vceqq_u16(abs_row3, vdupq_n_u16(0)));
│ │ +  uint8x8_t abs_row4_eq0 = vmovn_u16(vceqq_u16(abs_row4, vdupq_n_u16(0)));
│ │ +  uint8x8_t abs_row5_eq0 = vmovn_u16(vceqq_u16(abs_row5, vdupq_n_u16(0)));
│ │ +  uint8x8_t abs_row6_eq0 = vmovn_u16(vceqq_u16(abs_row6, vdupq_n_u16(0)));
│ │ +  uint8x8_t abs_row7_eq0 = vmovn_u16(vceqq_u16(abs_row7, vdupq_n_u16(0)));
│ │  
│ │    /* { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 } */
│ │    const uint8x8_t bitmap_mask =
│ │      vreinterpret_u8_u64(vmov_n_u64(0x8040201008040201));
│ │  
│ │    abs_row0_eq0 = vand_u8(abs_row0_eq0, bitmap_mask);
│ │    abs_row1_eq0 = vand_u8(abs_row1_eq0, bitmap_mask);
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jcsample-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jcsample-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdcolext-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdcolext-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdcolor-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdcolor-neon.c
│ │┄ Files 1% similar despite different names
│ │ @@ -17,15 +17,14 @@
│ │   *    appreciated but is not required.
│ │   * 2. Altered source versions must be plainly marked as such, and must not be
│ │   *    misrepresented as being the original software.
│ │   * 3. This notice may not be removed or altered from any source distribution.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │ -#include "jconfigint.h"
│ │  #include "../../jinclude.h"
│ │  #include "../../jpeglib.h"
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │  #include "align.h"
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdmerge-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdmerge-neon.c
│ │┄ Files 1% similar despite different names
│ │ @@ -17,15 +17,14 @@
│ │   *    appreciated but is not required.
│ │   * 2. Altered source versions must be plainly marked as such, and must not be
│ │   *    misrepresented as being the original software.
│ │   * 3. This notice may not be removed or altered from any source distribution.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │ -#include "jconfigint.h"
│ │  #include "../../jinclude.h"
│ │  #include "../../jpeglib.h"
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │  #include "align.h"
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdmrgext-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdmrgext-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jdsample-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jdsample-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jfdctfst-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jfdctfst-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jfdctint-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jfdctint-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jidctfst-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctfst-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jidctint-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctint-neon.c
│ │┄ Files 0% similar despite different names
│ │ @@ -18,15 +18,14 @@
│ │   *    appreciated but is not required.
│ │   * 2. Altered source versions must be plainly marked as such, and must not be
│ │   *    misrepresented as being the original software.
│ │   * 3. This notice may not be removed or altered from any source distribution.
│ │   */
│ │  
│ │  #define JPEG_INTERNALS
│ │ -#include "jconfigint.h"
│ │  #include "../../jinclude.h"
│ │  #include "../../jpeglib.h"
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │  #include "align.h"
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jidctred-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctred-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/jquanti-neon.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/jquanti-neon.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/arm/neon-compat.h.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/arm/neon-compat.h.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jchuff-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jchuff-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcphuff-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcphuff-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctflt-3dn.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctflt-3dn.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctflt-sse.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctflt-sse.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctfst-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctfst-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctfst-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctfst-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-3dn.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-3dn.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-sse.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-sse.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctfst-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctfst-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctfst-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctfst-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctred-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctred-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jidctred-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctred-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquant-3dn.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-3dn.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquant-mmx.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-mmx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquant-sse.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-sse.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquantf-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquantf-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquanti-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquanti-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jquanti-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jquanti-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jsimd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jsimd.c
│ │┄ Files 4% similar despite different names
│ │ @@ -1,13 +1,13 @@
│ │  /*
│ │   * jsimd_i386.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2009-2011, 2013-2014, 2016, 2018, 2022, D. R. Commander.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2009-2011, 2013-2014, 2016, 2018, 2022-2023, D. R. Commander.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   * This file contains the interface between the "normal" portions
│ │   * of the library and the SIMD implementations when running on a
│ │ @@ -17,32 +17,29 @@
│ │  #define JPEG_INTERNALS
│ │  #include "../../jinclude.h"
│ │  #include "../../jpeglib.h"
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  /*
│ │   * In the PIC cases, we have no guarantee that constants will keep
│ │   * their alignment. This macro allows us to verify it at runtime.
│ │   */
│ │  #define IS_ALIGNED(ptr, order)  (((unsigned)ptr & ((1 << order) - 1)) == 0)
│ │  
│ │  #define IS_ALIGNED_SSE(ptr)  (IS_ALIGNED(ptr, 4)) /* 16 byte alignment */
│ │  #define IS_ALIGNED_AVX(ptr)  (IS_ALIGNED(ptr, 5)) /* 32 byte alignment */
│ │  
│ │ -static unsigned int simd_support = (unsigned int)(~0);
│ │ -static unsigned int simd_huffman = 1;
│ │ +static THREAD_LOCAL unsigned int simd_support = (unsigned int)(~0);
│ │ +static THREAD_LOCAL unsigned int simd_huffman = 1;
│ │  
│ │  /*
│ │   * Check what SIMD accelerations are supported.
│ │ - *
│ │ - * FIXME: This code is racy under a multi-threaded environment.
│ │   */
│ │  LOCAL(void)
│ │  init_simd(void)
│ │  {
│ │  #ifndef NO_GETENV
│ │    char env[2] = { 0 };
│ │  #endif
│ │ @@ -157,14 +154,17 @@
│ │                        JSAMPIMAGE output_buf, JDIMENSION output_row,
│ │                        int num_rows)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │    void (*sse2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │    void (*mmxfct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->in_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_extrgb_ycc_convert_avx2;
│ │      sse2fct = jsimd_extrgb_ycc_convert_sse2;
│ │      mmxfct = jsimd_extrgb_ycc_convert_mmx;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │ @@ -216,14 +216,17 @@
│ │                         JSAMPIMAGE output_buf, JDIMENSION output_row,
│ │                         int num_rows)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │    void (*sse2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │    void (*mmxfct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->in_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_extrgb_gray_convert_avx2;
│ │      sse2fct = jsimd_extrgb_gray_convert_sse2;
│ │      mmxfct = jsimd_extrgb_gray_convert_mmx;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │ @@ -275,14 +278,17 @@
│ │                        JDIMENSION input_row, JSAMPARRAY output_buf,
│ │                        int num_rows)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int);
│ │    void (*sse2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int);
│ │    void (*mmxfct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->out_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_ycc_extrgb_convert_avx2;
│ │      sse2fct = jsimd_ycc_extrgb_convert_sse2;
│ │      mmxfct = jsimd_ycc_extrgb_convert_mmx;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │ @@ -378,14 +384,17 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v2_downsample(j_compress_ptr cinfo, jpeg_component_info *compptr,
│ │                        JSAMPARRAY input_data, JSAMPARRAY output_data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v2_downsample_avx2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │                                 compptr->v_samp_factor,
│ │                                 compptr->width_in_blocks, input_data,
│ │                                 output_data);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_h2v2_downsample_sse2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │ @@ -398,14 +407,17 @@
│ │                                input_data, output_data);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v1_downsample(j_compress_ptr cinfo, jpeg_component_info *compptr,
│ │                        JSAMPARRAY input_data, JSAMPARRAY output_data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v1_downsample_avx2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │                                 compptr->v_samp_factor,
│ │                                 compptr->width_in_blocks, input_data,
│ │                                 output_data);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_h2v1_downsample_sse2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │ @@ -460,14 +472,17 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v2_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                      JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v2_upsample_avx2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_h2v2_upsample_sse2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │    else
│ │ @@ -475,14 +490,17 @@
│ │                              input_data, output_data_ptr);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v1_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                      JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v1_upsample_avx2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_h2v1_upsample_sse2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │    else
│ │ @@ -536,14 +554,17 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v2_fancy_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                            JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v2_fancy_upsample_avx2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │                                     output_data_ptr);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_h2v2_fancy_upsample_sse2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │ @@ -554,14 +575,17 @@
│ │                                    output_data_ptr);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v1_fancy_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                            JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v1_fancy_upsample_avx2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │                                     output_data_ptr);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_h2v1_fancy_upsample_sse2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │ @@ -622,14 +646,17 @@
│ │  jsimd_h2v2_merged_upsample(j_decompress_ptr cinfo, JSAMPIMAGE input_buf,
│ │                             JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │    void (*sse2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │    void (*mmxfct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->out_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_h2v2_extrgb_merged_upsample_avx2;
│ │      sse2fct = jsimd_h2v2_extrgb_merged_upsample_sse2;
│ │      mmxfct = jsimd_h2v2_extrgb_merged_upsample_mmx;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │ @@ -680,14 +707,17 @@
│ │  jsimd_h2v1_merged_upsample(j_decompress_ptr cinfo, JSAMPIMAGE input_buf,
│ │                             JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │    void (*sse2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │    void (*mmxfct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->out_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_h2v1_extrgb_merged_upsample_avx2;
│ │      sse2fct = jsimd_h2v1_extrgb_merged_upsample_sse2;
│ │      mmxfct = jsimd_h2v1_extrgb_merged_upsample_mmx;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │ @@ -784,26 +814,32 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_convsamp(JSAMPARRAY sample_data, JDIMENSION start_col,
│ │                 DCTELEM *workspace)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_convsamp_avx2(sample_data, start_col, workspace);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_convsamp_sse2(sample_data, start_col, workspace);
│ │    else
│ │      jsimd_convsamp_mmx(sample_data, start_col, workspace);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_convsamp_float(JSAMPARRAY sample_data, JDIMENSION start_col,
│ │                       FAST_FLOAT *workspace)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_SSE2)
│ │      jsimd_convsamp_float_sse2(sample_data, start_col, workspace);
│ │    else if (simd_support & JSIMD_SSE)
│ │      jsimd_convsamp_float_sse(sample_data, start_col, workspace);
│ │    else
│ │      jsimd_convsamp_float_3dnow(sample_data, start_col, workspace);
│ │  }
│ │ @@ -866,34 +902,43 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_fdct_islow(DCTELEM *data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_fdct_islow_avx2(data);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_fdct_islow_sse2(data);
│ │    else
│ │      jsimd_fdct_islow_mmx(data);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_fdct_ifast(DCTELEM *data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if ((simd_support & JSIMD_SSE2) && IS_ALIGNED_SSE(jconst_fdct_islow_sse2))
│ │      jsimd_fdct_ifast_sse2(data);
│ │    else
│ │      jsimd_fdct_ifast_mmx(data);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_fdct_float(FAST_FLOAT *data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if ((simd_support & JSIMD_SSE) && IS_ALIGNED_SSE(jconst_fdct_float_sse))
│ │      jsimd_fdct_float_sse(data);
│ │    else if (simd_support & JSIMD_3DNOW)
│ │      jsimd_fdct_float_3dnow(data);
│ │  }
│ │  
│ │  GLOBAL(int)
│ │ @@ -941,26 +986,32 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_quantize(JCOEFPTR coef_block, DCTELEM *divisors, DCTELEM *workspace)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_quantize_avx2(coef_block, divisors, workspace);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_quantize_sse2(coef_block, divisors, workspace);
│ │    else
│ │      jsimd_quantize_mmx(coef_block, divisors, workspace);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_quantize_float(JCOEFPTR coef_block, FAST_FLOAT *divisors,
│ │                       FAST_FLOAT *workspace)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_SSE2)
│ │      jsimd_quantize_float_sse2(coef_block, divisors, workspace);
│ │    else if (simd_support & JSIMD_SSE)
│ │      jsimd_quantize_float_sse(coef_block, divisors, workspace);
│ │    else
│ │      jsimd_quantize_float_3dnow(coef_block, divisors, workspace);
│ │  }
│ │ @@ -1016,26 +1067,32 @@
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_idct_2x2(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                 JCOEFPTR coef_block, JSAMPARRAY output_buf,
│ │                 JDIMENSION output_col)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if ((simd_support & JSIMD_SSE2) && IS_ALIGNED_SSE(jconst_idct_red_sse2))
│ │      jsimd_idct_2x2_sse2(compptr->dct_table, coef_block, output_buf,
│ │                          output_col);
│ │    else
│ │      jsimd_idct_2x2_mmx(compptr->dct_table, coef_block, output_buf, output_col);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_idct_4x4(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                 JCOEFPTR coef_block, JSAMPARRAY output_buf,
│ │                 JDIMENSION output_col)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if ((simd_support & JSIMD_SSE2) && IS_ALIGNED_SSE(jconst_idct_red_sse2))
│ │      jsimd_idct_4x4_sse2(compptr->dct_table, coef_block, output_buf,
│ │                          output_col);
│ │    else
│ │      jsimd_idct_4x4_mmx(compptr->dct_table, coef_block, output_buf, output_col);
│ │  }
│ │  
│ │ @@ -1122,14 +1179,17 @@
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_idct_islow(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                   JCOEFPTR coef_block, JSAMPARRAY output_buf,
│ │                   JDIMENSION output_col)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_idct_islow_avx2(compptr->dct_table, coef_block, output_buf,
│ │                            output_col);
│ │    else if (simd_support & JSIMD_SSE2)
│ │      jsimd_idct_islow_sse2(compptr->dct_table, coef_block, output_buf,
│ │                            output_col);
│ │    else
│ │ @@ -1138,27 +1198,33 @@
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_idct_ifast(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                   JCOEFPTR coef_block, JSAMPARRAY output_buf,
│ │                   JDIMENSION output_col)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if ((simd_support & JSIMD_SSE2) && IS_ALIGNED_SSE(jconst_idct_ifast_sse2))
│ │      jsimd_idct_ifast_sse2(compptr->dct_table, coef_block, output_buf,
│ │                            output_col);
│ │    else
│ │      jsimd_idct_ifast_mmx(compptr->dct_table, coef_block, output_buf,
│ │                           output_col);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_idct_float(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                   JCOEFPTR coef_block, JSAMPARRAY output_buf,
│ │                   JDIMENSION output_col)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if ((simd_support & JSIMD_SSE2) && IS_ALIGNED_SSE(jconst_idct_float_sse2))
│ │      jsimd_idct_float_sse2(compptr->dct_table, coef_block, output_buf,
│ │                            output_col);
│ │    else if ((simd_support & JSIMD_SSE) && IS_ALIGNED_SSE(jconst_idct_float_sse))
│ │      jsimd_idct_float_sse(compptr->dct_table, coef_block, output_buf,
│ │                           output_col);
│ │    else
│ │ @@ -1208,15 +1274,15 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │    jsimd_encode_mcu_AC_first_prepare_sse2(block, jpeg_natural_order_start,
│ │                                           Sl, Al, values, zerobits);
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │ @@ -1234,13 +1300,13 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return jsimd_encode_mcu_AC_refine_prepare_sse2(block,
│ │                                                   jpeg_natural_order_start,
│ │                                                   Sl, Al, absvalues, bits);
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/i386/jsimdcpu.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/i386/jsimdcpu.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/jsimd.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/jsimd.h
│ │┄ Files 0% similar despite different names
│ │ @@ -1,15 +1,15 @@
│ │  /*
│ │   * simd/jsimd.h
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2011, 2014-2016, 2018, 2020, D. R. Commander.
│ │ + * Copyright (C) 2011, 2014-2016, 2018, 2020, 2022, D. R. Commander.
│ │   * Copyright (C) 2013-2014, MIPS Technologies, Inc., California.
│ │   * Copyright (C) 2014, Linaro Limited.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   * Copyright (C) 2016-2018, Loongson Technology Corporation Limited, BeiJing.
│ │   * Copyright (C) 2020, Arm Limited.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │ @@ -1239,20 +1239,20 @@
│ │     c_derived_tbl *dctbl, c_derived_tbl *actbl);
│ │  
│ │  #endif
│ │  
│ │  /* Progressive Huffman encoding */
│ │  EXTERN(void) jsimd_encode_mcu_AC_first_prepare_sse2
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *values, size_t *zerobits);
│ │ +   UJCOEF *values, size_t *zerobits);
│ │  
│ │  EXTERN(void) jsimd_encode_mcu_AC_first_prepare_neon
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *values, size_t *zerobits);
│ │ +   UJCOEF *values, size_t *zerobits);
│ │  
│ │  EXTERN(int) jsimd_encode_mcu_AC_refine_prepare_sse2
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *absvalues, size_t *bits);
│ │ +   UJCOEF *absvalues, size_t *bits);
│ │  
│ │  EXTERN(int) jsimd_encode_mcu_AC_refine_prepare_neon
│ │    (const JCOEF *block, const int *jpeg_natural_order_start, int Sl, int Al,
│ │ -   JCOEF *absvalues, size_t *bits);
│ │ +   UJCOEF *absvalues, size_t *bits);
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips/jsimd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd.c
│ │┄ Files 0% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jsimd_mips.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2009-2011, 2014, 2016, 2018, 2020, D. R. Commander.
│ │ + * Copyright (C) 2009-2011, 2014, 2016, 2018, 2020, 2022, D. R. Commander.
│ │   * Copyright (C) 2013-2014, MIPS Technologies, Inc., California.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   * This file contains the interface between the "normal" portions
│ │   * of the library and the SIMD implementations when running on a
│ │ @@ -21,15 +21,15 @@
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │  
│ │  #include <ctype.h>
│ │  
│ │ -static unsigned int simd_support = ~0;
│ │ +static THREAD_LOCAL unsigned int simd_support = ~0;
│ │  
│ │  #if !(defined(__mips_dsp) && (__mips_dsp_rev >= 2)) && defined(__linux__)
│ │  
│ │  LOCAL(void)
│ │  parse_proc_cpuinfo(const char *search_string)
│ │  {
│ │    const char *file_name = "/proc/cpuinfo";
│ │ @@ -51,16 +51,14 @@
│ │    /* Did not find string in the proc file, or not Linux ELF. */
│ │  }
│ │  
│ │  #endif
│ │  
│ │  /*
│ │   * Check what SIMD accelerations are supported.
│ │ - *
│ │ - * FIXME: This code is racy under a multi-threaded environment.
│ │   */
│ │  LOCAL(void)
│ │  init_simd(void)
│ │  {
│ │  #ifndef NO_GETENV
│ │    char *env = NULL;
│ │  #endif
│ │ @@ -1122,24 +1120,24 @@
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return 0;
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips/jsimd_dspr2.S
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd_dspr2.S
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips/jsimd_dspr2_asm.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd_dspr2_asm.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jccolext-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jccolext-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jccolor-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jccolor-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcgray-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcgray-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcgryext-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcgryext-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcsample-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcsample-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jcsample.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcsample.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdcolext-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdcolext-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdcolor-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdcolor-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdmerge-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdmerge-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdmrgext-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdmrgext-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jdsample-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdsample-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jfdctfst-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jfdctfst-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jfdctint-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jfdctint-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jidctfst-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jidctfst-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jidctint-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jidctint-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jquanti-mmi.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jquanti-mmi.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jsimd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jsimd.c
│ │┄ Files 1% similar despite different names
│ │ @@ -1,14 +1,14 @@
│ │  /*
│ │   * jsimd_mips64.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2009-2011, 2014, 2016, 2018, D. R. Commander.
│ │ + * Copyright (C) 2009-2011, 2014, 2016, 2018, 2022, D. R. Commander.
│ │   * Copyright (C) 2013-2014, MIPS Technologies, Inc., California.
│ │ - * Copyright (C) 2015, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2015, 2018, 2022, Matthieu Darbois.
│ │   * Copyright (C) 2016-2018, Loongson Technology Corporation Limited, BeiJing.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   * This file contains the interface between the "normal" portions
│ │ @@ -22,15 +22,15 @@
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │  
│ │  #include <ctype.h>
│ │  
│ │ -static unsigned int simd_support = ~0;
│ │ +static THREAD_LOCAL unsigned int simd_support = ~0;
│ │  
│ │  #if defined(__linux__)
│ │  
│ │  #define SOMEWHAT_SANE_PROC_CPUINFO_SIZE_LIMIT  (1024 * 1024)
│ │  
│ │  LOCAL(int)
│ │  check_feature(char *buffer, char *feature)
│ │ @@ -90,16 +90,14 @@
│ │    return 1;
│ │  }
│ │  
│ │  #endif
│ │  
│ │  /*
│ │   * Check what SIMD accelerations are supported.
│ │ - *
│ │ - * FIXME: This code is racy under a multi-threaded environment.
│ │   */
│ │  LOCAL(void)
│ │  init_simd(void)
│ │  {
│ │  #ifndef NO_GETENV
│ │    char *env = NULL;
│ │  #endif
│ │ @@ -845,24 +843,24 @@
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return 0;
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/jsimd_mmi.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/jsimd_mmi.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/mips64/loongson-mmintrin.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/mips64/loongson-mmintrin.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jcolsamp.inc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jcolsamp.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jdct.inc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jdct.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdcfg.inc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdcfg.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdcfg.inc.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdcfg.inc.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdext.inc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdext.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jccolext-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jccolext-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jccolor-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jccolor-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcgray-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcgray-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcgryext-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcgryext-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcsample-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcsample-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jcsample.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcsample.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdcolext-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdcolext-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdcolor-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdcolor-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdmerge-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdmerge-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdmrgext-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdmrgext-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jdsample-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdsample-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jfdctfst-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jfdctfst-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jfdctint-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jfdctint-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jidctfst-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jidctfst-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jidctint-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jidctint-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jquanti-altivec.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jquanti-altivec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jsimd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jsimd.c
│ │┄ Files 0% similar despite different names
│ │ @@ -1,13 +1,13 @@
│ │  /*
│ │   * jsimd_powerpc.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2009-2011, 2014-2016, 2018, D. R. Commander.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2009-2011, 2014-2016, 2018, 2022, D. R. Commander.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   * This file contains the interface between the "normal" portions
│ │   * of the library and the SIMD implementations when running on a
│ │ @@ -37,15 +37,15 @@
│ │  #include <sys/sysctl.h>
│ │  #include <machine/cpu.h>
│ │  #elif defined(__FreeBSD__)
│ │  #include <machine/cpu.h>
│ │  #include <sys/auxv.h>
│ │  #endif
│ │  
│ │ -static unsigned int simd_support = ~0;
│ │ +static THREAD_LOCAL unsigned int simd_support = ~0;
│ │  
│ │  #if !defined(__ALTIVEC__) && (defined(__linux__) || defined(ANDROID) || defined(__ANDROID__))
│ │  
│ │  #define SOMEWHAT_SANE_PROC_CPUINFO_SIZE_LIMIT  (1024 * 1024)
│ │  
│ │  LOCAL(int)
│ │  check_feature(char *buffer, char *feature)
│ │ @@ -105,16 +105,14 @@
│ │    return 1;
│ │  }
│ │  
│ │  #endif
│ │  
│ │  /*
│ │   * Check what SIMD accelerations are supported.
│ │ - *
│ │ - * FIXME: This code is racy under a multi-threaded environment.
│ │   */
│ │  LOCAL(void)
│ │  init_simd(void)
│ │  {
│ │  #ifndef NO_GETENV
│ │    char *env = NULL;
│ │  #endif
│ │ @@ -863,24 +861,24 @@
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │  {
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return 0;
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/powerpc/jsimd_altivec.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jsimd_altivec.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolor-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolor-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolor-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolor-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgray-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgray-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgray-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgray-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgryext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgryext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgryext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgryext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jchuff-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jchuff-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcphuff-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcphuff-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcsample-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcsample-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jcsample-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcsample-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolor-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolor-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolor-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolor-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmerge-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmerge-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmerge-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmerge-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmrgext-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmrgext-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmrgext-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmrgext-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdsample-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdsample-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jdsample-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdsample-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctflt-sse.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctflt-sse.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctfst-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctfst-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctint-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctint-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctint-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctint-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctflt-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctflt-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctfst-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctfst-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctint-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctint-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctint-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctint-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctred-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctred-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jquantf-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquantf-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jquanti-avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquanti-avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jquanti-sse2.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquanti-sse2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jsimd.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jsimd.c
│ │┄ Files 6% similar despite different names
│ │ @@ -1,13 +1,13 @@
│ │  /*
│ │   * jsimd_x86_64.c
│ │   *
│ │   * Copyright 2009 Pierre Ossman <ossman@cendio.se> for Cendio AB
│ │ - * Copyright (C) 2009-2011, 2014, 2016, 2018, 2022, D. R. Commander.
│ │ - * Copyright (C) 2015-2016, 2018, Matthieu Darbois.
│ │ + * Copyright (C) 2009-2011, 2014, 2016, 2018, 2022-2023, D. R. Commander.
│ │ + * Copyright (C) 2015-2016, 2018, 2022, Matthieu Darbois.
│ │   *
│ │   * Based on the x86 SIMD extension for IJG JPEG library,
│ │   * Copyright (C) 1999-2006, MIYASAKA Masaru.
│ │   * For conditions of distribution and use, see copyright notice in jsimdext.inc
│ │   *
│ │   * This file contains the interface between the "normal" portions
│ │   * of the library and the SIMD implementations when running on a
│ │ @@ -17,32 +17,29 @@
│ │  #define JPEG_INTERNALS
│ │  #include "../../jinclude.h"
│ │  #include "../../jpeglib.h"
│ │  #include "../../jsimd.h"
│ │  #include "../../jdct.h"
│ │  #include "../../jsimddct.h"
│ │  #include "../jsimd.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  /*
│ │   * In the PIC cases, we have no guarantee that constants will keep
│ │   * their alignment. This macro allows us to verify it at runtime.
│ │   */
│ │  #define IS_ALIGNED(ptr, order)  (((size_t)ptr & ((1 << order) - 1)) == 0)
│ │  
│ │  #define IS_ALIGNED_SSE(ptr)  (IS_ALIGNED(ptr, 4)) /* 16 byte alignment */
│ │  #define IS_ALIGNED_AVX(ptr)  (IS_ALIGNED(ptr, 5)) /* 32 byte alignment */
│ │  
│ │ -static unsigned int simd_support = (unsigned int)(~0);
│ │ -static unsigned int simd_huffman = 1;
│ │ +static THREAD_LOCAL unsigned int simd_support = (unsigned int)(~0);
│ │ +static THREAD_LOCAL unsigned int simd_huffman = 1;
│ │  
│ │  /*
│ │   * Check what SIMD accelerations are supported.
│ │ - *
│ │ - * FIXME: This code is racy under a multi-threaded environment.
│ │   */
│ │  LOCAL(void)
│ │  init_simd(void)
│ │  {
│ │  #ifndef NO_GETENV
│ │    char env[2] = { 0 };
│ │  #endif
│ │ @@ -144,14 +141,17 @@
│ │  jsimd_rgb_ycc_convert(j_compress_ptr cinfo, JSAMPARRAY input_buf,
│ │                        JSAMPIMAGE output_buf, JDIMENSION output_row,
│ │                        int num_rows)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │    void (*sse2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->in_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_extrgb_ycc_convert_avx2;
│ │      sse2fct = jsimd_extrgb_ycc_convert_sse2;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │    case JCS_EXT_RGBA:
│ │ @@ -193,14 +193,17 @@
│ │  jsimd_rgb_gray_convert(j_compress_ptr cinfo, JSAMPARRAY input_buf,
│ │                         JSAMPIMAGE output_buf, JDIMENSION output_row,
│ │                         int num_rows)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │    void (*sse2fct) (JDIMENSION, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->in_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_extrgb_gray_convert_avx2;
│ │      sse2fct = jsimd_extrgb_gray_convert_sse2;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │    case JCS_EXT_RGBA:
│ │ @@ -242,14 +245,17 @@
│ │  jsimd_ycc_rgb_convert(j_decompress_ptr cinfo, JSAMPIMAGE input_buf,
│ │                        JDIMENSION input_row, JSAMPARRAY output_buf,
│ │                        int num_rows)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int);
│ │    void (*sse2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->out_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_ycc_extrgb_convert_avx2;
│ │      sse2fct = jsimd_ycc_extrgb_convert_sse2;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │    case JCS_EXT_RGBA:
│ │ @@ -332,14 +338,17 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v2_downsample(j_compress_ptr cinfo, jpeg_component_info *compptr,
│ │                        JSAMPARRAY input_data, JSAMPARRAY output_data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v2_downsample_avx2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │                                 compptr->v_samp_factor,
│ │                                 compptr->width_in_blocks, input_data,
│ │                                 output_data);
│ │    else
│ │      jsimd_h2v2_downsample_sse2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │ @@ -348,14 +357,17 @@
│ │                                 output_data);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v1_downsample(j_compress_ptr cinfo, jpeg_component_info *compptr,
│ │                        JSAMPARRAY input_data, JSAMPARRAY output_data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v1_downsample_avx2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │                                 compptr->v_samp_factor,
│ │                                 compptr->width_in_blocks, input_data,
│ │                                 output_data);
│ │    else
│ │      jsimd_h2v1_downsample_sse2(cinfo->image_width, cinfo->max_v_samp_factor,
│ │ @@ -402,26 +414,32 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v2_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                      JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v2_upsample_avx2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │    else
│ │      jsimd_h2v2_upsample_sse2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v1_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                      JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v1_upsample_avx2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │    else
│ │      jsimd_h2v1_upsample_sse2(cinfo->max_v_samp_factor, cinfo->output_width,
│ │                               input_data, output_data_ptr);
│ │  }
│ │ @@ -468,28 +486,34 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v2_fancy_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                            JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v2_fancy_upsample_avx2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │                                     output_data_ptr);
│ │    else
│ │      jsimd_h2v2_fancy_upsample_sse2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │                                     output_data_ptr);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_h2v1_fancy_upsample(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                            JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_h2v1_fancy_upsample_avx2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │                                     output_data_ptr);
│ │    else
│ │      jsimd_h2v1_fancy_upsample_sse2(cinfo->max_v_samp_factor,
│ │                                     compptr->downsampled_width, input_data,
│ │ @@ -541,14 +565,17 @@
│ │  GLOBAL(void)
│ │  jsimd_h2v2_merged_upsample(j_decompress_ptr cinfo, JSAMPIMAGE input_buf,
│ │                             JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │    void (*sse2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->out_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_h2v2_extrgb_merged_upsample_avx2;
│ │      sse2fct = jsimd_h2v2_extrgb_merged_upsample_sse2;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │    case JCS_EXT_RGBA:
│ │ @@ -589,14 +616,17 @@
│ │  GLOBAL(void)
│ │  jsimd_h2v1_merged_upsample(j_decompress_ptr cinfo, JSAMPIMAGE input_buf,
│ │                             JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf)
│ │  {
│ │    void (*avx2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │    void (*sse2fct) (JDIMENSION, JSAMPIMAGE, JDIMENSION, JSAMPARRAY);
│ │  
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    switch (cinfo->out_color_space) {
│ │    case JCS_EXT_RGB:
│ │      avx2fct = jsimd_h2v1_extrgb_merged_upsample_avx2;
│ │      sse2fct = jsimd_h2v1_extrgb_merged_upsample_sse2;
│ │      break;
│ │    case JCS_EXT_RGBX:
│ │    case JCS_EXT_RGBA:
│ │ @@ -678,14 +708,17 @@
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_convsamp(JSAMPARRAY sample_data, JDIMENSION start_col,
│ │                 DCTELEM *workspace)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_convsamp_avx2(sample_data, start_col, workspace);
│ │    else
│ │      jsimd_convsamp_sse2(sample_data, start_col, workspace);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │ @@ -747,14 +780,17 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_fdct_islow(DCTELEM *data)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_fdct_islow_avx2(data);
│ │    else
│ │      jsimd_fdct_islow_sse2(data);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │ @@ -808,14 +844,17 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_quantize(JCOEFPTR coef_block, DCTELEM *divisors, DCTELEM *workspace)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_quantize_avx2(coef_block, divisors, workspace);
│ │    else
│ │      jsimd_quantize_sse2(coef_block, divisors, workspace);
│ │  }
│ │  
│ │  GLOBAL(void)
│ │ @@ -962,14 +1001,17 @@
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_idct_islow(j_decompress_ptr cinfo, jpeg_component_info *compptr,
│ │                   JCOEFPTR coef_block, JSAMPARRAY output_buf,
│ │                   JDIMENSION output_col)
│ │  {
│ │ +  if (simd_support == ~0U)
│ │ +    init_simd();
│ │ +
│ │    if (simd_support & JSIMD_AVX2)
│ │      jsimd_idct_islow_avx2(compptr->dct_table, coef_block, output_buf,
│ │                            output_col);
│ │    else
│ │      jsimd_idct_islow_sse2(compptr->dct_table, coef_block, output_buf,
│ │                            output_col);
│ │  }
│ │ @@ -1032,15 +1074,15 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(void)
│ │  jsimd_encode_mcu_AC_first_prepare(const JCOEF *block,
│ │                                    const int *jpeg_natural_order_start, int Sl,
│ │ -                                  int Al, JCOEF *values, size_t *zerobits)
│ │ +                                  int Al, UJCOEF *values, size_t *zerobits)
│ │  {
│ │    jsimd_encode_mcu_AC_first_prepare_sse2(block, jpeg_natural_order_start,
│ │                                           Sl, Al, values, zerobits);
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_can_encode_mcu_AC_refine_prepare(void)
│ │ @@ -1056,13 +1098,13 @@
│ │  
│ │    return 0;
│ │  }
│ │  
│ │  GLOBAL(int)
│ │  jsimd_encode_mcu_AC_refine_prepare(const JCOEF *block,
│ │                                     const int *jpeg_natural_order_start, int Sl,
│ │ -                                   int Al, JCOEF *absvalues, size_t *bits)
│ │ +                                   int Al, UJCOEF *absvalues, size_t *bits)
│ │  {
│ │    return jsimd_encode_mcu_AC_refine_prepare_sse2(block,
│ │                                                   jpeg_natural_order_start,
│ │                                                   Sl, Al, absvalues, bits);
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/simd/x86_64/jsimdcpu.asm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jsimdcpu.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/strtest.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/strtest.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/structure.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/structure.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/nightshot_iso_100.bmp
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/nightshot_iso_100.bmp
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/nightshot_iso_100.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/nightshot_iso_100.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test1.icc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test1.icc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test1.icc.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test1.icc.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test2.icc
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test2.icc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/test2.icc.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/test2.icc.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testimgari.jpg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testimgari.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testimgint.jpg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testimgint.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testorig.jpg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testorig.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testorig.ppm
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testorig.ppm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/testorig12.jpg
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/testorig12.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/vgl_5674_0098.bmp
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/vgl_5674_0098.bmp
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/vgl_6434_0018a.bmp
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/vgl_6434_0018a.bmp
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/testimages/vgl_6548_0026a.bmp
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/testimages/vgl_6548_0026a.bmp
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjbench.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjbench.c
│ │┄ Files 5% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2009-2019, 2021-2022 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2009-2019, 2021-2023 D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -78,15 +78,15 @@
│ │             _tjErrorCode == TJERR_WARNING ? "WARNING" : "ERROR", __LINE__, m, \
│ │             _tjErrorStr); \
│ │      retval = -1;  goto bailout; \
│ │    } \
│ │  }
│ │  
│ │  int flags = TJFLAG_NOREALLOC, compOnly = 0, decompOnly = 0, doYUV = 0,
│ │ -  quiet = 0, doTile = 0, pf = TJPF_BGR, yuvPad = 1, doWrite = 1;
│ │ +  quiet = 0, doTile = 0, pf = TJPF_BGR, yuvAlign = 1, doWrite = 1;
│ │  char *ext = "ppm";
│ │  const char *pixFormatStr[TJ_NUMPF] = {
│ │    "RGB", "BGR", "RGBX", "BGRX", "XBGR", "XRGB", "GRAY", "", "", "", "", "CMYK"
│ │  };
│ │  const char *subNameLong[TJ_NUMSAMP] = {
│ │    "4:4:4", "4:2:2", "4:2:0", "GRAY", "4:4:0", "4:1:1"
│ │  };
│ │ @@ -178,15 +178,15 @@
│ │    /* Set the destination buffer to gray so we know whether the decompressor
│ │       attempted to write to it */
│ │    memset(dstBuf, 127, (size_t)pitch * scaledh);
│ │  
│ │    if (doYUV) {
│ │      int width = doTile ? tilew : scaledw;
│ │      int height = doTile ? tileh : scaledh;
│ │ -    unsigned long yuvSize = tjBufSizeYUV2(width, yuvPad, height, subsamp);
│ │ +    unsigned long yuvSize = tjBufSizeYUV2(width, yuvAlign, height, subsamp);
│ │  
│ │      if (yuvSize == (unsigned long)-1)
│ │        THROW_TJ("allocating YUV buffer");
│ │      if ((yuvBuf = (unsigned char *)malloc(yuvSize)) == NULL)
│ │        THROW_UNIX("allocating YUV buffer");
│ │      memset(yuvBuf, 127, yuvSize);
│ │    }
│ │ @@ -205,18 +205,18 @@
│ │          int width = doTile ? min(tilew, w - col * tilew) : scaledw;
│ │          int height = doTile ? min(tileh, h - row * tileh) : scaledh;
│ │  
│ │          if (doYUV) {
│ │            double startDecode;
│ │  
│ │            if (tjDecompressToYUV2(handle, jpegBuf[tile], jpegSize[tile], yuvBuf,
│ │ -                                 width, yuvPad, height, flags) == -1)
│ │ +                                 width, yuvAlign, height, flags) == -1)
│ │              THROW_TJ("executing tjDecompressToYUV2()");
│ │            startDecode = getTime();
│ │ -          if (tjDecodeYUV(handle, yuvBuf, yuvPad, subsamp, dstPtr2, width,
│ │ +          if (tjDecodeYUV(handle, yuvBuf, yuvAlign, subsamp, dstPtr2, width,
│ │                            pitch, height, pf, flags) == -1)
│ │              THROW_TJ("executing tjDecodeYUV()");
│ │            if (iter >= 0) elapsedDecode += getTime() - startDecode;
│ │          } else if (tjDecompress2(handle, jpegBuf[tile], jpegSize[tile],
│ │                                   dstPtr2, width, pitch, height, pf,
│ │                                   flags) == -1)
│ │            THROW_TJ("executing tjDecompress2()");
│ │ @@ -269,20 +269,20 @@
│ │    if (decompOnly)
│ │      SNPRINTF(tempStr, 1024, "%s_%s.%s", fileName, sizeStr, ext);
│ │    else
│ │      SNPRINTF(tempStr, 1024, "%s_%s%s_%s.%s", fileName, subName[subsamp],
│ │               qualStr, sizeStr, ext);
│ │  
│ │    if (tjSaveImage(tempStr, dstBuf, scaledw, 0, scaledh, pf, flags) == -1)
│ │ -    THROW_TJG("saving bitmap");
│ │ +    THROW_TJG("saving output image");
│ │    ptr = strrchr(tempStr, '.');
│ │    SNPRINTF(ptr, 1024 - (ptr - tempStr), "-err.%s", ext);
│ │    if (srcBuf && sf.num == 1 && sf.denom == 1) {
│ │      if (!quiet) printf("Compression error written to %s.\n", tempStr);
│ │ -    if (subsamp == TJ_GRAYSCALE) {
│ │ +    if (subsamp == TJSAMP_GRAY) {
│ │        unsigned long index, index2;
│ │  
│ │        for (row = 0, index = 0; row < h; row++, index += pitch) {
│ │          for (col = 0, index2 = index; col < w; col++, index2 += ps) {
│ │            unsigned long rindex = index2 + tjRedOffset[pf];
│ │            unsigned long gindex = index2 + tjGreenOffset[pf];
│ │            unsigned long bindex = index2 + tjBlueOffset[pf];
│ │ @@ -301,15 +301,15 @@
│ │        for (row = 0; row < h; row++)
│ │          for (col = 0; col < w * ps; col++)
│ │            dstBuf[pitch * row + col] =
│ │              (unsigned char)abs(dstBuf[pitch * row + col] -
│ │                                 srcBuf[pitch * row + col]);
│ │      }
│ │      if (tjSaveImage(tempStr, dstBuf, w, 0, h, pf, flags) == -1)
│ │ -      THROW_TJG("saving bitmap");
│ │ +      THROW_TJG("saving output image");
│ │    }
│ │  
│ │  bailout:
│ │    if (file) fclose(file);
│ │    if (handle) tjDestroy(handle);
│ │    if (dstBufAlloc) free(dstBuf);
│ │    free(yuvBuf);
│ │ @@ -376,15 +376,15 @@
│ │               jpegQual);
│ │      for (i = 0; i < h; i++)
│ │        memcpy(&tmpBuf[pitch * i], &srcBuf[w * ps * i], w * ps);
│ │      if ((handle = tjInitCompress()) == NULL)
│ │        THROW_TJ("executing tjInitCompress()");
│ │  
│ │      if (doYUV) {
│ │ -      yuvSize = tjBufSizeYUV2(tilew, yuvPad, tileh, subsamp);
│ │ +      yuvSize = tjBufSizeYUV2(tilew, yuvAlign, tileh, subsamp);
│ │        if (yuvSize == (unsigned long)-1)
│ │          THROW_TJ("allocating YUV buffer");
│ │        if ((yuvBuf = (unsigned char *)malloc(yuvSize)) == NULL)
│ │          THROW_UNIX("allocating YUV buffer");
│ │        memset(yuvBuf, 127, yuvSize);
│ │      }
│ │  
│ │ @@ -403,18 +403,18 @@
│ │            int width = min(tilew, w - col * tilew);
│ │            int height = min(tileh, h - row * tileh);
│ │  
│ │            if (doYUV) {
│ │              double startEncode = getTime();
│ │  
│ │              if (tjEncodeYUV3(handle, srcPtr2, width, pitch, height, pf, yuvBuf,
│ │ -                             yuvPad, subsamp, flags) == -1)
│ │ +                             yuvAlign, subsamp, flags) == -1)
│ │                THROW_TJ("executing tjEncodeYUV3()");
│ │              if (iter >= 0) elapsedEncode += getTime() - startEncode;
│ │ -            if (tjCompressFromYUV(handle, yuvBuf, width, yuvPad, height,
│ │ +            if (tjCompressFromYUV(handle, yuvBuf, width, yuvAlign, height,
│ │                                    subsamp, &jpegBuf[tile], &jpegSize[tile],
│ │                                    jpegQual, flags) == -1)
│ │                THROW_TJ("executing tjCompressFromYUV()");
│ │            } else {
│ │              if (tjCompress2(handle, srcPtr2, width, pitch, height, pf,
│ │                              &jpegBuf[tile], &jpegSize[tile], subsamp, jpegQual,
│ │                              flags) == -1)
│ │ @@ -564,15 +564,15 @@
│ │      THROW("reading JPEG header", "Invalid image dimensions");
│ │    if (cs == TJCS_YCCK || cs == TJCS_CMYK) {
│ │      pf = TJPF_CMYK;  ps = tjPixelSize[pf];
│ │    }
│ │  
│ │    if (quiet == 1) {
│ │      printf("All performance values in Mpixels/sec\n\n");
│ │ -    printf("Bitmap     JPEG   JPEG     %s  %s   Xform   Comp    Decomp  ",
│ │ +    printf("Pixel      JPEG   JPEG     %s  %s   Xform   Comp    Decomp  ",
│ │             doTile ? "Tile " : "Image", doTile ? "Tile " : "Image");
│ │      if (doYUV) printf("Decode");
│ │      printf("\n");
│ │      printf("Format     CS     Subsamp  Width  Height  Perf    Ratio   Perf    ");
│ │      if (doYUV) printf("Perf");
│ │      printf("\n\n");
│ │    } else if (!quiet)
│ │ @@ -626,15 +626,15 @@
│ │          THROW_UNIX("allocating image transform array");
│ │  
│ │        if (xformOp == TJXOP_TRANSPOSE || xformOp == TJXOP_TRANSVERSE ||
│ │            xformOp == TJXOP_ROT90 || xformOp == TJXOP_ROT270) {
│ │          tw = h;  th = w;  ttilew = tileh;  ttileh = tilew;
│ │        }
│ │  
│ │ -      if (xformOpt & TJXOPT_GRAY) tsubsamp = TJ_GRAYSCALE;
│ │ +      if (xformOpt & TJXOPT_GRAY) tsubsamp = TJSAMP_GRAY;
│ │        if (xformOp == TJXOP_HFLIP || xformOp == TJXOP_ROT180)
│ │          tw = tw - (tw % tjMCUWidth[tsubsamp]);
│ │        if (xformOp == TJXOP_VFLIP || xformOp == TJXOP_ROT180)
│ │          th = th - (th % tjMCUHeight[tsubsamp]);
│ │        if (xformOp == TJXOP_TRANSVERSE || xformOp == TJXOP_ROT90)
│ │          tw = tw - (tw % tjMCUHeight[tsubsamp]);
│ │        if (xformOp == TJXOP_TRANSVERSE || xformOp == TJXOP_ROT270)
│ │ @@ -746,76 +746,72 @@
│ │  
│ │  
│ │  static void usage(char *progName)
│ │  {
│ │    int i;
│ │  
│ │    printf("USAGE: %s\n", progName);
│ │ -  printf("       <Inputfile (BMP|PPM)> <Quality> [options]\n\n");
│ │ +  printf("       <Inputimage (BMP|PPM)> <Quality> [options]\n\n");
│ │    printf("       %s\n", progName);
│ │ -  printf("       <Inputfile (JPG)> [options]\n\n");
│ │ +  printf("       <Inputimage (JPG)> [options]\n\n");
│ │    printf("Options:\n\n");
│ │ -  printf("-alloc = Dynamically allocate JPEG image buffers\n");
│ │ -  printf("-bmp = Generate output images in Windows Bitmap format (default = PPM)\n");
│ │ -  printf("-bottomup = Test bottom-up compression/decompression\n");
│ │ -  printf("-tile = Test performance of the codec when the image is encoded as separate\n");
│ │ -  printf("     tiles of varying sizes.\n");
│ │ +  printf("-alloc = Dynamically allocate JPEG buffers\n");
│ │ +  printf("-bmp = Use Windows Bitmap format for output images [default = PPM]\n");
│ │ +  printf("-bottomup = Use bottom-up row order for packed-pixel source/destination buffers\n");
│ │ +  printf("-tile = Compress/transform the input image into separate JPEG tiles of varying\n");
│ │ +  printf("     sizes (useful for measuring JPEG overhead)\n");
│ │    printf("-rgb, -bgr, -rgbx, -bgrx, -xbgr, -xrgb =\n");
│ │ -  printf("     Test the specified color conversion path in the codec (default = BGR)\n");
│ │ -  printf("-cmyk = Indirectly test YCCK JPEG compression/decompression (the source\n");
│ │ -  printf("     and destination bitmaps are still RGB.  The conversion is done\n");
│ │ -  printf("     internally prior to compression or after decompression.)\n");
│ │ -  printf("-fastupsample = Use the fastest chrominance upsampling algorithm available in\n");
│ │ -  printf("     the underlying codec\n");
│ │ -  printf("-fastdct = Use the fastest DCT/IDCT algorithms available in the underlying\n");
│ │ -  printf("     codec\n");
│ │ -  printf("-accuratedct = Use the most accurate DCT/IDCT algorithms available in the\n");
│ │ -  printf("     underlying codec\n");
│ │ +  printf("     Use the specified pixel format for packed-pixel source/destination buffers\n");
│ │ +  printf("     [default = BGR]\n");
│ │ +  printf("-cmyk = Indirectly test YCCK JPEG compression/decompression\n");
│ │ +  printf("     (use the CMYK pixel format for packed-pixel source/destination buffers)\n");
│ │ +  printf("-fastupsample = Use the fastest chrominance upsampling algorithm available\n");
│ │ +  printf("-fastdct = Use the fastest DCT/IDCT algorithm available\n");
│ │ +  printf("-accuratedct = Use the most accurate DCT/IDCT algorithm available\n");
│ │    printf("-progressive = Use progressive entropy coding in JPEG images generated by\n");
│ │ -  printf("     compression and transform operations.\n");
│ │ -  printf("-subsamp <s> = When testing JPEG compression, this option specifies the level\n");
│ │ -  printf("     of chrominance subsampling to use (<s> = 444, 422, 440, 420, 411, or\n");
│ │ -  printf("     GRAY).  The default is to test Grayscale, 4:2:0, 4:2:2, and 4:4:4 in\n");
│ │ -  printf("     sequence.\n");
│ │ +  printf("     compression and transform operations\n");
│ │ +  printf("-subsamp <s> = When compressing, use the specified level of chrominance\n");
│ │ +  printf("     subsampling (<s> = 444, 422, 440, 420, 411, or GRAY) [default = test\n");
│ │ +  printf("     Grayscale, 4:2:0, 4:2:2, and 4:4:4 in sequence]\n");
│ │    printf("-quiet = Output results in tabular rather than verbose format\n");
│ │ -  printf("-yuv = Test YUV encoding/decoding functions\n");
│ │ -  printf("-yuvpad <p> = If testing YUV encoding/decoding, this specifies the number of\n");
│ │ -  printf("     bytes to which each row of each plane in the intermediate YUV image is\n");
│ │ -  printf("     padded (default = 1)\n");
│ │ -  printf("-scale M/N = Scale down the width/height of the decompressed JPEG image by a\n");
│ │ +  printf("-yuv = Compress from/decompress to intermediate planar YUV images\n");
│ │ +  printf("-yuvpad <p> = The number of bytes by which each row in each plane of an\n");
│ │ +  printf("     intermediate YUV image is evenly divisible (must be a power of 2)\n");
│ │ +  printf("     [default = 1]\n");
│ │ +  printf("-scale M/N = When decompressing, scale the width/height of the JPEG image by a\n");
│ │    printf("     factor of M/N (M/N = ");
│ │    for (i = 0; i < nsf; i++) {
│ │      printf("%d/%d", scalingFactors[i].num, scalingFactors[i].denom);
│ │      if (nsf == 2 && i != nsf - 1) printf(" or ");
│ │      else if (nsf > 2) {
│ │        if (i != nsf - 1) printf(", ");
│ │        if (i == nsf - 2) printf("or ");
│ │      }
│ │      if (i % 8 == 0 && i != 0) printf("\n     ");
│ │    }
│ │    printf(")\n");
│ │    printf("-hflip, -vflip, -transpose, -transverse, -rot90, -rot180, -rot270 =\n");
│ │ -  printf("     Perform the corresponding lossless transform prior to\n");
│ │ -  printf("     decompression (these options are mutually exclusive)\n");
│ │ -  printf("-grayscale = Perform lossless grayscale conversion prior to decompression\n");
│ │ -  printf("     test (can be combined with the other transforms above)\n");
│ │ +  printf("     Perform the specified lossless transform operation on the input image\n");
│ │ +  printf("     prior to decompression (these operations are mutually exclusive)\n");
│ │ +  printf("-grayscale = Transform the input image into a grayscale JPEG image prior to\n");
│ │ +  printf("     decompression (can be combined with the other transform operations above)\n");
│ │    printf("-copynone = Do not copy any extra markers (including EXIF and ICC profile data)\n");
│ │ -  printf("     when transforming the image.\n");
│ │ -  printf("-benchtime <t> = Run each benchmark for at least <t> seconds (default = 5.0)\n");
│ │ -  printf("-warmup <t> = Run each benchmark for <t> seconds (default = 1.0) prior to\n");
│ │ +  printf("     when transforming the input image\n");
│ │ +  printf("-benchtime <t> = Run each benchmark for at least <t> seconds [default = 5.0]\n");
│ │ +  printf("-warmup <t> = Run each benchmark for <t> seconds [default = 1.0] prior to\n");
│ │    printf("     starting the timer, in order to prime the caches and thus improve the\n");
│ │ -  printf("     consistency of the results.\n");
│ │ +  printf("     consistency of the benchmark results\n");
│ │    printf("-componly = Stop after running compression tests.  Do not test decompression.\n");
│ │    printf("-nowrite = Do not write reference or output images (improves consistency of\n");
│ │ -  printf("     performance measurements.)\n");
│ │ +  printf("     benchmark results)\n");
│ │    printf("-limitscans = Refuse to decompress or transform progressive JPEG images that\n");
│ │    printf("     have an unreasonably large number of scans\n");
│ │    printf("-stoponwarning = Immediately discontinue the current\n");
│ │ -  printf("     compression/decompression/transform operation if the underlying codec\n");
│ │ -  printf("     throws a warning (non-fatal error)\n\n");
│ │ +  printf("     compression/decompression/transform operation if a warning (non-fatal\n");
│ │ +  printf("     error) occurs\n\n");
│ │    printf("NOTE:  If the quality is specified as a range (e.g. 90-100), a separate\n");
│ │    printf("test will be performed for all quality values in the range.\n\n");
│ │    exit(1);
│ │  }
│ │  
│ │  
│ │  int main(int argc, char *argv[])
│ │ @@ -853,25 +849,26 @@
│ │    }
│ │  
│ │    if (argc > minArg) {
│ │      for (i = minArg; i < argc; i++) {
│ │        if (!strcasecmp(argv[i], "-tile")) {
│ │          doTile = 1;  xformOpt |= TJXOPT_CROP;
│ │        } else if (!strcasecmp(argv[i], "-fastupsample")) {
│ │ -        printf("Using fast upsampling code\n\n");
│ │ +        printf("Using fastest upsampling algorithm\n\n");
│ │          flags |= TJFLAG_FASTUPSAMPLE;
│ │        } else if (!strcasecmp(argv[i], "-fastdct")) {
│ │          printf("Using fastest DCT/IDCT algorithm\n\n");
│ │          flags |= TJFLAG_FASTDCT;
│ │        } else if (!strcasecmp(argv[i], "-accuratedct")) {
│ │          printf("Using most accurate DCT/IDCT algorithm\n\n");
│ │          flags |= TJFLAG_ACCURATEDCT;
│ │        } else if (!strcasecmp(argv[i], "-progressive")) {
│ │          printf("Using progressive entropy coding\n\n");
│ │          flags |= TJFLAG_PROGRESSIVE;
│ │ +        xformOpt |= TJXOPT_PROGRESSIVE;
│ │        } else if (!strcasecmp(argv[i], "-rgb"))
│ │          pf = TJPF_RGB;
│ │        else if (!strcasecmp(argv[i], "-rgbx"))
│ │          pf = TJPF_RGBX;
│ │        else if (!strcasecmp(argv[i], "-bgr"))
│ │          pf = TJPF_BGR;
│ │        else if (!strcasecmp(argv[i], "-bgrx"))
│ │ @@ -936,32 +933,34 @@
│ │          else usage(argv[0]);
│ │          printf("Warmup time = %.1f seconds\n\n", warmup);
│ │        } else if (!strcasecmp(argv[i], "-alloc"))
│ │          flags &= (~TJFLAG_NOREALLOC);
│ │        else if (!strcasecmp(argv[i], "-bmp"))
│ │          ext = "bmp";
│ │        else if (!strcasecmp(argv[i], "-yuv")) {
│ │ -        printf("Testing YUV planar encoding/decoding\n\n");
│ │ +        printf("Testing planar YUV encoding/decoding\n\n");
│ │          doYUV = 1;
│ │        } else if (!strcasecmp(argv[i], "-yuvpad") && i < argc - 1) {
│ │          int tempi = atoi(argv[++i]);
│ │  
│ │ -        if (tempi >= 1) yuvPad = tempi;
│ │ +        if (tempi >= 1 && (tempi & (tempi - 1)) == 0) yuvAlign = tempi;
│ │ +        else usage(argv[0]);
│ │        } else if (!strcasecmp(argv[i], "-subsamp") && i < argc - 1) {
│ │          i++;
│ │          if (toupper(argv[i][0]) == 'G') subsamp = TJSAMP_GRAY;
│ │          else {
│ │            int tempi = atoi(argv[i]);
│ │  
│ │            switch (tempi) {
│ │            case 444:  subsamp = TJSAMP_444;  break;
│ │            case 422:  subsamp = TJSAMP_422;  break;
│ │            case 440:  subsamp = TJSAMP_440;  break;
│ │            case 420:  subsamp = TJSAMP_420;  break;
│ │            case 411:  subsamp = TJSAMP_411;  break;
│ │ +          default:  usage(argv[0]);
│ │            }
│ │          }
│ │        } else if (!strcasecmp(argv[i], "-componly"))
│ │          compOnly = 1;
│ │        else if (!strcasecmp(argv[i], "-nowrite"))
│ │          doWrite = 0;
│ │        else if (!strcasecmp(argv[i], "-limitscans"))
│ │ @@ -970,34 +969,34 @@
│ │          flags |= TJFLAG_STOPONWARNING;
│ │        else usage(argv[0]);
│ │      }
│ │    }
│ │  
│ │    if ((sf.num != 1 || sf.denom != 1) && doTile) {
│ │      printf("Disabling tiled compression/decompression tests, because those tests do not\n");
│ │ -    printf("work when scaled decompression is enabled.\n");
│ │ -    doTile = 0;
│ │ +    printf("work when scaled decompression is enabled.\n\n");
│ │ +    doTile = 0;  xformOpt &= (~TJXOPT_CROP);
│ │    }
│ │  
│ │    if ((flags & TJFLAG_NOREALLOC) == 0 && doTile) {
│ │      printf("Disabling tiled compression/decompression tests, because those tests do not\n");
│ │      printf("work when dynamic JPEG buffer allocation is enabled.\n\n");
│ │ -    doTile = 0;
│ │ +    doTile = 0;  xformOpt &= (~TJXOPT_CROP);
│ │    }
│ │  
│ │    if (!decompOnly) {
│ │      if ((srcBuf = tjLoadImage(argv[1], &w, 1, &h, &pf, flags)) == NULL)
│ │ -      THROW_TJG("loading bitmap");
│ │ +      THROW_TJG("loading input image");
│ │      temp = strrchr(argv[1], '.');
│ │      if (temp != NULL) *temp = '\0';
│ │    }
│ │  
│ │    if (quiet == 1 && !decompOnly) {
│ │      printf("All performance values in Mpixels/sec\n\n");
│ │ -    printf("Bitmap     JPEG     JPEG  %s  %s   ",
│ │ +    printf("Pixel      JPEG     JPEG  %s  %s   ",
│ │             doTile ? "Tile " : "Image", doTile ? "Tile " : "Image");
│ │      if (doYUV) printf("Encode  ");
│ │      printf("Comp    Comp    Decomp  ");
│ │      if (doYUV) printf("Decode");
│ │      printf("\n");
│ │      printf("Format     Subsamp  Qual  Width  Height  ");
│ │      if (doYUV) printf("Perf    ");
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjbenchtest.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjbenchtest.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjbenchtest.java.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjbenchtest.java.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjexample.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjexample.c
│ │┄ Files 1% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2011-2012, 2014-2015, 2017, 2019, 2021-2022
│ │ + * Copyright (C)2011-2012, 2014-2015, 2017, 2019, 2021-2023
│ │   *           D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │ @@ -145,22 +145,19 @@
│ │    printf("     image was compressed using no subsampling or grayscale, 16x8 if it was\n");
│ │    printf("     compressed using 4:2:2 subsampling, or 16x16 if it was compressed using\n");
│ │    printf("     4:2:0 subsampling.)\n\n");
│ │  
│ │    printf("General Options\n");
│ │    printf("---------------\n\n");
│ │  
│ │ -  printf("-fastupsample = Use the fastest chrominance upsampling algorithm available in\n");
│ │ -  printf("     the underlying codec.\n\n");
│ │ +  printf("-fastupsample = Use the fastest chrominance upsampling algorithm available\n\n");
│ │  
│ │ -  printf("-fastdct = Use the fastest DCT/IDCT algorithms available in the underlying\n");
│ │ -  printf("     codec.\n\n");
│ │ +  printf("-fastdct = Use the fastest DCT/IDCT algorithm available\n\n");
│ │  
│ │ -  printf("-accuratedct = Use the most accurate DCT/IDCT algorithms available in the\n");
│ │ -  printf("     underlying codec.\n\n");
│ │ +  printf("-accuratedct = Use the most accurate DCT/IDCT algorithm available\n\n");
│ │  
│ │    exit(1);
│ │  }
│ │  
│ │  
│ │  int main(int argc, char **argv)
│ │  {
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjexampletest.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjexampletest.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjexampletest.java.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjexampletest.java.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjunittest.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjunittest.c
│ │┄ Files 6% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  /*
│ │ - * Copyright (C)2009-2014, 2017-2019, 2022 D. R. Commander.
│ │ - *                                         All Rights Reserved.
│ │ + * Copyright (C)2009-2014, 2017-2019, 2022-2023 D. R. Commander.
│ │ + *                                              All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -34,14 +34,15 @@
│ │  #ifdef _MSC_VER
│ │  #define _CRT_SECURE_NO_DEPRECATE
│ │  #endif
│ │  
│ │  #include <stdio.h>
│ │  #include <stdlib.h>
│ │  #include <string.h>
│ │ +#include <limits.h>
│ │  #include <errno.h>
│ │  #include "tjutil.h"
│ │  #include "turbojpeg.h"
│ │  #include "md5/md5.h"
│ │  #include "cmyk.h"
│ │  #ifdef _WIN32
│ │  #include <time.h>
│ │ @@ -51,19 +52,19 @@
│ │  #endif
│ │  
│ │  
│ │  static void usage(char *progName)
│ │  {
│ │    printf("\nUSAGE: %s [options]\n\n", progName);
│ │    printf("Options:\n");
│ │ -  printf("-yuv = test YUV encoding/decoding support\n");
│ │ -  printf("-noyuvpad = do not pad each line of each Y, U, and V plane to the nearest\n");
│ │ -  printf("            4-byte boundary\n");
│ │ -  printf("-alloc = test automatic buffer allocation\n");
│ │ -  printf("-bmp = tjLoadImage()/tjSaveImage() unit test\n\n");
│ │ +  printf("-yuv = test YUV encoding/compression/decompression/decoding\n");
│ │ +  printf("-noyuvpad = do not pad each row in each Y, U, and V plane to the nearest\n");
│ │ +  printf("            multiple of 4 bytes\n");
│ │ +  printf("-alloc = test automatic JPEG buffer allocation\n");
│ │ +  printf("-bmp = test packed-pixel image I/O\n");
│ │    exit(1);
│ │  }
│ │  
│ │  
│ │  #define THROW_TJ() { \
│ │    printf("TurboJPEG ERROR:\n%s\n", tjGetErrorStr()); \
│ │    BAILOUT() \
│ │ @@ -91,15 +92,15 @@
│ │  const int _3byteFormats[] = { TJPF_RGB, TJPF_BGR };
│ │  const int _4byteFormats[] = {
│ │    TJPF_RGBX, TJPF_BGRX, TJPF_XBGR, TJPF_XRGB, TJPF_CMYK
│ │  };
│ │  const int _onlyGray[] = { TJPF_GRAY };
│ │  const int _onlyRGB[] = { TJPF_RGB };
│ │  
│ │ -int doYUV = 0, alloc = 0, pad = 4;
│ │ +int doYUV = 0, alloc = 0, yuvAlign = 4;
│ │  
│ │  int exitStatus = 0;
│ │  #define BAILOUT() { exitStatus = -1;  goto bailout; }
│ │  
│ │  
│ │  static void initBuf(unsigned char *buf, int w, int h, int pf, int flags)
│ │  {
│ │ @@ -278,15 +279,15 @@
│ │  static int checkBufYUV(unsigned char *buf, int w, int h, int subsamp,
│ │                         tjscalingfactor sf)
│ │  {
│ │    int row, col;
│ │    int hsf = tjMCUWidth[subsamp] / 8, vsf = tjMCUHeight[subsamp] / 8;
│ │    int pw = PAD(w, hsf), ph = PAD(h, vsf);
│ │    int cw = pw / hsf, ch = ph / vsf;
│ │ -  int ypitch = PAD(pw, pad), uvpitch = PAD(cw, pad);
│ │ +  int ypitch = PAD(pw, yuvAlign), uvpitch = PAD(cw, yuvAlign);
│ │    int retval = 1;
│ │    int halfway = 16 * sf.num / sf.denom;
│ │    int blocksize = 8 * sf.num / sf.denom;
│ │  
│ │    for (row = 0; row < ph; row++) {
│ │      for (col = 0; col < pw; col++) {
│ │        unsigned char y = buf[ypitch * row + col];
│ │ @@ -377,34 +378,34 @@
│ │      THROW("Memory allocation failure");
│ │    initBuf(srcBuf, w, h, pf, flags);
│ │  
│ │    if (*dstBuf && *dstSize > 0) memset(*dstBuf, 0, *dstSize);
│ │  
│ │    if (!alloc) flags |= TJFLAG_NOREALLOC;
│ │    if (doYUV) {
│ │ -    unsigned long yuvSize = tjBufSizeYUV2(w, pad, h, subsamp);
│ │ +    unsigned long yuvSize = tjBufSizeYUV2(w, yuvAlign, h, subsamp);
│ │      tjscalingfactor sf = { 1, 1 };
│ │      tjhandle handle2 = tjInitCompress();
│ │  
│ │      if (!handle2) THROW_TJ();
│ │  
│ │      if ((yuvBuf = (unsigned char *)malloc(yuvSize)) == NULL)
│ │        THROW("Memory allocation failure");
│ │      memset(yuvBuf, 0, yuvSize);
│ │  
│ │      printf("%s %s -> YUV %s ... ", pfStr, buStrLong, subNameLong[subsamp]);
│ │ -    TRY_TJ(tjEncodeYUV3(handle2, srcBuf, w, 0, h, pf, yuvBuf, pad, subsamp,
│ │ -                        flags));
│ │ +    TRY_TJ(tjEncodeYUV3(handle2, srcBuf, w, 0, h, pf, yuvBuf, yuvAlign,
│ │ +                        subsamp, flags));
│ │      tjDestroy(handle2);
│ │      if (checkBufYUV(yuvBuf, w, h, subsamp, sf)) printf("Passed.\n");
│ │      else printf("FAILED!\n");
│ │  
│ │      printf("YUV %s %s -> JPEG Q%d ... ", subNameLong[subsamp], buStrLong,
│ │             jpegQual);
│ │ -    TRY_TJ(tjCompressFromYUV(handle, yuvBuf, w, pad, h, subsamp, dstBuf,
│ │ +    TRY_TJ(tjCompressFromYUV(handle, yuvBuf, w, yuvAlign, h, subsamp, dstBuf,
│ │                               dstSize, jpegQual, flags));
│ │    } else {
│ │      printf("%s %s -> %s Q%d ... ", pfStr, buStrLong, subNameLong[subsamp],
│ │             jpegQual);
│ │      TRY_TJ(tjCompress2(handle, srcBuf, w, 0, h, pf, dstBuf, dstSize, subsamp,
│ │                         jpegQual, flags));
│ │    }
│ │ @@ -438,47 +439,54 @@
│ │  
│ │    dstSize = scaledWidth * scaledHeight * tjPixelSize[pf];
│ │    if ((dstBuf = (unsigned char *)malloc(dstSize)) == NULL)
│ │      THROW("Memory allocation failure");
│ │    memset(dstBuf, 0, dstSize);
│ │  
│ │    if (doYUV) {
│ │ -    unsigned long yuvSize = tjBufSizeYUV2(scaledWidth, pad, scaledHeight,
│ │ +    unsigned long yuvSize = tjBufSizeYUV2(scaledWidth, yuvAlign, scaledHeight,
│ │                                            subsamp);
│ │      tjhandle handle2 = tjInitDecompress();
│ │  
│ │      if (!handle2) THROW_TJ();
│ │  
│ │      if ((yuvBuf = (unsigned char *)malloc(yuvSize)) == NULL)
│ │        THROW("Memory allocation failure");
│ │      memset(yuvBuf, 0, yuvSize);
│ │  
│ │      printf("JPEG -> YUV %s ", subNameLong[subsamp]);
│ │      if (sf.num != 1 || sf.denom != 1)
│ │        printf("%d/%d ... ", sf.num, sf.denom);
│ │      else printf("... ");
│ │ -    TRY_TJ(tjDecompressToYUV2(handle, jpegBuf, jpegSize, yuvBuf, scaledWidth,
│ │ -                              pad, scaledHeight, flags));
│ │ +    /* We pass scaledWidth + 1 and scaledHeight + 1 to validate that
│ │ +       tjDecompressToYUV2() generates the largest possible scaled image that
│ │ +       fits within the desired dimensions, as documented. */
│ │ +    TRY_TJ(tjDecompressToYUV2(handle, jpegBuf, jpegSize, yuvBuf,
│ │ +                              scaledWidth + 1, yuvAlign, scaledHeight + 1,
│ │ +                              flags));
│ │      if (checkBufYUV(yuvBuf, scaledWidth, scaledHeight, subsamp, sf))
│ │        printf("Passed.\n");
│ │      else printf("FAILED!\n");
│ │  
│ │      printf("YUV %s -> %s %s ... ", subNameLong[subsamp], pixFormatStr[pf],
│ │             (flags & TJFLAG_BOTTOMUP) ? "Bottom-Up" : "Top-Down ");
│ │ -    TRY_TJ(tjDecodeYUV(handle2, yuvBuf, pad, subsamp, dstBuf, scaledWidth, 0,
│ │ -                       scaledHeight, pf, flags));
│ │ +    TRY_TJ(tjDecodeYUV(handle2, yuvBuf, yuvAlign, subsamp, dstBuf, scaledWidth,
│ │ +                       0, scaledHeight, pf, flags));
│ │      tjDestroy(handle2);
│ │    } else {
│ │      printf("JPEG -> %s %s ", pixFormatStr[pf],
│ │             (flags & TJFLAG_BOTTOMUP) ? "Bottom-Up" : "Top-Down ");
│ │      if (sf.num != 1 || sf.denom != 1)
│ │        printf("%d/%d ... ", sf.num, sf.denom);
│ │      else printf("... ");
│ │ -    TRY_TJ(tjDecompress2(handle, jpegBuf, jpegSize, dstBuf, scaledWidth, 0,
│ │ -                         scaledHeight, pf, flags));
│ │ +    /* We pass scaledWidth + 1 and scaledHeight + 1 to validate that
│ │ +       tjDecompress2() generates the largest possible scaled image that fits
│ │ +       within the desired dimensions, as documented. */
│ │ +    TRY_TJ(tjDecompress2(handle, jpegBuf, jpegSize, dstBuf, scaledWidth + 1, 0,
│ │ +                         scaledHeight + 1, pf, flags));
│ │    }
│ │  
│ │    if (checkBuf(dstBuf, scaledWidth, scaledHeight, pf, subsamp, sf, flags))
│ │      printf("Passed.");
│ │    else printf("FAILED!");
│ │    printf("\n");
│ │  
│ │ @@ -567,32 +575,45 @@
│ │  #else
│ │  #define CHECKSIZE(function) { \
│ │    if (size != (unsigned long)(-1) || \
│ │        !strcmp(tjGetErrorStr2(NULL), "No error")) \
│ │      THROW(#function " overflow"); \
│ │  }
│ │  #endif
│ │ +#define CHECKSIZEINT(function) { \
│ │ +  if (intsize != -1 || !strcmp(tjGetErrorStr2(NULL), "No error")) \
│ │ +    THROW(#function " overflow"); \
│ │ +}
│ │  
│ │  static void overflowTest(void)
│ │  {
│ │    /* Ensure that the various buffer size functions don't overflow */
│ │    unsigned long size;
│ │ +  int intsize;
│ │  
│ │    size = tjBufSize(26755, 26755, TJSAMP_444);
│ │    CHECKSIZE(tjBufSize());
│ │    size = TJBUFSIZE(26755, 26755);
│ │    CHECKSIZE(TJBUFSIZE());
│ │    size = tjBufSizeYUV2(37838, 1, 37838, TJSAMP_444);
│ │    CHECKSIZE(tjBufSizeYUV2());
│ │ +  size = tjBufSizeYUV2(37837, 3, 37837, TJSAMP_444);
│ │ +  CHECKSIZE(tjBufSizeYUV2());
│ │ +  size = tjBufSizeYUV2(37837, -1, 37837, TJSAMP_444);
│ │ +  CHECKSIZE(tjBufSizeYUV2());
│ │    size = TJBUFSIZEYUV(37838, 37838, TJSAMP_444);
│ │    CHECKSIZE(TJBUFSIZEYUV());
│ │    size = tjBufSizeYUV(37838, 37838, TJSAMP_444);
│ │    CHECKSIZE(tjBufSizeYUV());
│ │    size = tjPlaneSizeYUV(0, 65536, 0, 65536, TJSAMP_444);
│ │    CHECKSIZE(tjPlaneSizeYUV());
│ │ +  intsize = tjPlaneWidth(0, INT_MAX, TJSAMP_420);
│ │ +  CHECKSIZEINT(tjPlaneWidth());
│ │ +  intsize = tjPlaneHeight(0, INT_MAX, TJSAMP_420);
│ │ +  CHECKSIZEINT(tjPlaneHeight());
│ │  
│ │  bailout:
│ │    return;
│ │  }
│ │  
│ │  
│ │  static void bufSizeTest(void)
│ │ @@ -610,55 +631,55 @@
│ │        int maxh = (w == 1) ? 2048 : 48;
│ │  
│ │        for (h = 1; h < maxh; h++) {
│ │          if (h % 100 == 0) printf("%.4d x %.4d\b\b\b\b\b\b\b\b\b\b\b", w, h);
│ │          if ((srcBuf = (unsigned char *)malloc(w * h * 4)) == NULL)
│ │            THROW("Memory allocation failure");
│ │          if (!alloc || doYUV) {
│ │ -          if (doYUV) dstSize = tjBufSizeYUV2(w, pad, h, subsamp);
│ │ +          if (doYUV) dstSize = tjBufSizeYUV2(w, yuvAlign, h, subsamp);
│ │            else dstSize = tjBufSize(w, h, subsamp);
│ │            if ((dstBuf = (unsigned char *)tjAlloc(dstSize)) == NULL)
│ │              THROW("Memory allocation failure");
│ │          }
│ │  
│ │          for (i = 0; i < w * h * 4; i++) {
│ │            if (random() < RAND_MAX / 2) srcBuf[i] = 0;
│ │            else srcBuf[i] = 255;
│ │          }
│ │  
│ │          if (doYUV) {
│ │ -          TRY_TJ(tjEncodeYUV3(handle, srcBuf, w, 0, h, TJPF_BGRX, dstBuf, pad,
│ │ -                              subsamp, 0));
│ │ +          TRY_TJ(tjEncodeYUV3(handle, srcBuf, w, 0, h, TJPF_BGRX, dstBuf,
│ │ +                              yuvAlign, subsamp, 0));
│ │          } else {
│ │            TRY_TJ(tjCompress2(handle, srcBuf, w, 0, h, TJPF_BGRX, &dstBuf,
│ │                               &dstSize, subsamp, 100,
│ │                               alloc ? 0 : TJFLAG_NOREALLOC));
│ │          }
│ │          free(srcBuf);  srcBuf = NULL;
│ │          if (!alloc || doYUV) {
│ │            tjFree(dstBuf);  dstBuf = NULL;
│ │          }
│ │  
│ │          if ((srcBuf = (unsigned char *)malloc(h * w * 4)) == NULL)
│ │            THROW("Memory allocation failure");
│ │          if (!alloc || doYUV) {
│ │ -          if (doYUV) dstSize = tjBufSizeYUV2(h, pad, w, subsamp);
│ │ +          if (doYUV) dstSize = tjBufSizeYUV2(h, yuvAlign, w, subsamp);
│ │            else dstSize = tjBufSize(h, w, subsamp);
│ │            if ((dstBuf = (unsigned char *)tjAlloc(dstSize)) == NULL)
│ │              THROW("Memory allocation failure");
│ │          }
│ │  
│ │          for (i = 0; i < h * w * 4; i++) {
│ │            if (random() < RAND_MAX / 2) srcBuf[i] = 0;
│ │            else srcBuf[i] = 255;
│ │          }
│ │  
│ │          if (doYUV) {
│ │ -          TRY_TJ(tjEncodeYUV3(handle, srcBuf, h, 0, w, TJPF_BGRX, dstBuf, pad,
│ │ -                              subsamp, 0));
│ │ +          TRY_TJ(tjEncodeYUV3(handle, srcBuf, h, 0, w, TJPF_BGRX, dstBuf,
│ │ +                              yuvAlign, subsamp, 0));
│ │          } else {
│ │            TRY_TJ(tjCompress2(handle, srcBuf, h, 0, w, TJPF_BGRX, &dstBuf,
│ │                               &dstSize, subsamp, 100,
│ │                               alloc ? 0 : TJFLAG_NOREALLOC));
│ │          }
│ │          free(srcBuf);  srcBuf = NULL;
│ │          if (!alloc || doYUV) {
│ │ @@ -894,15 +915,15 @@
│ │  
│ │  #ifdef _WIN32
│ │    srand((unsigned int)time(NULL));
│ │  #endif
│ │    if (argc > 1) {
│ │      for (i = 1; i < argc; i++) {
│ │        if (!strcasecmp(argv[i], "-yuv")) doYUV = 1;
│ │ -      else if (!strcasecmp(argv[i], "-noyuvpad")) pad = 1;
│ │ +      else if (!strcasecmp(argv[i], "-noyuvpad")) yuvAlign = 1;
│ │        else if (!strcasecmp(argv[i], "-alloc")) alloc = 1;
│ │        else if (!strcasecmp(argv[i], "-bmp")) return bmpTest();
│ │        else usage(argv[0]);
│ │      }
│ │    }
│ │    if (alloc) printf("Testing automatic buffer allocation\n");
│ │    if (doYUV) num4bf = 4;
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjutil.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjutil.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/tjutil.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/tjutil.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/transupp.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/transupp.c
│ │┄ Files 0% similar despite different names
│ │ @@ -139,15 +139,15 @@
│ │      for (offset_y = 0; offset_y < compptr->v_samp_factor; offset_y++) {
│ │        block = buffer[offset_y];
│ │        for (blk_x = 0; blk_x < compptr->width_in_blocks; blk_x++) {
│ │          ptr = block[blk_x];
│ │          for (k = 0; k < DCTSIZE2; k++) {
│ │            temp = qtblptr->quantval[k];
│ │            qval = qtblptr1->quantval[k];
│ │ -          if (temp != qval) {
│ │ +          if (temp != qval && qval != 0) {
│ │              temp *= ptr[k];
│ │              /* The following quantization code is copied from jcdctmgr.c */
│ │  #ifdef FAST_DIVIDE
│ │  #define DIVIDE_BY(a, b)  a /= b
│ │  #else
│ │  #define DIVIDE_BY(a, b)  if (a >= b) a /= b;  else a = 0
│ │  #endif
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/transupp.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/transupp.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg-jni.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg-jni.c
│ │┄ Files 2% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2011-2022 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2011-2023 D. R. Commander.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -22,14 +22,15 @@
│ │   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
│ │   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
│ │   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
│ │   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
│ │   * POSSIBILITY OF SUCH DAMAGE.
│ │   */
│ │  
│ │ +#include <limits.h>
│ │  #include "turbojpeg.h"
│ │  #include "jinclude.h"
│ │  #include <jni.h>
│ │  #include "java/org_libjpegturbo_turbojpeg_TJCompressor.h"
│ │  #include "java/org_libjpegturbo_turbojpeg_TJDecompressor.h"
│ │  #include "java/org_libjpegturbo_turbojpeg_TJTransformer.h"
│ │  #include "java/org_libjpegturbo_turbojpeg_TJ.h"
│ │ @@ -128,32 +129,36 @@
│ │    return -1;
│ │  }
│ │  
│ │  /* TurboJPEG 1.2.x: TJ::bufSize() */
│ │  JNIEXPORT jint JNICALL Java_org_libjpegturbo_turbojpeg_TJ_bufSize
│ │    (JNIEnv *env, jclass cls, jint width, jint height, jint jpegSubsamp)
│ │  {
│ │ -  jint retval = (jint)tjBufSize(width, height, jpegSubsamp);
│ │ +  unsigned long retval = tjBufSize(width, height, jpegSubsamp);
│ │  
│ │ -  if (retval == -1) THROW_ARG(tjGetErrorStr());
│ │ +  if (retval == (unsigned long)-1) THROW_ARG(tjGetErrorStr());
│ │ +  if (retval > (unsigned long)INT_MAX)
│ │ +    THROW_ARG("Image is too large");
│ │  
│ │  bailout:
│ │ -  return retval;
│ │ +  return (jint)retval;
│ │  }
│ │  
│ │  /* TurboJPEG 1.4.x: TJ::bufSizeYUV() */
│ │  JNIEXPORT jint JNICALL Java_org_libjpegturbo_turbojpeg_TJ_bufSizeYUV__IIII
│ │ -  (JNIEnv *env, jclass cls, jint width, jint pad, jint height, jint subsamp)
│ │ +  (JNIEnv *env, jclass cls, jint width, jint align, jint height, jint subsamp)
│ │  {
│ │ -  jint retval = (jint)tjBufSizeYUV2(width, pad, height, subsamp);
│ │ +  unsigned long retval = tjBufSizeYUV2(width, align, height, subsamp);
│ │  
│ │ -  if (retval == -1) THROW_ARG(tjGetErrorStr());
│ │ +  if (retval == (unsigned long)-1) THROW_ARG(tjGetErrorStr());
│ │ +  if (retval > (unsigned long)INT_MAX)
│ │ +    THROW_ARG("Image is too large");
│ │  
│ │  bailout:
│ │ -  return retval;
│ │ +  return (jint)retval;
│ │  }
│ │  
│ │  /* TurboJPEG 1.2.x: TJ::bufSizeYUV() */
│ │  JNIEXPORT jint JNICALL Java_org_libjpegturbo_turbojpeg_TJ_bufSizeYUV__III
│ │    (JNIEnv *env, jclass cls, jint width, jint height, jint subsamp)
│ │  {
│ │    return Java_org_libjpegturbo_turbojpeg_TJ_bufSizeYUV__IIII(env, cls, width,
│ │ @@ -162,21 +167,23 @@
│ │  }
│ │  
│ │  /* TurboJPEG 1.4.x: TJ::planeSizeYUV() */
│ │  JNIEXPORT jint JNICALL Java_org_libjpegturbo_turbojpeg_TJ_planeSizeYUV__IIIII
│ │    (JNIEnv *env, jclass cls, jint componentID, jint width, jint stride,
│ │     jint height, jint subsamp)
│ │  {
│ │ -  jint retval = (jint)tjPlaneSizeYUV(componentID, width, stride, height,
│ │ -                                     subsamp);
│ │ +  unsigned long retval = tjPlaneSizeYUV(componentID, width, stride, height,
│ │ +                                        subsamp);
│ │  
│ │ -  if (retval == -1) THROW_ARG(tjGetErrorStr());
│ │ +  if (retval == (unsigned long)-1) THROW_ARG(tjGetErrorStr());
│ │ +  if (retval > (unsigned long)INT_MAX)
│ │ +    THROW_ARG("Image is too large");
│ │  
│ │  bailout:
│ │ -  return retval;
│ │ +  return (jint)retval;
│ │  }
│ │  
│ │  /* TurboJPEG 1.4.x: TJ::planeWidth() */
│ │  JNIEXPORT jint JNICALL Java_org_libjpegturbo_turbojpeg_TJ_planeWidth__III
│ │    (JNIEnv *env, jclass cls, jint componentID, jint width, jint subsamp)
│ │  {
│ │    jint retval = (jint)tjPlaneWidth(componentID, width, subsamp);
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg-mapfile
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg-mapfile
│ │┄ Ordering differences only
│ │┄ Files 0% similar despite different names
│ │ @@ -1,18 +1,18 @@
│ │  TURBOJPEG_1.0
│ │  {
│ │    global:
│ │ -    tjInitCompress;
│ │ -    tjCompress;
│ │      TJBUFSIZE;
│ │ -    tjInitDecompress;
│ │ -    tjDecompressHeader;
│ │ +    tjCompress;
│ │      tjDecompress;
│ │ +    tjDecompressHeader;
│ │      tjDestroy;
│ │      tjGetErrorStr;
│ │ +    tjInitCompress;
│ │ +    tjInitDecompress;
│ │    local:
│ │      *;
│ │  };
│ │  
│ │  TURBOJPEG_1.1
│ │  {
│ │    global:
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg-mapfile.jni
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg-mapfile.jni
│ │┄ Ordering differences only
│ │┄ Files 0% similar despite different names
│ │ @@ -1,18 +1,18 @@
│ │  TURBOJPEG_1.0
│ │  {
│ │    global:
│ │ -    tjInitCompress;
│ │ -    tjCompress;
│ │      TJBUFSIZE;
│ │ -    tjInitDecompress;
│ │ -    tjDecompressHeader;
│ │ +    tjCompress;
│ │      tjDecompress;
│ │ +    tjDecompressHeader;
│ │      tjDestroy;
│ │      tjGetErrorStr;
│ │ +    tjInitCompress;
│ │ +    tjInitDecompress;
│ │    local:
│ │      *;
│ │  };
│ │  
│ │  TURBOJPEG_1.1
│ │  {
│ │    global:
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg.c
│ │┄ Files 14% similar despite different names
│ │ @@ -1,9 +1,9 @@
│ │  /*
│ │ - * Copyright (C)2009-2022 D. R. Commander.  All Rights Reserved.
│ │ + * Copyright (C)2009-2023 D. R. Commander.  All Rights Reserved.
│ │   * Copyright (C)2021 Alex Richardson.  All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │ @@ -27,26 +27,26 @@
│ │   * POSSIBILITY OF SUCH DAMAGE.
│ │   */
│ │  
│ │  /* TurboJPEG/LJT:  this implements the TurboJPEG API using libjpeg or
│ │     libjpeg-turbo */
│ │  
│ │  #include <ctype.h>
│ │ +#include <limits.h>
│ │  #include <jinclude.h>
│ │  #define JPEG_INTERNALS
│ │  #include <jpeglib.h>
│ │  #include <jerror.h>
│ │  #include <setjmp.h>
│ │  #include <errno.h>
│ │  #include "./turbojpeg.h"
│ │  #include "./tjutil.h"
│ │  #include "transupp.h"
│ │  #include "./jpegcomp.h"
│ │  #include "./cdjpeg.h"
│ │ -#include "jconfigint.h"
│ │  
│ │  extern void jpeg_mem_dest_tj(j_compress_ptr, unsigned char **, unsigned long *,
│ │                               boolean);
│ │  extern void jpeg_mem_src_tj(j_decompress_ptr, const unsigned char *,
│ │                              unsigned long);
│ │  
│ │  #define PAD(v, p)  ((v + (p) - 1) & (~((p) - 1)))
│ │ @@ -94,15 +94,15 @@
│ │    if (msg_level < 0) {
│ │      myerr->warning = TRUE;
│ │      if (myerr->stopOnWarning) longjmp(myerr->setjmp_buffer, 1);
│ │    }
│ │  }
│ │  
│ │  
│ │ -/* Global structures, macros, etc. */
│ │ +/********************** Global structures, macros, etc. **********************/
│ │  
│ │  enum { COMPRESS = 1, DECOMPRESS = 2 };
│ │  
│ │  typedef struct _tjinstance {
│ │    struct jpeg_compress_struct cinfo;
│ │    struct jpeg_decompress_struct dinfo;
│ │    struct my_error_mgr jerr;
│ │ @@ -320,20 +320,22 @@
│ │    if (subsamp == TJSAMP_GRAY)
│ │      jpeg_set_colorspace(cinfo, JCS_GRAYSCALE);
│ │    else if (pixelFormat == TJPF_CMYK)
│ │      jpeg_set_colorspace(cinfo, JCS_YCCK);
│ │    else
│ │      jpeg_set_colorspace(cinfo, JCS_YCbCr);
│ │  
│ │ +#ifdef C_PROGRESSIVE_SUPPORTED
│ │    if (flags & TJFLAG_PROGRESSIVE)
│ │      jpeg_simple_progression(cinfo);
│ │  #ifndef NO_GETENV
│ │    else if (!GETENV_S(env, 7, "TJ_PROGRESSIVE") && !strcmp(env, "1"))
│ │      jpeg_simple_progression(cinfo);
│ │  #endif
│ │ +#endif
│ │  
│ │    cinfo->comp_info[0].h_samp_factor = tjMCUWidth[subsamp] / 8;
│ │    cinfo->comp_info[1].h_samp_factor = 1;
│ │    cinfo->comp_info[2].h_samp_factor = 1;
│ │    if (cinfo->num_components > 3)
│ │      cinfo->comp_info[3].h_samp_factor = tjMCUWidth[subsamp] / 8;
│ │    cinfo->comp_info[0].v_samp_factor = tjMCUHeight[subsamp] / 8;
│ │ @@ -351,15 +353,15 @@
│ │    /* The sampling factors actually have no meaning with grayscale JPEG files,
│ │       and in fact it's possible to generate grayscale JPEGs with sampling
│ │       factors > 1 (even though those sampling factors are ignored by the
│ │       decompressor.)  Thus, we need to treat grayscale as a special case. */
│ │    if (dinfo->num_components == 1 && dinfo->jpeg_color_space == JCS_GRAYSCALE)
│ │      return TJSAMP_GRAY;
│ │  
│ │ -  for (i = 0; i < NUMSUBOPT; i++) {
│ │ +  for (i = 0; i < TJ_NUMSAMP; i++) {
│ │      if (dinfo->num_components == pixelsize[i] ||
│ │          ((dinfo->jpeg_color_space == JCS_YCCK ||
│ │            dinfo->jpeg_color_space == JCS_CMYK) &&
│ │           pixelsize[i] == 3 && dinfo->num_components == 4)) {
│ │        if (dinfo->comp_info[0].h_samp_factor == tjMCUWidth[i] / 8 &&
│ │            dinfo->comp_info[0].v_samp_factor == tjMCUHeight[i] / 8) {
│ │          int match = 0;
│ │ @@ -420,43 +422,47 @@
│ │        }
│ │      }
│ │    }
│ │    return retval;
│ │  }
│ │  
│ │  
│ │ -/* General API functions */
│ │ +/*************************** General API functions ***************************/
│ │  
│ │ +/* TurboJPEG 2.0+ */
│ │  DLLEXPORT char *tjGetErrorStr2(tjhandle handle)
│ │  {
│ │    tjinstance *this = (tjinstance *)handle;
│ │  
│ │    if (this && this->isInstanceError) {
│ │      this->isInstanceError = FALSE;
│ │      return this->errStr;
│ │    } else
│ │      return errStr;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT char *tjGetErrorStr(void)
│ │  {
│ │    return errStr;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 2.0+ */
│ │  DLLEXPORT int tjGetErrorCode(tjhandle handle)
│ │  {
│ │    tjinstance *this = (tjinstance *)handle;
│ │  
│ │    if (this && this->jerr.warning) return TJERR_WARNING;
│ │    else return TJERR_FATAL;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT int tjDestroy(tjhandle handle)
│ │  {
│ │    GET_INSTANCE(handle);
│ │  
│ │    if (setjmp(this->jerr.setjmp_buffer)) return -1;
│ │    if (this->init & COMPRESS) jpeg_destroy_compress(cinfo);
│ │    if (this->init & DECOMPRESS) jpeg_destroy_decompress(dinfo);
│ │ @@ -466,27 +472,29 @@
│ │  
│ │  
│ │  /* These are exposed mainly because Windows can't malloc() and free() across
│ │     DLL boundaries except when the CRT DLL is used, and we don't use the CRT DLL
│ │     with turbojpeg.dll for compatibility reasons.  However, these functions
│ │     can potentially be used for other purposes by different implementations. */
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT void tjFree(unsigned char *buf)
│ │  {
│ │    free(buf);
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT unsigned char *tjAlloc(int bytes)
│ │  {
│ │    return (unsigned char *)malloc(bytes);
│ │  }
│ │  
│ │  
│ │ -/* Compressor  */
│ │ +/******************************** Compressor *********************************/
│ │  
│ │  static tjhandle _tjInitCompress(tjinstance *this)
│ │  {
│ │    static unsigned char buffer[1];
│ │    unsigned char *buf = buffer;
│ │    unsigned long size = 1;
│ │  
│ │ @@ -510,14 +518,15 @@
│ │    /* Make an initial call so it will create the destination manager */
│ │    jpeg_mem_dest_tj(&this->cinfo, &buf, &size, 0);
│ │  
│ │    this->init |= COMPRESS;
│ │    return (tjhandle)this;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT tjhandle tjInitCompress(void)
│ │  {
│ │    tjinstance *this = NULL;
│ │  
│ │    if ((this = (tjinstance *)malloc(sizeof(tjinstance))) == NULL) {
│ │      SNPRINTF(errStr, JMSG_LENGTH_MAX,
│ │               "tjInitCompress(): Memory allocation failure");
│ │ @@ -525,20 +534,21 @@
│ │    }
│ │    memset(this, 0, sizeof(tjinstance));
│ │    SNPRINTF(this->errStr, JMSG_LENGTH_MAX, "No error");
│ │    return _tjInitCompress(this);
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT unsigned long tjBufSize(int width, int height, int jpegSubsamp)
│ │  {
│ │    unsigned long long retval = 0;
│ │    int mcuw, mcuh, chromasf;
│ │  
│ │ -  if (width < 1 || height < 1 || jpegSubsamp < 0 || jpegSubsamp >= NUMSUBOPT)
│ │ +  if (width < 1 || height < 1 || jpegSubsamp < 0 || jpegSubsamp >= TJ_NUMSAMP)
│ │      THROWG("tjBufSize(): Invalid argument");
│ │  
│ │    /* This allows for rare corner cases in which a JPEG image can actually be
│ │       larger than the uncompressed input (we wouldn't mention it if it hadn't
│ │       happened before.) */
│ │    mcuw = tjMCUWidth[jpegSubsamp];
│ │    mcuh = tjMCUHeight[jpegSubsamp];
│ │ @@ -547,14 +557,15 @@
│ │    if (retval > (unsigned long long)((unsigned long)-1))
│ │      THROWG("tjBufSize(): Image is too large");
│ │  
│ │  bailout:
│ │    return (unsigned long)retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT unsigned long TJBUFSIZE(int width, int height)
│ │  {
│ │    unsigned long long retval = 0;
│ │  
│ │    if (width < 1 || height < 1)
│ │      THROWG("TJBUFSIZE(): Invalid argument");
│ │  
│ │ @@ -566,99 +577,113 @@
│ │      THROWG("TJBUFSIZE(): Image is too large");
│ │  
│ │  bailout:
│ │    return (unsigned long)retval;
│ │  }
│ │  
│ │  
│ │ -DLLEXPORT unsigned long tjBufSizeYUV2(int width, int pad, int height,
│ │ +/* TurboJPEG 1.4+ */
│ │ +DLLEXPORT unsigned long tjBufSizeYUV2(int width, int align, int height,
│ │                                        int subsamp)
│ │  {
│ │    unsigned long long retval = 0;
│ │    int nc, i;
│ │  
│ │ -  if (subsamp < 0 || subsamp >= NUMSUBOPT)
│ │ +  if (align < 1 || !IS_POW2(align) || subsamp < 0 || subsamp >= TJ_NUMSAMP)
│ │      THROWG("tjBufSizeYUV2(): Invalid argument");
│ │  
│ │    nc = (subsamp == TJSAMP_GRAY ? 1 : 3);
│ │    for (i = 0; i < nc; i++) {
│ │      int pw = tjPlaneWidth(i, width, subsamp);
│ │ -    int stride = PAD(pw, pad);
│ │ +    int stride = PAD(pw, align);
│ │      int ph = tjPlaneHeight(i, height, subsamp);
│ │  
│ │      if (pw < 0 || ph < 0) return -1;
│ │      else retval += (unsigned long long)stride * ph;
│ │    }
│ │    if (retval > (unsigned long long)((unsigned long)-1))
│ │      THROWG("tjBufSizeYUV2(): Image is too large");
│ │  
│ │  bailout:
│ │    return (unsigned long)retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT unsigned long tjBufSizeYUV(int width, int height, int subsamp)
│ │  {
│ │    return tjBufSizeYUV2(width, 4, height, subsamp);
│ │  }
│ │  
│ │ +/* TurboJPEG 1.1+ */
│ │  DLLEXPORT unsigned long TJBUFSIZEYUV(int width, int height, int subsamp)
│ │  {
│ │    return tjBufSizeYUV(width, height, subsamp);
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjPlaneWidth(int componentID, int width, int subsamp)
│ │  {
│ │ -  int pw, nc, retval = 0;
│ │ +  unsigned long long pw, retval = 0;
│ │ +  int nc;
│ │  
│ │    if (width < 1 || subsamp < 0 || subsamp >= TJ_NUMSAMP)
│ │      THROWG("tjPlaneWidth(): Invalid argument");
│ │    nc = (subsamp == TJSAMP_GRAY ? 1 : 3);
│ │    if (componentID < 0 || componentID >= nc)
│ │      THROWG("tjPlaneWidth(): Invalid argument");
│ │  
│ │ -  pw = PAD(width, tjMCUWidth[subsamp] / 8);
│ │ +  pw = PAD((unsigned long long)width, tjMCUWidth[subsamp] / 8);
│ │    if (componentID == 0)
│ │      retval = pw;
│ │    else
│ │      retval = pw * 8 / tjMCUWidth[subsamp];
│ │  
│ │ +  if (retval > (unsigned long long)INT_MAX)
│ │ +    THROWG("tjPlaneWidth(): Width is too large");
│ │ +
│ │  bailout:
│ │ -  return retval;
│ │ +  return (int)retval;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjPlaneHeight(int componentID, int height, int subsamp)
│ │  {
│ │ -  int ph, nc, retval = 0;
│ │ +  unsigned long long ph, retval = 0;
│ │ +  int nc;
│ │  
│ │    if (height < 1 || subsamp < 0 || subsamp >= TJ_NUMSAMP)
│ │      THROWG("tjPlaneHeight(): Invalid argument");
│ │    nc = (subsamp == TJSAMP_GRAY ? 1 : 3);
│ │    if (componentID < 0 || componentID >= nc)
│ │      THROWG("tjPlaneHeight(): Invalid argument");
│ │  
│ │ -  ph = PAD(height, tjMCUHeight[subsamp] / 8);
│ │ +  ph = PAD((unsigned long long)height, tjMCUHeight[subsamp] / 8);
│ │    if (componentID == 0)
│ │      retval = ph;
│ │    else
│ │      retval = ph * 8 / tjMCUHeight[subsamp];
│ │  
│ │ +  if (retval > (unsigned long long)INT_MAX)
│ │ +    THROWG("tjPlaneHeight(): Height is too large");
│ │ +
│ │  bailout:
│ │ -  return retval;
│ │ +  return (int)retval;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT unsigned long tjPlaneSizeYUV(int componentID, int width, int stride,
│ │                                         int height, int subsamp)
│ │  {
│ │    unsigned long long retval = 0;
│ │    int pw, ph;
│ │  
│ │ -  if (width < 1 || height < 1 || subsamp < 0 || subsamp >= NUMSUBOPT)
│ │ +  if (width < 1 || height < 1 || subsamp < 0 || subsamp >= TJ_NUMSAMP)
│ │      THROWG("tjPlaneSizeYUV(): Invalid argument");
│ │  
│ │    pw = tjPlaneWidth(componentID, width, subsamp);
│ │    ph = tjPlaneHeight(componentID, height, subsamp);
│ │    if (pw < 0 || ph < 0) return -1;
│ │  
│ │    if (stride == 0) stride = pw;
│ │ @@ -669,14 +694,15 @@
│ │      THROWG("tjPlaneSizeYUV(): Image is too large");
│ │  
│ │  bailout:
│ │    return (unsigned long)retval;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT int tjCompress2(tjhandle handle, const unsigned char *srcBuf,
│ │                            int width, int pitch, int height, int pixelFormat,
│ │                            unsigned char **jpegBuf, unsigned long *jpegSize,
│ │                            int jpegSubsamp, int jpegQual, int flags)
│ │  {
│ │    int i, retval = 0;
│ │    boolean alloc = TRUE;
│ │ @@ -685,15 +711,15 @@
│ │    GET_CINSTANCE(handle)
│ │    this->jerr.stopOnWarning = (flags & TJFLAG_STOPONWARNING) ? TRUE : FALSE;
│ │    if ((this->init & COMPRESS) == 0)
│ │      THROW("tjCompress2(): Instance has not been initialized for compression");
│ │  
│ │    if (srcBuf == NULL || width <= 0 || pitch < 0 || height <= 0 ||
│ │        pixelFormat < 0 || pixelFormat >= TJ_NUMPF || jpegBuf == NULL ||
│ │ -      jpegSize == NULL || jpegSubsamp < 0 || jpegSubsamp >= NUMSUBOPT ||
│ │ +      jpegSize == NULL || jpegSubsamp < 0 || jpegSubsamp >= TJ_NUMSAMP ||
│ │        jpegQual < 0 || jpegQual > 100)
│ │      THROW("tjCompress2(): Invalid argument");
│ │  
│ │    if (pitch == 0) pitch = width * tjPixelSize[pixelFormat];
│ │  
│ │    if ((row_pointer = (JSAMPROW *)malloc(sizeof(JSAMPROW) * height)) == NULL)
│ │      THROW("tjCompress2(): Memory allocation failure");
│ │ @@ -737,14 +763,15 @@
│ │    }
│ │    free(row_pointer);
│ │    if (this->jerr.warning) retval = -1;
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT int tjCompress(tjhandle handle, unsigned char *srcBuf, int width,
│ │                           int pitch, int height, int pixelSize,
│ │                           unsigned char *jpegBuf, unsigned long *jpegSize,
│ │                           int jpegSubsamp, int jpegQual, int flags)
│ │  {
│ │    int retval = 0;
│ │    unsigned long size;
│ │ @@ -760,14 +787,15 @@
│ │                           jpegSubsamp, jpegQual, flags | TJFLAG_NOREALLOC);
│ │    }
│ │    *jpegSize = size;
│ │    return retval;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjEncodeYUVPlanes(tjhandle handle, const unsigned char *srcBuf,
│ │                                  int width, int pitch, int height,
│ │                                  int pixelFormat, unsigned char **dstPlanes,
│ │                                  int *strides, int subsamp, int flags)
│ │  {
│ │    JSAMPROW *row_pointer = NULL;
│ │    JSAMPLE *_tmpbuf[MAX_COMPONENTS], *_tmpbuf2[MAX_COMPONENTS];
│ │ @@ -786,21 +814,21 @@
│ │    }
│ │  
│ │    if ((this->init & COMPRESS) == 0)
│ │      THROW("tjEncodeYUVPlanes(): Instance has not been initialized for compression");
│ │  
│ │    if (srcBuf == NULL || width <= 0 || pitch < 0 || height <= 0 ||
│ │        pixelFormat < 0 || pixelFormat >= TJ_NUMPF || !dstPlanes ||
│ │ -      !dstPlanes[0] || subsamp < 0 || subsamp >= NUMSUBOPT)
│ │ +      !dstPlanes[0] || subsamp < 0 || subsamp >= TJ_NUMSAMP)
│ │      THROW("tjEncodeYUVPlanes(): Invalid argument");
│ │    if (subsamp != TJSAMP_GRAY && (!dstPlanes[1] || !dstPlanes[2]))
│ │      THROW("tjEncodeYUVPlanes(): Invalid argument");
│ │  
│ │    if (pixelFormat == TJPF_CMYK)
│ │ -    THROW("tjEncodeYUVPlanes(): Cannot generate YUV images from CMYK pixels");
│ │ +    THROW("tjEncodeYUVPlanes(): Cannot generate YUV images from packed-pixel CMYK images");
│ │  
│ │    if (pitch == 0) pitch = width * tjPixelSize[pixelFormat];
│ │  
│ │    if (setjmp(this->jerr.setjmp_buffer)) {
│ │      /* If we get here, the JPEG code has signaled an error. */
│ │      retval = -1;  goto bailout;
│ │    }
│ │ @@ -918,71 +946,75 @@
│ │      free(outbuf[i]);
│ │    }
│ │    if (this->jerr.warning) retval = -1;
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjEncodeYUV3(tjhandle handle, const unsigned char *srcBuf,
│ │                             int width, int pitch, int height, int pixelFormat,
│ │ -                           unsigned char *dstBuf, int pad, int subsamp,
│ │ +                           unsigned char *dstBuf, int align, int subsamp,
│ │                             int flags)
│ │  {
│ │    unsigned char *dstPlanes[3];
│ │    int pw0, ph0, strides[3], retval = -1;
│ │    tjinstance *this = (tjinstance *)handle;
│ │  
│ │    if (!this) THROWG("tjEncodeYUV3(): Invalid handle");
│ │    this->isInstanceError = FALSE;
│ │  
│ │ -  if (width <= 0 || height <= 0 || dstBuf == NULL || pad < 0 ||
│ │ -      !IS_POW2(pad) || subsamp < 0 || subsamp >= NUMSUBOPT)
│ │ +  if (width <= 0 || height <= 0 || dstBuf == NULL || align < 1 ||
│ │ +      !IS_POW2(align) || subsamp < 0 || subsamp >= TJ_NUMSAMP)
│ │      THROW("tjEncodeYUV3(): Invalid argument");
│ │  
│ │    pw0 = tjPlaneWidth(0, width, subsamp);
│ │    ph0 = tjPlaneHeight(0, height, subsamp);
│ │    dstPlanes[0] = dstBuf;
│ │ -  strides[0] = PAD(pw0, pad);
│ │ +  strides[0] = PAD(pw0, align);
│ │    if (subsamp == TJSAMP_GRAY) {
│ │      strides[1] = strides[2] = 0;
│ │      dstPlanes[1] = dstPlanes[2] = NULL;
│ │    } else {
│ │      int pw1 = tjPlaneWidth(1, width, subsamp);
│ │      int ph1 = tjPlaneHeight(1, height, subsamp);
│ │  
│ │ -    strides[1] = strides[2] = PAD(pw1, pad);
│ │ +    strides[1] = strides[2] = PAD(pw1, align);
│ │      dstPlanes[1] = dstPlanes[0] + strides[0] * ph0;
│ │      dstPlanes[2] = dstPlanes[1] + strides[1] * ph1;
│ │    }
│ │  
│ │    return tjEncodeYUVPlanes(handle, srcBuf, width, pitch, height, pixelFormat,
│ │                             dstPlanes, strides, subsamp, flags);
│ │  
│ │  bailout:
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT int tjEncodeYUV2(tjhandle handle, unsigned char *srcBuf, int width,
│ │                             int pitch, int height, int pixelFormat,
│ │                             unsigned char *dstBuf, int subsamp, int flags)
│ │  {
│ │    return tjEncodeYUV3(handle, srcBuf, width, pitch, height, pixelFormat,
│ │                        dstBuf, 4, subsamp, flags);
│ │  }
│ │  
│ │ +/* TurboJPEG 1.1+ */
│ │  DLLEXPORT int tjEncodeYUV(tjhandle handle, unsigned char *srcBuf, int width,
│ │                            int pitch, int height, int pixelSize,
│ │                            unsigned char *dstBuf, int subsamp, int flags)
│ │  {
│ │    return tjEncodeYUV2(handle, srcBuf, width, pitch, height,
│ │                        getPixelFormat(pixelSize, flags), dstBuf, subsamp,
│ │                        flags);
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjCompressFromYUVPlanes(tjhandle handle,
│ │                                        const unsigned char **srcPlanes,
│ │                                        int width, const int *strides,
│ │                                        int height, int subsamp,
│ │                                        unsigned char **jpegBuf,
│ │                                        unsigned long *jpegSize, int jpegQual,
│ │                                        int flags)
│ │ @@ -1001,15 +1033,15 @@
│ │      tmpbuf[i] = NULL;  inbuf[i] = NULL;
│ │    }
│ │  
│ │    if ((this->init & COMPRESS) == 0)
│ │      THROW("tjCompressFromYUVPlanes(): Instance has not been initialized for compression");
│ │  
│ │    if (!srcPlanes || !srcPlanes[0] || width <= 0 || height <= 0 ||
│ │ -      subsamp < 0 || subsamp >= NUMSUBOPT || jpegBuf == NULL ||
│ │ +      subsamp < 0 || subsamp >= TJ_NUMSAMP || jpegBuf == NULL ||
│ │        jpegSize == NULL || jpegQual < 0 || jpegQual > 100)
│ │      THROW("tjCompressFromYUVPlanes(): Invalid argument");
│ │    if (subsamp != TJSAMP_GRAY && (!srcPlanes[1] || !srcPlanes[2]))
│ │      THROW("tjCompressFromYUVPlanes(): Invalid argument");
│ │  
│ │    if (setjmp(this->jerr.setjmp_buffer)) {
│ │      /* If we get here, the JPEG code has signaled an error. */
│ │ @@ -1113,56 +1145,57 @@
│ │    }
│ │    free(_tmpbuf);
│ │    if (this->jerr.warning) retval = -1;
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjCompressFromYUV(tjhandle handle, const unsigned char *srcBuf,
│ │ -                                int width, int pad, int height, int subsamp,
│ │ +                                int width, int align, int height, int subsamp,
│ │                                  unsigned char **jpegBuf,
│ │                                  unsigned long *jpegSize, int jpegQual,
│ │                                  int flags)
│ │  {
│ │    const unsigned char *srcPlanes[3];
│ │    int pw0, ph0, strides[3], retval = -1;
│ │    tjinstance *this = (tjinstance *)handle;
│ │  
│ │    if (!this) THROWG("tjCompressFromYUV(): Invalid handle");
│ │    this->isInstanceError = FALSE;
│ │  
│ │ -  if (srcBuf == NULL || width <= 0 || pad < 1 || height <= 0 || subsamp < 0 ||
│ │ -      subsamp >= NUMSUBOPT)
│ │ +  if (srcBuf == NULL || width <= 0 || align < 1 || !IS_POW2(align) ||
│ │ +      height <= 0 || subsamp < 0 || subsamp >= TJ_NUMSAMP)
│ │      THROW("tjCompressFromYUV(): Invalid argument");
│ │  
│ │    pw0 = tjPlaneWidth(0, width, subsamp);
│ │    ph0 = tjPlaneHeight(0, height, subsamp);
│ │    srcPlanes[0] = srcBuf;
│ │ -  strides[0] = PAD(pw0, pad);
│ │ +  strides[0] = PAD(pw0, align);
│ │    if (subsamp == TJSAMP_GRAY) {
│ │      strides[1] = strides[2] = 0;
│ │      srcPlanes[1] = srcPlanes[2] = NULL;
│ │    } else {
│ │      int pw1 = tjPlaneWidth(1, width, subsamp);
│ │      int ph1 = tjPlaneHeight(1, height, subsamp);
│ │  
│ │ -    strides[1] = strides[2] = PAD(pw1, pad);
│ │ +    strides[1] = strides[2] = PAD(pw1, align);
│ │      srcPlanes[1] = srcPlanes[0] + strides[0] * ph0;
│ │      srcPlanes[2] = srcPlanes[1] + strides[1] * ph1;
│ │    }
│ │  
│ │    return tjCompressFromYUVPlanes(handle, srcPlanes, width, strides, height,
│ │                                   subsamp, jpegBuf, jpegSize, jpegQual, flags);
│ │  
│ │  bailout:
│ │    return retval;
│ │  }
│ │  
│ │  
│ │ -/* Decompressor */
│ │ +/******************************* Decompressor ********************************/
│ │  
│ │  static tjhandle _tjInitDecompress(tjinstance *this)
│ │  {
│ │    static unsigned char buffer[1];
│ │  
│ │    /* This is also straight out of example.txt */
│ │    this->dinfo.err = jpeg_std_error(&this->jerr.pub);
│ │ @@ -1184,14 +1217,15 @@
│ │    /* Make an initial call so it will create the source manager */
│ │    jpeg_mem_src_tj(&this->dinfo, buffer, 1);
│ │  
│ │    this->init |= DECOMPRESS;
│ │    return (tjhandle)this;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT tjhandle tjInitDecompress(void)
│ │  {
│ │    tjinstance *this;
│ │  
│ │    if ((this = (tjinstance *)malloc(sizeof(tjinstance))) == NULL) {
│ │      SNPRINTF(errStr, JMSG_LENGTH_MAX,
│ │               "tjInitDecompress(): Memory allocation failure");
│ │ @@ -1199,14 +1233,15 @@
│ │    }
│ │    memset(this, 0, sizeof(tjinstance));
│ │    SNPRINTF(this->errStr, JMSG_LENGTH_MAX, "No error");
│ │    return _tjInitDecompress(this);
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjDecompressHeader3(tjhandle handle,
│ │                                    const unsigned char *jpegBuf,
│ │                                    unsigned long jpegSize, int *width,
│ │                                    int *height, int *jpegSubsamp,
│ │                                    int *jpegColorspace)
│ │  {
│ │    int retval = 0;
│ │ @@ -1255,48 +1290,52 @@
│ │      THROW("tjDecompressHeader3(): Invalid data returned in header");
│ │  
│ │  bailout:
│ │    if (this->jerr.warning) retval = -1;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.1+ */
│ │  DLLEXPORT int tjDecompressHeader2(tjhandle handle, unsigned char *jpegBuf,
│ │                                    unsigned long jpegSize, int *width,
│ │                                    int *height, int *jpegSubsamp)
│ │  {
│ │    int jpegColorspace;
│ │  
│ │    return tjDecompressHeader3(handle, jpegBuf, jpegSize, width, height,
│ │                               jpegSubsamp, &jpegColorspace);
│ │  }
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT int tjDecompressHeader(tjhandle handle, unsigned char *jpegBuf,
│ │                                   unsigned long jpegSize, int *width,
│ │                                   int *height)
│ │  {
│ │    int jpegSubsamp;
│ │  
│ │    return tjDecompressHeader2(handle, jpegBuf, jpegSize, width, height,
│ │                               &jpegSubsamp);
│ │  }
│ │  
│ │  
│ │ -DLLEXPORT tjscalingfactor *tjGetScalingFactors(int *numscalingfactors)
│ │ +/* TurboJPEG 1.2+ */
│ │ +DLLEXPORT tjscalingfactor *tjGetScalingFactors(int *numScalingFactors)
│ │  {
│ │ -  if (numscalingfactors == NULL) {
│ │ +  if (numScalingFactors == NULL) {
│ │      SNPRINTF(errStr, JMSG_LENGTH_MAX,
│ │               "tjGetScalingFactors(): Invalid argument");
│ │      return NULL;
│ │    }
│ │  
│ │ -  *numscalingfactors = NUMSF;
│ │ +  *numScalingFactors = NUMSF;
│ │    return (tjscalingfactor *)sf;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT int tjDecompress2(tjhandle handle, const unsigned char *jpegBuf,
│ │                              unsigned long jpegSize, unsigned char *dstBuf,
│ │                              int width, int pitch, int height, int pixelFormat,
│ │                              int flags)
│ │  {
│ │    JSAMPROW *row_pointer = NULL;
│ │    int i, retval = 0, jpegwidth, jpegheight, scaledw, scaledh;
│ │ @@ -1376,29 +1415,30 @@
│ │    if (dinfo->global_state > DSTATE_START) jpeg_abort_decompress(dinfo);
│ │    free(row_pointer);
│ │    if (this->jerr.warning) retval = -1;
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  DLLEXPORT int tjDecompress(tjhandle handle, unsigned char *jpegBuf,
│ │                             unsigned long jpegSize, unsigned char *dstBuf,
│ │                             int width, int pitch, int height, int pixelSize,
│ │                             int flags)
│ │  {
│ │    if (flags & TJ_YUV)
│ │      return tjDecompressToYUV(handle, jpegBuf, jpegSize, dstBuf, flags);
│ │    else
│ │      return tjDecompress2(handle, jpegBuf, jpegSize, dstBuf, width, pitch,
│ │                           height, getPixelFormat(pixelSize, flags), flags);
│ │  }
│ │  
│ │  
│ │ -static int setDecodeDefaults(struct jpeg_decompress_struct *dinfo,
│ │ -                             int pixelFormat, int subsamp, int flags)
│ │ +static void setDecodeDefaults(struct jpeg_decompress_struct *dinfo,
│ │ +                              int pixelFormat, int subsamp, int flags)
│ │  {
│ │    int i;
│ │  
│ │    dinfo->scale_num = dinfo->scale_denom = 1;
│ │  
│ │    if (subsamp == TJSAMP_GRAY) {
│ │      dinfo->num_components = dinfo->comps_in_scan = 1;
│ │ @@ -1425,28 +1465,27 @@
│ │      dinfo->cur_comp_info[i] = compptr;
│ │    }
│ │    dinfo->data_precision = 8;
│ │    for (i = 0; i < 2; i++) {
│ │      if (dinfo->quant_tbl_ptrs[i] == NULL)
│ │        dinfo->quant_tbl_ptrs[i] = jpeg_alloc_quant_table((j_common_ptr)dinfo);
│ │    }
│ │ -
│ │ -  return 0;
│ │  }
│ │  
│ │  
│ │  static int my_read_markers(j_decompress_ptr dinfo)
│ │  {
│ │    return JPEG_REACHED_SOS;
│ │  }
│ │  
│ │  static void my_reset_marker_reader(j_decompress_ptr dinfo)
│ │  {
│ │  }
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjDecodeYUVPlanes(tjhandle handle,
│ │                                  const unsigned char **srcPlanes,
│ │                                  const int *strides, int subsamp,
│ │                                  unsigned char *dstBuf, int width, int pitch,
│ │                                  int height, int pixelFormat, int flags)
│ │  {
│ │    JSAMPROW *row_pointer = NULL;
│ │ @@ -1464,45 +1503,43 @@
│ │    for (i = 0; i < MAX_COMPONENTS; i++) {
│ │      tmpbuf[i] = NULL;  _tmpbuf[i] = NULL;  inbuf[i] = NULL;
│ │    }
│ │  
│ │    if ((this->init & DECOMPRESS) == 0)
│ │      THROW("tjDecodeYUVPlanes(): Instance has not been initialized for decompression");
│ │  
│ │ -  if (!srcPlanes || !srcPlanes[0] || subsamp < 0 || subsamp >= NUMSUBOPT ||
│ │ +  if (!srcPlanes || !srcPlanes[0] || subsamp < 0 || subsamp >= TJ_NUMSAMP ||
│ │        dstBuf == NULL || width <= 0 || pitch < 0 || height <= 0 ||
│ │        pixelFormat < 0 || pixelFormat >= TJ_NUMPF)
│ │      THROW("tjDecodeYUVPlanes(): Invalid argument");
│ │    if (subsamp != TJSAMP_GRAY && (!srcPlanes[1] || !srcPlanes[2]))
│ │      THROW("tjDecodeYUVPlanes(): Invalid argument");
│ │  
│ │    if (setjmp(this->jerr.setjmp_buffer)) {
│ │      /* If we get here, the JPEG code has signaled an error. */
│ │      retval = -1;  goto bailout;
│ │    }
│ │  
│ │    if (pixelFormat == TJPF_CMYK)
│ │ -    THROW("tjDecodeYUVPlanes(): Cannot decode YUV images into CMYK pixels.");
│ │ +    THROW("tjDecodeYUVPlanes(): Cannot decode YUV images into packed-pixel CMYK images.");
│ │  
│ │    if (pitch == 0) pitch = width * tjPixelSize[pixelFormat];
│ │    dinfo->image_width = width;
│ │    dinfo->image_height = height;
│ │  
│ │  #ifndef NO_PUTENV
│ │    if (flags & TJFLAG_FORCEMMX) PUTENV_S("JSIMD_FORCEMMX", "1");
│ │    else if (flags & TJFLAG_FORCESSE) PUTENV_S("JSIMD_FORCESSE", "1");
│ │    else if (flags & TJFLAG_FORCESSE2) PUTENV_S("JSIMD_FORCESSE2", "1");
│ │  #endif
│ │  
│ │    dinfo->progressive_mode = dinfo->inputctl->has_multiple_scans = FALSE;
│ │    dinfo->Ss = dinfo->Ah = dinfo->Al = 0;
│ │    dinfo->Se = DCTSIZE2 - 1;
│ │ -  if (setDecodeDefaults(dinfo, pixelFormat, subsamp, flags) == -1) {
│ │ -    retval = -1;  goto bailout;
│ │ -  }
│ │ +  setDecodeDefaults(dinfo, pixelFormat, subsamp, flags);
│ │    old_read_markers = dinfo->marker->read_markers;
│ │    dinfo->marker->read_markers = my_read_markers;
│ │    old_reset_marker_reader = dinfo->marker->reset_marker_reader;
│ │    dinfo->marker->reset_marker_reader = my_reset_marker_reader;
│ │    jpeg_read_header(dinfo, TRUE);
│ │    dinfo->marker->read_markers = old_read_markers;
│ │    dinfo->marker->reset_marker_reader = old_reset_marker_reader;
│ │ @@ -1587,53 +1624,55 @@
│ │      free(inbuf[i]);
│ │    }
│ │    if (this->jerr.warning) retval = -1;
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjDecodeYUV(tjhandle handle, const unsigned char *srcBuf,
│ │ -                          int pad, int subsamp, unsigned char *dstBuf,
│ │ +                          int align, int subsamp, unsigned char *dstBuf,
│ │                            int width, int pitch, int height, int pixelFormat,
│ │                            int flags)
│ │  {
│ │    const unsigned char *srcPlanes[3];
│ │    int pw0, ph0, strides[3], retval = -1;
│ │    tjinstance *this = (tjinstance *)handle;
│ │  
│ │    if (!this) THROWG("tjDecodeYUV(): Invalid handle");
│ │    this->isInstanceError = FALSE;
│ │  
│ │ -  if (srcBuf == NULL || pad < 0 || !IS_POW2(pad) || subsamp < 0 ||
│ │ -      subsamp >= NUMSUBOPT || width <= 0 || height <= 0)
│ │ +  if (srcBuf == NULL || align < 1 || !IS_POW2(align) || subsamp < 0 ||
│ │ +      subsamp >= TJ_NUMSAMP || width <= 0 || height <= 0)
│ │      THROW("tjDecodeYUV(): Invalid argument");
│ │  
│ │    pw0 = tjPlaneWidth(0, width, subsamp);
│ │    ph0 = tjPlaneHeight(0, height, subsamp);
│ │    srcPlanes[0] = srcBuf;
│ │ -  strides[0] = PAD(pw0, pad);
│ │ +  strides[0] = PAD(pw0, align);
│ │    if (subsamp == TJSAMP_GRAY) {
│ │      strides[1] = strides[2] = 0;
│ │      srcPlanes[1] = srcPlanes[2] = NULL;
│ │    } else {
│ │      int pw1 = tjPlaneWidth(1, width, subsamp);
│ │      int ph1 = tjPlaneHeight(1, height, subsamp);
│ │  
│ │ -    strides[1] = strides[2] = PAD(pw1, pad);
│ │ +    strides[1] = strides[2] = PAD(pw1, align);
│ │      srcPlanes[1] = srcPlanes[0] + strides[0] * ph0;
│ │      srcPlanes[2] = srcPlanes[1] + strides[1] * ph1;
│ │    }
│ │  
│ │    return tjDecodeYUVPlanes(handle, srcPlanes, strides, subsamp, dstBuf, width,
│ │                             pitch, height, pixelFormat, flags);
│ │  
│ │  bailout:
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjDecompressToYUVPlanes(tjhandle handle,
│ │                                        const unsigned char *jpegBuf,
│ │                                        unsigned long jpegSize,
│ │                                        unsigned char **dstPlanes, int width,
│ │                                        int *strides, int height, int flags)
│ │  {
│ │    int i, sfi, row, retval = 0;
│ │ @@ -1759,15 +1798,15 @@
│ │         row += dinfo->max_v_samp_factor * dinfo->_min_DCT_scaled_size) {
│ │      JSAMPARRAY yuvptr[MAX_COMPONENTS];
│ │      int crow[MAX_COMPONENTS];
│ │  
│ │      for (i = 0; i < dinfo->num_components; i++) {
│ │        jpeg_component_info *compptr = &dinfo->comp_info[i];
│ │  
│ │ -      if (jpegSubsamp == TJ_420) {
│ │ +      if (jpegSubsamp == TJSAMP_420) {
│ │          /* When 4:2:0 subsampling is used with IDCT scaling, libjpeg will try
│ │             to be clever and use the IDCT to perform upsampling on the U and V
│ │             planes.  For instance, if the output image is to be scaled by 1/2
│ │             relative to the JPEG image, then the scaling factor and upsampling
│ │             effectively cancel each other, so a normal 8x8 IDCT can be used.
│ │             However, this is not desirable when using the decompress-to-YUV
│ │             functionality in TurboJPEG, since we want to output the U and V
│ │ @@ -1806,27 +1845,28 @@
│ │    }
│ │    free(_tmpbuf);
│ │    if (this->jerr.warning) retval = -1;
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.4+ */
│ │  DLLEXPORT int tjDecompressToYUV2(tjhandle handle, const unsigned char *jpegBuf,
│ │                                   unsigned long jpegSize, unsigned char *dstBuf,
│ │ -                                 int width, int pad, int height, int flags)
│ │ +                                 int width, int align, int height, int flags)
│ │  {
│ │    unsigned char *dstPlanes[3];
│ │    int pw0, ph0, strides[3], retval = -1, jpegSubsamp = -1;
│ │    int i, jpegwidth, jpegheight, scaledw, scaledh;
│ │  
│ │    GET_DINSTANCE(handle);
│ │    this->jerr.stopOnWarning = (flags & TJFLAG_STOPONWARNING) ? TRUE : FALSE;
│ │  
│ │    if (jpegBuf == NULL || jpegSize <= 0 || dstBuf == NULL || width < 0 ||
│ │ -      pad < 1 || !IS_POW2(pad) || height < 0)
│ │ +      align < 1 || !IS_POW2(align) || height < 0)
│ │      THROW("tjDecompressToYUV2(): Invalid argument");
│ │  
│ │    if (setjmp(this->jerr.setjmp_buffer)) {
│ │      /* If we get here, the JPEG code has signaled an error. */
│ │      return -1;
│ │    }
│ │  
│ │ @@ -1835,59 +1875,62 @@
│ │    jpegSubsamp = getSubsamp(dinfo);
│ │    if (jpegSubsamp < 0)
│ │      THROW("tjDecompressToYUV2(): Could not determine subsampling type for JPEG image");
│ │  
│ │    jpegwidth = dinfo->image_width;  jpegheight = dinfo->image_height;
│ │    if (width == 0) width = jpegwidth;
│ │    if (height == 0) height = jpegheight;
│ │ -
│ │    for (i = 0; i < NUMSF; i++) {
│ │      scaledw = TJSCALED(jpegwidth, sf[i]);
│ │      scaledh = TJSCALED(jpegheight, sf[i]);
│ │      if (scaledw <= width && scaledh <= height)
│ │        break;
│ │    }
│ │    if (i >= NUMSF)
│ │      THROW("tjDecompressToYUV2(): Could not scale down to desired image dimensions");
│ │  
│ │ +  width = scaledw;  height = scaledh;
│ │ +
│ │    pw0 = tjPlaneWidth(0, width, jpegSubsamp);
│ │    ph0 = tjPlaneHeight(0, height, jpegSubsamp);
│ │    dstPlanes[0] = dstBuf;
│ │ -  strides[0] = PAD(pw0, pad);
│ │ +  strides[0] = PAD(pw0, align);
│ │    if (jpegSubsamp == TJSAMP_GRAY) {
│ │      strides[1] = strides[2] = 0;
│ │      dstPlanes[1] = dstPlanes[2] = NULL;
│ │    } else {
│ │      int pw1 = tjPlaneWidth(1, width, jpegSubsamp);
│ │      int ph1 = tjPlaneHeight(1, height, jpegSubsamp);
│ │  
│ │ -    strides[1] = strides[2] = PAD(pw1, pad);
│ │ +    strides[1] = strides[2] = PAD(pw1, align);
│ │      dstPlanes[1] = dstPlanes[0] + strides[0] * ph0;
│ │      dstPlanes[2] = dstPlanes[1] + strides[1] * ph1;
│ │    }
│ │  
│ │    this->headerRead = 1;
│ │    return tjDecompressToYUVPlanes(handle, jpegBuf, jpegSize, dstPlanes, width,
│ │                                   strides, height, flags);
│ │  
│ │  bailout:
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │ +/* TurboJPEG 1.1+ */
│ │  DLLEXPORT int tjDecompressToYUV(tjhandle handle, unsigned char *jpegBuf,
│ │                                  unsigned long jpegSize, unsigned char *dstBuf,
│ │                                  int flags)
│ │  {
│ │    return tjDecompressToYUV2(handle, jpegBuf, jpegSize, dstBuf, 0, 4, 0, flags);
│ │  }
│ │  
│ │  
│ │ -/* Transformer */
│ │ +/******************************** Transformer ********************************/
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT tjhandle tjInitTransform(void)
│ │  {
│ │    tjinstance *this = NULL;
│ │    tjhandle handle = NULL;
│ │  
│ │    if ((this = (tjinstance *)malloc(sizeof(tjinstance))) == NULL) {
│ │      SNPRINTF(errStr, JMSG_LENGTH_MAX,
│ │ @@ -1899,14 +1942,15 @@
│ │    handle = _tjInitCompress(this);
│ │    if (!handle) return NULL;
│ │    handle = _tjInitDecompress(this);
│ │    return handle;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 1.2+ */
│ │  DLLEXPORT int tjTransform(tjhandle handle, const unsigned char *jpegBuf,
│ │                            unsigned long jpegSize, int n,
│ │                            unsigned char **dstBufs, unsigned long *dstSizes,
│ │                            tjtransform *t, int flags)
│ │  {
│ │    jpeg_transform_info *xinfo = NULL;
│ │    jvirt_barray_ptr *srccoefs, *dstcoefs;
│ │ @@ -2009,16 +2053,18 @@
│ │      if (flags & TJFLAG_NOREALLOC) {
│ │        alloc = FALSE;  dstSizes[i] = tjBufSize(w, h, jpegSubsamp);
│ │      }
│ │      if (!(t[i].options & TJXOPT_NOOUTPUT))
│ │        jpeg_mem_dest_tj(cinfo, &dstBufs[i], &dstSizes[i], alloc);
│ │      jpeg_copy_critical_parameters(dinfo, cinfo);
│ │      dstcoefs = jtransform_adjust_parameters(dinfo, cinfo, srccoefs, &xinfo[i]);
│ │ +#ifdef C_PROGRESSIVE_SUPPORTED
│ │      if (flags & TJFLAG_PROGRESSIVE || t[i].options & TJXOPT_PROGRESSIVE)
│ │        jpeg_simple_progression(cinfo);
│ │ +#endif
│ │      if (!(t[i].options & TJXOPT_NOOUTPUT)) {
│ │        jpeg_write_coefficients(cinfo, dstcoefs);
│ │        jcopy_markers_execute(dinfo, cinfo, t[i].options & TJXOPT_COPYNONE ?
│ │                                            JCOPYOPT_NONE : JCOPYOPT_ALL);
│ │      } else
│ │        jinit_c_master_control(cinfo, TRUE);
│ │      jtransform_execute_transformation(dinfo, cinfo, srccoefs, &xinfo[i]);
│ │ @@ -2065,14 +2111,17 @@
│ │    free(xinfo);
│ │    if (this->jerr.warning) retval = -1;
│ │    this->jerr.stopOnWarning = FALSE;
│ │    return retval;
│ │  }
│ │  
│ │  
│ │ +/*************************** Packed-Pixel Image I/O **************************/
│ │ +
│ │ +/* TurboJPEG 2.0+ */
│ │  DLLEXPORT unsigned char *tjLoadImage(const char *filename, int *width,
│ │                                       int align, int *height, int *pixelFormat,
│ │                                       int flags)
│ │  {
│ │    int retval = 0, tempc;
│ │    size_t pitch;
│ │    tjhandle handle = NULL;
│ │ @@ -2114,15 +2163,15 @@
│ │    else cinfo->in_color_space = pf2cs[*pixelFormat];
│ │    if (tempc == 'B') {
│ │      if ((src = jinit_read_bmp(cinfo, FALSE)) == NULL)
│ │        THROWG("tjLoadImage(): Could not initialize bitmap loader");
│ │      invert = (flags & TJFLAG_BOTTOMUP) == 0;
│ │    } else if (tempc == 'P') {
│ │      if ((src = jinit_read_ppm(cinfo)) == NULL)
│ │ -      THROWG("tjLoadImage(): Could not initialize bitmap loader");
│ │ +      THROWG("tjLoadImage(): Could not initialize PPM loader");
│ │      invert = (flags & TJFLAG_BOTTOMUP) != 0;
│ │    } else
│ │      THROWG("tjLoadImage(): Unsupported file type");
│ │  
│ │    src->input_file = file;
│ │  #ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
│ │    /* Refuse to load images larger than 1 Megapixel when fuzzing. */
│ │ @@ -2167,14 +2216,15 @@
│ │    if (handle) tjDestroy(handle);
│ │    if (file) fclose(file);
│ │    if (retval < 0) { free(dstBuf);  dstBuf = NULL; }
│ │    return dstBuf;
│ │  }
│ │  
│ │  
│ │ +/* TurboJPEG 2.0+ */
│ │  DLLEXPORT int tjSaveImage(const char *filename, unsigned char *buffer,
│ │                            int width, int pitch, int height, int pixelFormat,
│ │                            int flags)
│ │  {
│ │    int retval = 0;
│ │    tjhandle handle = NULL;
│ │    tjinstance *this;
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/turbojpeg.h
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/turbojpeg.h
│ │┄ Files 2% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  /*
│ │ - * Copyright (C)2009-2015, 2017, 2020-2021 D. R. Commander.
│ │ - *                                         All Rights Reserved.
│ │ + * Copyright (C)2009-2015, 2017, 2020-2021, 2023 D. R. Commander.
│ │ + *                                               All Rights Reserved.
│ │   *
│ │   * Redistribution and use in source and binary forms, with or without
│ │   * modification, are permitted provided that the following conditions are met:
│ │   *
│ │   * - Redistributions of source code must retain the above copyright notice,
│ │   *   this list of conditions and the following disclaimer.
│ │   * - Redistributions in binary form must reproduce the above copyright notice,
│ │ @@ -50,31 +50,32 @@
│ │   * not a colorspace but a color transform), but per the convention of the
│ │   * digital video community, the TurboJPEG API uses "YUV" to refer to an image
│ │   * format consisting of Y, Cb, and Cr image planes.
│ │   *
│ │   * Each plane is simply a 2D array of bytes, each byte representing the value
│ │   * of one of the components (Y, Cb, or Cr) at a particular location in the
│ │   * image.  The width and height of each plane are determined by the image
│ │ - * width, height, and level of chrominance subsampling.   The luminance plane
│ │ + * width, height, and level of chrominance subsampling.  The luminance plane
│ │   * width is the image width padded to the nearest multiple of the horizontal
│ │ - * subsampling factor (2 in the case of 4:2:0 and 4:2:2, 4 in the case of
│ │ - * 4:1:1, 1 in the case of 4:4:4 or grayscale.)  Similarly, the luminance plane
│ │ - * height is the image height padded to the nearest multiple of the vertical
│ │ - * subsampling factor (2 in the case of 4:2:0 or 4:4:0, 1 in the case of 4:4:4
│ │ - * or grayscale.)  This is irrespective of any additional padding that may be
│ │ - * specified as an argument to the various YUV functions.  The chrominance
│ │ - * plane width is equal to the luminance plane width divided by the horizontal
│ │ - * subsampling factor, and the chrominance plane height is equal to the
│ │ - * luminance plane height divided by the vertical subsampling factor.
│ │ + * subsampling factor (1 in the case of 4:4:4, grayscale, or 4:4:0; 2 in the
│ │ + * case of 4:2:2 or 4:2:0; 4 in the case of 4:1:1.)  Similarly, the luminance
│ │ + * plane height is the image height padded to the nearest multiple of the
│ │ + * vertical subsampling factor (1 in the case of 4:4:4, 4:2:2, grayscale, or
│ │ + * 4:1:1; 2 in the case of 4:2:0 or 4:4:0.)  This is irrespective of any
│ │ + * additional padding that may be specified as an argument to the various YUV
│ │ + * functions.  The chrominance plane width is equal to the luminance plane
│ │ + * width divided by the horizontal subsampling factor, and the chrominance
│ │ + * plane height is equal to the luminance plane height divided by the vertical
│ │ + * subsampling factor.
│ │   *
│ │   * For example, if the source image is 35 x 35 pixels and 4:2:2 subsampling is
│ │   * used, then the luminance plane would be 36 x 35 bytes, and each of the
│ │ - * chrominance planes would be 18 x 35 bytes.  If you specify a line padding of
│ │ - * 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes, and
│ │ - * each of the chrominance planes would be 20 x 35 bytes.
│ │ + * chrominance planes would be 18 x 35 bytes.  If you specify a row alignment
│ │ + * of 4 bytes on top of this, then the luminance plane would be 36 x 35 bytes,
│ │ + * and each of the chrominance planes would be 20 x 35 bytes.
│ │   *
│ │   * @{
│ │   */
│ │  
│ │  
│ │  /**
│ │   * The number of chrominance subsampling options
│ │ @@ -82,16 +83,16 @@
│ │  #define TJ_NUMSAMP  6
│ │  
│ │  /**
│ │   * Chrominance subsampling options.
│ │   * When pixels are converted from RGB to YCbCr (see #TJCS_YCbCr) or from CMYK
│ │   * to YCCK (see #TJCS_YCCK) as part of the JPEG compression process, some of
│ │   * the Cb and Cr (chrominance) components can be discarded or averaged together
│ │ - * to produce a smaller image with little perceptible loss of image clarity
│ │ - * (the human eye is more sensitive to small changes in brightness than to
│ │ + * to produce a smaller image with little perceptible loss of image clarity.
│ │ + * (The human eye is more sensitive to small changes in brightness than to
│ │   * small changes in color.)  This is called "chrominance subsampling".
│ │   */
│ │  enum TJSAMP {
│ │    /**
│ │     * 4:4:4 chrominance subsampling (no chrominance subsampling).  The JPEG or
│ │     * YUV image will contain one chrominance component for every pixel in the
│ │     * source image.
│ │ @@ -241,62 +242,64 @@
│ │     * magenta, yellow, or black ink that is applied to a white background.  In
│ │     * order to convert between CMYK and RGB, it is necessary to use a color
│ │     * management system (CMS.)  A CMS will attempt to map colors within the
│ │     * printer's gamut to perceptually similar colors in the display's gamut and
│ │     * vice versa, but the mapping is typically not 1:1 or reversible, nor can it
│ │     * be defined with a simple formula.  Thus, such a conversion is out of scope
│ │     * for a codec library.  However, the TurboJPEG API allows for compressing
│ │ -   * CMYK pixels into a YCCK JPEG image (see #TJCS_YCCK) and decompressing YCCK
│ │ -   * JPEG images into CMYK pixels.
│ │ +   * packed-pixel CMYK images into YCCK JPEG images (see #TJCS_YCCK) and
│ │ +   * decompressing YCCK JPEG images into packed-pixel CMYK images.
│ │     */
│ │    TJPF_CMYK,
│ │    /**
│ │     * Unknown pixel format.  Currently this is only used by #tjLoadImage().
│ │     */
│ │    TJPF_UNKNOWN = -1
│ │  };
│ │  
│ │  /**
│ │   * Red offset (in bytes) for a given pixel format.  This specifies the number
│ │   * of bytes that the red component is offset from the start of the pixel.  For
│ │ - * instance, if a pixel of format TJ_BGRX is stored in <tt>char pixel[]</tt>,
│ │ - * then the red component will be <tt>pixel[tjRedOffset[TJ_BGRX]]</tt>.  This
│ │ - * will be -1 if the pixel format does not have a red component.
│ │ + * instance, if a pixel of format TJPF_BGRX is stored in
│ │ + * `unsigned char pixel[]`, then the red component will be
│ │ + *`pixel[tjRedOffset[TJPF_BGRX]]`.  This will be -1 if the pixel format does
│ │ + * not have a red component.
│ │   */
│ │  static const int tjRedOffset[TJ_NUMPF] = {
│ │    0, 2, 0, 2, 3, 1, -1, 0, 2, 3, 1, -1
│ │  };
│ │  /**
│ │   * Green offset (in bytes) for a given pixel format.  This specifies the number
│ │   * of bytes that the green component is offset from the start of the pixel.
│ │ - * For instance, if a pixel of format TJ_BGRX is stored in
│ │ - * <tt>char pixel[]</tt>, then the green component will be
│ │ - * <tt>pixel[tjGreenOffset[TJ_BGRX]]</tt>.  This will be -1 if the pixel format
│ │ - * does not have a green component.
│ │ + * For instance, if a pixel of format TJPF_BGRX is stored in
│ │ + * `unsigned char pixel[]`, then the green component will be
│ │ + * `pixel[tjGreenOffset[TJPF_BGRX]]`.  This will be -1 if the pixel format does
│ │ + * not have a green component.
│ │   */
│ │  static const int tjGreenOffset[TJ_NUMPF] = {
│ │    1, 1, 1, 1, 2, 2, -1, 1, 1, 2, 2, -1
│ │  };
│ │  /**
│ │   * Blue offset (in bytes) for a given pixel format.  This specifies the number
│ │ - * of bytes that the Blue component is offset from the start of the pixel.  For
│ │ - * instance, if a pixel of format TJ_BGRX is stored in <tt>char pixel[]</tt>,
│ │ - * then the blue component will be <tt>pixel[tjBlueOffset[TJ_BGRX]]</tt>.  This
│ │ - * will be -1 if the pixel format does not have a blue component.
│ │ + * of bytes that the blue component is offset from the start of the pixel.  For
│ │ + * instance, if a pixel of format TJPF_BGRX is stored in
│ │ + * `unsigned char pixel[]`, then the blue component will be
│ │ + * `pixel[tjBlueOffset[TJPF_BGRX]]`.  This will be -1 if the pixel format does
│ │ + * not have a blue component.
│ │   */
│ │  static const int tjBlueOffset[TJ_NUMPF] = {
│ │    2, 0, 2, 0, 1, 3, -1, 2, 0, 1, 3, -1
│ │  };
│ │  /**
│ │   * Alpha offset (in bytes) for a given pixel format.  This specifies the number
│ │ - * of bytes that the Alpha component is offset from the start of the pixel.
│ │ - * For instance, if a pixel of format TJ_BGRA is stored in
│ │ - * <tt>char pixel[]</tt>, then the alpha component will be
│ │ - * <tt>pixel[tjAlphaOffset[TJ_BGRA]]</tt>.  This will be -1 if the pixel format
│ │ - * does not have an alpha component.
│ │ + * of bytes that the alpha component is offset from the start of the pixel.
│ │ + * For instance, if a pixel of format TJPF_BGRA is stored in
│ │ + * `unsigned char pixel[]`, then the alpha component will be
│ │ + * `pixel[tjAlphaOffset[TJPF_BGRA]]`.  This will be -1 if the pixel format does
│ │ + * not have an alpha component.
│ │   */
│ │  static const int tjAlphaOffset[TJ_NUMPF] = {
│ │    -1, -1, -1, -1, -1, -1, -1, 3, 3, 0, 0, -1
│ │  };
│ │  /**
│ │   * Pixel size (in bytes) for a given pixel format
│ │   */
│ │ @@ -314,106 +317,107 @@
│ │   * JPEG colorspaces
│ │   */
│ │  enum TJCS {
│ │    /**
│ │     * RGB colorspace.  When compressing the JPEG image, the R, G, and B
│ │     * components in the source image are reordered into image planes, but no
│ │     * colorspace conversion or subsampling is performed.  RGB JPEG images can be
│ │ -   * decompressed to any of the extended RGB pixel formats or grayscale, but
│ │ -   * they cannot be decompressed to YUV images.
│ │ +   * decompressed to packed-pixel images with any of the extended RGB or
│ │ +   * grayscale pixel formats, but they cannot be decompressed to planar YUV
│ │ +   * images.
│ │     */
│ │    TJCS_RGB = 0,
│ │    /**
│ │     * YCbCr colorspace.  YCbCr is not an absolute colorspace but rather a
│ │     * mathematical transformation of RGB designed solely for storage and
│ │     * transmission.  YCbCr images must be converted to RGB before they can
│ │     * actually be displayed.  In the YCbCr colorspace, the Y (luminance)
│ │     * component represents the black & white portion of the original image, and
│ │     * the Cb and Cr (chrominance) components represent the color portion of the
│ │     * original image.  Originally, the analog equivalent of this transformation
│ │     * allowed the same signal to drive both black & white and color televisions,
│ │     * but JPEG images use YCbCr primarily because it allows the color data to be
│ │ -   * optionally subsampled for the purposes of reducing bandwidth or disk
│ │ -   * space.  YCbCr is the most common JPEG colorspace, and YCbCr JPEG images
│ │ -   * can be compressed from and decompressed to any of the extended RGB pixel
│ │ -   * formats or grayscale, or they can be decompressed to YUV planar images.
│ │ +   * optionally subsampled for the purposes of reducing network or disk usage.
│ │ +   * YCbCr is the most common JPEG colorspace, and YCbCr JPEG images can be
│ │ +   * compressed from and decompressed to packed-pixel images with any of the
│ │ +   * extended RGB or grayscale pixel formats.  YCbCr JPEG images can also be
│ │ +   * compressed from and decompressed to planar YUV images.
│ │     */
│ │    TJCS_YCbCr,
│ │    /**
│ │     * Grayscale colorspace.  The JPEG image retains only the luminance data (Y
│ │     * component), and any color data from the source image is discarded.
│ │ -   * Grayscale JPEG images can be compressed from and decompressed to any of
│ │ -   * the extended RGB pixel formats or grayscale, or they can be decompressed
│ │ -   * to YUV planar images.
│ │ +   * Grayscale JPEG images can be compressed from and decompressed to
│ │ +   * packed-pixel images with any of the extended RGB or grayscale pixel
│ │ +   * formats, or they can be compressed from and decompressed to planar YUV
│ │ +   * images.
│ │     */
│ │    TJCS_GRAY,
│ │    /**
│ │     * CMYK colorspace.  When compressing the JPEG image, the C, M, Y, and K
│ │     * components in the source image are reordered into image planes, but no
│ │     * colorspace conversion or subsampling is performed.  CMYK JPEG images can
│ │ -   * only be decompressed to CMYK pixels.
│ │ +   * only be decompressed to packed-pixel images with the CMYK pixel format.
│ │     */
│ │    TJCS_CMYK,
│ │    /**
│ │     * YCCK colorspace.  YCCK (AKA "YCbCrK") is not an absolute colorspace but
│ │     * rather a mathematical transformation of CMYK designed solely for storage
│ │     * and transmission.  It is to CMYK as YCbCr is to RGB.  CMYK pixels can be
│ │     * reversibly transformed into YCCK, and as with YCbCr, the chrominance
│ │     * components in the YCCK pixels can be subsampled without incurring major
│ │     * perceptual loss.  YCCK JPEG images can only be compressed from and
│ │ -   * decompressed to CMYK pixels.
│ │ +   * decompressed to packed-pixel images with the CMYK pixel format.
│ │     */
│ │    TJCS_YCCK
│ │  };
│ │  
│ │  
│ │  /**
│ │ - * The uncompressed source/destination image is stored in bottom-up (Windows,
│ │ - * OpenGL) order, not top-down (X11) order.
│ │ + * Rows in the packed-pixel source/destination image are stored in bottom-up
│ │ + * (Windows, OpenGL) order rather than in top-down (X11) order.
│ │   */
│ │  #define TJFLAG_BOTTOMUP  2
│ │  /**
│ │   * When decompressing an image that was compressed using chrominance
│ │ - * subsampling, use the fastest chrominance upsampling algorithm available in
│ │ - * the underlying codec.  The default is to use smooth upsampling, which
│ │ - * creates a smooth transition between neighboring chrominance components in
│ │ - * order to reduce upsampling artifacts in the decompressed image.
│ │ + * subsampling, use the fastest chrominance upsampling algorithm available.
│ │ + * The default is to use smooth upsampling, which creates a smooth transition
│ │ + * between neighboring chrominance components in order to reduce upsampling
│ │ + * artifacts in the decompressed image.
│ │   */
│ │  #define TJFLAG_FASTUPSAMPLE  256
│ │  /**
│ │ - * Disable buffer (re)allocation.  If passed to one of the JPEG compression or
│ │ - * transform functions, this flag will cause those functions to generate an
│ │ - * error if the JPEG image buffer is invalid or too small rather than
│ │ - * attempting to allocate or reallocate that buffer.  This reproduces the
│ │ - * behavior of earlier versions of TurboJPEG.
│ │ + * Disable JPEG buffer (re)allocation.  If passed to one of the JPEG
│ │ + * compression or transform functions, this flag will cause those functions to
│ │ + * generate an error if the JPEG destination buffer is invalid or too small,
│ │ + * rather than attempt to allocate or reallocate that buffer.
│ │   */
│ │  #define TJFLAG_NOREALLOC  1024
│ │  /**
│ │ - * Use the fastest DCT/IDCT algorithm available in the underlying codec.  The
│ │ - * default if this flag is not specified is implementation-specific.  For
│ │ - * example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast
│ │ - * algorithm by default when compressing, because this has been shown to have
│ │ - * only a very slight effect on accuracy, but it uses the accurate algorithm
│ │ - * when decompressing, because this has been shown to have a larger effect.
│ │ + * Use the fastest DCT/IDCT algorithm available.  The default if this flag is
│ │ + * not specified is implementation-specific.  For example, the implementation
│ │ + * of the TurboJPEG API in libjpeg-turbo uses the fast algorithm by default
│ │ + * when compressing, because this has been shown to have only a very slight
│ │ + * effect on accuracy, but it uses the accurate algorithm when decompressing,
│ │ + * because this has been shown to have a larger effect.
│ │   */
│ │  #define TJFLAG_FASTDCT  2048
│ │  /**
│ │ - * Use the most accurate DCT/IDCT algorithm available in the underlying codec.
│ │ - * The default if this flag is not specified is implementation-specific.  For
│ │ - * example, the implementation of TurboJPEG for libjpeg[-turbo] uses the fast
│ │ - * algorithm by default when compressing, because this has been shown to have
│ │ - * only a very slight effect on accuracy, but it uses the accurate algorithm
│ │ - * when decompressing, because this has been shown to have a larger effect.
│ │ + * Use the most accurate DCT/IDCT algorithm available.  The default if this
│ │ + * flag is not specified is implementation-specific.  For example, the
│ │ + * implementation of the TurboJPEG API in libjpeg-turbo uses the fast algorithm
│ │ + * by default when compressing, because this has been shown to have only a very
│ │ + * slight effect on accuracy, but it uses the accurate algorithm when
│ │ + * decompressing, because this has been shown to have a larger effect.
│ │   */
│ │  #define TJFLAG_ACCURATEDCT  4096
│ │  /**
│ │   * Immediately discontinue the current compression/decompression/transform
│ │ - * operation if the underlying codec throws a warning (non-fatal error).  The
│ │ - * default behavior is to allow the operation to complete unless a fatal error
│ │ - * is encountered.
│ │ + * operation if a warning (non-fatal error) occurs.  The default behavior is to
│ │ + * allow the operation to complete unless a fatal error is encountered.
│ │   */
│ │  #define TJFLAG_STOPONWARNING  8192
│ │  /**
│ │   * Use progressive entropy coding in JPEG images generated by the compression
│ │   * and transform functions.  Progressive entropy coding will generally improve
│ │   * compression relative to baseline entropy coding (the default), but it will
│ │   * reduce compression and decompression performance considerably.
│ │ @@ -437,16 +441,16 @@
│ │  #define TJ_NUMERR  2
│ │  
│ │  /**
│ │   * Error codes
│ │   */
│ │  enum TJERR {
│ │    /**
│ │ -   * The error was non-fatal and recoverable, but the image may still be
│ │ -   * corrupt.
│ │ +   * The error was non-fatal and recoverable, but the destination image may
│ │ +   * still be corrupt.
│ │     */
│ │    TJERR_WARNING = 0,
│ │    /**
│ │     * The error was fatal and non-recoverable.
│ │     */
│ │    TJERR_FATAL
│ │  };
│ │ @@ -505,17 +509,17 @@
│ │    TJXOP_ROT270
│ │  };
│ │  
│ │  
│ │  /**
│ │   * This option will cause #tjTransform() to return an error if the transform is
│ │   * not perfect.  Lossless transforms operate on MCU blocks, whose size depends
│ │ - * on the level of chrominance subsampling used (see #tjMCUWidth
│ │ - * and #tjMCUHeight.)  If the image's width or height is not evenly divisible
│ │ - * by the MCU block size, then there will be partial MCU blocks on the right
│ │ + * on the level of chrominance subsampling used (see #tjMCUWidth and
│ │ + * #tjMCUHeight.)  If the image's width or height is not evenly divisible by
│ │ + * the MCU block size, then there will be partial MCU blocks on the right
│ │   * and/or bottom edges.  It is not possible to move these partial MCU blocks to
│ │   * the top or left of the image, so any transform that would require that is
│ │   * "imperfect."  If this option is not specified, then any partial MCU blocks
│ │   * that cannot be transformed will be left in place, which will create
│ │   * odd-looking strips on the right or bottom edge of the image.
│ │   */
│ │  #define TJXOPT_PERFECT  1
│ │ @@ -526,37 +530,36 @@
│ │  #define TJXOPT_TRIM  2
│ │  /**
│ │   * This option will enable lossless cropping.  See #tjTransform() for more
│ │   * information.
│ │   */
│ │  #define TJXOPT_CROP  4
│ │  /**
│ │ - * This option will discard the color data in the input image and produce
│ │ - * a grayscale output image.
│ │ + * This option will discard the color data in the source image and produce a
│ │ + * grayscale destination image.
│ │   */
│ │  #define TJXOPT_GRAY  8
│ │  /**
│ │   * This option will prevent #tjTransform() from outputting a JPEG image for
│ │ - * this particular transform (this can be used in conjunction with a custom
│ │ + * this particular transform.  (This can be used in conjunction with a custom
│ │   * filter to capture the transformed DCT coefficients without transcoding
│ │   * them.)
│ │   */
│ │  #define TJXOPT_NOOUTPUT  16
│ │  /**
│ │ - * This option will enable progressive entropy coding in the output image
│ │ + * This option will enable progressive entropy coding in the JPEG image
│ │   * generated by this particular transform.  Progressive entropy coding will
│ │   * generally improve compression relative to baseline entropy coding (the
│ │ - * default), but it will reduce compression and decompression performance
│ │ - * considerably.
│ │ + * default), but it will reduce decompression performance considerably.
│ │   */
│ │  #define TJXOPT_PROGRESSIVE  32
│ │  /**
│ │   * This option will prevent #tjTransform() from copying any extra markers
│ │ - * (including EXIF and ICC profile data) from the source image to the output
│ │ - * image.
│ │ + * (including EXIF and ICC profile data) from the source image to the
│ │ + * destination image.
│ │   */
│ │  #define TJXOPT_COPYNONE  64
│ │  
│ │  
│ │  /**
│ │   * Scaling factor
│ │   */
│ │ @@ -582,20 +585,20 @@
│ │    int x;
│ │    /**
│ │     * The upper boundary of the cropping region.  This must be evenly divisible
│ │     * by the MCU block height (see #tjMCUHeight.)
│ │     */
│ │    int y;
│ │    /**
│ │ -   * The width of the cropping region. Setting this to 0 is the equivalent of
│ │ +   * The width of the cropping region.  Setting this to 0 is the equivalent of
│ │     * setting it to the width of the source JPEG image - x.
│ │     */
│ │    int w;
│ │    /**
│ │ -   * The height of the cropping region. Setting this to 0 is the equivalent of
│ │ +   * The height of the cropping region.  Setting this to 0 is the equivalent of
│ │     * setting it to the height of the source JPEG image - y.
│ │     */
│ │    int h;
│ │  } tjregion;
│ │  
│ │  /**
│ │   * Lossless transform
│ │ @@ -606,49 +609,50 @@
│ │     */
│ │    tjregion r;
│ │    /**
│ │     * One of the @ref TJXOP "transform operations"
│ │     */
│ │    int op;
│ │    /**
│ │ -   * The bitwise OR of one of more of the @ref TJXOPT_CROP "transform options"
│ │ +   * The bitwise OR of one of more of the @ref TJXOPT_COPYNONE
│ │ +   * "transform options"
│ │     */
│ │    int options;
│ │    /**
│ │     * Arbitrary data that can be accessed within the body of the callback
│ │     * function
│ │     */
│ │    void *data;
│ │    /**
│ │ -   * A callback function that can be used to modify the DCT coefficients
│ │ -   * after they are losslessly transformed but before they are transcoded to a
│ │ -   * new JPEG image.  This allows for custom filters or other transformations
│ │ -   * to be applied in the frequency domain.
│ │ +   * A callback function that can be used to modify the DCT coefficients after
│ │ +   * they are losslessly transformed but before they are transcoded to a new
│ │ +   * JPEG image.  This allows for custom filters or other transformations to be
│ │ +   * applied in the frequency domain.
│ │     *
│ │     * @param coeffs pointer to an array of transformed DCT coefficients.  (NOTE:
│ │     * this pointer is not guaranteed to be valid once the callback returns, so
│ │     * applications wishing to hand off the DCT coefficients to another function
│ │     * or library should make a copy of them within the body of the callback.)
│ │     *
│ │     * @param arrayRegion #tjregion structure containing the width and height of
│ │ -   * the array pointed to by <tt>coeffs</tt> as well as its offset relative to
│ │ -   * the component plane.  TurboJPEG implementations may choose to split each
│ │ +   * the array pointed to by `coeffs` as well as its offset relative to the
│ │ +   * component plane.  TurboJPEG implementations may choose to split each
│ │     * component plane into multiple DCT coefficient arrays and call the callback
│ │     * function once for each array.
│ │     *
│ │     * @param planeRegion #tjregion structure containing the width and height of
│ │ -   * the component plane to which <tt>coeffs</tt> belongs
│ │ +   * the component plane to which `coeffs` belongs
│ │     *
│ │ -   * @param componentID ID number of the component plane to which
│ │ -   * <tt>coeffs</tt> belongs (Y, Cb, and Cr have, respectively, ID's of 0, 1,
│ │ -   * and 2 in typical JPEG images.)
│ │ +   * @param componentID ID number of the component plane to which `coeffs`
│ │ +   * belongs.  (Y, Cb, and Cr have, respectively, ID's of 0, 1, and 2 in
│ │ +   * typical JPEG images.)
│ │     *
│ │ -   * @param transformID ID number of the transformed image to which
│ │ -   * <tt>coeffs</tt> belongs.  This is the same as the index of the transform
│ │ -   * in the <tt>transforms</tt> array that was passed to #tjTransform().
│ │ +   * @param transformID ID number of the transformed image to which `coeffs`
│ │ +   * belongs.  This is the same as the index of the transform in the
│ │ +   * `transforms` array that was passed to #tjTransform().
│ │     *
│ │     * @param transform a pointer to a #tjtransform structure that specifies the
│ │     * parameters and/or cropping region for this transform
│ │     *
│ │     * @return 0 if the callback was successful, or -1 if an error occurred.
│ │     */
│ │    int (*customFilter) (short *coeffs, tjregion arrayRegion,
│ │ @@ -659,259 +663,257 @@
│ │  /**
│ │   * TurboJPEG instance handle
│ │   */
│ │  typedef void *tjhandle;
│ │  
│ │  
│ │  /**
│ │ - * Pad the given width to the nearest 32-bit boundary
│ │ + * Pad the given width to the nearest multiple of 4
│ │   */
│ │  #define TJPAD(width)  (((width) + 3) & (~3))
│ │  
│ │  /**
│ │ - * Compute the scaled value of <tt>dimension</tt> using the given scaling
│ │ - * factor.  This macro performs the integer equivalent of <tt>ceil(dimension *
│ │ - * scalingFactor)</tt>.
│ │ + * Compute the scaled value of `dimension` using the given scaling factor.
│ │ + * This macro performs the integer equivalent of `ceil(dimension *
│ │ + * scalingFactor)`.
│ │   */
│ │  #define TJSCALED(dimension, scalingFactor) \
│ │    (((dimension) * scalingFactor.num + scalingFactor.denom - 1) / \
│ │     scalingFactor.denom)
│ │  
│ │  
│ │  #ifdef __cplusplus
│ │  extern "C" {
│ │  #endif
│ │  
│ │  
│ │  /**
│ │   * Create a TurboJPEG compressor instance.
│ │   *
│ │ - * @return a handle to the newly-created instance, or NULL if an error
│ │ - * occurred (see #tjGetErrorStr2().)
│ │ + * @return a handle to the newly-created instance, or NULL if an error occurred
│ │ + * (see #tjGetErrorStr2().)
│ │   */
│ │  DLLEXPORT tjhandle tjInitCompress(void);
│ │  
│ │  
│ │  /**
│ │ - * Compress an RGB, grayscale, or CMYK image into a JPEG image.
│ │ + * Compress a packed-pixel RGB, grayscale, or CMYK image into a JPEG image.
│ │   *
│ │   * @param handle a handle to a TurboJPEG compressor or transformer instance
│ │   *
│ │ - * @param srcBuf pointer to an image buffer containing RGB, grayscale, or
│ │ - * CMYK pixels to be compressed
│ │ + * @param srcBuf pointer to a buffer containing a packed-pixel RGB, grayscale,
│ │ + * or CMYK source image to be compressed
│ │   *
│ │   * @param width width (in pixels) of the source image
│ │   *
│ │ - * @param pitch bytes per line in the source image.  Normally, this should be
│ │ - * <tt>width * #tjPixelSize[pixelFormat]</tt> if the image is unpadded, or
│ │ - * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each line of the image
│ │ - * is padded to the nearest 32-bit boundary, as is the case for Windows
│ │ - * bitmaps.  You can also be clever and use this parameter to skip lines, etc.
│ │ + * @param pitch bytes per row in the source image.  Normally this should be
│ │ + * <tt>width * #tjPixelSize[pixelFormat]</tt>, if the image is unpadded, or
│ │ + * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each row of the image
│ │ + * is padded to the nearest multiple of 4 bytes, as is the case for Windows
│ │ + * bitmaps.  You can also be clever and use this parameter to skip rows, etc.
│ │   * Setting this parameter to 0 is the equivalent of setting it to
│ │   * <tt>width * #tjPixelSize[pixelFormat]</tt>.
│ │   *
│ │   * @param height height (in pixels) of the source image
│ │   *
│ │   * @param pixelFormat pixel format of the source image (see @ref TJPF
│ │   * "Pixel formats".)
│ │   *
│ │ - * @param jpegBuf address of a pointer to an image buffer that will receive the
│ │ - * JPEG image.  TurboJPEG has the ability to reallocate the JPEG buffer
│ │ - * to accommodate the size of the JPEG image.  Thus, you can choose to:
│ │ + * @param jpegBuf address of a pointer to a byte buffer that will receive the
│ │ + * JPEG image.  TurboJPEG has the ability to reallocate the JPEG buffer to
│ │ + * accommodate the size of the JPEG image.  Thus, you can choose to:
│ │   * -# pre-allocate the JPEG buffer with an arbitrary size using #tjAlloc() and
│ │   * let TurboJPEG grow the buffer as needed,
│ │ - * -# set <tt>*jpegBuf</tt> to NULL to tell TurboJPEG to allocate the buffer
│ │ - * for you, or
│ │ + * -# set `*jpegBuf` to NULL to tell TurboJPEG to allocate the buffer for you,
│ │ + * or
│ │   * -# pre-allocate the buffer to a "worst case" size determined by calling
│ │   * #tjBufSize().  This should ensure that the buffer never has to be
│ │ - * re-allocated (setting #TJFLAG_NOREALLOC guarantees that it won't be.)
│ │ + * re-allocated.  (Setting #TJFLAG_NOREALLOC guarantees that it won't be.)
│ │   * .
│ │ - * If you choose option 1, <tt>*jpegSize</tt> should be set to the size of your
│ │ + * If you choose option 1, then `*jpegSize` should be set to the size of your
│ │   * pre-allocated buffer.  In any case, unless you have set #TJFLAG_NOREALLOC,
│ │ - * you should always check <tt>*jpegBuf</tt> upon return from this function, as
│ │ - * it may have changed.
│ │ + * you should always check `*jpegBuf` upon return from this function, as it may
│ │ + * have changed.
│ │   *
│ │   * @param jpegSize pointer to an unsigned long variable that holds the size of
│ │ - * the JPEG image buffer.  If <tt>*jpegBuf</tt> points to a pre-allocated
│ │ - * buffer, then <tt>*jpegSize</tt> should be set to the size of the buffer.
│ │ - * Upon return, <tt>*jpegSize</tt> will contain the size of the JPEG image (in
│ │ - * bytes.)  If <tt>*jpegBuf</tt> points to a JPEG image buffer that is being
│ │ - * reused from a previous call to one of the JPEG compression functions, then
│ │ - * <tt>*jpegSize</tt> is ignored.
│ │ + * the JPEG buffer.  If `*jpegBuf` points to a pre-allocated buffer, then
│ │ + * `*jpegSize` should be set to the size of the buffer.  Upon return,
│ │ + * `*jpegSize` will contain the size of the JPEG image (in bytes.)  If
│ │ + * `*jpegBuf` points to a JPEG buffer that is being reused from a previous call
│ │ + * to one of the JPEG compression functions, then `*jpegSize` is ignored.
│ │   *
│ │   * @param jpegSubsamp the level of chrominance subsampling to be used when
│ │   * generating the JPEG image (see @ref TJSAMP
│ │   * "Chrominance subsampling options".)
│ │   *
│ │   * @param jpegQual the image quality of the generated JPEG image (1 = worst,
│ │   * 100 = best)
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │ -*/
│ │ + */
│ │  DLLEXPORT int tjCompress2(tjhandle handle, const unsigned char *srcBuf,
│ │                            int width, int pitch, int height, int pixelFormat,
│ │                            unsigned char **jpegBuf, unsigned long *jpegSize,
│ │                            int jpegSubsamp, int jpegQual, int flags);
│ │  
│ │  
│ │  /**
│ │ - * Compress a YUV planar image into a JPEG image.
│ │ + * Compress a unified planar YUV image into a JPEG image.
│ │   *
│ │   * @param handle a handle to a TurboJPEG compressor or transformer instance
│ │   *
│ │ - * @param srcBuf pointer to an image buffer containing a YUV planar image to be
│ │ - * compressed.  The size of this buffer should match the value returned by
│ │ - * #tjBufSizeYUV2() for the given image width, height, padding, and level of
│ │ - * chrominance subsampling.  The Y, U (Cb), and V (Cr) image planes should be
│ │ - * stored sequentially in the source buffer (refer to @ref YUVnotes
│ │ - * "YUV Image Format Notes".)
│ │ + * @param srcBuf pointer to a buffer containing a unified planar YUV source
│ │ + * image to be compressed.  The size of this buffer should match the value
│ │ + * returned by #tjBufSizeYUV2() for the given image width, height, row
│ │ + * alignment, and level of chrominance subsampling.  The Y, U (Cb), and V (Cr)
│ │ + * image planes should be stored sequentially in the buffer.  (Refer to
│ │ + * @ref YUVnotes "YUV Image Format Notes".)
│ │   *
│ │   * @param width width (in pixels) of the source image.  If the width is not an
│ │   * even multiple of the MCU block width (see #tjMCUWidth), then an intermediate
│ │ - * buffer copy will be performed within TurboJPEG.
│ │ + * buffer copy will be performed.
│ │   *
│ │ - * @param pad the line padding used in the source image.  For instance, if each
│ │ - * line in each plane of the YUV image is padded to the nearest multiple of 4
│ │ - * bytes, then <tt>pad</tt> should be set to 4.
│ │ + * @param align row alignment (in bytes) of the source image (must be a power
│ │ + * of 2.)  Setting this parameter to n indicates that each row in each plane of
│ │ + * the source image is padded to the nearest multiple of n bytes
│ │ + * (1 = unpadded.)
│ │   *
│ │   * @param height height (in pixels) of the source image.  If the height is not
│ │   * an even multiple of the MCU block height (see #tjMCUHeight), then an
│ │ - * intermediate buffer copy will be performed within TurboJPEG.
│ │ + * intermediate buffer copy will be performed.
│ │   *
│ │ - * @param subsamp the level of chrominance subsampling used in the source
│ │ - * image (see @ref TJSAMP "Chrominance subsampling options".)
│ │ + * @param subsamp the level of chrominance subsampling used in the source image
│ │ + * (see @ref TJSAMP "Chrominance subsampling options".)
│ │   *
│ │ - * @param jpegBuf address of a pointer to an image buffer that will receive the
│ │ + * @param jpegBuf address of a pointer to a byte buffer that will receive the
│ │   * JPEG image.  TurboJPEG has the ability to reallocate the JPEG buffer to
│ │   * accommodate the size of the JPEG image.  Thus, you can choose to:
│ │   * -# pre-allocate the JPEG buffer with an arbitrary size using #tjAlloc() and
│ │   * let TurboJPEG grow the buffer as needed,
│ │ - * -# set <tt>*jpegBuf</tt> to NULL to tell TurboJPEG to allocate the buffer
│ │ - * for you, or
│ │ + * -# set `*jpegBuf` to NULL to tell TurboJPEG to allocate the buffer for you,
│ │ + * or
│ │   * -# pre-allocate the buffer to a "worst case" size determined by calling
│ │   * #tjBufSize().  This should ensure that the buffer never has to be
│ │ - * re-allocated (setting #TJFLAG_NOREALLOC guarantees that it won't be.)
│ │ + * re-allocated.  (Setting #TJFLAG_NOREALLOC guarantees that it won't be.)
│ │   * .
│ │ - * If you choose option 1, <tt>*jpegSize</tt> should be set to the size of your
│ │ + * If you choose option 1, then `*jpegSize` should be set to the size of your
│ │   * pre-allocated buffer.  In any case, unless you have set #TJFLAG_NOREALLOC,
│ │ - * you should always check <tt>*jpegBuf</tt> upon return from this function, as
│ │ - * it may have changed.
│ │ + * you should always check `*jpegBuf` upon return from this function, as it may
│ │ + * have changed.
│ │   *
│ │   * @param jpegSize pointer to an unsigned long variable that holds the size of
│ │ - * the JPEG image buffer.  If <tt>*jpegBuf</tt> points to a pre-allocated
│ │ - * buffer, then <tt>*jpegSize</tt> should be set to the size of the buffer.
│ │ - * Upon return, <tt>*jpegSize</tt> will contain the size of the JPEG image (in
│ │ - * bytes.)  If <tt>*jpegBuf</tt> points to a JPEG image buffer that is being
│ │ - * reused from a previous call to one of the JPEG compression functions, then
│ │ - * <tt>*jpegSize</tt> is ignored.
│ │ + * the JPEG buffer.  If `*jpegBuf` points to a pre-allocated buffer, then
│ │ + * `*jpegSize` should be set to the size of the buffer.  Upon return,
│ │ + * `*jpegSize` will contain the size of the JPEG image (in bytes.)  If
│ │ + * `*jpegBuf` points to a JPEG buffer that is being reused from a previous call
│ │ + * to one of the JPEG compression functions, then `*jpegSize` is ignored.
│ │   *
│ │   * @param jpegQual the image quality of the generated JPEG image (1 = worst,
│ │   * 100 = best)
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │ -*/
│ │ + */
│ │  DLLEXPORT int tjCompressFromYUV(tjhandle handle, const unsigned char *srcBuf,
│ │ -                                int width, int pad, int height, int subsamp,
│ │ +                                int width, int align, int height, int subsamp,
│ │                                  unsigned char **jpegBuf,
│ │                                  unsigned long *jpegSize, int jpegQual,
│ │                                  int flags);
│ │  
│ │  
│ │  /**
│ │   * Compress a set of Y, U (Cb), and V (Cr) image planes into a JPEG image.
│ │   *
│ │   * @param handle a handle to a TurboJPEG compressor or transformer instance
│ │   *
│ │   * @param srcPlanes an array of pointers to Y, U (Cb), and V (Cr) image planes
│ │   * (or just a Y plane, if compressing a grayscale image) that contain a YUV
│ │ - * image to be compressed.  These planes can be contiguous or non-contiguous in
│ │ - * memory.  The size of each plane should match the value returned by
│ │ - * #tjPlaneSizeYUV() for the given image width, height, strides, and level of
│ │ - * chrominance subsampling.  Refer to @ref YUVnotes "YUV Image Format Notes"
│ │ - * for more details.
│ │ + * source image to be compressed.  These planes can be contiguous or
│ │ + * non-contiguous in memory.  The size of each plane should match the value
│ │ + * returned by #tjPlaneSizeYUV() for the given image width, height, strides,
│ │ + * and level of chrominance subsampling.  Refer to @ref YUVnotes
│ │ + * "YUV Image Format Notes" for more details.
│ │   *
│ │   * @param width width (in pixels) of the source image.  If the width is not an
│ │   * even multiple of the MCU block width (see #tjMCUWidth), then an intermediate
│ │ - * buffer copy will be performed within TurboJPEG.
│ │ + * buffer copy will be performed.
│ │   *
│ │   * @param strides an array of integers, each specifying the number of bytes per
│ │ - * line in the corresponding plane of the YUV source image.  Setting the stride
│ │ + * row in the corresponding plane of the YUV source image.  Setting the stride
│ │   * for any plane to 0 is the same as setting it to the plane width (see
│ │ - * @ref YUVnotes "YUV Image Format Notes".)  If <tt>strides</tt> is NULL, then
│ │ - * the strides for all planes will be set to their respective plane widths.
│ │ - * You can adjust the strides in order to specify an arbitrary amount of line
│ │ + * @ref YUVnotes "YUV Image Format Notes".)  If `strides` is NULL, then the
│ │ + * strides for all planes will be set to their respective plane widths.  You
│ │ + * can adjust the strides in order to specify an arbitrary amount of row
│ │   * padding in each plane or to create a JPEG image from a subregion of a larger
│ │ - * YUV planar image.
│ │ + * planar YUV image.
│ │   *
│ │   * @param height height (in pixels) of the source image.  If the height is not
│ │   * an even multiple of the MCU block height (see #tjMCUHeight), then an
│ │ - * intermediate buffer copy will be performed within TurboJPEG.
│ │ + * intermediate buffer copy will be performed.
│ │   *
│ │ - * @param subsamp the level of chrominance subsampling used in the source
│ │ - * image (see @ref TJSAMP "Chrominance subsampling options".)
│ │ + * @param subsamp the level of chrominance subsampling used in the source image
│ │ + * (see @ref TJSAMP "Chrominance subsampling options".)
│ │   *
│ │ - * @param jpegBuf address of a pointer to an image buffer that will receive the
│ │ + * @param jpegBuf address of a pointer to a byte buffer that will receive the
│ │   * JPEG image.  TurboJPEG has the ability to reallocate the JPEG buffer to
│ │   * accommodate the size of the JPEG image.  Thus, you can choose to:
│ │   * -# pre-allocate the JPEG buffer with an arbitrary size using #tjAlloc() and
│ │   * let TurboJPEG grow the buffer as needed,
│ │ - * -# set <tt>*jpegBuf</tt> to NULL to tell TurboJPEG to allocate the buffer
│ │ - * for you, or
│ │ + * -# set `*jpegBuf` to NULL to tell TurboJPEG to allocate the buffer for you,
│ │ + * or
│ │   * -# pre-allocate the buffer to a "worst case" size determined by calling
│ │   * #tjBufSize().  This should ensure that the buffer never has to be
│ │ - * re-allocated (setting #TJFLAG_NOREALLOC guarantees that it won't be.)
│ │ + * re-allocated.  (Setting #TJFLAG_NOREALLOC guarantees that it won't be.)
│ │   * .
│ │ - * If you choose option 1, <tt>*jpegSize</tt> should be set to the size of your
│ │ + * If you choose option 1, then `*jpegSize` should be set to the size of your
│ │   * pre-allocated buffer.  In any case, unless you have set #TJFLAG_NOREALLOC,
│ │ - * you should always check <tt>*jpegBuf</tt> upon return from this function, as
│ │ - * it may have changed.
│ │ + * you should always check `*jpegBuf` upon return from this function, as it may
│ │ + * have changed.
│ │   *
│ │   * @param jpegSize pointer to an unsigned long variable that holds the size of
│ │ - * the JPEG image buffer.  If <tt>*jpegBuf</tt> points to a pre-allocated
│ │ - * buffer, then <tt>*jpegSize</tt> should be set to the size of the buffer.
│ │ - * Upon return, <tt>*jpegSize</tt> will contain the size of the JPEG image (in
│ │ - * bytes.)  If <tt>*jpegBuf</tt> points to a JPEG image buffer that is being
│ │ - * reused from a previous call to one of the JPEG compression functions, then
│ │ - * <tt>*jpegSize</tt> is ignored.
│ │ + * the JPEG buffer.  If `*jpegBuf` points to a pre-allocated buffer, then
│ │ + * `*jpegSize` should be set to the size of the buffer.  Upon return,
│ │ + * `*jpegSize` will contain the size of the JPEG image (in bytes.)  If
│ │ + * `*jpegBuf` points to a JPEG buffer that is being reused from a previous call
│ │ + * to one of the JPEG compression functions, then `*jpegSize` is ignored.
│ │   *
│ │   * @param jpegQual the image quality of the generated JPEG image (1 = worst,
│ │   * 100 = best)
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │ -*/
│ │ + */
│ │  DLLEXPORT int tjCompressFromYUVPlanes(tjhandle handle,
│ │                                        const unsigned char **srcPlanes,
│ │                                        int width, const int *strides,
│ │                                        int height, int subsamp,
│ │                                        unsigned char **jpegBuf,
│ │                                        unsigned long *jpegSize, int jpegQual,
│ │                                        int flags);
│ │  
│ │  
│ │  /**
│ │   * The maximum size of the buffer (in bytes) required to hold a JPEG image with
│ │   * the given parameters.  The number of bytes returned by this function is
│ │   * larger than the size of the uncompressed source image.  The reason for this
│ │ - * is that the JPEG format uses 16-bit coefficients, and it is thus possible
│ │ - * for a very high-quality JPEG image with very high-frequency content to
│ │ - * expand rather than compress when converted to the JPEG format.  Such images
│ │ - * represent a very rare corner case, but since there is no way to predict the
│ │ - * size of a JPEG image prior to compression, the corner case has to be
│ │ + * is that the JPEG format uses 16-bit coefficients, so it is possible for a
│ │ + * very high-quality source image with very high-frequency content to expand
│ │ + * rather than compress when converted to the JPEG format.  Such images
│ │ + * represent very rare corner cases, but since there is no way to predict the
│ │ + * size of a JPEG image prior to compression, the corner cases have to be
│ │   * handled.
│ │   *
│ │   * @param width width (in pixels) of the image
│ │   *
│ │   * @param height height (in pixels) of the image
│ │   *
│ │   * @param jpegSubsamp the level of chrominance subsampling to be used when
│ │ @@ -921,44 +923,45 @@
│ │   * @return the maximum size of the buffer (in bytes) required to hold the
│ │   * image, or -1 if the arguments are out of bounds.
│ │   */
│ │  DLLEXPORT unsigned long tjBufSize(int width, int height, int jpegSubsamp);
│ │  
│ │  
│ │  /**
│ │ - * The size of the buffer (in bytes) required to hold a YUV planar image with
│ │ - * the given parameters.
│ │ + * The size of the buffer (in bytes) required to hold a unified planar YUV
│ │ + * image with the given parameters.
│ │   *
│ │   * @param width width (in pixels) of the image
│ │   *
│ │ - * @param pad the width of each line in each plane of the image is padded to
│ │ - * the nearest multiple of this number of bytes (must be a power of 2.)
│ │ + * @param align row alignment (in bytes) of the image (must be a power of 2.)
│ │ + * Setting this parameter to n specifies that each row in each plane of the
│ │ + * image will be padded to the nearest multiple of n bytes (1 = unpadded.)
│ │   *
│ │   * @param height height (in pixels) of the image
│ │   *
│ │   * @param subsamp level of chrominance subsampling in the image (see
│ │   * @ref TJSAMP "Chrominance subsampling options".)
│ │   *
│ │ - * @return the size of the buffer (in bytes) required to hold the image, or
│ │ - * -1 if the arguments are out of bounds.
│ │ + * @return the size of the buffer (in bytes) required to hold the image, or -1
│ │ + * if the arguments are out of bounds.
│ │   */
│ │ -DLLEXPORT unsigned long tjBufSizeYUV2(int width, int pad, int height,
│ │ +DLLEXPORT unsigned long tjBufSizeYUV2(int width, int align, int height,
│ │                                        int subsamp);
│ │  
│ │  
│ │  /**
│ │   * The size of the buffer (in bytes) required to hold a YUV image plane with
│ │   * the given parameters.
│ │   *
│ │   * @param componentID ID number of the image plane (0 = Y, 1 = U/Cb, 2 = V/Cr)
│ │   *
│ │   * @param width width (in pixels) of the YUV image.  NOTE: this is the width of
│ │   * the whole image, not the plane width.
│ │   *
│ │ - * @param stride bytes per line in the image plane.  Setting this to 0 is the
│ │ + * @param stride bytes per row in the image plane.  Setting this to 0 is the
│ │   * equivalent of setting it to the plane width.
│ │   *
│ │   * @param height height (in pixels) of the YUV image.  NOTE: this is the height
│ │   * of the whole image, not the plane height.
│ │   *
│ │   * @param subsamp level of chrominance subsampling in the image (see
│ │   * @ref TJSAMP "Chrominance subsampling options".)
│ │ @@ -1001,86 +1004,87 @@
│ │   * @return the plane height of a YUV image plane with the given parameters, or
│ │   * -1 if the arguments are out of bounds.
│ │   */
│ │  DLLEXPORT int tjPlaneHeight(int componentID, int height, int subsamp);
│ │  
│ │  
│ │  /**
│ │ - * Encode an RGB or grayscale image into a YUV planar image.  This function
│ │ - * uses the accelerated color conversion routines in the underlying
│ │ - * codec but does not execute any of the other steps in the JPEG compression
│ │ - * process.
│ │ + * Encode a packed-pixel RGB or grayscale image into a unified planar YUV
│ │ + * image.  This function performs color conversion (which is accelerated in the
│ │ + * libjpeg-turbo implementation) but does not execute any of the other steps in
│ │ + * the JPEG compression process.
│ │   *
│ │   * @param handle a handle to a TurboJPEG compressor or transformer instance
│ │   *
│ │ - * @param srcBuf pointer to an image buffer containing RGB or grayscale pixels
│ │ - * to be encoded
│ │ + * @param srcBuf pointer to a buffer containing a packed-pixel RGB or grayscale
│ │ + * source image to be encoded
│ │   *
│ │   * @param width width (in pixels) of the source image
│ │   *
│ │ - * @param pitch bytes per line in the source image.  Normally, this should be
│ │ - * <tt>width * #tjPixelSize[pixelFormat]</tt> if the image is unpadded, or
│ │ - * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each line of the image
│ │ - * is padded to the nearest 32-bit boundary, as is the case for Windows
│ │ - * bitmaps.  You can also be clever and use this parameter to skip lines, etc.
│ │ + * @param pitch bytes per row in the source image.  Normally this should be
│ │ + * <tt>width * #tjPixelSize[pixelFormat]</tt>, if the image is unpadded, or
│ │ + * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each row of the image
│ │ + * is padded to the nearest multiple of 4 bytes, as is the case for Windows
│ │ + * bitmaps.  You can also be clever and use this parameter to skip rows, etc.
│ │   * Setting this parameter to 0 is the equivalent of setting it to
│ │   * <tt>width * #tjPixelSize[pixelFormat]</tt>.
│ │   *
│ │   * @param height height (in pixels) of the source image
│ │   *
│ │   * @param pixelFormat pixel format of the source image (see @ref TJPF
│ │   * "Pixel formats".)
│ │   *
│ │ - * @param dstBuf pointer to an image buffer that will receive the YUV image.
│ │ - * Use #tjBufSizeYUV2() to determine the appropriate size for this buffer based
│ │ - * on the image width, height, padding, and level of chrominance subsampling.
│ │ - * The Y, U (Cb), and V (Cr) image planes will be stored sequentially in the
│ │ - * buffer (refer to @ref YUVnotes "YUV Image Format Notes".)
│ │ - *
│ │ - * @param pad the width of each line in each plane of the YUV image will be
│ │ - * padded to the nearest multiple of this number of bytes (must be a power of
│ │ - * 2.)  To generate images suitable for X Video, <tt>pad</tt> should be set to
│ │ - * 4.
│ │ + * @param dstBuf pointer to a buffer that will receive the unified planar YUV
│ │ + * image.  Use #tjBufSizeYUV2() to determine the appropriate size for this
│ │ + * buffer based on the image width, height, row alignment, and level of
│ │ + * chrominance subsampling.  The Y, U (Cb), and V (Cr) image planes will be
│ │ + * stored sequentially in the buffer.  (Refer to @ref YUVnotes
│ │ + * "YUV Image Format Notes".)
│ │ + *
│ │ + * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ + * 2.)  Setting this parameter to n will cause each row in each plane of the
│ │ + * YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.)
│ │ + * To generate images suitable for X Video, `align` should be set to 4.
│ │   *
│ │   * @param subsamp the level of chrominance subsampling to be used when
│ │   * generating the YUV image (see @ref TJSAMP
│ │   * "Chrominance subsampling options".)  To generate images suitable for X
│ │ - * Video, <tt>subsamp</tt> should be set to @ref TJSAMP_420.  This produces an
│ │ - * image compatible with the I420 (AKA "YUV420P") format.
│ │ + * Video, `subsamp` should be set to @ref TJSAMP_420.  This produces an image
│ │ + * compatible with the I420 (AKA "YUV420P") format.
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │ -*/
│ │ + */
│ │  DLLEXPORT int tjEncodeYUV3(tjhandle handle, const unsigned char *srcBuf,
│ │                             int width, int pitch, int height, int pixelFormat,
│ │ -                           unsigned char *dstBuf, int pad, int subsamp,
│ │ +                           unsigned char *dstBuf, int align, int subsamp,
│ │                             int flags);
│ │  
│ │  
│ │  /**
│ │ - * Encode an RGB or grayscale image into separate Y, U (Cb), and V (Cr) image
│ │ - * planes.  This function uses the accelerated color conversion routines in the
│ │ - * underlying codec but does not execute any of the other steps in the JPEG
│ │ - * compression process.
│ │ + * Encode a packed-pixel RGB or grayscale image into separate Y, U (Cb), and
│ │ + * V (Cr) image planes.  This function performs color conversion (which is
│ │ + * accelerated in the libjpeg-turbo implementation) but does not execute any of
│ │ + * the other steps in the JPEG compression process.
│ │   *
│ │   * @param handle a handle to a TurboJPEG compressor or transformer instance
│ │   *
│ │ - * @param srcBuf pointer to an image buffer containing RGB or grayscale pixels
│ │ - * to be encoded
│ │ + * @param srcBuf pointer to a buffer containing a packed-pixel RGB or grayscale
│ │ + * source image to be encoded
│ │   *
│ │   * @param width width (in pixels) of the source image
│ │   *
│ │ - * @param pitch bytes per line in the source image.  Normally, this should be
│ │ - * <tt>width * #tjPixelSize[pixelFormat]</tt> if the image is unpadded, or
│ │ - * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each line of the image
│ │ - * is padded to the nearest 32-bit boundary, as is the case for Windows
│ │ - * bitmaps.  You can also be clever and use this parameter to skip lines, etc.
│ │ + * @param pitch bytes per row in the source image.  Normally this should be
│ │ + * <tt>width * #tjPixelSize[pixelFormat]</tt>, if the image is unpadded, or
│ │ + * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each row of the image
│ │ + * is padded to the nearest multiple of 4 bytes, as is the case for Windows
│ │ + * bitmaps.  You can also be clever and use this parameter to skip rows, etc.
│ │   * Setting this parameter to 0 is the equivalent of setting it to
│ │   * <tt>width * #tjPixelSize[pixelFormat]</tt>.
│ │   *
│ │   * @param height height (in pixels) of the source image
│ │   *
│ │   * @param pixelFormat pixel format of the source image (see @ref TJPF
│ │   * "Pixel formats".)
│ │ @@ -1089,146 +1093,148 @@
│ │   * (or just a Y plane, if generating a grayscale image) that will receive the
│ │   * encoded image.  These planes can be contiguous or non-contiguous in memory.
│ │   * Use #tjPlaneSizeYUV() to determine the appropriate size for each plane based
│ │   * on the image width, height, strides, and level of chrominance subsampling.
│ │   * Refer to @ref YUVnotes "YUV Image Format Notes" for more details.
│ │   *
│ │   * @param strides an array of integers, each specifying the number of bytes per
│ │ - * line in the corresponding plane of the output image.  Setting the stride for
│ │ - * any plane to 0 is the same as setting it to the plane width (see
│ │ - * @ref YUVnotes "YUV Image Format Notes".)  If <tt>strides</tt> is NULL, then
│ │ - * the strides for all planes will be set to their respective plane widths.
│ │ - * You can adjust the strides in order to add an arbitrary amount of line
│ │ - * padding to each plane or to encode an RGB or grayscale image into a
│ │ - * subregion of a larger YUV planar image.
│ │ + * row in the corresponding plane of the YUV image.  Setting the stride for any
│ │ + * plane to 0 is the same as setting it to the plane width (see @ref YUVnotes
│ │ + * "YUV Image Format Notes".)  If `strides` is NULL, then the strides for all
│ │ + * planes will be set to their respective plane widths.  You can adjust the
│ │ + * strides in order to add an arbitrary amount of row padding to each plane or
│ │ + * to encode an RGB or grayscale image into a subregion of a larger planar YUV
│ │ + * image.
│ │   *
│ │   * @param subsamp the level of chrominance subsampling to be used when
│ │   * generating the YUV image (see @ref TJSAMP
│ │   * "Chrominance subsampling options".)  To generate images suitable for X
│ │ - * Video, <tt>subsamp</tt> should be set to @ref TJSAMP_420.  This produces an
│ │ - * image compatible with the I420 (AKA "YUV420P") format.
│ │ + * Video, `subsamp` should be set to @ref TJSAMP_420.  This produces an image
│ │ + * compatible with the I420 (AKA "YUV420P") format.
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │ -*/
│ │ + */
│ │  DLLEXPORT int tjEncodeYUVPlanes(tjhandle handle, const unsigned char *srcBuf,
│ │                                  int width, int pitch, int height,
│ │                                  int pixelFormat, unsigned char **dstPlanes,
│ │                                  int *strides, int subsamp, int flags);
│ │  
│ │  
│ │  /**
│ │   * Create a TurboJPEG decompressor instance.
│ │   *
│ │ - * @return a handle to the newly-created instance, or NULL if an error
│ │ - * occurred (see #tjGetErrorStr2().)
│ │ -*/
│ │ + * @return a handle to the newly-created instance, or NULL if an error occurred
│ │ + * (see #tjGetErrorStr2().)
│ │ + */
│ │  DLLEXPORT tjhandle tjInitDecompress(void);
│ │  
│ │  
│ │  /**
│ │   * Retrieve information about a JPEG image without decompressing it, or prime
│ │   * the decompressor with quantization and Huffman tables.
│ │   *
│ │   * @param handle a handle to a TurboJPEG decompressor or transformer instance
│ │   *
│ │ - * @param jpegBuf pointer to a buffer containing a JPEG image or an
│ │ + * @param jpegBuf pointer to a byte buffer containing a JPEG image or an
│ │   * "abbreviated table specification" (AKA "tables-only") datastream.  Passing a
│ │   * tables-only datastream to this function primes the decompressor with
│ │   * quantization and Huffman tables that can be used when decompressing
│ │   * subsequent "abbreviated image" datastreams.  This is useful, for instance,
│ │   * when decompressing video streams in which all frames share the same
│ │   * quantization and Huffman tables.
│ │   *
│ │   * @param jpegSize size of the JPEG image or tables-only datastream (in bytes)
│ │   *
│ │   * @param width pointer to an integer variable that will receive the width (in
│ │ - * pixels) of the JPEG image.  If <tt>jpegBuf</tt> points to a tables-only
│ │ - * datastream, then <tt>width</tt> is ignored.
│ │ + * pixels) of the JPEG image.  If `jpegBuf` points to a tables-only datastream,
│ │ + * then `width` is ignored.
│ │   *
│ │   * @param height pointer to an integer variable that will receive the height
│ │ - * (in pixels) of the JPEG image.  If <tt>jpegBuf</tt> points to a tables-only
│ │ - * datastream, then <tt>height</tt> is ignored.
│ │ + * (in pixels) of the JPEG image.  If `jpegBuf` points to a tables-only
│ │ + * datastream, then `height` is ignored.
│ │   *
│ │   * @param jpegSubsamp pointer to an integer variable that will receive the
│ │   * level of chrominance subsampling used when the JPEG image was compressed
│ │ - * (see @ref TJSAMP "Chrominance subsampling options".)  If <tt>jpegBuf</tt>
│ │ - * points to a tables-only datastream, then <tt>jpegSubsamp</tt> is ignored.
│ │ + * (see @ref TJSAMP "Chrominance subsampling options".)  If `jpegBuf` points to
│ │ + * a tables-only datastream, then `jpegSubsamp` is ignored.
│ │   *
│ │   * @param jpegColorspace pointer to an integer variable that will receive one
│ │   * of the JPEG colorspace constants, indicating the colorspace of the JPEG
│ │ - * image (see @ref TJCS "JPEG colorspaces".)  If <tt>jpegBuf</tt>
│ │ - * points to a tables-only datastream, then <tt>jpegColorspace</tt> is ignored.
│ │ + * image (see @ref TJCS "JPEG colorspaces".)  If `jpegBuf` points to a
│ │ + * tables-only datastream, then `jpegColorspace` is ignored.
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │ -*/
│ │ + */
│ │  DLLEXPORT int tjDecompressHeader3(tjhandle handle,
│ │                                    const unsigned char *jpegBuf,
│ │                                    unsigned long jpegSize, int *width,
│ │                                    int *height, int *jpegSubsamp,
│ │                                    int *jpegColorspace);
│ │  
│ │  
│ │  /**
│ │ - * Returns a list of fractional scaling factors that the JPEG decompressor in
│ │ - * this implementation of TurboJPEG supports.
│ │ + * Returns a list of fractional scaling factors that the JPEG decompressor
│ │ + * supports.
│ │   *
│ │ - * @param numscalingfactors pointer to an integer variable that will receive
│ │ + * @param numScalingFactors pointer to an integer variable that will receive
│ │   * the number of elements in the list
│ │   *
│ │   * @return a pointer to a list of fractional scaling factors, or NULL if an
│ │   * error is encountered (see #tjGetErrorStr2().)
│ │ -*/
│ │ -DLLEXPORT tjscalingfactor *tjGetScalingFactors(int *numscalingfactors);
│ │ + */
│ │ +DLLEXPORT tjscalingfactor *tjGetScalingFactors(int *numScalingFactors);
│ │  
│ │  
│ │  /**
│ │ - * Decompress a JPEG image to an RGB, grayscale, or CMYK image.
│ │ + * Decompress a JPEG image into a packed-pixel RGB, grayscale, or CMYK image.
│ │   *
│ │   * @param handle a handle to a TurboJPEG decompressor or transformer instance
│ │   *
│ │ - * @param jpegBuf pointer to a buffer containing the JPEG image to decompress
│ │ + * @param jpegBuf pointer to a byte buffer containing the JPEG image to
│ │ + * decompress
│ │   *
│ │   * @param jpegSize size of the JPEG image (in bytes)
│ │   *
│ │ - * @param dstBuf pointer to an image buffer that will receive the decompressed
│ │ - * image.  This buffer should normally be <tt>pitch * scaledHeight</tt> bytes
│ │ - * in size, where <tt>scaledHeight</tt> can be determined by calling
│ │ - * #TJSCALED() with the JPEG image height and one of the scaling factors
│ │ - * returned by #tjGetScalingFactors().  The <tt>dstBuf</tt> pointer may also be
│ │ - * used to decompress into a specific region of a larger buffer.
│ │ + * @param dstBuf pointer to a buffer that will receive the packed-pixel
│ │ + * decompressed image.  This buffer should normally be `pitch * scaledHeight`
│ │ + * bytes in size, where `scaledHeight` can be determined by calling #TJSCALED()
│ │ + * with the JPEG image height and one of the scaling factors returned by
│ │ + * #tjGetScalingFactors().  The `dstBuf` pointer may also be used to decompress
│ │ + * into a specific region of a larger buffer.
│ │   *
│ │   * @param width desired width (in pixels) of the destination image.  If this is
│ │   * different than the width of the JPEG image being decompressed, then
│ │   * TurboJPEG will use scaling in the JPEG decompressor to generate the largest
│ │ - * possible image that will fit within the desired width.  If <tt>width</tt> is
│ │ - * set to 0, then only the height will be considered when determining the
│ │ - * scaled image size.
│ │ - *
│ │ - * @param pitch bytes per line in the destination image.  Normally, this is
│ │ - * <tt>scaledWidth * #tjPixelSize[pixelFormat]</tt> if the decompressed image
│ │ - * is unpadded, else <tt>#TJPAD(scaledWidth * #tjPixelSize[pixelFormat])</tt>
│ │ - * if each line of the decompressed image is padded to the nearest 32-bit
│ │ - * boundary, as is the case for Windows bitmaps.  (NOTE: <tt>scaledWidth</tt>
│ │ - * can be determined by calling #TJSCALED() with the JPEG image width and one
│ │ - * of the scaling factors returned by #tjGetScalingFactors().)  You can also be
│ │ - * clever and use the pitch parameter to skip lines, etc.  Setting this
│ │ - * parameter to 0 is the equivalent of setting it to
│ │ + * possible image that will fit within the desired width.  If `width` is set to
│ │ + * 0, then only the height will be considered when determining the scaled image
│ │ + * size.
│ │ + *
│ │ + * @param pitch bytes per row in the destination image.  Normally this should
│ │ + * be set to <tt>scaledWidth * #tjPixelSize[pixelFormat]</tt>, if the
│ │ + * destination image should be unpadded, or
│ │ + * <tt>#TJPAD(scaledWidth * #tjPixelSize[pixelFormat])</tt> if each row of the
│ │ + * destination image should be padded to the nearest multiple of 4 bytes, as is
│ │ + * the case for Windows bitmaps.  (NOTE: `scaledWidth` can be determined by
│ │ + * calling #TJSCALED() with the JPEG image width and one of the scaling factors
│ │ + * returned by #tjGetScalingFactors().)  You can also be clever and use the
│ │ + * pitch parameter to skip rows, etc.  Setting this parameter to 0 is the
│ │ + * equivalent of setting it to
│ │   * <tt>scaledWidth * #tjPixelSize[pixelFormat]</tt>.
│ │   *
│ │   * @param height desired height (in pixels) of the destination image.  If this
│ │   * is different than the height of the JPEG image being decompressed, then
│ │   * TurboJPEG will use scaling in the JPEG decompressor to generate the largest
│ │ - * possible image that will fit within the desired height.  If <tt>height</tt>
│ │ - * is set to 0, then only the width will be considered when determining the
│ │ - * scaled image size.
│ │ + * possible image that will fit within the desired height.  If `height` is set
│ │ + * to 0, then only the width will be considered when determining the scaled
│ │ + * image size.
│ │   *
│ │   * @param pixelFormat pixel format of the destination image (see @ref
│ │   * TJPF "Pixel formats".)
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │ @@ -1238,109 +1244,111 @@
│ │  DLLEXPORT int tjDecompress2(tjhandle handle, const unsigned char *jpegBuf,
│ │                              unsigned long jpegSize, unsigned char *dstBuf,
│ │                              int width, int pitch, int height, int pixelFormat,
│ │                              int flags);
│ │  
│ │  
│ │  /**
│ │ - * Decompress a JPEG image to a YUV planar image.  This function performs JPEG
│ │ - * decompression but leaves out the color conversion step, so a planar YUV
│ │ - * image is generated instead of an RGB image.
│ │ + * Decompress a JPEG image into a unified planar YUV image.  This function
│ │ + * performs JPEG decompression but leaves out the color conversion step, so a
│ │ + * planar YUV image is generated instead of a packed-pixel image.
│ │   *
│ │   * @param handle a handle to a TurboJPEG decompressor or transformer instance
│ │   *
│ │ - * @param jpegBuf pointer to a buffer containing the JPEG image to decompress
│ │ + * @param jpegBuf pointer to a byte buffer containing the JPEG image to
│ │ + * decompress
│ │   *
│ │   * @param jpegSize size of the JPEG image (in bytes)
│ │   *
│ │ - * @param dstBuf pointer to an image buffer that will receive the YUV image.
│ │ - * Use #tjBufSizeYUV2() to determine the appropriate size for this buffer based
│ │ - * on the image width, height, padding, and level of subsampling.  The Y,
│ │ - * U (Cb), and V (Cr) image planes will be stored sequentially in the buffer
│ │ - * (refer to @ref YUVnotes "YUV Image Format Notes".)
│ │ + * @param dstBuf pointer to a buffer that will receive the unified planar YUV
│ │ + * decompressed image.  Use #tjBufSizeYUV2() to determine the appropriate size
│ │ + * for this buffer based on the scaled image width, scaled image height, row
│ │ + * alignment, and level of chrominance subsampling.  The Y, U (Cb), and V (Cr)
│ │ + * image planes will be stored sequentially in the buffer.  (Refer to
│ │ + * @ref YUVnotes "YUV Image Format Notes".)
│ │   *
│ │   * @param width desired width (in pixels) of the YUV image.  If this is
│ │   * different than the width of the JPEG image being decompressed, then
│ │   * TurboJPEG will use scaling in the JPEG decompressor to generate the largest
│ │ - * possible image that will fit within the desired width.  If <tt>width</tt> is
│ │ - * set to 0, then only the height will be considered when determining the
│ │ - * scaled image size.  If the scaled width is not an even multiple of the MCU
│ │ - * block width (see #tjMCUWidth), then an intermediate buffer copy will be
│ │ - * performed within TurboJPEG.
│ │ - *
│ │ - * @param pad the width of each line in each plane of the YUV image will be
│ │ - * padded to the nearest multiple of this number of bytes (must be a power of
│ │ - * 2.)  To generate images suitable for X Video, <tt>pad</tt> should be set to
│ │ - * 4.
│ │ + * possible image that will fit within the desired width.  If `width` is set to
│ │ + * 0, then only the height will be considered when determining the scaled image
│ │ + * size.  If the scaled width is not an even multiple of the MCU block width
│ │ + * (see #tjMCUWidth), then an intermediate buffer copy will be performed.
│ │ + *
│ │ + * @param align row alignment (in bytes) of the YUV image (must be a power of
│ │ + * 2.)  Setting this parameter to n will cause each row in each plane of the
│ │ + * YUV image to be padded to the nearest multiple of n bytes (1 = unpadded.)
│ │ + * To generate images suitable for X Video, `align` should be set to 4.
│ │   *
│ │   * @param height desired height (in pixels) of the YUV image.  If this is
│ │   * different than the height of the JPEG image being decompressed, then
│ │   * TurboJPEG will use scaling in the JPEG decompressor to generate the largest
│ │ - * possible image that will fit within the desired height.  If <tt>height</tt>
│ │ - * is set to 0, then only the width will be considered when determining the
│ │ - * scaled image size.  If the scaled height is not an even multiple of the MCU
│ │ - * block height (see #tjMCUHeight), then an intermediate buffer copy will be
│ │ - * performed within TurboJPEG.
│ │ + * possible image that will fit within the desired height.  If `height` is set
│ │ + * to 0, then only the width will be considered when determining the scaled
│ │ + * image size.  If the scaled height is not an even multiple of the MCU block
│ │ + * height (see #tjMCUHeight), then an intermediate buffer copy will be
│ │ + * performed.
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │   */
│ │  DLLEXPORT int tjDecompressToYUV2(tjhandle handle, const unsigned char *jpegBuf,
│ │                                   unsigned long jpegSize, unsigned char *dstBuf,
│ │ -                                 int width, int pad, int height, int flags);
│ │ +                                 int width, int align, int height, int flags);
│ │  
│ │  
│ │  /**
│ │   * Decompress a JPEG image into separate Y, U (Cb), and V (Cr) image
│ │   * planes.  This function performs JPEG decompression but leaves out the color
│ │ - * conversion step, so a planar YUV image is generated instead of an RGB image.
│ │ + * conversion step, so a planar YUV image is generated instead of a
│ │ + * packed-pixel image.
│ │   *
│ │   * @param handle a handle to a TurboJPEG decompressor or transformer instance
│ │   *
│ │ - * @param jpegBuf pointer to a buffer containing the JPEG image to decompress
│ │ + * @param jpegBuf pointer to a byte buffer containing the JPEG image to
│ │ + * decompress
│ │   *
│ │   * @param jpegSize size of the JPEG image (in bytes)
│ │   *
│ │   * @param dstPlanes an array of pointers to Y, U (Cb), and V (Cr) image planes
│ │   * (or just a Y plane, if decompressing a grayscale image) that will receive
│ │ - * the YUV image.  These planes can be contiguous or non-contiguous in memory.
│ │ - * Use #tjPlaneSizeYUV() to determine the appropriate size for each plane based
│ │ - * on the scaled image width, scaled image height, strides, and level of
│ │ - * chrominance subsampling.  Refer to @ref YUVnotes "YUV Image Format Notes"
│ │ - * for more details.
│ │ + * the decompressed image.  These planes can be contiguous or non-contiguous in
│ │ + * memory.  Use #tjPlaneSizeYUV() to determine the appropriate size for each
│ │ + * plane based on the scaled image width, scaled image height, strides, and
│ │ + * level of chrominance subsampling.  Refer to @ref YUVnotes
│ │ + * "YUV Image Format Notes" for more details.
│ │   *
│ │   * @param width desired width (in pixels) of the YUV image.  If this is
│ │   * different than the width of the JPEG image being decompressed, then
│ │   * TurboJPEG will use scaling in the JPEG decompressor to generate the largest
│ │ - * possible image that will fit within the desired width.  If <tt>width</tt> is
│ │ - * set to 0, then only the height will be considered when determining the
│ │ - * scaled image size.  If the scaled width is not an even multiple of the MCU
│ │ - * block width (see #tjMCUWidth), then an intermediate buffer copy will be
│ │ - * performed within TurboJPEG.
│ │ + * possible image that will fit within the desired width.  If `width` is set to
│ │ + * 0, then only the height will be considered when determining the scaled image
│ │ + * size.  If the scaled width is not an even multiple of the MCU block width
│ │ + * (see #tjMCUWidth), then an intermediate buffer copy will be performed.
│ │   *
│ │   * @param strides an array of integers, each specifying the number of bytes per
│ │ - * line in the corresponding plane of the output image.  Setting the stride for
│ │ - * any plane to 0 is the same as setting it to the scaled plane width (see
│ │ - * @ref YUVnotes "YUV Image Format Notes".)  If <tt>strides</tt> is NULL, then
│ │ - * the strides for all planes will be set to their respective scaled plane
│ │ - * widths.  You can adjust the strides in order to add an arbitrary amount of
│ │ - * line padding to each plane or to decompress the JPEG image into a subregion
│ │ - * of a larger YUV planar image.
│ │ + * row in the corresponding plane of the YUV image.  Setting the stride for any
│ │ + * plane to 0 is the same as setting it to the scaled plane width (see
│ │ + * @ref YUVnotes "YUV Image Format Notes".)  If `strides` is NULL, then the
│ │ + * strides for all planes will be set to their respective scaled plane widths.
│ │ + * You can adjust the strides in order to add an arbitrary amount of row
│ │ + * padding to each plane or to decompress the JPEG image into a subregion of a
│ │ + * larger planar YUV image.
│ │   *
│ │   * @param height desired height (in pixels) of the YUV image.  If this is
│ │   * different than the height of the JPEG image being decompressed, then
│ │   * TurboJPEG will use scaling in the JPEG decompressor to generate the largest
│ │ - * possible image that will fit within the desired height.  If <tt>height</tt>
│ │ - * is set to 0, then only the width will be considered when determining the
│ │ - * scaled image size.  If the scaled height is not an even multiple of the MCU
│ │ - * block height (see #tjMCUHeight), then an intermediate buffer copy will be
│ │ - * performed within TurboJPEG.
│ │ + * possible image that will fit within the desired height.  If `height` is set
│ │ + * to 0, then only the width will be considered when determining the scaled
│ │ + * image size.  If the scaled height is not an even multiple of the MCU block
│ │ + * height (see #tjMCUHeight), then an intermediate buffer copy will be
│ │ + * performed.
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │   */
│ │ @@ -1348,107 +1356,110 @@
│ │                                        const unsigned char *jpegBuf,
│ │                                        unsigned long jpegSize,
│ │                                        unsigned char **dstPlanes, int width,
│ │                                        int *strides, int height, int flags);
│ │  
│ │  
│ │  /**
│ │ - * Decode a YUV planar image into an RGB or grayscale image.  This function
│ │ - * uses the accelerated color conversion routines in the underlying
│ │ - * codec but does not execute any of the other steps in the JPEG decompression
│ │ - * process.
│ │ + * Decode a unified planar YUV image into a packed-pixel RGB or grayscale
│ │ + * image.  This function performs color conversion (which is accelerated in the
│ │ + * libjpeg-turbo implementation) but does not execute any of the other steps in
│ │ + * the JPEG decompression process.
│ │   *
│ │   * @param handle a handle to a TurboJPEG decompressor or transformer instance
│ │   *
│ │ - * @param srcBuf pointer to an image buffer containing a YUV planar image to be
│ │ - * decoded.  The size of this buffer should match the value returned by
│ │ - * #tjBufSizeYUV2() for the given image width, height, padding, and level of
│ │ - * chrominance subsampling.  The Y, U (Cb), and V (Cr) image planes should be
│ │ - * stored sequentially in the source buffer (refer to @ref YUVnotes
│ │ - * "YUV Image Format Notes".)
│ │ - *
│ │ - * @param pad Use this parameter to specify that the width of each line in each
│ │ - * plane of the YUV source image is padded to the nearest multiple of this
│ │ - * number of bytes (must be a power of 2.)
│ │ + * @param srcBuf pointer to a buffer containing a unified planar YUV source
│ │ + * image to be decoded.  The size of this buffer should match the value
│ │ + * returned by #tjBufSizeYUV2() for the given image width, height, row
│ │ + * alignment, and level of chrominance subsampling.  The Y, U (Cb), and V (Cr)
│ │ + * image planes should be stored sequentially in the source buffer.  (Refer to
│ │ + * @ref YUVnotes "YUV Image Format Notes".)
│ │ + *
│ │ + * @param align row alignment (in bytes) of the YUV source image (must be a
│ │ + * power of 2.)  Setting this parameter to n indicates that each row in each
│ │ + * plane of the YUV source image is padded to the nearest multiple of n bytes
│ │ + * (1 = unpadded.)
│ │   *
│ │   * @param subsamp the level of chrominance subsampling used in the YUV source
│ │   * image (see @ref TJSAMP "Chrominance subsampling options".)
│ │   *
│ │ - * @param dstBuf pointer to an image buffer that will receive the decoded
│ │ - * image.  This buffer should normally be <tt>pitch * height</tt> bytes in
│ │ - * size, but the <tt>dstBuf</tt> pointer can also be used to decode into a
│ │ - * specific region of a larger buffer.
│ │ + * @param dstBuf pointer to a buffer that will receive the packed-pixel decoded
│ │ + * image.  This buffer should normally be `pitch * height` bytes in size, but
│ │ + * the `dstBuf` pointer can also be used to decode into a specific region of a
│ │ + * larger buffer.
│ │   *
│ │   * @param width width (in pixels) of the source and destination images
│ │   *
│ │ - * @param pitch bytes per line in the destination image.  Normally, this should
│ │ - * be <tt>width * #tjPixelSize[pixelFormat]</tt> if the destination image is
│ │ - * unpadded, or <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each line
│ │ - * of the destination image should be padded to the nearest 32-bit boundary, as
│ │ - * is the case for Windows bitmaps.  You can also be clever and use the pitch
│ │ - * parameter to skip lines, etc.  Setting this parameter to 0 is the equivalent
│ │ + * @param pitch bytes per row in the destination image.  Normally this should
│ │ + * be set to <tt>width * #tjPixelSize[pixelFormat]</tt>, if the destination
│ │ + * image should be unpadded, or
│ │ + * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each row of the
│ │ + * destination image should be padded to the nearest multiple of 4 bytes, as is
│ │ + * the case for Windows bitmaps.  You can also be clever and use the pitch
│ │ + * parameter to skip rows, etc.  Setting this parameter to 0 is the equivalent
│ │   * of setting it to <tt>width * #tjPixelSize[pixelFormat]</tt>.
│ │   *
│ │   * @param height height (in pixels) of the source and destination images
│ │   *
│ │   * @param pixelFormat pixel format of the destination image (see @ref TJPF
│ │   * "Pixel formats".)
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │   */
│ │  DLLEXPORT int tjDecodeYUV(tjhandle handle, const unsigned char *srcBuf,
│ │ -                          int pad, int subsamp, unsigned char *dstBuf,
│ │ +                          int align, int subsamp, unsigned char *dstBuf,
│ │                            int width, int pitch, int height, int pixelFormat,
│ │                            int flags);
│ │  
│ │  
│ │  /**
│ │ - * Decode a set of Y, U (Cb), and V (Cr) image planes into an RGB or grayscale
│ │ - * image.  This function uses the accelerated color conversion routines in the
│ │ - * underlying codec but does not execute any of the other steps in the JPEG
│ │ - * decompression process.
│ │ + * Decode a set of Y, U (Cb), and V (Cr) image planes into a packed-pixel RGB
│ │ + * or grayscale image.  This function performs color conversion (which is
│ │ + * accelerated in the libjpeg-turbo implementation) but does not execute any of
│ │ + * the other steps in the JPEG decompression process.
│ │   *
│ │   * @param handle a handle to a TurboJPEG decompressor or transformer instance
│ │   *
│ │   * @param srcPlanes an array of pointers to Y, U (Cb), and V (Cr) image planes
│ │   * (or just a Y plane, if decoding a grayscale image) that contain a YUV image
│ │   * to be decoded.  These planes can be contiguous or non-contiguous in memory.
│ │   * The size of each plane should match the value returned by #tjPlaneSizeYUV()
│ │   * for the given image width, height, strides, and level of chrominance
│ │   * subsampling.  Refer to @ref YUVnotes "YUV Image Format Notes" for more
│ │   * details.
│ │   *
│ │   * @param strides an array of integers, each specifying the number of bytes per
│ │ - * line in the corresponding plane of the YUV source image.  Setting the stride
│ │ + * row in the corresponding plane of the YUV source image.  Setting the stride
│ │   * for any plane to 0 is the same as setting it to the plane width (see
│ │ - * @ref YUVnotes "YUV Image Format Notes".)  If <tt>strides</tt> is NULL, then
│ │ - * the strides for all planes will be set to their respective plane widths.
│ │ - * You can adjust the strides in order to specify an arbitrary amount of line
│ │ - * padding in each plane or to decode a subregion of a larger YUV planar image.
│ │ + * @ref YUVnotes "YUV Image Format Notes".)  If `strides` is NULL, then the
│ │ + * strides for all planes will be set to their respective plane widths.  You
│ │ + * can adjust the strides in order to specify an arbitrary amount of row
│ │ + * padding in each plane or to decode a subregion of a larger planar YUV image.
│ │   *
│ │   * @param subsamp the level of chrominance subsampling used in the YUV source
│ │   * image (see @ref TJSAMP "Chrominance subsampling options".)
│ │   *
│ │ - * @param dstBuf pointer to an image buffer that will receive the decoded
│ │ - * image.  This buffer should normally be <tt>pitch * height</tt> bytes in
│ │ - * size, but the <tt>dstBuf</tt> pointer can also be used to decode into a
│ │ - * specific region of a larger buffer.
│ │ + * @param dstBuf pointer to a buffer that will receive the packed-pixel decoded
│ │ + * image.  This buffer should normally be `pitch * height` bytes in size, but
│ │ + * the `dstBuf` pointer can also be used to decode into a specific region of a
│ │ + * larger buffer.
│ │   *
│ │   * @param width width (in pixels) of the source and destination images
│ │   *
│ │ - * @param pitch bytes per line in the destination image.  Normally, this should
│ │ - * be <tt>width * #tjPixelSize[pixelFormat]</tt> if the destination image is
│ │ - * unpadded, or <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each line
│ │ - * of the destination image should be padded to the nearest 32-bit boundary, as
│ │ - * is the case for Windows bitmaps.  You can also be clever and use the pitch
│ │ - * parameter to skip lines, etc.  Setting this parameter to 0 is the equivalent
│ │ + * @param pitch bytes per row in the destination image.  Normally this should
│ │ + * be set to <tt>width * #tjPixelSize[pixelFormat]</tt>, if the destination
│ │ + * image should be unpadded, or
│ │ + * <tt>#TJPAD(width * #tjPixelSize[pixelFormat])</tt> if each row of the
│ │ + * destination image should be padded to the nearest multiple of 4 bytes, as is
│ │ + * the case for Windows bitmaps.  You can also be clever and use the pitch
│ │ + * parameter to skip rows, etc.  Setting this parameter to 0 is the equivalent
│ │   * of setting it to <tt>width * #tjPixelSize[pixelFormat]</tt>.
│ │   *
│ │   * @param height height (in pixels) of the source and destination images
│ │   *
│ │   * @param pixelFormat pixel format of the destination image (see @ref TJPF
│ │   * "Pixel formats".)
│ │   *
│ │ @@ -1479,58 +1490,59 @@
│ │   * transforms work by moving the raw DCT coefficients from one JPEG image
│ │   * structure to another without altering the values of the coefficients.  While
│ │   * this is typically faster than decompressing the image, transforming it, and
│ │   * re-compressing it, lossless transforms are not free.  Each lossless
│ │   * transform requires reading and performing Huffman decoding on all of the
│ │   * coefficients in the source image, regardless of the size of the destination
│ │   * image.  Thus, this function provides a means of generating multiple
│ │ - * transformed images from the same source or  applying multiple
│ │ - * transformations simultaneously, in order to eliminate the need to read the
│ │ - * source coefficients multiple times.
│ │ + * transformed images from the same source or applying multiple transformations
│ │ + * simultaneously, in order to eliminate the need to read the source
│ │ + * coefficients multiple times.
│ │   *
│ │   * @param handle a handle to a TurboJPEG transformer instance
│ │   *
│ │ - * @param jpegBuf pointer to a buffer containing the JPEG source image to
│ │ + * @param jpegBuf pointer to a byte buffer containing the JPEG source image to
│ │   * transform
│ │   *
│ │   * @param jpegSize size of the JPEG source image (in bytes)
│ │   *
│ │   * @param n the number of transformed JPEG images to generate
│ │   *
│ │ - * @param dstBufs pointer to an array of n image buffers.  <tt>dstBufs[i]</tt>
│ │ - * will receive a JPEG image that has been transformed using the parameters in
│ │ - * <tt>transforms[i]</tt>.  TurboJPEG has the ability to reallocate the JPEG
│ │ - * buffer to accommodate the size of the JPEG image.  Thus, you can choose to:
│ │ - * -# pre-allocate the JPEG buffer with an arbitrary size using #tjAlloc() and
│ │ - * let TurboJPEG grow the buffer as needed,
│ │ - * -# set <tt>dstBufs[i]</tt> to NULL to tell TurboJPEG to allocate the buffer
│ │ - * for you, or
│ │ + * @param dstBufs pointer to an array of n byte buffers.  `dstBufs[i]` will
│ │ + * receive a JPEG image that has been transformed using the parameters in
│ │ + * `transforms[i]`.  TurboJPEG has the ability to reallocate the JPEG
│ │ + * destination buffer to accommodate the size of the transformed JPEG image.
│ │ + * Thus, you can choose to:
│ │ + * -# pre-allocate the JPEG destination buffer with an arbitrary size using
│ │ + * #tjAlloc() and let TurboJPEG grow the buffer as needed,
│ │ + * -# set `dstBufs[i]` to NULL to tell TurboJPEG to allocate the buffer for
│ │ + * you, or
│ │   * -# pre-allocate the buffer to a "worst case" size determined by calling
│ │   * #tjBufSize() with the transformed or cropped width and height.  Under normal
│ │   * circumstances, this should ensure that the buffer never has to be
│ │ - * re-allocated (setting #TJFLAG_NOREALLOC guarantees that it won't be.)  Note,
│ │ - * however, that there are some rare cases (such as transforming images with a
│ │ - * large amount of embedded EXIF or ICC profile data) in which the output image
│ │ - * will be larger than the worst-case size, and #TJFLAG_NOREALLOC cannot be
│ │ - * used in those cases.
│ │ + * re-allocated.  (Setting #TJFLAG_NOREALLOC guarantees that it won't be.)
│ │ + * Note, however, that there are some rare cases (such as transforming images
│ │ + * with a large amount of embedded EXIF or ICC profile data) in which the
│ │ + * transformed JPEG image will be larger than the worst-case size, and
│ │ + * #TJFLAG_NOREALLOC cannot be used in those cases.
│ │   * .
│ │ - * If you choose option 1, <tt>dstSizes[i]</tt> should be set to the size of
│ │ - * your pre-allocated buffer.  In any case, unless you have set
│ │ - * #TJFLAG_NOREALLOC, you should always check <tt>dstBufs[i]</tt> upon return
│ │ - * from this function, as it may have changed.
│ │ + * If you choose option 1, then `dstSizes[i]` should be set to the size of your
│ │ + * pre-allocated buffer.  In any case, unless you have set #TJFLAG_NOREALLOC,
│ │ + * you should always check `dstBufs[i]` upon return from this function, as it
│ │ + * may have changed.
│ │   *
│ │   * @param dstSizes pointer to an array of n unsigned long variables that will
│ │   * receive the actual sizes (in bytes) of each transformed JPEG image.  If
│ │ - * <tt>dstBufs[i]</tt> points to a pre-allocated buffer, then
│ │ - * <tt>dstSizes[i]</tt> should be set to the size of the buffer.  Upon return,
│ │ - * <tt>dstSizes[i]</tt> will contain the size of the JPEG image (in bytes.)
│ │ + * `dstBufs[i]` points to a pre-allocated buffer, then `dstSizes[i]` should be
│ │ + * set to the size of the buffer.  Upon return, `dstSizes[i]` will contain the
│ │ + * size of the transformed JPEG image (in bytes.)
│ │   *
│ │   * @param transforms pointer to an array of n #tjtransform structures, each of
│ │   * which specifies the transform parameters and/or cropping region for the
│ │ - * corresponding transformed output image.
│ │ + * corresponding transformed JPEG image.
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_ACCURATEDCT
│ │   * "flags"
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2()
│ │   * and #tjGetErrorCode().)
│ │   */
│ │ @@ -1548,117 +1560,116 @@
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2().)
│ │   */
│ │  DLLEXPORT int tjDestroy(tjhandle handle);
│ │  
│ │  
│ │  /**
│ │ - * Allocate an image buffer for use with TurboJPEG.  You should always use
│ │ - * this function to allocate the JPEG destination buffer(s) for the compression
│ │ - * and transform functions unless you are disabling automatic buffer
│ │ - * (re)allocation (by setting #TJFLAG_NOREALLOC.)
│ │ + * Allocate a byte buffer for use with TurboJPEG.  You should always use this
│ │ + * function to allocate the JPEG destination buffer(s) for the compression and
│ │ + * transform functions unless you are disabling automatic buffer (re)allocation
│ │ + * (by setting #TJFLAG_NOREALLOC.)
│ │   *
│ │   * @param bytes the number of bytes to allocate
│ │   *
│ │   * @return a pointer to a newly-allocated buffer with the specified number of
│ │   * bytes.
│ │   *
│ │   * @sa tjFree()
│ │   */
│ │  DLLEXPORT unsigned char *tjAlloc(int bytes);
│ │  
│ │  
│ │  /**
│ │ - * Load an uncompressed image from disk into memory.
│ │ + * Load a packed-pixel image from disk into memory.
│ │   *
│ │ - * @param filename name of a file containing an uncompressed image in Windows
│ │ + * @param filename name of a file containing a packed-pixel image in Windows
│ │   * BMP or PBMPLUS (PPM/PGM) format
│ │   *
│ │   * @param width pointer to an integer variable that will receive the width (in
│ │ - * pixels) of the uncompressed image
│ │ + * pixels) of the packed-pixel image
│ │   *
│ │ - * @param align row alignment of the image buffer to be returned (must be a
│ │ - * power of 2.)  For instance, setting this parameter to 4 will cause all rows
│ │ - * in the image buffer to be padded to the nearest 32-bit boundary, and setting
│ │ - * this parameter to 1 will cause all rows in the image buffer to be unpadded.
│ │ + * @param align row alignment of the packed-pixel buffer to be returned (must
│ │ + * be a power of 2.)  Setting this parameter to n will cause all rows in the
│ │ + * buffer to be padded to the nearest multiple of n bytes (1 = unpadded.)
│ │   *
│ │   * @param height pointer to an integer variable that will receive the height
│ │ - * (in pixels) of the uncompressed image
│ │ + * (in pixels) of the packed-pixel image
│ │   *
│ │   * @param pixelFormat pointer to an integer variable that specifies or will
│ │ - * receive the pixel format of the uncompressed image buffer.  The behavior of
│ │ - * #tjLoadImage() will vary depending on the value of <tt>*pixelFormat</tt>
│ │ - * passed to the function:
│ │ - * - @ref TJPF_UNKNOWN : The uncompressed image buffer returned by the function
│ │ - * will use the most optimal pixel format for the file type, and
│ │ - * <tt>*pixelFormat</tt> will contain the ID of this pixel format upon
│ │ - * successful return from the function.
│ │ - * - @ref TJPF_GRAY : Only PGM files and 8-bit BMP files with a grayscale
│ │ - * colormap can be loaded.
│ │ + * receive the pixel format of the packed-pixel buffer.  The behavior of
│ │ + * #tjLoadImage() will vary depending on the value of `*pixelFormat` passed to
│ │ + * the function:
│ │ + * - @ref TJPF_UNKNOWN : The packed-pixel buffer returned by this function will
│ │ + * use the most optimal pixel format for the file type, and `*pixelFormat` will
│ │ + * contain the ID of that pixel format upon successful return from this
│ │ + * function.
│ │ + * - @ref TJPF_GRAY : Only PGM files and 8-bit-per-pixel BMP files with a
│ │ + * grayscale colormap can be loaded.
│ │   * - @ref TJPF_CMYK : The RGB or grayscale pixels stored in the file will be
│ │   * converted using a quick & dirty algorithm that is suitable only for testing
│ │ - * purposes (proper conversion between CMYK and other formats requires a color
│ │ - * management system.)
│ │ - * - Other @ref TJPF "pixel formats" : The uncompressed image buffer will use
│ │ - * the specified pixel format, and pixel format conversion will be performed if
│ │ + * purposes.  (Proper conversion between CMYK and other formats requires a
│ │ + * color management system.)
│ │ + * - Other @ref TJPF "pixel formats" : The packed-pixel buffer will use the
│ │ + * specified pixel format, and pixel format conversion will be performed if
│ │   * necessary.
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_BOTTOMUP
│ │   * "flags".
│ │   *
│ │ - * @return a pointer to a newly-allocated buffer containing the uncompressed
│ │ + * @return a pointer to a newly-allocated buffer containing the packed-pixel
│ │   * image, converted to the chosen pixel format and with the chosen row
│ │   * alignment, or NULL if an error occurred (see #tjGetErrorStr2().)  This
│ │   * buffer should be freed using #tjFree().
│ │   */
│ │  DLLEXPORT unsigned char *tjLoadImage(const char *filename, int *width,
│ │                                       int align, int *height, int *pixelFormat,
│ │                                       int flags);
│ │  
│ │  
│ │  /**
│ │ - * Save an uncompressed image from memory to disk.
│ │ + * Save a packed-pixel image from memory to disk.
│ │   *
│ │ - * @param filename name of a file to which to save the uncompressed image.
│ │ - * The image will be stored in Windows BMP or PBMPLUS (PPM/PGM) format,
│ │ - * depending on the file extension.
│ │ + * @param filename name of a file to which to save the packed-pixel image.  The
│ │ + * image will be stored in Windows BMP or PBMPLUS (PPM/PGM) format, depending
│ │ + * on the file extension.
│ │   *
│ │ - * @param buffer pointer to an image buffer containing RGB, grayscale, or
│ │ - * CMYK pixels to be saved
│ │ + * @param buffer pointer to a buffer containing a packed-pixel RGB, grayscale,
│ │ + * or CMYK image to be saved
│ │   *
│ │ - * @param width width (in pixels) of the uncompressed image
│ │ + * @param width width (in pixels) of the packed-pixel image
│ │   *
│ │ - * @param pitch bytes per line in the image buffer.  Setting this parameter to
│ │ - * 0 is the equivalent of setting it to
│ │ + * @param pitch bytes per row in the packed-pixel image.  Setting this
│ │ + * parameter to 0 is the equivalent of setting it to
│ │   * <tt>width * #tjPixelSize[pixelFormat]</tt>.
│ │   *
│ │ - * @param height height (in pixels) of the uncompressed image
│ │ + * @param height height (in pixels) of the packed-pixel image
│ │   *
│ │ - * @param pixelFormat pixel format of the image buffer (see @ref TJPF
│ │ + * @param pixelFormat pixel format of the packed-pixel image (see @ref TJPF
│ │   * "Pixel formats".)  If this parameter is set to @ref TJPF_GRAY, then the
│ │ - * image will be stored in PGM or 8-bit (indexed color) BMP format.  Otherwise,
│ │ - * the image will be stored in PPM or 24-bit BMP format.  If this parameter
│ │ - * is set to @ref TJPF_CMYK, then the CMYK pixels will be converted to RGB
│ │ - * using a quick & dirty algorithm that is suitable only for testing (proper
│ │ - * conversion between CMYK and other formats requires a color management
│ │ - * system.)
│ │ + * image will be stored in PGM or 8-bit-per-pixel (indexed color) BMP format.
│ │ + * Otherwise, the image will be stored in PPM or 24-bit-per-pixel BMP format.
│ │ + * If this parameter is set to @ref TJPF_CMYK, then the CMYK pixels will be
│ │ + * converted to RGB using a quick & dirty algorithm that is suitable only for
│ │ + * testing purposes.  (Proper conversion between CMYK and other formats
│ │ + * requires a color management system.)
│ │   *
│ │   * @param flags the bitwise OR of one or more of the @ref TJFLAG_BOTTOMUP
│ │   * "flags".
│ │   *
│ │   * @return 0 if successful, or -1 if an error occurred (see #tjGetErrorStr2().)
│ │   */
│ │  DLLEXPORT int tjSaveImage(const char *filename, unsigned char *buffer,
│ │                            int width, int pitch, int height, int pixelFormat,
│ │                            int flags);
│ │  
│ │  
│ │  /**
│ │ - * Free an image buffer previously allocated by TurboJPEG.  You should always
│ │ - * use this function to free JPEG destination buffer(s) that were automatically
│ │ + * Free a byte buffer previously allocated by TurboJPEG.  You should always use
│ │ + * this function to free JPEG destination buffer(s) that were automatically
│ │   * (re)allocated by the compression and transform functions or that were
│ │   * manually allocated using #tjAlloc().
│ │   *
│ │   * @param buffer address of the buffer to free.  If the address is NULL, then
│ │   * this function has no effect.
│ │   *
│ │   * @sa tjAlloc()
│ │ @@ -1688,22 +1699,18 @@
│ │   *
│ │   * @return a code indicating the severity of the last error.  See
│ │   * @ref TJERR "Error codes".
│ │   */
│ │  DLLEXPORT int tjGetErrorCode(tjhandle handle);
│ │  
│ │  
│ │ -/* Deprecated functions and macros */
│ │ -#define TJFLAG_FORCEMMX  8
│ │ -#define TJFLAG_FORCESSE  16
│ │ -#define TJFLAG_FORCESSE2  32
│ │ -#define TJFLAG_FORCESSE3  128
│ │ +/* Backward compatibility functions and macros (nothing to see here) */
│ │  
│ │ +/* TurboJPEG 1.0+ */
│ │  
│ │ -/* Backward compatibility functions and macros (nothing to see here) */
│ │  #define NUMSUBOPT  TJ_NUMSAMP
│ │  #define TJ_444  TJSAMP_444
│ │  #define TJ_422  TJSAMP_422
│ │  #define TJ_420  TJSAMP_420
│ │  #define TJ_411  TJSAMP_420
│ │  #define TJ_GRAYSCALE  TJSAMP_GRAY
│ │  
│ │ @@ -1711,54 +1718,63 @@
│ │  #define TJ_BOTTOMUP  TJFLAG_BOTTOMUP
│ │  #define TJ_FORCEMMX  TJFLAG_FORCEMMX
│ │  #define TJ_FORCESSE  TJFLAG_FORCESSE
│ │  #define TJ_FORCESSE2  TJFLAG_FORCESSE2
│ │  #define TJ_ALPHAFIRST  64
│ │  #define TJ_FORCESSE3  TJFLAG_FORCESSE3
│ │  #define TJ_FASTUPSAMPLE  TJFLAG_FASTUPSAMPLE
│ │ -#define TJ_YUV  512
│ │  
│ │  DLLEXPORT unsigned long TJBUFSIZE(int width, int height);
│ │  
│ │ -DLLEXPORT unsigned long TJBUFSIZEYUV(int width, int height, int jpegSubsamp);
│ │ -
│ │ -DLLEXPORT unsigned long tjBufSizeYUV(int width, int height, int subsamp);
│ │ -
│ │  DLLEXPORT int tjCompress(tjhandle handle, unsigned char *srcBuf, int width,
│ │                           int pitch, int height, int pixelSize,
│ │                           unsigned char *dstBuf, unsigned long *compressedSize,
│ │                           int jpegSubsamp, int jpegQual, int flags);
│ │  
│ │ -DLLEXPORT int tjEncodeYUV(tjhandle handle, unsigned char *srcBuf, int width,
│ │ -                          int pitch, int height, int pixelSize,
│ │ -                          unsigned char *dstBuf, int subsamp, int flags);
│ │ -
│ │ -DLLEXPORT int tjEncodeYUV2(tjhandle handle, unsigned char *srcBuf, int width,
│ │ -                           int pitch, int height, int pixelFormat,
│ │ -                           unsigned char *dstBuf, int subsamp, int flags);
│ │ +DLLEXPORT int tjDecompress(tjhandle handle, unsigned char *jpegBuf,
│ │ +                           unsigned long jpegSize, unsigned char *dstBuf,
│ │ +                           int width, int pitch, int height, int pixelSize,
│ │ +                           int flags);
│ │  
│ │  DLLEXPORT int tjDecompressHeader(tjhandle handle, unsigned char *jpegBuf,
│ │                                   unsigned long jpegSize, int *width,
│ │                                   int *height);
│ │  
│ │ +DLLEXPORT char *tjGetErrorStr(void);
│ │ +
│ │ +/* TurboJPEG 1.1+ */
│ │ +
│ │ +#define TJ_YUV  512
│ │ +
│ │ +DLLEXPORT unsigned long TJBUFSIZEYUV(int width, int height, int jpegSubsamp);
│ │ +
│ │  DLLEXPORT int tjDecompressHeader2(tjhandle handle, unsigned char *jpegBuf,
│ │                                    unsigned long jpegSize, int *width,
│ │                                    int *height, int *jpegSubsamp);
│ │  
│ │ -DLLEXPORT int tjDecompress(tjhandle handle, unsigned char *jpegBuf,
│ │ -                           unsigned long jpegSize, unsigned char *dstBuf,
│ │ -                           int width, int pitch, int height, int pixelSize,
│ │ -                           int flags);
│ │ -
│ │  DLLEXPORT int tjDecompressToYUV(tjhandle handle, unsigned char *jpegBuf,
│ │                                  unsigned long jpegSize, unsigned char *dstBuf,
│ │                                  int flags);
│ │  
│ │ -DLLEXPORT char *tjGetErrorStr(void);
│ │ +DLLEXPORT int tjEncodeYUV(tjhandle handle, unsigned char *srcBuf, int width,
│ │ +                          int pitch, int height, int pixelSize,
│ │ +                          unsigned char *dstBuf, int subsamp, int flags);
│ │ +
│ │ +/* TurboJPEG 1.2+ */
│ │  
│ │ +#define TJFLAG_FORCEMMX  8
│ │ +#define TJFLAG_FORCESSE  16
│ │ +#define TJFLAG_FORCESSE2  32
│ │ +#define TJFLAG_FORCESSE3  128
│ │ +
│ │ +DLLEXPORT unsigned long tjBufSizeYUV(int width, int height, int subsamp);
│ │ +
│ │ +DLLEXPORT int tjEncodeYUV2(tjhandle handle, unsigned char *srcBuf, int width,
│ │ +                           int pitch, int height, int pixelFormat,
│ │ +                           unsigned char *dstBuf, int subsamp, int flags);
│ │  
│ │  /**
│ │   * @}
│ │   */
│ │  
│ │  #ifdef __cplusplus
│ │  }
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/usage.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/usage.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/gcc/projectTargets-release.cmake.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/gcc/projectTargets-release.cmake.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jconfig.h.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jconfig.h.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg.rc.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg.rc.in
│ │┄ Files 0% similar despite different names
│ │ @@ -20,15 +20,15 @@
│ │          BEGIN
│ │              VALUE "CompanyName", "@PKGVENDOR@"
│ │              VALUE "FileDescription", "libjpeg API DLL"
│ │              VALUE "FileVersion", "@SO_MAJOR_VERSION@,@SO_AGE@,@SO_MINOR_VERSION@,0"
│ │              VALUE "ProductVersion", "@VERSION@"
│ │              VALUE "ProductName", "@CMAKE_PROJECT_NAME@"
│ │              VALUE "InternalName", "jpeg@SO_MAJOR_VERSION@"
│ │ -            VALUE "LegalCopyright", "Copyright \xA9 @COPYRIGHT_YEAR@ The libjpeg-turbo Project and many others"
│ │ +            VALUE "LegalCopyright", L"Copyright \xA9 @COPYRIGHT_YEAR@ The libjpeg-turbo Project and many others"
│ │              VALUE "OriginalFilename", "jpeg@SO_MAJOR_VERSION@.dll"
│ │          END
│ │      END
│ │      BLOCK "VarFileInfo"
│ │      BEGIN
│ │          VALUE "Translation", 0x409, 1200
│ │      END
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg62-memsrcdst.def
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg62-memsrcdst.def
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg62.def
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg62.def
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg7-memsrcdst.def
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg7-memsrcdst.def
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg7.def
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg7.def
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/jpeg8.def
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/jpeg8.def
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/projectTargets.cmake.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/projectTargets.cmake.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/turbojpeg.rc.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/turbojpeg.rc.in
│ │┄ Files 0% similar despite different names
│ │ @@ -20,15 +20,15 @@
│ │          BEGIN
│ │              VALUE "CompanyName", "@PKGVENDOR@"
│ │              VALUE "FileDescription", "TurboJPEG API DLL"
│ │              VALUE "FileVersion", "0,@TURBOJPEG_SO_AGE@,0,0"
│ │              VALUE "ProductVersion", "@VERSION@"
│ │              VALUE "ProductName", "@CMAKE_PROJECT_NAME@"
│ │              VALUE "InternalName", "turbojpeg"
│ │ -            VALUE "LegalCopyright", "Copyright \xA9 @COPYRIGHT_YEAR@ The libjpeg-turbo Project and many others"
│ │ +            VALUE "LegalCopyright", L"Copyright \xA9 @COPYRIGHT_YEAR@ The libjpeg-turbo Project and many others"
│ │              VALUE "OriginalFilename", "turbojpeg.dll"
│ │          END
│ │      END
│ │      BLOCK "VarFileInfo"
│ │      BEGIN
│ │          VALUE "Translation", 0x409, 1200
│ │      END
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/win/vc/projectTargets-release.cmake.in
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/win/vc/projectTargets-release.cmake.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wizard.txt
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wizard.txt
│ │┄ Files 6% similar despite different names
│ │ @@ -145,15 +145,23 @@
│ │          Al      Successive approximation low bit position for scan
│ │  If the progression parameters are omitted, the values 0,63,0,0 are used,
│ │  producing a sequential JPEG file.  cjpeg automatically determines whether
│ │  the script represents a progressive or sequential file, by observing whether
│ │  Ss and Se values other than 0 and 63 appear.  (The -progressive switch is
│ │  not needed to specify this; in fact, it is ignored when -scans appears.)
│ │  The scan script must meet the JPEG restrictions on progression sequences.
│ │ -(cjpeg checks that the spec's requirements are obeyed.)
│ │ +(cjpeg checks that the spec's requirements are obeyed.)  More specifically:
│ │ +
│ │ +    * An AC scan cannot include coefficients from more than one component.
│ │ +
│ │ +    * An AC scan for a particular component must be preceded by a DC scan
│ │ +      that includes the same component.
│ │ +
│ │ +    * Only the first AC scan that includes a particular coefficient for a
│ │ +      particular component can include more than one bit from that coefficient.
│ │  
│ │  Scan script files are free format, in that arbitrary whitespace can appear
│ │  between numbers and around punctuation.  Also, comments can be included: a
│ │  comment starts with '#' and extends to the end of the line.  For additional
│ │  legibility, commas or dashes can be placed between values.  (Actually, any
│ │  single punctuation character other than ':' or ';' can be inserted.)  For
│ │  example, the following two scan definitions are equivalent:
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrbmp.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrbmp.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrgif.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrgif.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrjpgcom.1
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrjpgcom.1
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrjpgcom.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrjpgcom.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrppm.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrppm.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/libjpeg-turbo-2.1.4/wrtarga.c
│ ├── +++ simplejpeg-1.6.6/lib/libjpeg-turbo-2.1.5.1/wrtarga.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/ABOUT-NLS
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/ABOUT-NLS
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Artistic.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Artistic.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/BSD.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/BSD.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/COPYING
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/COPYING
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/ConfigureChecks.cmake
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/ConfigureChecks.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/GNU_GPL-2.0
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/GNU_GPL-2.0
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/GNU_LGPL-2.0
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/GNU_LGPL-2.0
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/INSTALL
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/INSTALL
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Makefile.am
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Makefile.am
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Makefile.in
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Makefile.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/Makefile.dj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/Makefile.dj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/Makefile.flat
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/Makefile.flat
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/dj/config.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/dj/config.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/config.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/config.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmacro/genmacro.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genmodule/genmodule.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genperf/genperf.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genperf/run.bat
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genperf/run.bat
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genstring/genstring.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/genversion/genversion.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/libyasm/libyasm.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/modules/modules.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/out_copy_rename.bat
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/out_copy_rename.bat
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/re2c/re2c.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/readme.vc10.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/readme.vc10.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.props
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.props
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.targets
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.targets
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.xml
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/vsyasm.xml
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/yasm.sln
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/yasm.sln
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/yasm.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc10/ytasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc10/ytasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/config.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/config.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/libyasm/libyasm.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/modules/modules.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/out_copy_rename.bat
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/out_copy_rename.bat
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/readme.vc12.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/readme.vc12.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.props
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.props
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.targets
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.targets
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.xml
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/vsyasm.xml
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/yasm.sln
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/yasm.sln
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj.filters
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/yasm.vcxproj.filters
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc12/ytasm.vcxproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc12/ytasm.vcxproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/config.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/config.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/genmacro.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmacro/genmacro.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/genmodule.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genmodule/genmodule.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genperf/genperf.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genperf/genperf.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genperf/run.bat
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genperf/run.bat
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genstring/genstring.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genstring/genstring.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/genversion/genversion.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/genversion/genversion.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/libyasm/libyasm.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/libyasm/libyasm.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/modules/modules.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/modules/modules.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/re2c/re2c.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/re2c/re2c.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/readme.vc9.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/readme.vc9.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/vc98_swap.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/vc98_swap.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/vsyasm.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/vsyasm.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/yasm.rules
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/yasm.rules
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/yasm.sln
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/yasm.sln
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/yasm.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/yasm.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/Mkfiles/vc9/ytasm.vcproj
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/Mkfiles/vc9/ytasm.vcproj
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/YASM-VERSION-GEN.sh
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/YASM-VERSION-GEN.sh
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/aclocal.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/aclocal.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/modules/VersionGen.cmake
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/modules/VersionGen.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/cmake/modules/YasmMacros.cmake
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/cmake/modules/YasmMacros.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/compile
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/compile
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/config.guess
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/config.guess
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/config.rpath
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/config.rpath
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/config.sub
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/config.sub
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/depcomp
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/depcomp
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/install-sh
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/install-sh
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/missing
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/missing
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/mkinstalldirs
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/mkinstalldirs
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config/test-driver
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config/test-driver
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config.h.cmake
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config.h.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/config.h.in
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/config.h.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/configure
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/configure
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/configure.ac
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/configure.ac
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/tasm-options.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/tasm-options.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/tasm-options.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/tasm-options.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/tasm/tasm.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/tasm/tasm.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/vsyasm/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/vsyasm/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/vsyasm/vsyasm.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/vsyasm/vsyasm.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/genstring.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/genstring.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-options.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-options.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-options.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-options.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm-plugin.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/frontends/yasm/yasm.xml
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/frontends/yasm/yasm.xml
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/genstring.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/genstring.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/arch.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/arch.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/assocdat.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/assocdat.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/assocdat.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/assocdat.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-align.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-align.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-data.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-data.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-incbin.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-incbin.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-org.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-org.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bc-reserve.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bc-reserve.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bitvect.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bitvect.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bitvect.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bitvect.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bytecode.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bytecode.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/bytecode.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/bytecode.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/cmake-module.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/cmake-module.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/compat-queue.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/compat-queue.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/coretype.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/coretype.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/dbgfmt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/dbgfmt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/errwarn.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/errwarn.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/errwarn.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/errwarn.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/expr.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/expr.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/expr.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/expr.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/file.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/file.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/file.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/file.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/floatnum.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/floatnum.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/floatnum.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/floatnum.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/genmodule.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/genmodule.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/hamt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/hamt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/hamt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/hamt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/insn.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/insn.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/insn.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/insn.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/intnum.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/intnum.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/intnum.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/intnum.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/inttree.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/inttree.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/inttree.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/inttree.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/linemap.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/linemap.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/linemap.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/linemap.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/listfmt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/listfmt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/md5.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/md5.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/md5.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/md5.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/mergesort.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/mergesort.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/module.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/module.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/module.in
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/module.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/objfmt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/objfmt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/parser.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/parser.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/phash.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/phash.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/phash.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/phash.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/preproc.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/preproc.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/section.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/section.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/section.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/section.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/strcasecmp.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/strcasecmp.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/strsep.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/strsep.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/symrec.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/symrec.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/symrec.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/symrec.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/bitvect_test.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/bitvect_test.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/combpath_test.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/combpath_test.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/floatnum_test.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/floatnum_test.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/incbin.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/incbin.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/jmpsize1-err.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/jmpsize1-err.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/jmpsize1.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/jmpsize1.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/leb128_test.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/leb128_test.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-align1.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-align1.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-gvmat64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/opt-struc.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/opt-struc.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/splitpath_test.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/splitpath_test.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/tests/uncstring_test.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/tests/uncstring_test.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/valparam.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/valparam.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/valparam.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/valparam.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/value.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/value.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/value.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/value.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/xmalloc.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/xmalloc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm/xstrdup.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm/xstrdup.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm-stdint.h.cmake
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm-stdint.h.cmake
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/libyasm.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/libyasm.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/ax_create_stdint_h.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/ax_create_stdint_h.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/codeset.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/codeset.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/cython.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/cython.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/gettext.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/gettext.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/glibc21.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/glibc21.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/iconv.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/iconv.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/intdiv0.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/intdiv0.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/intmax.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/intmax.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/inttypes-pri.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/inttypes-pri.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/inttypes.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/inttypes.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/inttypes_h.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/inttypes_h.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/isc-posix.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/isc-posix.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lcmessage.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lcmessage.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lib-ld.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lib-ld.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lib-link.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lib-link.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/lib-prefix.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/lib-prefix.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/longdouble.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/longdouble.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/longlong.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/longlong.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/nls.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/nls.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/po.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/po.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/printf-posix.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/printf-posix.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/progtest.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/progtest.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/pythonhead.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/pythonhead.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/signed.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/signed.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/size_max.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/size_max.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/stdint_h.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/stdint_h.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/uintmax_t.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/uintmax_t.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/ulonglong.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/ulonglong.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/wchar_t.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/wchar_t.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/m4/wint_t.m4
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/m4/wint_t.m4
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3barch.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3bbc.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3bbc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/lc3bid.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/lc3bid.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/lc3b/tests/lc3b-mp22NC.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/gen_x86_insn.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/gen_x86_insn.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addbyte.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/addrop.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/aes.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/aes.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/aes.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/aes.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd-fma4.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/amd200707.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avx2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/avxcc.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi1.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/bmi2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/clmul.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fma.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fma.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/fma.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/fma.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/align32.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farithr.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farithr.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farjump.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-farjump.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-fpmem.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-fpmem.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-invlpg.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-invlpg.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-loop32.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-loop32.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movdq32.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movdq32.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movsd.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-movsd.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas-pop.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas32-jmpcall.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas32/gas32-jmpcall.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/align64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-cbw.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-cbw.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-fp.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-fp.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-inout.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-inout.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-loop64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-loop64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-moreinsn.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movabs.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movabs.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movdq64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movdq64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movsxs.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-movsxs.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-muldiv.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-prefix.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-retenter.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-retenter.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-shift.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas-shift.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas64-jmpcall.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/gas64-jmpcall.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/riprel.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gas64/riprel.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/gen-fma-test.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/gen-fma-test.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/genopcode.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/imm64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/jmpfar.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/jmpfar.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/larlsl.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/larlsl.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/mem64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movbe.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movbe.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/movdq64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/movdq64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64-err.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/nomem64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/pushnosize.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel1.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/riprel2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ripseg.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/simd-2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/sse4.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssewidth.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/ssse3.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/strict.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/strict.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/vsib.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-all.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/tests/xop-cc.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/tests/xop-cc.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86arch.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86arch.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86arch.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86arch.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86bc.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86bc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86cpu.gperf
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86cpu.gperf
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86expr.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86expr.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86id.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86id.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/x86/x86regtmod.gperf
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/x86/x86regtmod.gperf
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/arch/yasm_arch.xml
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/arch/yasm_arch.xml
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-dbgfmt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-symline.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-symline.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-type.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv-type.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv8.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/codeview/cv8.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-aranges.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-aranges.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-dbgfmt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-info.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-info.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-line.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/dwarf2-line.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf64_pathname.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/gen64/dwarf64_pathname.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32-err.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass32/dwarf32_testhd.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_2loc.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_2loc.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/pass64/dwarf64_leb128.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/dwarf2/tests/passwin64/dwarfwin64_testhd.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/null/null-dbgfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/null/null-dbgfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/stabs-dbgfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/stabs-dbgfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/stabs/tests/stabs-elf.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/dbgfmts/yasm_dbgfmts.xml
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/dbgfmts/yasm_dbgfmts.xml
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/listfmts/nasm/nasm-listfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/listfmts/nasm/nasm-listfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/bin-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/bin-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-farabs.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bin-farabs.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/bintest.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/bintest.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin-align.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin_multi_test.sh
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/bin_multi_test.sh
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/initbss.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/ldlinux-sects.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect1.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect2.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect3.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect4.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/multisect5.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect1.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.map
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/bin/tests/multisect/nomultisect2.map
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/coff-objfmt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftest.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftimes.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/cofftimes.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/tests/x86id.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/win64-except.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/win64-except.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/win64-gas.mac
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/win64-gas.mac
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/coff/win64-nasm.mac
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/coff/win64-nasm.mac
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/dbg/dbg-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/dbg/dbg-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-machine.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-machine.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-amd64.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-amd64.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x32.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x32.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x86.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf-x86-x86.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/elf.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/elf.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf-rip.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elf-rip.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/elfso64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/gotpcrel.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/gotpcrel.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/multiplefixup.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/amd64/multiplefixup.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/curpos.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-overdef.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-overdef.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elf-x86id.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfabssect.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfabssect.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfcond.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfcond.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfequabs.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfequabs.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobal.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobal.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfglobext2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfmanysym.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc-ext.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc-ext.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfreloc.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfsectalign.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfsectalign.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfso.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftest.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftimes.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftimes.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftypesize.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elftypesize.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/elfvisibility.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_got.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_got.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_ssym.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas32/elf_gas32_ssym.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/crosssect.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/crosssect.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_curpos.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_curpos.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_reloc.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_reloc.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_ssym.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gas64/elf_gas64_ssym.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/crosssect.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/crosssect.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_curpos.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_curpos.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_reloc.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_reloc.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_ssym.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/gasx32/elf_gasx32_ssym.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-forceident.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-forceident.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-sectname.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/nasm-sectname.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf-rip.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elf-rip.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/elfsox32.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/gotpcrel.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/gotpcrel.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/multiplefixup.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/elf/tests/x32/multiplefixup.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/macho-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/macho-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas32/gas-macho32.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64-pic.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/gas64/gas-macho64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho-reloc.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho-reloc.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pext.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pext.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-pic.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-sect.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/macho32-size.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm32/machotest.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho-reloc64-err.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/macho-reloc64-err.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/machotest64.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/macho/tests/nasm64/nasm-macho64-pic.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/rdf-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/rdf-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfext.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdfseg.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest1.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdftest2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtlib.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/rdtmain.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/rdf/tests/testlib.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/rdf/tests/testlib.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/export.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/export.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32at.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32def.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32def.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/gas/win32secrel32.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-curpos.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-curpos.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-overdef.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-overdef.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-safeseh.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-segof.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32-segof.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win32/tests/win32test.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64-gas-sce.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/gas/win64-gas-sce.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1-err.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1-err.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce1.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.masm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce3.masm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.masm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/sce4.masm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-abs.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-abs.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-curpos.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-curpos.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.masm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref.masm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-dataref2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-function.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-function.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-imagebase.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/win64/tests/win64-imagebase.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdflong.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfother.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfother.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfprotect.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect-err.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect-err.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfsect.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfvirtual.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/tests/xdfvirtual.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/xdf/xdf-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/xdf/xdf-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/objfmts/yasm_objfmts.xml
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/objfmts/yasm_objfmts.xml
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parse-intel.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parse-intel.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parse.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parse.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-parser.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/gas-token.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/gas-token.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-llabel.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-set.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/gas-set.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptlong.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/bin/reptlong.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/dataref-imm.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/dataref-imm.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis2.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/datavis2.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/execsect.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/execsect.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-fill.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-fill.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-float.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-float.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-instlabel.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-instlabel.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-push.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-push.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-segprefix.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-segprefix.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-semi.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gas-semi.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/gassectalign.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/gassectalign.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/jmpcall.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/leb128.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/leb128.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/localcomm.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/localcomm.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/reggroup.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/strzero.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/strzero.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/gas/tests/varinsn.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/gas/tests/varinsn.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parse.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parse.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser-struct.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser-struct.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-parser.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-std.mac
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-std.mac
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/nasm-token.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/nasm-token.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/nasm/tests/syntax-err.errwarn
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/nasm/tests/syntax-err.errwarn
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/exe.hex
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/tasm/tests/exe/exe.hex
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/parsers/yasm_parsers.xml
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/parsers/yasm_parsers.xml
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/cpp/cpp-preproc.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/cpp/cpp-preproc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/gas-eval.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/gas/gas-preproc.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/gas/gas-preproc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/genversion.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/genversion.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-eval.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-eval.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-pp.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-preproc.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm-preproc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasm.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasm.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/nasmlib.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/nasm/tests/longline.asm
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/nasm/tests/longline.asm
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/modules/preprocs/raw/raw-preproc.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/modules/preprocs/raw/raw-preproc.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/out_test.sh
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/out_test.sh
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/README
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/README
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/dbg/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/dbg/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/dbg/dbg-objfmt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/dbg/dbg-objfmt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/plugins/x86/CMakeLists.txt
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/plugins/x86/CMakeLists.txt
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/Makefile.in.in
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/Makefile.in.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/Makevars
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/Makevars
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/POTFILES.in
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/POTFILES.in
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/Rules-quot
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/Rules-quot
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/en@boldquot.header
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/en@boldquot.header
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/en@quot.header
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/en@quot.header
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/insert-header.sin
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/insert-header.sin
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/po/yasm.pot
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/po/yasm.pot
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/splint.sh
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/splint.sh
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/test_hd.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/test_hd.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genmacro/genmacro.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genmacro/genmacro.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/genperf.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/genperf.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/perfect.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/perfect.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/perfect.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/perfect.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/genperf/standard.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/genperf/standard.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/bytecode.pxi
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/bytecode.pxi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/errwarn.pxi
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/errwarn.pxi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/expr.pxi
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/expr.pxi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/floatnum.pxi
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/floatnum.pxi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/intnum.pxi
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/intnum.pxi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/cparse.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/cparse.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/genpyx.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/genpyx.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/ir.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/ir.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/lexer.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/lexer.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/node.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/node.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/parse_core.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/parse_core.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/work_unit.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/work_unit.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/pyxelator/wrap_yasm.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/pyxelator/wrap_yasm.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/setup.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/setup.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/symrec.pxi
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/symrec.pxi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/__init__.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/__init__.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/python_test.sh
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/python_test.sh
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/test_expr.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/test_expr.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/test_intnum.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/test_intnum.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/tests/test_symrec.py
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/tests/test_symrec.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/value.pxi
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/value.pxi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/python-yasm/yasm.pyx
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/python-yasm/yasm.pyx
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/Makefile.inc
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/Makefile.inc
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/README
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/README
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/actions.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/actions.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/bootstrap/scanner.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/bootstrap/scanner.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/code.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/code.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/dfa.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/dfa.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/dfa.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/dfa.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/doc/loplas.ps.gz
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/doc/loplas.ps.gz
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/doc/sample.bib
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/doc/sample.bib
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/c.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/c.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/cmmap.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/cmmap.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/cnokw.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/cnokw.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/cunroll.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/cunroll.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/modula.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/modula.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/repeater.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/repeater.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/rexx/rexx.l
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/rexx/rexx.l
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/examples/rexx/scanio.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/examples/rexx/scanio.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/globals.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/globals.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/ins.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/ins.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/main.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/main.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/mbo_getopt.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/mbo_getopt.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/mbo_getopt.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/mbo_getopt.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/parse.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/parse.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/parser.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/parser.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/re.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/re.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/re2c.1
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/re2c.1
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/scanner.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/scanner.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/scanner.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/scanner.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/scanner.re
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/scanner.re
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/substr.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/substr.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/substr.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/substr.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/tools/re2c/translate.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/tools/re2c/translate.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/util.h
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/util.h
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/x86insn_gas.gperf
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/x86insn_gas.gperf
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/x86insn_nasm.gperf
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/x86insn_nasm.gperf
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/x86insns.c
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/x86insns.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/yasm.1
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/yasm.1
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_arch.7
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_arch.7
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_dbgfmts.7
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_dbgfmts.7
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_objfmts.7
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_objfmts.7
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/lib/yasm-1.3.0/yasm_parsers.7
│ ├── +++ simplejpeg-1.6.6/lib/yasm-1.3.0/yasm_parsers.7
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/setup.py
│ ├── +++ simplejpeg-1.6.6/setup.py
│ │┄ Files 3% similar despite different names
│ │ @@ -4,37 +4,46 @@
│ │  import platform
│ │  import sys
│ │  import urllib.request
│ │  import tarfile
│ │  import sysconfig
│ │  import subprocess
│ │  
│ │ +from cmake import CMAKE_BIN_DIR
│ │  from setuptools import setup
│ │  from setuptools import find_packages
│ │  from setuptools import Extension
│ │  from setuptools.command.build_ext import build_ext
│ │  # don't require Cython for building
│ │  try:
│ │      from Cython.Build import cythonize
│ │      HAVE_CYTHON = True
│ │  except ImportError:
│ │      def cythonize(*_, **__):
│ │          pass
│ │      HAVE_CYTHON = False
│ │ -import numpy as np
│ │ +
│ │ +
│ │ +class NumpyImport:
│ │ +    def __repr__(self):
│ │ +        import numpy as np
│ │ +
│ │ +        return np.get_include()
│ │ +
│ │ +    __fspath__ = __repr__
│ │  
│ │  
│ │  PACKAGE_DIR = pt.abspath(pt.dirname(__file__))
│ │  PLATFORM = platform.system().lower()
│ │  IS64BIT = sys.maxsize > 2**32
│ │  ARCH = 'x64' if IS64BIT else 'x86'
│ │  YASM_VERSION = '1.3.0'
│ │  YASM_SOURCE = 'yasm-%s.tar.gz' % YASM_VERSION
│ │  YASM_URL = 'https://github.com/yasm/yasm/releases/download/v%s/' % YASM_VERSION + YASM_SOURCE
│ │ -JPEG_VERSION = '2.1.4'
│ │ +JPEG_VERSION = '2.1.5.1'
│ │  JPEG_SOURCE = 'libjpeg-turbo-%s.tar.gz' % JPEG_VERSION
│ │  JPEG_URL = 'https://github.com/libjpeg-turbo/libjpeg-turbo/archive/%s.tar.gz' % JPEG_VERSION
│ │  
│ │  
│ │  def untar_url(url, filename):
│ │      path = filename.rstrip('.tar.gz')
│ │      if not pt.exists(path):
│ │ @@ -135,24 +144,25 @@
│ │          cur_dir = pt.abspath(os.curdir)
│ │          build_dir = pt.join(path, 'build')
│ │          if not pt.exists(build_dir):
│ │              os.makedirs(build_dir)
│ │          os.chdir(build_dir)
│ │          config = 'Debug' if self.debug else 'Release'
│ │          env = dict(os.environ, **(env or {}))
│ │ +        cmake = os.path.join(CMAKE_BIN_DIR, 'cmake')
│ │          subprocess.check_call([
│ │ -            'cmake',
│ │ +            cmake,
│ │              '-G' + make_type(), '-Wno-dev',
│ │              '-DCMAKE_BUILD_TYPE=' + config,
│ │              *options,
│ │              pt.join(path)
│ │          ], stdout=sys.stdout, stderr=sys.stderr, env=env)
│ │          if not self.dry_run:
│ │              subprocess.check_call(
│ │ -                ['cmake', '--build', '.', '--config', config],
│ │ +                [cmake, '--build', '.', '--config', config],
│ │                  stdout=sys.stdout, stderr=sys.stderr, env=env,
│ │              )
│ │          os.chdir(cur_dir)
│ │  
│ │  
│ │  def remove_c_comments(*file_paths):
│ │      """
│ │ @@ -195,15 +205,15 @@
│ │          return 'turbojpeg-static.lib'
│ │      else:
│ │          raise RuntimeError('Platform not supported: %s, %s' % (PLATFORM, ARCH))
│ │  
│ │  
│ │  def make_jpeg_module():
│ │      include_dirs = [
│ │ -        np.get_include(),
│ │ +        NumpyImport(),
│ │          pt.join(JPEG_DIR),
│ │          pt.join(PACKAGE_DIR, 'simplejpeg'),
│ │      ]
│ │      static_libs = [pt.join(_libdir(), _staticlib())]
│ │      cython_files = [pt.join('simplejpeg', '_jpeg.pyx')]
│ │      for cython_file in cython_files:
│ │          if pt.exists(cython_file):
│ │   --- simplejpeg-1.6.5/simplejpeg/__init__.py
│ ├── +++ simplejpeg-1.6.6/simplejpeg/__init__.py
│ │┄ Files 18% similar despite different names
│ │ @@ -1,13 +1,13 @@
│ │  from ._jpeg import encode_jpeg
│ │  from ._jpeg import decode_jpeg
│ │  from ._jpeg import decode_jpeg_header
│ │  
│ │  
│ │ -__version__ = '1.6.5'
│ │ +__version__ = '1.6.6'
│ │  __version_info__ = __version__.split('.')
│ │  
│ │  
│ │  def is_jpeg(data):
│ │      """
│ │      Check whether a bytes object (or similar) contains JPEG (JFIF) data.
│ │      Returns False for truncated files.
│ │   --- simplejpeg-1.6.5/simplejpeg/_color.c
│ ├── +++ simplejpeg-1.6.6/simplejpeg/_color.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/simplejpeg/_jpeg.c
│ ├── +++ simplejpeg-1.6.6/simplejpeg/_jpeg.c
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/simplejpeg/_jpeg.pyi
│ ├── +++ simplejpeg-1.6.6/simplejpeg/_jpeg.pyi
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/simplejpeg/_jpeg.pyx
│ ├── +++ simplejpeg-1.6.6/simplejpeg/_jpeg.pyx
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/simplejpeg.egg-info/PKG-INFO
│ ├── +++ simplejpeg-1.6.6/simplejpeg.egg-info/PKG-INFO
│ │┄ Files 0% similar despite different names
│ │ @@ -1,10 +1,10 @@
│ │  Metadata-Version: 2.1
│ │  Name: simplejpeg
│ │ -Version: 1.6.5
│ │ +Version: 1.6.6
│ │  Summary: A simple package for fast JPEG encoding and decoding.
│ │  Author: Joachim Folz
│ │  Author-email: joachim.folz@dfki.de
│ │  License: MIT
│ │  Project-URL: Documentation, https://gitlab.com/jfolz/simplejpeg/blob/master/README.rst
│ │  Project-URL: Source, https://gitlab.com/jfolz/simplejpeg
│ │  Project-URL: Tracker, https://gitlab.com/jfolz/simplejpeg/issues
│ │   --- simplejpeg-1.6.5/simplejpeg.egg-info/SOURCES.txt
│ ├── +++ simplejpeg-1.6.6/simplejpeg.egg-info/SOURCES.txt
│ │┄ Files 5% similar despite different names
│ │ @@ -2,528 +2,528 @@
│ │  MANIFEST.in
│ │  README.rst
│ │  build_requirements.txt
│ │  pyproject.toml
│ │  requirements.txt
│ │  setup.py
│ │  test_requirements.txt
│ │ -lib/libjpeg-turbo-2.1.4/BUILDING.md
│ │ -lib/libjpeg-turbo-2.1.4/CMakeLists.txt
│ │ -lib/libjpeg-turbo-2.1.4/ChangeLog.md
│ │ -lib/libjpeg-turbo-2.1.4/LICENSE.md
│ │ -lib/libjpeg-turbo-2.1.4/README.ijg
│ │ -lib/libjpeg-turbo-2.1.4/README.md
│ │ -lib/libjpeg-turbo-2.1.4/cderror.h
│ │ -lib/libjpeg-turbo-2.1.4/cdjpeg.c
│ │ -lib/libjpeg-turbo-2.1.4/cdjpeg.h
│ │ -lib/libjpeg-turbo-2.1.4/change.log
│ │ -lib/libjpeg-turbo-2.1.4/cjpeg.1
│ │ -lib/libjpeg-turbo-2.1.4/cjpeg.c
│ │ -lib/libjpeg-turbo-2.1.4/cmyk.h
│ │ -lib/libjpeg-turbo-2.1.4/coderules.txt
│ │ -lib/libjpeg-turbo-2.1.4/croptest.in
│ │ -lib/libjpeg-turbo-2.1.4/djpeg.1
│ │ -lib/libjpeg-turbo-2.1.4/djpeg.c
│ │ -lib/libjpeg-turbo-2.1.4/doxygen-extra.css
│ │ -lib/libjpeg-turbo-2.1.4/doxygen.config
│ │ -lib/libjpeg-turbo-2.1.4/example.txt
│ │ -lib/libjpeg-turbo-2.1.4/jaricom.c
│ │ -lib/libjpeg-turbo-2.1.4/jcapimin.c
│ │ -lib/libjpeg-turbo-2.1.4/jcapistd.c
│ │ -lib/libjpeg-turbo-2.1.4/jcarith.c
│ │ -lib/libjpeg-turbo-2.1.4/jccoefct.c
│ │ -lib/libjpeg-turbo-2.1.4/jccolext.c
│ │ -lib/libjpeg-turbo-2.1.4/jccolor.c
│ │ -lib/libjpeg-turbo-2.1.4/jcdctmgr.c
│ │ -lib/libjpeg-turbo-2.1.4/jchuff.c
│ │ -lib/libjpeg-turbo-2.1.4/jchuff.h
│ │ -lib/libjpeg-turbo-2.1.4/jcicc.c
│ │ -lib/libjpeg-turbo-2.1.4/jcinit.c
│ │ -lib/libjpeg-turbo-2.1.4/jcmainct.c
│ │ -lib/libjpeg-turbo-2.1.4/jcmarker.c
│ │ -lib/libjpeg-turbo-2.1.4/jcmaster.c
│ │ -lib/libjpeg-turbo-2.1.4/jcomapi.c
│ │ -lib/libjpeg-turbo-2.1.4/jconfig.h.in
│ │ -lib/libjpeg-turbo-2.1.4/jconfig.txt
│ │ -lib/libjpeg-turbo-2.1.4/jconfigint.h.in
│ │ -lib/libjpeg-turbo-2.1.4/jcparam.c
│ │ -lib/libjpeg-turbo-2.1.4/jcphuff.c
│ │ -lib/libjpeg-turbo-2.1.4/jcprepct.c
│ │ -lib/libjpeg-turbo-2.1.4/jcsample.c
│ │ -lib/libjpeg-turbo-2.1.4/jcstest.c
│ │ -lib/libjpeg-turbo-2.1.4/jctrans.c
│ │ -lib/libjpeg-turbo-2.1.4/jdapimin.c
│ │ -lib/libjpeg-turbo-2.1.4/jdapistd.c
│ │ -lib/libjpeg-turbo-2.1.4/jdarith.c
│ │ -lib/libjpeg-turbo-2.1.4/jdatadst-tj.c
│ │ -lib/libjpeg-turbo-2.1.4/jdatadst.c
│ │ -lib/libjpeg-turbo-2.1.4/jdatasrc-tj.c
│ │ -lib/libjpeg-turbo-2.1.4/jdatasrc.c
│ │ -lib/libjpeg-turbo-2.1.4/jdcoefct.c
│ │ -lib/libjpeg-turbo-2.1.4/jdcoefct.h
│ │ -lib/libjpeg-turbo-2.1.4/jdcol565.c
│ │ -lib/libjpeg-turbo-2.1.4/jdcolext.c
│ │ -lib/libjpeg-turbo-2.1.4/jdcolor.c
│ │ -lib/libjpeg-turbo-2.1.4/jdct.h
│ │ -lib/libjpeg-turbo-2.1.4/jddctmgr.c
│ │ -lib/libjpeg-turbo-2.1.4/jdhuff.c
│ │ -lib/libjpeg-turbo-2.1.4/jdhuff.h
│ │ -lib/libjpeg-turbo-2.1.4/jdicc.c
│ │ -lib/libjpeg-turbo-2.1.4/jdinput.c
│ │ -lib/libjpeg-turbo-2.1.4/jdmainct.c
│ │ -lib/libjpeg-turbo-2.1.4/jdmainct.h
│ │ -lib/libjpeg-turbo-2.1.4/jdmarker.c
│ │ -lib/libjpeg-turbo-2.1.4/jdmaster.c
│ │ -lib/libjpeg-turbo-2.1.4/jdmaster.h
│ │ -lib/libjpeg-turbo-2.1.4/jdmerge.c
│ │ -lib/libjpeg-turbo-2.1.4/jdmerge.h
│ │ -lib/libjpeg-turbo-2.1.4/jdmrg565.c
│ │ -lib/libjpeg-turbo-2.1.4/jdmrgext.c
│ │ -lib/libjpeg-turbo-2.1.4/jdphuff.c
│ │ -lib/libjpeg-turbo-2.1.4/jdpostct.c
│ │ -lib/libjpeg-turbo-2.1.4/jdsample.c
│ │ -lib/libjpeg-turbo-2.1.4/jdsample.h
│ │ -lib/libjpeg-turbo-2.1.4/jdtrans.c
│ │ -lib/libjpeg-turbo-2.1.4/jerror.c
│ │ -lib/libjpeg-turbo-2.1.4/jerror.h
│ │ -lib/libjpeg-turbo-2.1.4/jfdctflt.c
│ │ -lib/libjpeg-turbo-2.1.4/jfdctfst.c
│ │ -lib/libjpeg-turbo-2.1.4/jfdctint.c
│ │ -lib/libjpeg-turbo-2.1.4/jidctflt.c
│ │ -lib/libjpeg-turbo-2.1.4/jidctfst.c
│ │ -lib/libjpeg-turbo-2.1.4/jidctint.c
│ │ -lib/libjpeg-turbo-2.1.4/jidctred.c
│ │ -lib/libjpeg-turbo-2.1.4/jinclude.h
│ │ -lib/libjpeg-turbo-2.1.4/jmemmgr.c
│ │ -lib/libjpeg-turbo-2.1.4/jmemnobs.c
│ │ -lib/libjpeg-turbo-2.1.4/jmemsys.h
│ │ -lib/libjpeg-turbo-2.1.4/jmorecfg.h
│ │ -lib/libjpeg-turbo-2.1.4/jpeg_nbits_table.h
│ │ -lib/libjpeg-turbo-2.1.4/jpegcomp.h
│ │ -lib/libjpeg-turbo-2.1.4/jpegint.h
│ │ -lib/libjpeg-turbo-2.1.4/jpeglib.h
│ │ -lib/libjpeg-turbo-2.1.4/jpegtran.1
│ │ -lib/libjpeg-turbo-2.1.4/jpegtran.c
│ │ -lib/libjpeg-turbo-2.1.4/jquant1.c
│ │ -lib/libjpeg-turbo-2.1.4/jquant2.c
│ │ -lib/libjpeg-turbo-2.1.4/jsimd.h
│ │ -lib/libjpeg-turbo-2.1.4/jsimd_none.c
│ │ -lib/libjpeg-turbo-2.1.4/jsimddct.h
│ │ -lib/libjpeg-turbo-2.1.4/jstdhuff.c
│ │ -lib/libjpeg-turbo-2.1.4/jutils.c
│ │ -lib/libjpeg-turbo-2.1.4/jversion.h.in
│ │ -lib/libjpeg-turbo-2.1.4/libjpeg.map.in
│ │ -lib/libjpeg-turbo-2.1.4/libjpeg.txt
│ │ -lib/libjpeg-turbo-2.1.4/rdbmp.c
│ │ -lib/libjpeg-turbo-2.1.4/rdcolmap.c
│ │ -lib/libjpeg-turbo-2.1.4/rdgif.c
│ │ -lib/libjpeg-turbo-2.1.4/rdjpgcom.1
│ │ -lib/libjpeg-turbo-2.1.4/rdjpgcom.c
│ │ -lib/libjpeg-turbo-2.1.4/rdppm.c
│ │ -lib/libjpeg-turbo-2.1.4/rdswitch.c
│ │ -lib/libjpeg-turbo-2.1.4/rdtarga.c
│ │ -lib/libjpeg-turbo-2.1.4/strtest.c
│ │ -lib/libjpeg-turbo-2.1.4/structure.txt
│ │ -lib/libjpeg-turbo-2.1.4/tjbench.c
│ │ -lib/libjpeg-turbo-2.1.4/tjbenchtest.in
│ │ -lib/libjpeg-turbo-2.1.4/tjbenchtest.java.in
│ │ -lib/libjpeg-turbo-2.1.4/tjexample.c
│ │ -lib/libjpeg-turbo-2.1.4/tjexampletest.in
│ │ -lib/libjpeg-turbo-2.1.4/tjexampletest.java.in
│ │ -lib/libjpeg-turbo-2.1.4/tjunittest.c
│ │ -lib/libjpeg-turbo-2.1.4/tjutil.c
│ │ -lib/libjpeg-turbo-2.1.4/tjutil.h
│ │ -lib/libjpeg-turbo-2.1.4/transupp.c
│ │ -lib/libjpeg-turbo-2.1.4/transupp.h
│ │ -lib/libjpeg-turbo-2.1.4/turbojpeg-jni.c
│ │ -lib/libjpeg-turbo-2.1.4/turbojpeg-mapfile
│ │ -lib/libjpeg-turbo-2.1.4/turbojpeg-mapfile.jni
│ │ -lib/libjpeg-turbo-2.1.4/turbojpeg.c
│ │ -lib/libjpeg-turbo-2.1.4/turbojpeg.h
│ │ -lib/libjpeg-turbo-2.1.4/usage.txt
│ │ -lib/libjpeg-turbo-2.1.4/wizard.txt
│ │ -lib/libjpeg-turbo-2.1.4/wrbmp.c
│ │ -lib/libjpeg-turbo-2.1.4/wrgif.c
│ │ -lib/libjpeg-turbo-2.1.4/wrjpgcom.1
│ │ -lib/libjpeg-turbo-2.1.4/wrjpgcom.c
│ │ -lib/libjpeg-turbo-2.1.4/wrppm.c
│ │ -lib/libjpeg-turbo-2.1.4/wrtarga.c
│ │ -lib/libjpeg-turbo-2.1.4/cmakescripts/BuildPackages.cmake
│ │ -lib/libjpeg-turbo-2.1.4/cmakescripts/GNUInstallDirs.cmake
│ │ -lib/libjpeg-turbo-2.1.4/cmakescripts/PackageInfo.cmake
│ │ -lib/libjpeg-turbo-2.1.4/cmakescripts/cmake_uninstall.cmake.in
│ │ -lib/libjpeg-turbo-2.1.4/cmakescripts/testclean.cmake
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/annotated.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/bc_s.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/bdwn.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/classes.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/closed.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/doc.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/doxygen-extra.css
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/doxygen.css
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/doxygen.svg
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/dynsections.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/folderclosed.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/folderopen.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/functions.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/functions_vars.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/group___turbo_j_p_e_g.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/index.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/jquery.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/menu.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/menudata.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/modules.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/nav_f.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/nav_g.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/nav_h.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/open.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/splitbar.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/structtjregion.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/structtjscalingfactor.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/structtjtransform.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/sync_off.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/sync_on.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/tab_a.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/tab_b.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/tab_h.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/tab_s.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/tabs.css
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_1.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_1.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_2.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_2.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_3.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_3.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_4.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_4.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_5.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_5.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_6.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_6.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_7.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_7.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_8.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_8.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_9.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/all_9.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/classes_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/classes_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/close.svg
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/enums_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/enums_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/enumvalues_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/enumvalues_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/functions_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/functions_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/groups_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/groups_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/mag_sel.svg
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/nomatches.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/search.css
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/search.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/search_l.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/search_m.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/search_r.png
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/searchdata.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/typedefs_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/typedefs_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_0.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_0.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_1.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_1.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_2.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_2.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_3.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_3.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_4.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_4.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_5.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_5.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_6.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_6.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_7.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_7.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_8.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_8.js
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_9.html
│ │ -lib/libjpeg-turbo-2.1.4/doc/html/search/variables_9.js
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/CMakeLists.txt
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/build.sh
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/cjpeg.cc
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/compress.cc
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/compress_yuv.cc
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/decompress.cc
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/decompress_yuv.cc
│ │ -lib/libjpeg-turbo-2.1.4/fuzz/transform.cc
│ │ -lib/libjpeg-turbo-2.1.4/java/CMakeLists.txt
│ │ -lib/libjpeg-turbo-2.1.4/java/MANIFEST.MF
│ │ -lib/libjpeg-turbo-2.1.4/java/README
│ │ -lib/libjpeg-turbo-2.1.4/java/TJBench.java
│ │ -lib/libjpeg-turbo-2.1.4/java/TJExample.java
│ │ -lib/libjpeg-turbo-2.1.4/java/TJUnitTest.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJ.h
│ │ -lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJCompressor.h
│ │ -lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJDecompressor.h
│ │ -lib/libjpeg-turbo-2.1.4/java/org_libjpegturbo_turbojpeg_TJTransformer.h
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/allclasses-frame.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/allclasses-noframe.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/constant-values.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/deprecated-list.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/help-doc.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/index-all.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/index.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/overview-tree.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/package-list
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/script.js
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/serialized-form.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/stylesheet.css
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJ.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJCustomFilter.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJException.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJScalingFactor.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJTransform.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/YUVImage.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-frame.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-summary.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/org/libjpegturbo/turbojpeg/package-tree.html
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/resources/background.gif
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/resources/tab.gif
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/resources/titlebar.gif
│ │ -lib/libjpeg-turbo-2.1.4/java/doc/resources/titlebar_end.gif
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJ.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJCompressor.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJCustomFilter.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJDecompressor.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJException.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJLoader-unix.java.in
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJLoader-win.java.in
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJScalingFactor.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJTransform.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/TJTransformer.java
│ │ -lib/libjpeg-turbo-2.1.4/java/org/libjpegturbo/turbojpeg/YUVImage.java
│ │ -lib/libjpeg-turbo-2.1.4/md5/CMakeLists.txt
│ │ -lib/libjpeg-turbo-2.1.4/md5/md5.c
│ │ -lib/libjpeg-turbo-2.1.4/md5/md5.h
│ │ -lib/libjpeg-turbo-2.1.4/md5/md5cmp.c
│ │ -lib/libjpeg-turbo-2.1.4/md5/md5hl.c
│ │ -lib/libjpeg-turbo-2.1.4/release/Config.cmake.in
│ │ -lib/libjpeg-turbo-2.1.4/release/Distribution.xml.in
│ │ -lib/libjpeg-turbo-2.1.4/release/License.rtf
│ │ -lib/libjpeg-turbo-2.1.4/release/ReadMe.txt
│ │ -lib/libjpeg-turbo-2.1.4/release/Welcome.rtf.in
│ │ -lib/libjpeg-turbo-2.1.4/release/deb-control.in
│ │ -lib/libjpeg-turbo-2.1.4/release/installer.nsi.in
│ │ -lib/libjpeg-turbo-2.1.4/release/libjpeg.pc.in
│ │ -lib/libjpeg-turbo-2.1.4/release/libturbojpeg.pc.in
│ │ -lib/libjpeg-turbo-2.1.4/release/makedpkg.in
│ │ -lib/libjpeg-turbo-2.1.4/release/makemacpkg.in
│ │ -lib/libjpeg-turbo-2.1.4/release/makerpm.in
│ │ -lib/libjpeg-turbo-2.1.4/release/makesrpm.in
│ │ -lib/libjpeg-turbo-2.1.4/release/maketarball.in
│ │ -lib/libjpeg-turbo-2.1.4/release/rpm.spec.in
│ │ -lib/libjpeg-turbo-2.1.4/release/uninstall.in
│ │ -lib/libjpeg-turbo-2.1.4/sharedlib/CMakeLists.txt
│ │ -lib/libjpeg-turbo-2.1.4/simd/CMakeLists.txt
│ │ -lib/libjpeg-turbo-2.1.4/simd/jsimd.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/align.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jccolor-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jcgray-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jcgryext-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jchuff.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jcphuff-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jcsample-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jdcolext-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jdcolor-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jdmerge-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jdmrgext-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jdsample-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jfdctfst-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jfdctint-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jidctfst-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jidctint-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jidctred-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/jquanti-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/neon-compat.h.in
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jccolext-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jchuff-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jsimd.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch32/jsimd_neon.S
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jccolext-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jchuff-neon.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jsimd.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/arm/aarch64/jsimd_neon.S
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jccolext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jccolor-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcgray-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcgryext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jchuff-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcphuff-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jcsample-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdcolext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdcolor-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdmerge-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdmrgext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jdsample-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jfdctflt-3dn.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jfdctflt-sse.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jfdctfst-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jfdctfst-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jfdctint-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-3dn.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-sse.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctflt-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctfst-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctfst-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctint-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctred-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jidctred-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jquant-3dn.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jquant-mmx.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jquant-sse.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jquantf-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jquanti-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jquanti-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jsimd.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/i386/jsimdcpu.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips/jsimd.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips/jsimd_dspr2.S
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips/jsimd_dspr2_asm.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jccolext-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jccolor-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jcgray-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jcgryext-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jcsample-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jcsample.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jdcolext-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jdcolor-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jdmerge-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jdmrgext-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jdsample-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jfdctfst-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jfdctint-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jidctfst-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jidctint-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jquanti-mmi.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jsimd.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/jsimd_mmi.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/mips64/loongson-mmintrin.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/nasm/jcolsamp.inc
│ │ -lib/libjpeg-turbo-2.1.4/simd/nasm/jdct.inc
│ │ -lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdcfg.inc
│ │ -lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdcfg.inc.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/nasm/jsimdext.inc
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jccolext-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jccolor-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jcgray-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jcgryext-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jcsample-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jcsample.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jdcolext-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jdcolor-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jdmerge-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jdmrgext-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jdsample-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jfdctfst-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jfdctint-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jidctfst-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jidctint-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jquanti-altivec.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jsimd.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/powerpc/jsimd_altivec.h
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolor-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jccolor-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgray-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgray-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgryext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jcgryext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jchuff-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jcphuff-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jcsample-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jcsample-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolor-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdcolor-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmerge-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmerge-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmrgext-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdmrgext-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdsample-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jdsample-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctflt-sse.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctfst-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctint-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jfdctint-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctflt-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctfst-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctint-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctint-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jidctred-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jquantf-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jquanti-avx2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jquanti-sse2.asm
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jsimd.c
│ │ -lib/libjpeg-turbo-2.1.4/simd/x86_64/jsimdcpu.asm
│ │ -lib/libjpeg-turbo-2.1.4/testimages/nightshot_iso_100.bmp
│ │ -lib/libjpeg-turbo-2.1.4/testimages/nightshot_iso_100.txt
│ │ -lib/libjpeg-turbo-2.1.4/testimages/test.scan
│ │ -lib/libjpeg-turbo-2.1.4/testimages/test1.icc
│ │ -lib/libjpeg-turbo-2.1.4/testimages/test1.icc.txt
│ │ -lib/libjpeg-turbo-2.1.4/testimages/test2.icc
│ │ -lib/libjpeg-turbo-2.1.4/testimages/test2.icc.txt
│ │ -lib/libjpeg-turbo-2.1.4/testimages/testimgari.jpg
│ │ -lib/libjpeg-turbo-2.1.4/testimages/testimgint.jpg
│ │ -lib/libjpeg-turbo-2.1.4/testimages/testorig.jpg
│ │ -lib/libjpeg-turbo-2.1.4/testimages/testorig.ppm
│ │ -lib/libjpeg-turbo-2.1.4/testimages/testorig12.jpg
│ │ -lib/libjpeg-turbo-2.1.4/testimages/vgl_5674_0098.bmp
│ │ -lib/libjpeg-turbo-2.1.4/testimages/vgl_6434_0018a.bmp
│ │ -lib/libjpeg-turbo-2.1.4/testimages/vgl_6548_0026a.bmp
│ │ -lib/libjpeg-turbo-2.1.4/win/jconfig.h.in
│ │ -lib/libjpeg-turbo-2.1.4/win/jpeg.rc.in
│ │ -lib/libjpeg-turbo-2.1.4/win/jpeg62-memsrcdst.def
│ │ -lib/libjpeg-turbo-2.1.4/win/jpeg62.def
│ │ -lib/libjpeg-turbo-2.1.4/win/jpeg7-memsrcdst.def
│ │ -lib/libjpeg-turbo-2.1.4/win/jpeg7.def
│ │ -lib/libjpeg-turbo-2.1.4/win/jpeg8.def
│ │ -lib/libjpeg-turbo-2.1.4/win/projectTargets.cmake.in
│ │ -lib/libjpeg-turbo-2.1.4/win/turbojpeg.rc.in
│ │ -lib/libjpeg-turbo-2.1.4/win/gcc/projectTargets-release.cmake.in
│ │ -lib/libjpeg-turbo-2.1.4/win/vc/projectTargets-release.cmake.in
│ │ +lib/libjpeg-turbo-2.1.5.1/BUILDING.md
│ │ +lib/libjpeg-turbo-2.1.5.1/CMakeLists.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/ChangeLog.md
│ │ +lib/libjpeg-turbo-2.1.5.1/LICENSE.md
│ │ +lib/libjpeg-turbo-2.1.5.1/README.ijg
│ │ +lib/libjpeg-turbo-2.1.5.1/README.md
│ │ +lib/libjpeg-turbo-2.1.5.1/cderror.h
│ │ +lib/libjpeg-turbo-2.1.5.1/cdjpeg.c
│ │ +lib/libjpeg-turbo-2.1.5.1/cdjpeg.h
│ │ +lib/libjpeg-turbo-2.1.5.1/change.log
│ │ +lib/libjpeg-turbo-2.1.5.1/cjpeg.1
│ │ +lib/libjpeg-turbo-2.1.5.1/cjpeg.c
│ │ +lib/libjpeg-turbo-2.1.5.1/cmyk.h
│ │ +lib/libjpeg-turbo-2.1.5.1/coderules.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/croptest.in
│ │ +lib/libjpeg-turbo-2.1.5.1/djpeg.1
│ │ +lib/libjpeg-turbo-2.1.5.1/djpeg.c
│ │ +lib/libjpeg-turbo-2.1.5.1/doxygen-extra.css
│ │ +lib/libjpeg-turbo-2.1.5.1/doxygen.config
│ │ +lib/libjpeg-turbo-2.1.5.1/example.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/jaricom.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcapimin.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcapistd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcarith.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jccoefct.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jccolext.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jccolor.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcdctmgr.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jchuff.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jchuff.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jcicc.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcinit.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcmainct.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcmarker.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcmaster.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcomapi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jconfig.h.in
│ │ +lib/libjpeg-turbo-2.1.5.1/jconfig.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/jconfigint.h.in
│ │ +lib/libjpeg-turbo-2.1.5.1/jcparam.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcphuff.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcprepct.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcsample.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jcstest.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jctrans.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdapimin.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdapistd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdarith.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdatadst-tj.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdatadst.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdatasrc-tj.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdatasrc.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdcoefct.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdcoefct.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jdcol565.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdcolext.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdcolor.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdct.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jddctmgr.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdhuff.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdhuff.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jdicc.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdinput.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmainct.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmainct.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmarker.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmaster.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmaster.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmerge.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmerge.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmrg565.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdmrgext.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdphuff.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdpostct.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdsample.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jdsample.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jdtrans.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jerror.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jerror.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jfdctflt.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jfdctfst.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jfdctint.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jidctflt.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jidctfst.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jidctint.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jidctred.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jinclude.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jmemmgr.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jmemnobs.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jmemsys.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jmorecfg.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jpeg_nbits_table.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jpegcomp.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jpegint.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jpeglib.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jpegtran.1
│ │ +lib/libjpeg-turbo-2.1.5.1/jpegtran.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jquant1.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jquant2.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jsimd.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jsimd_none.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jsimddct.h
│ │ +lib/libjpeg-turbo-2.1.5.1/jstdhuff.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jutils.c
│ │ +lib/libjpeg-turbo-2.1.5.1/jversion.h.in
│ │ +lib/libjpeg-turbo-2.1.5.1/libjpeg.map.in
│ │ +lib/libjpeg-turbo-2.1.5.1/libjpeg.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/rdbmp.c
│ │ +lib/libjpeg-turbo-2.1.5.1/rdcolmap.c
│ │ +lib/libjpeg-turbo-2.1.5.1/rdgif.c
│ │ +lib/libjpeg-turbo-2.1.5.1/rdjpgcom.1
│ │ +lib/libjpeg-turbo-2.1.5.1/rdjpgcom.c
│ │ +lib/libjpeg-turbo-2.1.5.1/rdppm.c
│ │ +lib/libjpeg-turbo-2.1.5.1/rdswitch.c
│ │ +lib/libjpeg-turbo-2.1.5.1/rdtarga.c
│ │ +lib/libjpeg-turbo-2.1.5.1/strtest.c
│ │ +lib/libjpeg-turbo-2.1.5.1/structure.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/tjbench.c
│ │ +lib/libjpeg-turbo-2.1.5.1/tjbenchtest.in
│ │ +lib/libjpeg-turbo-2.1.5.1/tjbenchtest.java.in
│ │ +lib/libjpeg-turbo-2.1.5.1/tjexample.c
│ │ +lib/libjpeg-turbo-2.1.5.1/tjexampletest.in
│ │ +lib/libjpeg-turbo-2.1.5.1/tjexampletest.java.in
│ │ +lib/libjpeg-turbo-2.1.5.1/tjunittest.c
│ │ +lib/libjpeg-turbo-2.1.5.1/tjutil.c
│ │ +lib/libjpeg-turbo-2.1.5.1/tjutil.h
│ │ +lib/libjpeg-turbo-2.1.5.1/transupp.c
│ │ +lib/libjpeg-turbo-2.1.5.1/transupp.h
│ │ +lib/libjpeg-turbo-2.1.5.1/turbojpeg-jni.c
│ │ +lib/libjpeg-turbo-2.1.5.1/turbojpeg-mapfile
│ │ +lib/libjpeg-turbo-2.1.5.1/turbojpeg-mapfile.jni
│ │ +lib/libjpeg-turbo-2.1.5.1/turbojpeg.c
│ │ +lib/libjpeg-turbo-2.1.5.1/turbojpeg.h
│ │ +lib/libjpeg-turbo-2.1.5.1/usage.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/wizard.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/wrbmp.c
│ │ +lib/libjpeg-turbo-2.1.5.1/wrgif.c
│ │ +lib/libjpeg-turbo-2.1.5.1/wrjpgcom.1
│ │ +lib/libjpeg-turbo-2.1.5.1/wrjpgcom.c
│ │ +lib/libjpeg-turbo-2.1.5.1/wrppm.c
│ │ +lib/libjpeg-turbo-2.1.5.1/wrtarga.c
│ │ +lib/libjpeg-turbo-2.1.5.1/cmakescripts/BuildPackages.cmake
│ │ +lib/libjpeg-turbo-2.1.5.1/cmakescripts/GNUInstallDirs.cmake
│ │ +lib/libjpeg-turbo-2.1.5.1/cmakescripts/PackageInfo.cmake
│ │ +lib/libjpeg-turbo-2.1.5.1/cmakescripts/cmake_uninstall.cmake.in
│ │ +lib/libjpeg-turbo-2.1.5.1/cmakescripts/testclean.cmake
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/annotated.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/bc_s.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/bdwn.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/classes.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/closed.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/doc.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen-extra.css
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen.css
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/doxygen.svg
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/dynsections.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/folderclosed.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/folderopen.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/functions.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/functions_vars.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/group___turbo_j_p_e_g.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/index.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/jquery.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/menu.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/menudata.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/modules.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/nav_f.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/nav_g.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/nav_h.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/open.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/splitbar.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/structtjregion.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/structtjscalingfactor.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/structtjtransform.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/sync_off.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/sync_on.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/tab_a.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/tab_b.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/tab_h.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/tab_s.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/tabs.css
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_1.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_1.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_2.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_2.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_3.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_3.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_4.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_4.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_5.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_5.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_6.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_6.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_7.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_7.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_8.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_8.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_9.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/all_9.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/classes_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/classes_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/close.svg
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/enums_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/enums_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/enumvalues_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/enumvalues_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/functions_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/functions_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/groups_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/groups_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/mag_sel.svg
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/nomatches.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/search.css
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/search.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_l.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_m.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/search_r.png
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/searchdata.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/typedefs_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/typedefs_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_0.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_0.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_1.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_1.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_2.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_2.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_3.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_3.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_4.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_4.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_5.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_5.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_6.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_6.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_7.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_7.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_8.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_8.js
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_9.html
│ │ +lib/libjpeg-turbo-2.1.5.1/doc/html/search/variables_9.js
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/CMakeLists.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/build.sh
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/cjpeg.cc
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/compress.cc
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/compress_yuv.cc
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/decompress.cc
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/decompress_yuv.cc
│ │ +lib/libjpeg-turbo-2.1.5.1/fuzz/transform.cc
│ │ +lib/libjpeg-turbo-2.1.5.1/java/CMakeLists.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/java/MANIFEST.MF
│ │ +lib/libjpeg-turbo-2.1.5.1/java/README
│ │ +lib/libjpeg-turbo-2.1.5.1/java/TJBench.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/TJExample.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/TJUnitTest.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJ.h
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJCompressor.h
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJDecompressor.h
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org_libjpegturbo_turbojpeg_TJTransformer.h
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/allclasses-frame.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/allclasses-noframe.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/constant-values.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/deprecated-list.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/help-doc.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/index-all.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/index.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/overview-tree.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/package-list
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/script.js
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/serialized-form.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/stylesheet.css
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJ.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJCompressor.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJCustomFilter.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJDecompressor.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJException.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJScalingFactor.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJTransform.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/TJTransformer.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/YUVImage.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-frame.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-summary.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/org/libjpegturbo/turbojpeg/package-tree.html
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/resources/background.gif
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/resources/tab.gif
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/resources/titlebar.gif
│ │ +lib/libjpeg-turbo-2.1.5.1/java/doc/resources/titlebar_end.gif
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJ.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJCompressor.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJCustomFilter.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJDecompressor.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJException.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJLoader-unix.java.in
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJLoader-win.java.in
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJScalingFactor.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJTransform.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/TJTransformer.java
│ │ +lib/libjpeg-turbo-2.1.5.1/java/org/libjpegturbo/turbojpeg/YUVImage.java
│ │ +lib/libjpeg-turbo-2.1.5.1/md5/CMakeLists.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/md5/md5.c
│ │ +lib/libjpeg-turbo-2.1.5.1/md5/md5.h
│ │ +lib/libjpeg-turbo-2.1.5.1/md5/md5cmp.c
│ │ +lib/libjpeg-turbo-2.1.5.1/md5/md5hl.c
│ │ +lib/libjpeg-turbo-2.1.5.1/release/Config.cmake.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/Distribution.xml.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/License.rtf
│ │ +lib/libjpeg-turbo-2.1.5.1/release/ReadMe.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/release/Welcome.rtf.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/deb-control.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/installer.nsi.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/libjpeg.pc.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/libturbojpeg.pc.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/makedpkg.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/makemacpkg.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/makerpm.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/makesrpm.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/maketarball.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/rpm.spec.in
│ │ +lib/libjpeg-turbo-2.1.5.1/release/uninstall.in
│ │ +lib/libjpeg-turbo-2.1.5.1/sharedlib/CMakeLists.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/CMakeLists.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/jsimd.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/align.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jccolor-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jcgray-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jcgryext-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jchuff.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jcphuff-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jcsample-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jdcolext-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jdcolor-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jdmerge-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jdmrgext-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jdsample-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jfdctfst-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jfdctint-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctfst-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctint-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jidctred-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/jquanti-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/neon-compat.h.in
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jccolext-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jchuff-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jsimd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch32/jsimd_neon.S
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jccolext-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jchuff-neon.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jsimd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/arm/aarch64/jsimd_neon.S
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jccolor-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgray-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcgryext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jchuff-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcphuff-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jcsample-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdcolor-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmerge-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdmrgext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jdsample-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctflt-3dn.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctflt-sse.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctfst-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctfst-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jfdctint-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-3dn.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-sse.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctflt-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctfst-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctfst-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctint-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctred-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jidctred-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-3dn.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-mmx.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jquant-sse.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jquantf-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jquanti-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jquanti-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jsimd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/i386/jsimdcpu.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd_dspr2.S
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips/jsimd_dspr2_asm.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jccolext-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jccolor-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcgray-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcgryext-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcsample-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jcsample.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdcolext-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdcolor-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdmerge-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdmrgext-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jdsample-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jfdctfst-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jfdctint-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jidctfst-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jidctint-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jquanti-mmi.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jsimd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/jsimd_mmi.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/mips64/loongson-mmintrin.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/nasm/jcolsamp.inc
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/nasm/jdct.inc
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdcfg.inc
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdcfg.inc.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/nasm/jsimdext.inc
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jccolext-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jccolor-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcgray-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcgryext-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcsample-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jcsample.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdcolext-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdcolor-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdmerge-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdmrgext-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jdsample-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jfdctfst-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jfdctint-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jidctfst-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jidctint-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jquanti-altivec.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jsimd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/powerpc/jsimd_altivec.h
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolor-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jccolor-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgray-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgray-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgryext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcgryext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jchuff-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcphuff-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcsample-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jcsample-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolor-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdcolor-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmerge-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmerge-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmrgext-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdmrgext-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdsample-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jdsample-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctflt-sse.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctfst-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctint-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jfdctint-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctflt-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctfst-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctint-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctint-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jidctred-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquantf-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquanti-avx2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jquanti-sse2.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jsimd.c
│ │ +lib/libjpeg-turbo-2.1.5.1/simd/x86_64/jsimdcpu.asm
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/nightshot_iso_100.bmp
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/nightshot_iso_100.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/test.scan
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/test1.icc
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/test1.icc.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/test2.icc
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/test2.icc.txt
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/testimgari.jpg
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/testimgint.jpg
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/testorig.jpg
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/testorig.ppm
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/testorig12.jpg
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/vgl_5674_0098.bmp
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/vgl_6434_0018a.bmp
│ │ +lib/libjpeg-turbo-2.1.5.1/testimages/vgl_6548_0026a.bmp
│ │ +lib/libjpeg-turbo-2.1.5.1/win/jconfig.h.in
│ │ +lib/libjpeg-turbo-2.1.5.1/win/jpeg.rc.in
│ │ +lib/libjpeg-turbo-2.1.5.1/win/jpeg62-memsrcdst.def
│ │ +lib/libjpeg-turbo-2.1.5.1/win/jpeg62.def
│ │ +lib/libjpeg-turbo-2.1.5.1/win/jpeg7-memsrcdst.def
│ │ +lib/libjpeg-turbo-2.1.5.1/win/jpeg7.def
│ │ +lib/libjpeg-turbo-2.1.5.1/win/jpeg8.def
│ │ +lib/libjpeg-turbo-2.1.5.1/win/projectTargets.cmake.in
│ │ +lib/libjpeg-turbo-2.1.5.1/win/turbojpeg.rc.in
│ │ +lib/libjpeg-turbo-2.1.5.1/win/gcc/projectTargets-release.cmake.in
│ │ +lib/libjpeg-turbo-2.1.5.1/win/vc/projectTargets-release.cmake.in
│ │  lib/yasm-1.3.0/ABOUT-NLS
│ │  lib/yasm-1.3.0/AUTHORS
│ │  lib/yasm-1.3.0/Artistic.txt
│ │  lib/yasm-1.3.0/BSD.txt
│ │  lib/yasm-1.3.0/CMakeLists.txt
│ │  lib/yasm-1.3.0/COPYING
│ │  lib/yasm-1.3.0/ChangeLog
│ │   --- simplejpeg-1.6.5/test/convert_originals.py
│ ├── +++ simplejpeg-1.6.6/test/convert_originals.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/airplane.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/airplane.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/arctichare.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/arctichare.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/baboon.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/baboon.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/barbara.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/barbara.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/boat.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/boat.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/boy.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/boy.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/cameraman.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/cameraman.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/cat.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/cat.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/fprint3.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/fprint3.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/fruits.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/fruits.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/girl.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/girl.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/goldhill.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/goldhill.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/lena.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/lena.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/monarch.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/monarch.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/mountain.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/mountain.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/peppers.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/peppers.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/pool.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/pool.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/sails.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/sails.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/tulips.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/tulips.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/us021.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/us021.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/us092.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/us092.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/images/zelda.jpg
│ ├── +++ simplejpeg-1.6.6/test/images/zelda.jpg
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/test_decode.py
│ ├── +++ simplejpeg-1.6.6/test/test_decode.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/test_encode.py
│ ├── +++ simplejpeg-1.6.6/test/test_encode.py
│ │┄ Files identical despite different names
│ │   --- simplejpeg-1.6.5/test/test_util.py
│ ├── +++ simplejpeg-1.6.6/test/test_util.py
│ │┄ Files identical despite different names
